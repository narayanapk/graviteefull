!function(e){function t(t){for(var i,s,r=t[0],l=t[1],c=t[2],p=0,m=[];p<r.length;p++)s=r[p],Object.prototype.hasOwnProperty.call(a,s)&&a[s]&&m.push(a[s][0]),a[s]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(e[i]=l[i]);for(d&&d(t);m.length;)m.shift()();return o.push.apply(o,c||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],i=!0,r=1;r<n.length;r++){var l=n[r];0!==a[l]&&(i=!1)}i&&(o.splice(t--,1),e=s(s.s=n[0]))}return e}var i={},a={13:0},o=[];function s(t){if(i[t])return i[t].exports;var n=i[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.e=function(e){var t=[],n=a[e];if(0!==n)if(n)t.push(n[2]);else{var i=new Promise((function(t,i){n=a[e]=[t,i]}));t.push(n[2]=i);var o,r=document.createElement("script");r.charset="utf-8",r.timeout=120,s.nc&&r.setAttribute("nonce",s.nc),r.src=function(e){return s.p+""+({16:"vendors~date-fns-locale"}[e]||e)+"-17d2e579e7b32acd2233.js"}(e);var l=new Error;o=function(t){r.onerror=r.onload=null,clearTimeout(c);var n=a[e];if(0!==n){if(n){var i=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src;l.message="Loading chunk "+e+" failed.\n("+i+": "+o+")",l.name="ChunkLoadError",l.type=i,l.request=o,n[1](l)}a[e]=void 0}};var c=setTimeout((function(){o({type:"timeout",target:r})}),12e4);r.onerror=r.onload=o,document.head.appendChild(r)}return Promise.all(t)},s.m=e,s.c=i,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)s.d(n,i,function(t){return e[t]}.bind(null,i));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s.oe=function(e){throw console.error(e),e};var r=window.webpackJsonp=window.webpackJsonp||[],l=r.push.bind(r);r.push=t,r=r.slice();for(var c=0;c<r.length;c++)t(r[c]);var d=l;o.push([1302,14,15]),n()}(Array(59).concat([function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="warning-dialog">\n  <md-dialog-content layout-padding>\n    <h4>{{title}}</h4>\n    <p ng-bind-html="msg"></p>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="ctrl.cancel()">Cancel</md-button>\n    <md-button class="md-raised md-warn" ng-click="ctrl.confirm()">{{confirmButton}}</md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="confirm-dialog">\n  <md-dialog-content layout-padding>\n    <h4>{{title}}</h4>\n    <p ng-bind-html="msg"></p>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="ctrl.cancel()">{{cancelButton}}</md-button>\n    <md-button class="md-raised md-primary" ng-click="ctrl.confirm()">{{confirmButton}}</md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},,,,,,,,,,,,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="warning-dialog">\n  <md-dialog-content layout-padding>\n    <h4>{{title}}</h4>\n    <div class="gv-page-draft-banner" style="background-color: rgba(206, 72, 68, 0.1)">\n      <ng-md-icon icon="warning" class="gv-warning"></ng-md-icon>\n      {{warning}}\n    </div>\n    <p style="margin: 35px 0" ng-bind-html="msg"></p>\n    <hr style="margin: 0" />\n    <p ng-bind-html="validationMessage"></p>\n    <input type="text" style="width: 100%" autofocus ng-model="confirmValue" />\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="ctrl.cancel()">Cancel</md-button>\n    <md-button class="md-raised md-warn" ng-disabled="confirmValue!==validationValue" ng-click="ctrl.confirm()"\n      >{{confirmButton}}</md-button\n    >\n  </md-dialog-actions>\n</md-dialog>\n'},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog class="api-key-mode-choice-dialog">\n  <md-dialog-title class="api-key-mode-choice-dialog__title">\n    <h4>Application API key type</h4>\n  </md-dialog-title>\n  <md-dialog-content class="api-key-mode-choice-dialog__content">\n    <div class="api-key-mode-choice-dialog__content__details">\n      <p>You have to choose between two modes for your application :</p>\n      <ul>\n        <li><b>API key</b> - a new API key will be generated for each subscription</li>\n        <li><b>Shared API key</b> - each subscription will use the same API key</li>\n      </ul>\n    </div>\n    <div class="api-key-mode-choice-dialog__content__warning">\n      <p>Please note that this choice is permanent.</p>\n    </div>\n  </md-dialog-content>\n  <md-dialog-actions>\n    <div class="api-key-mode-choice-dialog__actions">\n      <md-button class="md-primary" ng-click="$ctrl.hide()">RETURN</md-button>\n      <md-button class="md-primary md-raised" ng-click="$ctrl.hide($ctrl.keyModes.EXCLUSIVE)">API KEY</md-button>\n      <md-button class="md-primary md-raised" ng-click="$ctrl.hide($ctrl.keyModes.SHARED)">SHARED API KEY</md-button>\n    </div>\n  </md-dialog-actions>\n</md-dialog>\n'},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Edit policy">\n  <form name="formApi" ng-submit="editPolicyDialogCtrl.save()" novalidate>\n    <md-dialog-content layout-padding>\n      <h4>Policy Description</h4>\n      <md-input-container class="md-block">\n        <textarea aria-label="Policy description" ng-model="description" required md-maxlength="500" rows="2" cols="50"></textarea>\n      </md-input-container>\n    </md-dialog-content>\n\n    <md-dialog-actions layout="row">\n      <md-button ng-click="editPolicyDialogCtrl.hide()"> Cancel </md-button>\n      <md-button type="submit" class="md-raised md-primary" ng-disabled="formApi.$invalid"> Update </md-button>\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},,,,,,,,,,,,,,,function(e,t){function n(e){return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}))}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=428},,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="{{$ctrl.metadata.key?\'Update\':\'Create\'}} {{$ctrl.referenceType ? $ctrl.referenceType + \'\\\'s \' : \'\'}}metadata">\n  <form name="formMetadata" ng-submit="$ctrl.save()" novalidate>\n    <md-dialog-content layout-padding>\n      <h4>{{$ctrl.metadata.key?\'Update\':\'Create\'}} {{$ctrl.referenceType ? $ctrl.referenceType + \'\\\'s \' : \'\'}}metadata</h4>\n      <div layout="column">\n        <div layout="row">\n          <md-input-container ng-if="$ctrl.metadata.key">\n            <label>Key</label>\n            <input ng-model="$ctrl.metadata.key" disabled />\n          </md-input-container>\n          <md-input-container flex>\n            <label>Name</label>\n            <input\n              ng-model="$ctrl.metadata.name"\n              md-autofocus="{{$ctrl.metadata.key?\'false\':\'true\'}}"\n              required\n              ng-disabled="$ctrl.metadata.key && !$ctrl.referenceId"\n            />\n          </md-input-container>\n        </div>\n        <md-input-container>\n          <label>Format</label>\n          <md-select ng-model="$ctrl.metadata.format" ng-disabled="$ctrl.metadata.key && !$ctrl.referenceId">\n            <md-option ng-repeat="metadataFormat in $ctrl.metadataFormats" ng-value="metadataFormat">\n              {{metadataFormat | lowercase}}\n            </md-option>\n          </md-select>\n        </md-input-container>\n\n        <div layout="row">\n          <md-input-container ng-if="$ctrl.metadata.format === \'BOOLEAN\'" flex>\n            <md-checkbox\n              ng-model="$ctrl.metadata.value"\n              md-autofocus="{{$ctrl.metadata.key && !$ctrl.referenceId ? \'true\' : \'false\'}}"\n              gv-metadata-format="$ctrl.metadata.format"\n              ng-pattern="pattern"\n              ng-true-value="\'true\'"\n              ng-false-value="\'false\'"\n              gv-metadata-validator\n            >\n              Value\n            </md-checkbox>\n          </md-input-container>\n          <md-input-container ng-if="$ctrl.metadata.format === \'DATE\'" flex>\n            <label>Value</label>\n            <md-datepicker\n              required\n              ng-model="$ctrl.metadata.value"\n              md-autofocus="{{$ctrl.metadata.key && !$ctrl.referenceId ? \'true\' : \'false\'}}"\n              gv-metadata-format="$ctrl.metadata.format"\n              ng-pattern="pattern"\n            ></md-datepicker>\n          </md-input-container>\n          <md-input-container ng-if="$ctrl.metadata.format !== \'BOOLEAN\' && $ctrl.metadata.format !== \'DATE\'" flex>\n            <label>Value</label>\n            <input\n              type="text"\n              required\n              ng-model="$ctrl.metadata.value"\n              placeholder="{{$ctrl.metadata.defaultValue}}"\n              md-autofocus="{{$ctrl.metadata.key && !$ctrl.metadata.referenceId ? \'true\' : \'false\'}}"\n              gv-metadata-format="$ctrl.metadata.format"\n              ng-pattern="pattern"\n              gv-metadata-validator\n            />\n            <div class="hint">Supports Freemarker</div>\n          </md-input-container>\n\n          <md-input-container ng-if="$ctrl.metadata.key && !$ctrl.metadata.referenceId && $ctrl.metadata.format === \'BOOLEAN\'" flex>\n            <md-checkbox\n              ng-model="$ctrl.metadata.defaultValue"\n              gv-metadata-format="$ctrl.metadata.format"\n              ng-pattern="pattern"\n              ng-true-value="\'true\'"\n              ng-false-value="\'false\'"\n              gv-metadata-validator\n              disabled\n            >\n              Default value\n            </md-checkbox>\n          </md-input-container>\n          <md-input-container ng-if="$ctrl.metadata.key && !$ctrl.metadata.referenceId && $ctrl.metadata.format === \'DATE\'">\n            <label>Default value</label>\n            <md-datepicker\n              ng-model="$ctrl.metadata.defaultValue"\n              gv-metadata-format="$ctrl.metadata.format"\n              ng-pattern="pattern"\n              disabled\n            ></md-datepicker>\n          </md-input-container>\n          <md-input-container\n            ng-if="$ctrl.metadata.key && !$ctrl.metadata.referenceId && $ctrl.metadata.format !== \'BOOLEAN\' && $ctrl.metadata.format !== \'DATE\'"\n          >\n            <label>Default value</label>\n            <input\n              type="text"\n              ng-model="$ctrl.metadata.defaultValue"\n              gv-metadata-format="$ctrl.metadata.format"\n              ng-pattern="pattern"\n              gv-metadata-validator\n              disabled\n            />\n          </md-input-container>\n        </div>\n      </div>\n    </md-dialog-content>\n    <md-dialog-actions layout="row">\n      <md-button ng-click="$ctrl.cancel()"> Cancel </md-button>\n      <md-button type="submit" class="md-raised md-primary" ng-disabled="formMetadata.$invalid">\n        {{$ctrl.metadata.key?\'Update\':\'Create\'}} {{$ctrl.referenceType ? $ctrl.referenceType + \'\\\'s \' : \'\'}}metadata\n      </md-button>\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div flex layout="row">\n  <settings-navigation></settings-navigation>\n  <div class="gv-sub-content" flex layout="column" ui-view></div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="confirm-dialog">\n  <md-dialog-content layout-padding>\n    <h4>{{title}}</h4>\n    <div ng-repeat="folder in folders">\n      <md-icon md-svg-src="assets/logo_folder.svg"></md-icon>\n      <a ng-click="ctrl.select(folder.id)">{{folder.path}}</a>\n    </div>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="ctrl.cancel()">Cancel</md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="{{$ctrl.header.id?\'Update\':\'New\'}} API Header">\n  <form name="form" ng-submit="$ctrl.save()" novalidate>\n    <md-dialog-content layout-padding>\n      <h4>{{$ctrl.header.id?\'Update\':\'New\'}} API Header</h4>\n      <div layout="column">\n        <md-input-container>\n          <label>Name</label>\n          <input ng-model="$ctrl.header.name" />\n        </md-input-container>\n        <md-input-container>\n          <label>Value</label>\n          <input ng-model="$ctrl.header.value" />\n        </md-input-container>\n      </div>\n    </md-dialog-content>\n    <md-dialog-actions layout="row">\n      <md-button ng-click="$ctrl.cancel()"> Cancel </md-button>\n      <md-button type="submit" class="md-raised md-primary" ng-disabled="form.$invalid"> {{$ctrl.header.id?\'Update\':\'Create\'}} </md-button>\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="{{$ctrl.field.key?\'Update\':\'Create\'}} User Field">\n  <form name="formCustomField" ng-submit="$ctrl.save()" novalidate>\n    <md-dialog-content layout-padding>\n      <h4>{{$ctrl.updateAction?\'Update\':\'Create\'}} User Field</h4>\n      <div layout="column">\n        <div layout="row">\n          <md-input-container>\n            <label>Key</label>\n            <input\n              ng-model="$ctrl.field.key"\n              ng-pattern="/^[a-zA-Z0-9_\\-]+$/"\n              ng-disabled="$ctrl.updateAction"\n              autocomplete="off"\n              required\n              autocomplete="true"\n              md-autofocus="!$ctrl.updateAction"\n              placeholder="click to display predifined options"\n              list="predefinedKeys"\n            />\n            <datalist id="predefinedKeys">\n              <select>\n                <option ng-repeat="predefKey in $ctrl.predefinedKeys" value="{{predefKey}}"></option>\n              </select>\n            </datalist>\n            <span style="font-style: italic; font-size: 12px; color: gray">Authorized characters: [a-z0-9_\\-]</span>\n          </md-input-container>\n        </div>\n        <div layout="row">\n          <md-input-container flex>\n            <label>Label</label>\n            <input ng-model="$ctrl.field.label" md-autofocus="$ctrl.updateAction" required />\n          </md-input-container>\n        </div>\n        <div layout="row">\n          <md-input-container flex>\n            <md-checkbox ng-model="$ctrl.field.required" ng-pattern="pattern"> Required </md-checkbox>\n          </md-input-container>\n        </div>\n        <div layout="row">\n          <md-input-container flex>\n            <label>Values</label>\n            <textarea ng-model="$ctrl.field.values" rows="3" class="custom-user-fields-values"> </textarea>\n            <span class="custom-user-fields-values-help">Enter the possible values (if any) separated by a new line</span>\n          </md-input-container>\n        </div>\n      </div>\n    </md-dialog-content>\n    <md-dialog-actions layout="row">\n      <md-button ng-click="$ctrl.cancel()"> Cancel </md-button>\n      <md-button type="submit" class="md-raised md-primary" ng-disabled="formCustomField.$invalid">\n        {{$ctrl.updateAction?\'Update\':\'Create\'}} User Field\n      </md-button>\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){var i={"./af":278,"./af.js":278,"./ar":279,"./ar-dz":280,"./ar-dz.js":280,"./ar-kw":281,"./ar-kw.js":281,"./ar-ly":282,"./ar-ly.js":282,"./ar-ma":283,"./ar-ma.js":283,"./ar-sa":284,"./ar-sa.js":284,"./ar-tn":285,"./ar-tn.js":285,"./ar.js":279,"./az":286,"./az.js":286,"./be":287,"./be.js":287,"./bg":288,"./bg.js":288,"./bm":289,"./bm.js":289,"./bn":290,"./bn-bd":291,"./bn-bd.js":291,"./bn.js":290,"./bo":292,"./bo.js":292,"./br":293,"./br.js":293,"./bs":294,"./bs.js":294,"./ca":295,"./ca.js":295,"./cs":296,"./cs.js":296,"./cv":297,"./cv.js":297,"./cy":298,"./cy.js":298,"./da":299,"./da.js":299,"./de":300,"./de-at":301,"./de-at.js":301,"./de-ch":302,"./de-ch.js":302,"./de.js":300,"./dv":303,"./dv.js":303,"./el":304,"./el.js":304,"./en-au":305,"./en-au.js":305,"./en-ca":306,"./en-ca.js":306,"./en-gb":307,"./en-gb.js":307,"./en-ie":308,"./en-ie.js":308,"./en-il":309,"./en-il.js":309,"./en-in":310,"./en-in.js":310,"./en-nz":311,"./en-nz.js":311,"./en-sg":312,"./en-sg.js":312,"./eo":313,"./eo.js":313,"./es":314,"./es-do":315,"./es-do.js":315,"./es-mx":316,"./es-mx.js":316,"./es-us":317,"./es-us.js":317,"./es.js":314,"./et":318,"./et.js":318,"./eu":319,"./eu.js":319,"./fa":320,"./fa.js":320,"./fi":321,"./fi.js":321,"./fil":322,"./fil.js":322,"./fo":323,"./fo.js":323,"./fr":324,"./fr-ca":325,"./fr-ca.js":325,"./fr-ch":326,"./fr-ch.js":326,"./fr.js":324,"./fy":327,"./fy.js":327,"./ga":328,"./ga.js":328,"./gd":329,"./gd.js":329,"./gl":330,"./gl.js":330,"./gom-deva":331,"./gom-deva.js":331,"./gom-latn":332,"./gom-latn.js":332,"./gu":333,"./gu.js":333,"./he":334,"./he.js":334,"./hi":335,"./hi.js":335,"./hr":336,"./hr.js":336,"./hu":337,"./hu.js":337,"./hy-am":338,"./hy-am.js":338,"./id":339,"./id.js":339,"./is":340,"./is.js":340,"./it":341,"./it-ch":342,"./it-ch.js":342,"./it.js":341,"./ja":343,"./ja.js":343,"./jv":344,"./jv.js":344,"./ka":345,"./ka.js":345,"./kk":346,"./kk.js":346,"./km":347,"./km.js":347,"./kn":348,"./kn.js":348,"./ko":349,"./ko.js":349,"./ku":350,"./ku.js":350,"./ky":351,"./ky.js":351,"./lb":352,"./lb.js":352,"./lo":353,"./lo.js":353,"./lt":354,"./lt.js":354,"./lv":355,"./lv.js":355,"./me":356,"./me.js":356,"./mi":357,"./mi.js":357,"./mk":358,"./mk.js":358,"./ml":359,"./ml.js":359,"./mn":360,"./mn.js":360,"./mr":361,"./mr.js":361,"./ms":362,"./ms-my":363,"./ms-my.js":363,"./ms.js":362,"./mt":364,"./mt.js":364,"./my":365,"./my.js":365,"./nb":366,"./nb.js":366,"./ne":367,"./ne.js":367,"./nl":368,"./nl-be":369,"./nl-be.js":369,"./nl.js":368,"./nn":370,"./nn.js":370,"./oc-lnc":371,"./oc-lnc.js":371,"./pa-in":372,"./pa-in.js":372,"./pl":373,"./pl.js":373,"./pt":374,"./pt-br":375,"./pt-br.js":375,"./pt.js":374,"./ro":376,"./ro.js":376,"./ru":377,"./ru.js":377,"./sd":378,"./sd.js":378,"./se":379,"./se.js":379,"./si":380,"./si.js":380,"./sk":381,"./sk.js":381,"./sl":382,"./sl.js":382,"./sq":383,"./sq.js":383,"./sr":384,"./sr-cyrl":385,"./sr-cyrl.js":385,"./sr.js":384,"./ss":386,"./ss.js":386,"./sv":387,"./sv.js":387,"./sw":388,"./sw.js":388,"./ta":389,"./ta.js":389,"./te":390,"./te.js":390,"./tet":391,"./tet.js":391,"./tg":392,"./tg.js":392,"./th":393,"./th.js":393,"./tk":394,"./tk.js":394,"./tl-ph":395,"./tl-ph.js":395,"./tlh":396,"./tlh.js":396,"./tr":397,"./tr.js":397,"./tzl":398,"./tzl.js":398,"./tzm":399,"./tzm-latn":400,"./tzm-latn.js":400,"./tzm.js":399,"./ug-cn":401,"./ug-cn.js":401,"./uk":402,"./uk.js":402,"./ur":403,"./ur.js":403,"./uz":404,"./uz-latn":405,"./uz-latn.js":405,"./uz.js":404,"./vi":406,"./vi.js":406,"./x-pseudo":407,"./x-pseudo.js":407,"./yo":408,"./yo.js":408,"./zh-cn":409,"./zh-cn.js":409,"./zh-hk":410,"./zh-hk.js":410,"./zh-mo":411,"./zh-mo.js":411,"./zh-tw":412,"./zh-tw.js":412};function a(e){var t=o(e);return n(t)}function o(e){if(!n.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}a.keys=function(){return Object.keys(i)},a.resolve=o,e.exports=a,a.id=673},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<label>Quick time range</label>\n<md-select\n  class="gv-quick-time-range"\n  md-container-class="gv-quick-time-range-menu"\n  md-no-ink\n  ng-change="$ctrl.updateTimeframe()"\n  ng-model="$ctrl.timeframe"\n  required\n>\n  <md-option ng-repeat="timeframe in $ctrl.timeframes" ng-value="timeframe"> {{timeframe.title}} </md-option>\n</md-select>\n'},,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="confirm-dialog">\n  <form name="formDeployment" ng-submit="ctrl.confirm()" novalidate>\n    <md-dialog-content layout-padding>\n      <h4>{{ctrl.title}}</h4>\n      <p ng-bind-html="ctrl.msg"></p>\n      <md-input-container style="width: 100%">\n        <label for="deploymentLabel">Deployment label</label>\n        <input id="deploymentLabel" type="text" ng-model="ctrl.deploymentLabel" maxlength="32" />\n      </md-input-container>\n\n      <p ng-bind-html="ctrl.more"></p>\n    </md-dialog-content>\n\n    <md-dialog-actions layout="row">\n      <md-button ng-click="ctrl.cancel()">{{ctrl.cancelButton}}</md-button>\n      <md-button class="md-raised md-primary" type="submit">{{ctrl.confirmButton}}</md-button>\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="confirm-dialog">\n  <md-dialog-content layout-padding>\n    <h4>Validate review?</h4>\n    <p ng-bind-html="msg"></p>\n    <div layout="column">\n      <md-checkbox\n        aria-label="Quality rules"\n        ng-repeat="qualityRule in $ctrl.qualityRules"\n        ng-click="$ctrl.toggleQualityRule(qualityRule)"\n        ng-checked="$ctrl.isChecked(qualityRule)"\n      >\n        {{qualityRule.description}}\n      </md-checkbox>\n    </div>\n    <md-input-container class="md-block">\n      <label>Comments</label>\n      <textarea aria-label="Review message" ng-model="$ctrl.message" maxlength="500" rows="2" cols="50"></textarea>\n    </md-input-container>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="$ctrl.cancel()">Cancel</md-button>\n    <md-button class="md-raised md-primary" ng-click="$ctrl.confirm(true)">Accept</md-button>\n    <md-button class="md-raised md-warn" ng-click="$ctrl.confirm(false)">Reject</md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="confirm-dialog">\n  <md-dialog-content layout-padding>\n    <h4>Are you sure you want to request for changes on the API?</h4>\n    <p ng-bind-html="msg"></p>\n    <md-input-container class="md-block">\n      <label>Comments</label>\n      <textarea aria-label="Review message" ng-model="$ctrl.message" maxlength="500" rows="2" cols="50"></textarea>\n    </md-input-container>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="$ctrl.cancel()">Cancel</md-button>\n    <md-button class="md-raised md-warn" ng-click="$ctrl.confirm()">Request for changes</md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Add member" layout-padding flex="30">\n  <md-dialog-content class="searchMembers">\n    <form name="formMember" ng-submit="$event.preventDefault()">\n      <gv-user-autocomplete users-selected="usersSelected" user-filter-fn="userFilterFn"> </gv-user-autocomplete>\n\n      <div ng-show="usersSelected.length > 0">\n        <md-subheader class="md-no-sticky">Select role</md-subheader>\n        <md-input-container class="md-block">\n          <label>Role</label>\n          <md-select ng-model="role" required>\n            <md-option ng-repeat="role in roles" ng-value="role" ng-disabled="role.system"> {{role.name}} </md-option>\n          </md-select>\n        </md-input-container>\n      </div>\n    </form>\n  </md-dialog-content>\n\n  <md-dialog-actions layout="row">\n    <md-button ng-click="hide()"> Cancel </md-button>\n    <md-button\n      type="submit"\n      class="md-raised md-primary"\n      ng-click="addMembers()"\n      ng-disabled="formMember.$invalid || usersSelected.length === 0"\n    >\n      Add\n    </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Transfer API">\n  <md-dialog-content layout-padding>\n    <h4>Transfer API</h4>\n    <p>\n      This action cannot be undone. If you are the primary owner of this API, your role will be set to <code>{{$ctrl.newRole.name}}</code>.\n    </p>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="cancel()"> Cancel </md-button>\n    <md-button ng-click="transferOwnership()" class="md-raised md-warn"> I understand, transfer this API </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Add a new path">\n  <form name="newPathForm" ng-submit="addPoliciesPathCtrl.add()" novalidate>\n    <md-dialog-content layout-padding>\n      <h4>New path</h4>\n      <md-input-container class="md-block" flex-gt-sm>\n        <label>New Path</label>\n        <input\n          required\n          name="path"\n          ui-validate="{\n                    pathAlreadyExists : \'addPoliciesPathCtrl.rootCtrl.pathNotExists($value)\',\n                    mustStartWithSlash : \'addPoliciesPathCtrl.rootCtrl.pathStartWithSlash($value)\'\n                 }"\n          ng-model="addPoliciesPathCtrl.newPath.path"\n        />\n        <div ng-messages="newPathForm.path.$error" ng-show="newPathForm.path.$dirty">\n          <div ng-message="required">This is required!</div>\n          <div ng-message="pathAlreadyExists">This path is already configured.</div>\n          <div ng-message="mustStartWithSlash">The path must start with /</div>\n        </div>\n      </md-input-container>\n      <md-checkbox\n        ng-model="addPoliciesPathCtrl.newPath.copyFromRootPath"\n        aria-label="Copy from root path"\n        ng-disabled="!addPoliciesPathCtrl.canCopyFromRootPath"\n      >\n        Copy all policies and configuration from the root path ?\n      </md-checkbox>\n    </md-dialog-content>\n\n    <md-dialog-actions layout="row">\n      <md-button ng-click="addPoliciesPathCtrl.hide()"> Cancel </md-button>\n      <md-button type="submit" class="md-raised md-primary" ng-disabled="newPathForm.$invalid"> Add </md-button>\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="New path mapping">\n  <form name="formApiPathMapping" ng-submit="$ctrl.save()" novalidate>\n    <md-dialog-content layout-padding layout="column">\n      <h4>Save path mapping</h4>\n      <label style="color: silver">Path must start with slash and parameters with two points</label>\n      <md-input-container>\n        <label>Path</label>\n        <input ng-model="path" placeholder="/products/:productId" required md-auto-focus />\n      </md-input-container>\n    </md-dialog-content>\n\n    <md-dialog-actions layout="row">\n      <md-button ng-click="$ctrl.hide()">Cancel</md-button>\n      <md-button type="submit" class="md-raised md-primary" ng-disabled="formApiPathMapping.$invalid">Save</md-button>\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Import path mapping">\n  <form name="formImportPathMapping" ng-submit="$ctrl.save()" novalidate>\n    <md-dialog-content layout-padding layout="column">\n      <h4>Select a swagger document to import</h4>\n      <label ng-if="!docs.length">No swagger documentation on your API</label>\n      <md-radio-group ng-show="docs.length" ng-model="selectedDoc" required>\n        <md-radio-button ng-repeat="doc in docs | orderBy: \'name\'" value="{{doc.id}}"> {{doc.name}} </md-radio-button>\n      </md-radio-group>\n    </md-dialog-content>\n\n    <md-dialog-actions layout="row">\n      <md-button ng-click="$ctrl.hide()">Cancel</md-button>\n      <md-button type="submit" class="md-raised md-primary" ng-disabled="formImportPathMapping.$invalid">Import</md-button>\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="New property">\n  <form name="formApiProperty" ng-submit="dialogAddPropertyCtrl.save()" novalidate>\n    <md-dialog-content layout-padding>\n      <h4>New property</h4>\n      <md-input-container>\n        <label>Name</label>\n        <input ng-model="property.name" id="key" required />\n      </md-input-container>\n      <md-input-container>\n        <label>Value</label>\n        <input ng-model="property.value" id="value" required />\n      </md-input-container>\n    </md-dialog-content>\n\n    <md-dialog-actions layout="row">\n      <md-button ng-click="dialogAddPropertyCtrl.hide()"> Cancel </md-button>\n      <md-button type="submit" class="md-raised md-primary" ng-disabled="formApiProperty.$invalid"> Add </md-button>\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="HTTP provider output">\n  <md-dialog-content layout-padding>\n    <h4>Expected HTTP provider output</h4>\n    <p>\n      <textarea\n        ui-codemirror="{ onLoad : ctrl.codemirrorLoaded }"\n        ui-codemirror-opts="ctrl.codeMirrorOptions"\n        ng-model="ctrl.specificationExample"\n      >\n      </textarea>\n    </p>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button class="md-primary" ng-click="ctrl.cancel()"> Close </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},,,,,,,,,function(e,t,n){var i={"./cs/index.js":1321,"./fr/index.js":1322};function a(e){return o(e).then((function(e){return n.t(e,7)}))}function o(e){return n.e(16).then((function(){if(!n.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}))}a.keys=function(){return Object.keys(i)},a.resolve=o,a.id=694,e.exports=a},,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<section layout="column" flex>\n  <div layout="row">\n    <div class="gv-creation-steppers" flex="{{$ctrl.vm.selectedStep !== 4 ? 60: 100}}">\n      <md-steppers\n        md-dynamic-height\n        md-disable-tabs-behavior="true"\n        md-stretch-steppers="always"\n        md-selected="$ctrl.vm.selectedStep"\n        md-busy-text="\'Processing...\'"\n        md-busy="$ctrl.vm.showBusyText"\n      >\n        <api-creation-step1></api-creation-step1>\n        <api-creation-step2></api-creation-step2>\n        <api-creation-step3></api-creation-step3>\n        <api-creation-step4></api-creation-step4>\n        <api-creation-step5></api-creation-step5>\n      </md-steppers>\n    </div>\n\n    <div class="gv-creation-timeline-wrapper" layout-padding flex ng-show="$ctrl.vm.selectedStep !== 4">\n      <div>\n        <h4>Prepare your API</h4>\n        <md-divider></md-divider>\n      </div>\n      <div class="gv-creation-timeline">\n        <timeline>\n          <timeline-event ng-repeat="apiStep in $ctrl.apiSteps" side="right">\n            <timeline-badge class="{{apiStep.badgeClass}}">\n              <div class="api-creation__timeline-badge-container">\n                <gv-icon ng-prop-shape="apiStep.badgeIconClass" class="api-creation__timeline-badge-container__icon"></gv-icon>\n              </div>\n            </timeline-badge>\n            <timeline-panel class="{{apiStep.badgeClass}}">\n              <timeline-heading>\n                <div\n                  style="font-weight: 600; text-overflow: ellipsis; white-space: nowrap; overflow: hidden"\n                  ng-bind-html="apiStep.title"\n                ></div>\n              </timeline-heading>\n              <p>{{apiStep.content}}</p>\n            </timeline-panel>\n          </timeline-event>\n        </timeline>\n      </div>\n    </div>\n  </div>\n</section>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-step label="General" md-complete="$ctrl.parent.vm.stepData[0].data.completed">\n  <md-step-body>\n    <form name="apiGeneralForm" ng-submit="$ctrl.parent.validFirstStep($ctrl.parent.vm.stepData[0].data)">\n      <md-content layout-padding class="gv-creation-general-content gv-creation-content">\n        <div ng-if="$ctrl.canUseAdvancedMode()" layout="row" layout-align="end start">\n          <a ng-click="$ctrl.toggleAdvancedMode()">Advanced mode</a>\n        </div>\n\n        <div layout-gt-sm="row">\n          <md-input-container class="md-block" flex-gt-sm>\n            <label>Name</label>\n            <input ng-model="$ctrl.parent.api.name" type="text" required name="name" md-maxlength="512" autofocus />\n            <div class="hint" ng-if="$ctrl.shouldDisplayHint(apiGeneralForm.name)">API Name</div>\n            <div ng-messages="apiGeneralForm.name.$error">\n              <div ng-message="required">API Name is required.</div>\n              <div ng-message="md-maxlength">The name has to be less than 50 characters long.</div>\n            </div>\n          </md-input-container>\n          <md-input-container class="md-block">\n            <label>Version</label>\n            <input ng-model="$ctrl.parent.api.version" type="text" md-maxlength="32" required name="version" />\n            <div class="hint" ng-if="$ctrl.shouldDisplayHint(apiGeneralForm.version)">API Version (ex: 1.0)</div>\n            <div ng-messages="apiGeneralForm.version.$error">\n              <div ng-message="required">API Version is required.</div>\n              <div ng-message="md-maxlength">The version has to be less than 32 characters long.</div>\n            </div>\n          </md-input-container>\n        </div>\n\n        <div layout-gt-sm="row">\n          <md-input-container class="md-block" flex-gt-sm>\n            <label>Description</label>\n            <input ng-model="$ctrl.parent.api.description" type="text" required name="description" />\n            <div class="hint" ng-if="$ctrl.shouldDisplayHint(apiGeneralForm.description)">\n              Provide a description of your API, what it does, ...\n            </div>\n            <div ng-messages="apiGeneralForm.description.$error">\n              <div ng-message="required">API Description is required.</div>\n            </div>\n          </md-input-container>\n        </div>\n\n        <div layout-gt-sm="row">\n          <md-input-container class="md-block" flex-gt-sm>\n            <label>Context-path</label>\n            <input\n              ng-model="$ctrl.parent.api.proxy.context_path"\n              type="text"\n              minlength="3"\n              ng-pattern="/^\\/[\\/.a-zA-Z0-9-_]+$/"\n              required\n              name="contextPath"\n              ng-change="$ctrl.parent.onChangeContextPath()"\n            />\n            <div class="hint" ng-if="$ctrl.shouldDisplayHint(apiGeneralForm.contextPath)">\n              Path where API is exposed, must start with a \'/\' and must contain any letter, capitalize letter, number, dash or underscore.\n            </div>\n            <div ng-messages="apiGeneralForm.contextPath.$error">\n              <div ng-message="required">Context path is required.</div>\n              <div ng-message="minlength">Context path has to be more than 3 characters long.</div>\n              <div ng-message="pattern">\n                Context path is not valid (must start with a \'/\' and must contain any letter, capitalize letter, number, dash or underscore)\n              </div>\n            </div>\n          </md-input-container>\n        </div>\n\n        <div\n          layout-gt-sm="row"\n          ng-if="($ctrl.advancedMode && $ctrl.ApiPrimaryOwnerModeService.isHybrid() && $ctrl.parent.poGroups && $ctrl.parent.poGroups.length > 0) || $ctrl.ApiPrimaryOwnerModeService.isGroupOnly()"\n        >\n          <md-input-container ng-if="$ctrl.ApiPrimaryOwnerModeService.isHybrid()" class="md-block" flex-gt-sm>\n            <md-switch ng-model="$ctrl.useGroupAsPrimaryOwner" aria-label="Use a group as primary owner" flex>\n              Use a group as the primary owner\n            </md-switch>\n          </md-input-container>\n          <md-input-container class="md-block" flex-gt-sm>\n            <label>Primary Owner Group</label>\n            <md-select\n              name="poGroupOwner"\n              ng-model="$ctrl.parent.api.primaryOwner"\n              ng-disabled="!$ctrl.useGroupAsPrimaryOwner"\n              ng-required="$ctrl.ApiPrimaryOwnerModeService.isGroupOnly()"\n            >\n              <md-option ng-repeat="group in $ctrl.parent.poGroups" ng-value="{id: group.id, type: \'GROUP\'}">{{group.name}}</md-option>\n            </md-select>\n            <div class="hint">Select the group that will be the primary owner</div>\n            <div ng-messages="apiGeneralForm.poGroupOwner.$error">\n              <div ng-message="required">\n                A primary owner group is required. Check that you belong to at least one group with an API primary owner member.\n              </div>\n            </div>\n          </md-input-container>\n        </div>\n\n        <div layout-gt-sm="row" ng-if="$ctrl.advancedMode && $ctrl.parent.attachableGroups && $ctrl.parent.attachableGroups.length > 0">\n          <md-input-container class="md-block" flex-gt-sm>\n            <label>Groups</label>\n            <md-select ng-model="$ctrl.parent.api.groups" multiple>\n              <md-option ng-repeat="group in $ctrl.parent.attachableGroups" ng-value="group">{{group.name}}</md-option>\n            </md-select>\n            <div class="hint">Groups that will be able to access the API.</div>\n          </md-input-container>\n        </div>\n      </md-content>\n      <md-step-actions layout="row">\n        <div flex>\n          <md-button ng-click="$ctrl.parent.moveToPreviousStep()">CANCEL</md-button>\n        </div>\n        <div layout="row" flex layout-align="end top">\n          <md-button type="submit" ng-disabled="apiGeneralForm.$invalid">NEXT</md-button>\n        </div>\n      </md-step-actions>\n    </form>\n  </md-step-body>\n</md-step>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-step label="Gateway" md-complete="$ctrl.parent.vm.stepData[1].data.completed" ng-disabled="$ctrl.parent.vm.stepProgress < 2">\n  <md-step-body>\n    <form name="apiGatewayForm" ng-submit="$ctrl.parent.selectEndpoint(); $ctrl.parent.submitCurrentStep($ctrl.parent.vm.stepData[1].data)">\n      <md-content layout-padding class="gv-creation-content">\n        <div layout="row" layout-align="end start"><a ng-click="$ctrl.toggleAdvancedMode()">Advanced mode</a></div>\n        <div layout-gt-sm="row">\n          <md-input-container class="md-block" flex-gt-sm>\n            <label>Backend</label>\n            <input ng-model="$ctrl.parent.endpoint" type="url" required name="endpoint" />\n            <div class="hint" ng-if="$ctrl.shouldDisplayHint(apiGatewayForm.endpoint)">\n              Target backend when a request is received for the API context-path\n            </div>\n            <div ng-messages="apiGatewayForm.endpoint.$error">\n              <div ng-message="required">Endpoint is required.</div>\n              <div ng-message="url">Endpoint is not a valid URL.</div>\n            </div>\n          </md-input-container>\n\n          <md-input-container class="md-block" flex-gt-sm flex="25" ng-if="$ctrl.advancedMode">\n            <label>Tenants</label>\n            <md-select ng-model="$ctrl.parent.selectedTenants" multiple>\n              <md-option ng-repeat="tenant in $ctrl.parent.tenants" ng-value="tenant.id">\n                {{tenant.name}}<span ng-if="tenant.description" class="gravitee-general-description"> - {{tenant.description}}</span>\n              </md-option>\n            </md-select>\n            <div class="hint">Select tenants you want to use for this backend.</div>\n          </md-input-container>\n        </div>\n        <md-input-container class="md-block" ng-if="$ctrl.advancedMode">\n          <label>Sharding tags</label>\n          <md-select ng-model="$ctrl.parent.api.tags" multiple>\n            <md-option ng-repeat="tag in $ctrl.parent.tags" ng-value="tag.id">\n              {{tag.name}}<span ng-if="tag.description" class="gravitee-general-description"> - {{tag.description}}</span>\n            </md-option>\n          </md-select>\n          <div class="hint">Select sharding tags you want to use for this backend.</div>\n        </md-input-container>\n      </md-content>\n      <md-step-actions layout="row">\n        <div flex>\n          <md-button ng-click="$ctrl.parent.moveToPreviousStep()">PREVIOUS</md-button>\n        </div>\n        <div flex layout="row" layout-align="end top">\n          <md-button type="submit" ng-disabled="apiGatewayForm.$invalid">NEXT</md-button>\n        </div>\n      </md-step-actions>\n    </form>\n  </md-step-body>\n</md-step>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-step label="Plan" md-complete="$ctrl.parent.vm.stepData[2].data.completed" ng-disabled="$ctrl.parent.vm.stepProgress < 3">\n  <md-step-body>\n    <md-content layout="column" class="gv-creation-plan-content gv-creation-content" layout-padding>\n      <form name="apiPlanForm" flex>\n        <div layout-gt-sm="row">\n          <md-input-container class="md-block" flex-gt-sm="50">\n            <label>Name</label>\n            <input ng-model="$ctrl.parent.plan.name" type="text" required name="name" minlength="4" md-maxlength="50" />\n            <div class="hint" ng-if="$ctrl.shouldDisplayHint(apiPlanForm.name)">Plan Name</div>\n            <div ng-messages="apiPlanForm.name.$error">\n              <div ng-message="required">Plan name is required.</div>\n              <div ng-message="minlength">The name has to be more than 4 characters long.</div>\n              <div ng-message="md-maxlength">The name has to be less than 50 characters long.</div>\n            </div>\n          </md-input-container>\n          <md-input-container class="md-block" flex-gt-sm="25">\n            <label>Security Type</label>\n            <md-select ng-model="$ctrl.parent.plan.security" placeholder="Security type" required ng-required="true">\n              <md-option ng-repeat="type in $ctrl.parent.securityTypes" ng-value="type.id">{{type.name}}</md-option>\n            </md-select>\n          </md-input-container>\n          <md-input-container class="md-block" flex-gt-sm style="margin-left: 10px">\n            <md-switch\n              aria-label="Auto validate subscription"\n              ng-model="$ctrl.parent.plan.validation"\n              ng-true-value="\'AUTO\'"\n              ng-disabled="$ctrl.parent.plan.security == \'KEY_LESS\'"\n              ng-false-value="\'MANUAL\'"\n            >\n              &nbsp;&nbsp;Auto validate subscription\n            </md-switch>\n          </md-input-container>\n        </div>\n        <div layout-gt-sm="row">\n          <md-input-container class="md-block" flex-gt-sm>\n            <label>Description</label>\n            <input type="text" ng-model="$ctrl.parent.plan.description" required />\n          </md-input-container>\n        </div>\n        <div layout-gt-sm="row">\n          <div layout="column" flex>\n            <h5>Characteristics</h5>\n            <md-chips\n              ng-model="$ctrl.parent.plan.characteristics"\n              placeholder="Enter a characteristic"\n              md-add-on-blur="true"\n              secondary-placeholder="+Characteristic"\n              ng-click="apiPlanForm.$setDirty()"\n            ></md-chips>\n          </div>\n        </div>\n        <div layout-gt-sm="row" style="margin-top: 30px">\n          <div layout="column" flex>\n            <h5>Rate limit</h5>\n            <div layout="row" flex>\n              <md-input-container class="md-block" ng-if="$ctrl.parent.rateLimit.limit">\n                <md-button\n                  class="md-icon-button"\n                  aria-label="Reset rate limit"\n                  ng-click="$ctrl.parent.resetRateLimit();apiPlanForm.$setDirty()"\n                >\n                  <md-tooltip md-direction="top">Reset rate limit</md-tooltip>\n                  <ng-md-icon icon="remove_circle_outline" style="fill: #b1bdc5; top: 0"></ng-md-icon>\n                </md-button>\n              </md-input-container>\n              <md-input-container class="md-block" flex>\n                <label>Max requests</label>\n                <input type="number" min="0" ng-model="$ctrl.parent.rateLimit.limit" ng-required="$ctrl.parent.rateLimit.periodTime" />\n              </md-input-container>\n              <md-input-container class="md-block">\n                <label>Period time</label>\n                <input type="number" min="1" ng-model="$ctrl.parent.rateLimit.periodTime" ng-required="$ctrl.parent.rateLimit.limit" />\n              </md-input-container>\n              <md-input-container class="md-block" flex>\n                <label>Period time unit</label>\n                <md-select\n                  ng-model="$ctrl.parent.rateLimit.periodTimeUnit"\n                  placeholder="Time unit"\n                  ng-required="$ctrl.parent.rateLimit.limit"\n                >\n                  <md-option ng-value="timeUnit" ng-repeat="timeUnit in $ctrl.parent.rateLimitTimeUnits">{{timeUnit}}</md-option>\n                </md-select>\n              </md-input-container>\n            </div>\n          </div>\n          <div layout="column" flex>\n            <h5>Quota</h5>\n            <div layout="row" flex>\n              <md-input-container class="md-block" ng-if="$ctrl.parent.quota.limit">\n                <md-button class="md-icon-button" aria-label="Reset quota" ng-click="$ctrl.parent.resetQuota();apiPlanForm.$setDirty()">\n                  <md-tooltip md-direction="top">Reset quota</md-tooltip>\n                  <ng-md-icon icon="remove_circle_outline" style="fill: #b1bdc5; top: 0"></ng-md-icon>\n                </md-button>\n              </md-input-container>\n              <md-input-container class="md-block" flex>\n                <label>Max requests</label>\n                <input type="number" min="0" ng-model="$ctrl.parent.quota.limit" ng-required="$ctrl.parent.quota.periodTime" />\n              </md-input-container>\n              <md-input-container class="md-block" flex>\n                <label>Period time</label>\n                <input type="number" min="1" ng-model="$ctrl.parent.quota.periodTime" ng-required="$ctrl.parent.quota.limit" />\n              </md-input-container>\n              <md-input-container class="md-block" flex>\n                <label>Period time unit</label>\n                <md-select ng-model="$ctrl.parent.quota.periodTimeUnit" placeholder="Time unit" ng-required="$ctrl.parent.quota.limit">\n                  <md-option ng-value="timeUnit" ng-repeat="timeUnit in $ctrl.parent.quotaTimeUnits">{{timeUnit}}</md-option>\n                </md-select>\n              </md-input-container>\n            </div>\n          </div>\n        </div>\n\n        <div layout="row">\n          <h4>Resource filtering</h4>\n          <md-tooltip md-direction="top">Add resource filter</md-tooltip>\n          <md-button\n            type="button"\n            class="md-icon-button"\n            aria-label="Add path authorization"\n            ng-click="$ctrl.parent.resourceFiltering.whitelist.push({})"\n          >\n            <ng-md-icon icon="add_circle_outline" style="fill: #b1bdc5; top: 0"></ng-md-icon>\n          </md-button>\n        </div>\n        <div ng-repeat="whitelist in $ctrl.parent.resourceFiltering.whitelist">\n          <div layout="row">\n            <md-input-container class="md-block">\n              <md-tooltip md-direction="top">Delete resource filter</md-tooltip>\n              <md-button\n                class="md-icon-button"\n                aria-label="Delete path authorization"\n                ng-click="$ctrl.parent.resourceFiltering.whitelist.splice($index, 1);apiPlanForm.$setDirty()"\n              >\n                <ng-md-icon icon="remove_circle_outline" style="fill: #b1bdc5; top: 0"></ng-md-icon>\n              </md-button>\n            </md-input-container>\n            <md-input-container class="md-block" flex="80">\n              <label>Ant pattern</label>\n              <input type="text" ng-model="whitelist.pattern" />\n            </md-input-container>\n            <md-input-container class="md-block" flex>\n              <label>Methods</label>\n              <md-select ng-model="whitelist.methods" placeholder="Select the methods (Default ALL)" multiple>\n                <md-option ng-value="method" ng-repeat="method in $ctrl.parent.methods">{{method}}</md-option>\n              </md-select>\n            </md-input-container>\n          </div>\n        </div>\n      </form>\n    </md-content>\n\n    <md-step-actions layout="row">\n      <div flex>\n        <md-button ng-click="$ctrl.parent.moveToPreviousStep()">PREVIOUS</md-button>\n      </div>\n      <div flex layout="row" layout-align="end top">\n        <md-button\n          ng-if="$ctrl.parent.vm.stepData[2].optional"\n          ng-click="$ctrl.parent.skipAddPlan($ctrl.parent.vm.stepData[2].data); $ctrl.parent.submitCurrentStep($ctrl.parent.vm.stepData[2].data); apiPlanForm.$setPristine();"\n          >SKIP\n        </md-button>\n\n        <md-button\n          ng-disabled="apiPlanForm.$invalid"\n          ng-click="$ctrl.parent.selectPlan(); $ctrl.parent.submitCurrentStep($ctrl.parent.vm.stepData[2].data)"\n          >NEXT\n        </md-button>\n      </div>\n    </md-step-actions>\n  </md-step-body>\n</md-step>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-step label="Doc" md-complete="$ctrl.parent.vm.stepData[3].data.completed" ng-disabled="$ctrl.parent.vm.stepProgress < 4">\n  <md-step-body>\n    <md-tabs md-dynamic-height md-border-bottom flex layout-padding class="gv-creation-content">\n      <md-tab label="Import file">\n        <div class="import-file-drop-box">\n          <input type="file" filecontent="$parent.newApiPageFile.content" filename="$parent.newApiPageFile.name" />\n        </div>\n        <md-content class="gv-creation-pages-content">\n          <md-table-container ng-if="$ctrl.parent.hasPage()" style="margin-top: 20px">\n            <table md-table style="border: none">\n              <thead md-head style="background: #fff">\n                <tr md-row>\n                  <th md-column>Page name</th>\n                  <th md-column>File name</th>\n                  <th md-column></th>\n                </tr>\n              </thead>\n              <tbody md-body>\n                <tr md-row ng-repeat="page in $ctrl.parent.api.pages" style="background: #fff">\n                  <td md-cell><input type="text" ng-model="page.name" placeholder="Page name" /></td>\n                  <td md-cell>{{page.fileName}}</td>\n                  <td md-cell ng-click="$event.stopPropagation()">\n                    <div layout="row" layout-align="end center">\n                      <span>\n                        <md-tooltip md-direction="top">delete</md-tooltip>\n                        <ng-md-icon icon="delete" ng-click="$ctrl.parent.removePage(page)" aria-label="delete-page"></ng-md-icon>\n                      </span>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </md-table-container>\n        </md-content>\n      </md-tab>\n    </md-tabs>\n\n    <md-step-actions layout="row">\n      <div flex>\n        <md-button ng-click="$ctrl.parent.moveToPreviousStep()">PREVIOUS</md-button>\n      </div>\n      <div flex layout="row" layout-align="end top">\n        <md-button\n          ng-if="$ctrl.parent.vm.stepData[3].optional"\n          ng-click="$ctrl.parent.skipDocumentation(); $ctrl.parent.submitCurrentStep($ctrl.parent.vm.stepData[3].data)"\n          >SKIP\n        </md-button>\n        <md-button\n          ng-disabled="!$ctrl.parent.hasPage()"\n          ng-click="$ctrl.parent.selectDocumentation(); $ctrl.parent.submitCurrentStep($ctrl.parent.vm.stepData[3].data)"\n          >NEXT\n        </md-button>\n      </div>\n    </md-step-actions>\n  </md-step-body>\n</md-step>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-step label="Deployment" md-complete="$ctrl.parent.vm.stepData[4].data.completed" ng-disabled="$ctrl.parent.vm.stepProgress < 5">\n  <md-step-body>\n    <md-content flex layout-padding class="gv-abstract-content gv-creation-content">\n      <h5>\n        API\n        <a ng-click="$ctrl.parent.selectStep(0)">\n          <md-tooltip>Jump to general edition</md-tooltip>\n          <ng-md-icon icon="mode_edit" size="20"></ng-md-icon>\n        </a>\n      </h5>\n      <p>\n        You are about to create the API <code>{{$ctrl.parent.api.name}}</code> in version <code>{{$ctrl.parent.api.version}}</code>. The API\n        will be map to the following context path <code>{{$ctrl.parent.api.proxy.context_path}}</code>.\n        <span ng-if="$ctrl.parent.api.groups && $ctrl.parent.api.groups.length > 0">\n          The groups <code ng-repeat="group in $ctrl.parent.api.groups" style="margin: 0 0.2rem">{{group.name}}</code> will be able to\n          access the API.\n        </span>\n      </p>\n      <h5>\n        Gateway\n        <a ng-click="$ctrl.parent.selectStep(1)">\n          <md-tooltip>Jump to gateway edition</md-tooltip>\n          <ng-md-icon icon="mode_edit" size="20"></ng-md-icon>\n        </a>\n      </h5>\n      <p>The upstream endpoint will be <code ng-repeat="endpoint in $ctrl.parent.api.proxy.endpoints">{{endpoint.target}}</code>.</p>\n      <h5>\n        Plan\n        <a ng-click="$ctrl.parent.selectStep(2)">\n          <md-tooltip>Jump to plan edition</md-tooltip>\n          <ng-md-icon icon="mode_edit" size="20"></ng-md-icon>\n        </a>\n      </h5>\n      <p ng-if="$ctrl.parent.api.plans.length > 0">\n        The <code>{{$ctrl.parent.api.plans[0].name}}</code> plan will allow users to subscribe to the API. The\n        <code>{{$ctrl.parent.api.plans[0].security}}</code> plan security scheme means that the API\n        <span ng-if="$ctrl.parent.api.plans[0].security === \'KEY_LESS\'"\n          >will be open access and causes API Gateway to bypass any access control mechanisms.</span\n        >\n        <span ng-if="$ctrl.parent.api.plans[0].security === \'API_KEY\'"\n          >will enforce verification of API keys during request processing, letting only apps with approved API keys access the API.</span\n        >\n\n        The plan has validation mode set to <code>{{$ctrl.parent.api.plans[0].validation}}</code> meaning that application developers\n        <span ng-if="$ctrl.parent.api.plans[0].validation === \'AUTO\'">can subscribe to this Plan immediately.</span>\n        <span ng-if="$ctrl.parent.api.plans[0].validation === \'MANUAL\'"\n          >have to request approval for access to subscribe to this Plan.</span\n        >\n      </p>\n      <p ng-if="$ctrl.parent.api.plans.length == 0" class="gv-abstract-warning">\n        <ng-md-icon icon="warning" style="fill: orange"></ng-md-icon> No plan means that nobody can subscribe and consume your API.\n      </p>\n      <h5>\n        Documentation\n        <a ng-click="$ctrl.parent.selectStep(3)">\n          <md-tooltip>Jump to documentation edition</md-tooltip>\n          <ng-md-icon icon="mode_edit" size="20"></ng-md-icon>\n        </a>\n      </h5>\n      <p ng-if="$ctrl.parent.api.pages.length > 0">\n        The API will have the <code ng-repeat-start="page in $ctrl.parent.api.pages" ng-bind="page.name"></code>\n        <span ng-repeat-end></span>documentation to helping users understand and use the API.\n      </p>\n      <p ng-if="$ctrl.parent.api.pages.length == 0" class="gv-abstract-warning">\n        <ng-md-icon icon="warning" style="fill: orange"></ng-md-icon> No documentation provided, remember to provide consumers\n        understandable and accurate information about your API.\n      </p>\n      <h5>Confirmation</h5>\n      <p style="padding-top: 0px" ng-if="!$ctrl.parent.Constants.env.settings.apiReview.enabled">\n        You can now either\n        <strong\n          ><md-button class="md-raised" ng-click="$ctrl.parent.createAPI(false)">create the API without deploying it</md-button></strong\n        >\n        letting you continue configure the API or\n        <strong><md-button class="md-raised" ng-click="$ctrl.parent.createAPI(true)">create and start the API</md-button></strong> to make\n        it immediately available for the application developers.\n      </p>\n      <p style="padding-top: 0px" ng-if="$ctrl.parent.Constants.env.settings.apiReview.enabled">\n        You can now either\n        <strong><md-button class="md-raised" ng-click="$ctrl.parent.createAPI(false, false)">create the API in draft</md-button></strong>\n        letting you continue configure the API or\n        <strong\n          ><md-button class="md-raised" ng-click="$ctrl.parent.createAPI(false, true)">create the API and ask for review</md-button></strong\n        >\n        before publishing/starting it.\n      </p>\n\n      <div layout="row">\n        <a ng-href="{{$ctrl.url}}" target="_blank" class="gv-abstract-documentation-link" flex\n          >To go further on API configuration, please consult <strong>API Management documentation</strong></a\n        >\n      </div>\n    </md-content>\n  </md-step-body>\n</md-step>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h2 mat-dialog-title class="title">{{ isUpdateMode ? \'Update you API\' : \'Import the API\' }}</h2>\n\n<mat-dialog-content class="content">\n  <mat-tab-group dynamicHeight mat-stretch-tabs (selectedTabChange)="onSelectedTab($event)">\n    \x3c!-- Import file --\x3e\n    <mat-tab [label]="tabLabels.UploadFile">\n      <div class="content__file-tab">\n        <div class="content__file-tab__file">\n          <gio-form-file-picker accept=".yml,.yaml,.json,.wsdl,.xml" [ngModel]="filePickerValue" (ngModelChange)="onImportFile($event)">\n            <gio-form-file-picker-add-button class="content__file-tab__file__add-btn">\n              <div class="content__file-tab__file__add-btn__wrapper">\n                <p class="mat-body-strong">\n                  Drag and drop a file to upload it. <br />\n                  Alternatively, click here to choose a file.\n                </p>\n                <p>Supported file formats: yml, yaml, json, wsdl, xml.</p>\n              </div>\n            </gio-form-file-picker-add-button>\n          </gio-form-file-picker>\n        </div>\n        <div *ngIf="importFile && importType !== \'GRAVITEE\'" class="content__file-tab__config">\n          <ng-container *ngTemplateOutlet="configs"></ng-container>\n        </div>\n      </div>\n    </mat-tab>\n    \x3c!-- Swagger / OpenAPI link --\x3e\n    <mat-tab [label]="tabLabels.SwaggerOpenAPI">\n      <div class="content__url-tab">\n        <mat-form-field class="content__url-tab__field">\n          <mat-label>Swagger descriptor URL</mat-label>\n          <input matInput type="url" [formControl]="descriptorUrlForm" required />\n          <mat-error *ngIf="descriptorUrlForm?.hasError(\'required\')">URL is required.</mat-error>\n        </mat-form-field>\n\n        <div class="content__url-tab__config">\n          <ng-container *ngTemplateOutlet="configs"></ng-container>\n        </div>\n      </div>\n    </mat-tab>\n    \x3c!-- API definition link --\x3e\n    <mat-tab [label]="tabLabels.ApiDefinition">\n      <div class="content__url-tab">\n        <mat-form-field class="content__url-tab__field">\n          <mat-label>Api definition URL</mat-label>\n          <input matInput type="url" [formControl]="descriptorUrlForm" required />\n          <mat-error *ngIf="descriptorUrlForm?.hasError(\'required\')">URL is required.</mat-error>\n        </mat-form-field>\n      </div>\n    </mat-tab>\n    \x3c!-- API definition link --\x3e\n    <mat-tab [label]="tabLabels.WSDL">\n      <div class="content__url-tab">\n        <mat-form-field class="content__url-tab__field">\n          <mat-label>WSDL descriptor URL</mat-label>\n          <input matInput type="url" [formControl]="descriptorUrlForm" required />\n          <mat-error *ngIf="descriptorUrlForm?.hasError(\'required\')">URL is required.</mat-error>\n        </mat-form-field>\n\n        <div class="content__url-tab__config">\n          <ng-container *ngTemplateOutlet="configs"></ng-container>\n        </div>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n\n  <ng-template #configs>\n    <div *ngIf="configsForm && importType !== \'GRAVITEE\'" class="configs" [formGroup]="configsForm">\n      <h4>Configuration imported from the {{ importType === \'WSDL\' ? \'WSDL\' : \'swagger\' }} descriptor</h4>\n\n      <div class="configs__checkbox">\n        <mat-checkbox formControlName="importDocumentation">Create documentation</mat-checkbox>\n        <div class="configs__checkbox__warn">\n          This will overwrite documentation if there is only one existing, or create it if it does not exist yet.\n        </div>\n      </div>\n\n      <div class="configs__checkbox">\n        <mat-checkbox formControlName="importPathMapping">Create the path mapping for analytics</mat-checkbox>\n        <div class="configs__checkbox__warn">This will overwrite all the path-mappings.</div>\n      </div>\n\n      <div class="configs__checkbox">\n        <mat-checkbox formControlName="importPolicyPaths" [indeterminate]="importPolicyPathsIntermediate"\n          >Create policies on paths</mat-checkbox\n        >\n        <div class="configs__checkbox__warn">This will overwrite all the policies.</div>\n      </div>\n\n      <div *ngFor="let policy of policies" class="configs__checkbox policies-section" formGroupName="importPolicies">\n        <mat-checkbox [formControlName]="policy.id">Apply {{ policy.name }} policy</mat-checkbox>\n        <div class="configs__checkbox__warn">This will overwrite all the existing policy.</div>\n      </div>\n    </div>\n  </ng-template>\n</mat-dialog-content>\n\n<mat-dialog-actions align="end" class="actions">\n  <button class="confirm-dialog__cancel-button" mat-flat-button [mat-dialog-close]="false">Cancel</button>\n  <button\n    class="confirm-dialog__confirm-button"\n    color="primary"\n    mat-raised-button\n    data-testid="confirm-dialog"\n    [disabled]="!isImportValid"\n    (click)="onImport()"\n  >\n    Import\n  </button>\n</mat-dialog-actions>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="api-creation-get-started__header">\n  <h1>Create an API</h1>\n</div>\n\n<h2>Get Started</h2>\n<div class="api-creation-get-started__row">\n  <mat-card class="api-creation-get-started__row__api-creation-card">\n    <div mat-card-image class="api-creation-get-started__row__api-creation-card__img">\n      <img [src]="\'assets/api-create-wizard.png\'" alt="API Create wizard logo" />\n    </div>\n\n    <div class="mat-h5">API Creation wizard</div>\n\n    <div class="mat-small">\n      Build and configure API policies using a graphical flow diagram, and easily configure quotas, rate limits and more.\n    </div>\n\n    <div class="api-creation-get-started__row__api-creation-card__action">\n      <button mat-raised-button color="primary" (click)="goToApiCreationWizard()">Continue in the wizard</button>\n    </div>\n  </mat-card>\n\n  <mat-card *ngIf="!isLoading" class="api-creation-get-started__row__api-designer-card">\n    <div mat-card-image class="api-creation-get-started__row__api-designer-card__img">\n      <img [src]="\'assets/api-create-design-link.png\'" alt="Api Designer logo" />\n    </div>\n\n    <div class="mat-h5">API Designer <span class="gio-badge-accent">*New*</span></div>\n\n    <div class="mat-small">\n      Build faster with a design-first approach that reduces time spent translating requirements into API definitions.\n    </div>\n\n    <div class="api-creation-get-started__row__api-designer-card__action">\n      <a [href]="cockpitLink" target="_blank" rel="noopener noreferrer" mat-raised-button color="accent"\n        >Try API Designer <mat-icon>open_in_new</mat-icon></a\n      >\n    </div>\n  </mat-card>\n</div>\n\n<mat-card class="api-creation-get-started__import-existing-api-card">\n  <div class="mat-h5">Import an existing API</div>\n\n  <div class="mat-small">Import your API definition, Swagger descriptor file, OpenAPI specifications or a WSDL.</div>\n\n  <div class="api-creation-get-started__import-existing-api-card__action">\n    <button mat-raised-button color="primary" (click)="goToApiImport()">Import an API</button>\n  </div>\n</mat-card>\n\n<div class="api-creation-get-started__path-based mat-small" *ngIf="allowsPathBasedCreation">\n  <span\n    >Or you can still use paths based | <a href="javascript:void(0)" (click)="goToApiImport(\'1.0.0\')">Import</a> -\n    <a href="javascript:void(0)" (click)="goToApiCreationWizard(\'1.0.0\')">Create</a></span\n  >\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-card class="gravitee-card gravitee-plan-box plans" style="min-width: 250px; max-width: 350px; margin: 0 auto">\n  <md-card-header>\n    <md-toolbar>\n      <div class="md-toolbar-tools">\n        <div layout="column">\n          <h4>{{$ctrl.plan.name}}</h4>\n          <span style="font-size: 12px">Authentication: {{$ctrl.plan.security}}</span>\n          <span ng-if="$ctrl.plan.general_conditions" style="font-size: 12px; margin-bottom: 1rem">With general conditions</span>\n        </div>\n        <span flex></span>\n        <span ng-if="$ctrl.plan.alreadySubscribed && $ctrl.unsubscribable && !$ctrl.plan.pending">\n          <md-tooltip md-direction="top">Unsubscribe</md-tooltip>\n          <ng-md-icon style="fill: grey" icon="cancel" ng-click="$ctrl.unsubscribe();" disabled></ng-md-icon>\n        </span>\n      </div>\n    </md-toolbar>\n  </md-card-header>\n  <md-divider></md-divider>\n  <md-card-content layout="column">\n    <h4 class="gravitee-plan-content">{{$ctrl.plan.description}}</h4>\n    <md-divider></md-divider>\n    <div ng-if="$ctrl.plan.characteristics.length > 0">\n      <h5 class="gravitee-plan-content">Characteristics</h5>\n      <div class="gravitee-plan-content-div">\n        <gv-state ng-repeat="characteristic in $ctrl.plan.characteristics">{{characteristic}}</gv-state>\n      </div>\n      <md-divider></md-divider>\n    </div>\n    <div ng-if="$ctrl.plan.excluded_groups_names.length > 0">\n      <h5 class="gravitee-plan-content">Excluded groups</h5>\n      <div class="gravitee-plan-content-div">\n        <gv-state ng-repeat="excludedGroupName in $ctrl.plan.excluded_groups_names">{{excludedGroupName}}</gv-state>\n      </div>\n      <md-divider></md-divider>\n    </div>\n  </md-card-content>\n  <md-card-footer ng-if="$ctrl.authenticated">\n    <md-divider></md-divider>\n    <div layout="column">\n      <div layout="row" layout-align="end">\n        <md-button\n          ng-if="$ctrl.plan.security !== \'KEY_LESS\' || $ctrl.plan.security === undefined"\n          class="md-primary md-raised"\n          aria-label="Execute"\n          ng-click="$ctrl.subscribe()"\n          ng-disabled="!$ctrl.subscribable || $ctrl.plan.alreadySubscribed || $ctrl.plan.general_conditions"\n        >\n          {{$ctrl.plan.alreadySubscribed ? \'Subscribed\' : ($ctrl.plan.validation === \'AUTO\'?\'Subscribe\': \'Request for subscription\')}}\n          {{$ctrl.plan.pending ? \'(pending)\' : \'\'}}\n        </md-button>\n        <md-button ng-if="$ctrl.plan.security === \'KEY_LESS\'" class="md-primary md-raised" aria-label="Execute" ng-disabled="true">\n          No subscription required\n        </md-button>\n      </div>\n      <div ng-if="$ctrl.plan.general_conditions && $ctrl.subscribable" class="general_conditions_info">\n        Plan with general conditions can only be subscribed through the portal\n      </div>\n    </div>\n  </md-card-footer>\n</md-card>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div layout="column">\n  <div>\n    <span class="md-headline" style="padding: 24px 16px 16px">Plan</span>\n  </div>\n\n  <div layout="row" flex>\n    <div class="gv-creation-steppers" flex="{{$ctrl.vm.selectedStep !== $ctrl.vm.maxStep ? 65: 100}}">\n      <md-stepper-card-content class="md-no-padding">\n        <md-steppers\n          md-dynamic-height\n          md-stretch-steppers="always"\n          md-disable-tabs-behavior="true"\n          md-selected="$ctrl.vm.selectedStep"\n          md-busy-text="\'Processing...\'"\n          md-busy="$ctrl.vm.showBusyText"\n        >\n          <plan-wizard-general></plan-wizard-general>\n          <plan-wizard-security></plan-wizard-security>\n          <plan-wizard-restrictions ng-if="$ctrl.hasRestrictionStep()"></plan-wizard-restrictions>\n          <plan-wizard-policies ng-if="$ctrl.hasPoliciesStep()"></plan-wizard-policies>\n        </md-steppers>\n      </md-stepper-card-content>\n    </div>\n\n    <div class="gv-creation-timeline-wrapper" layout-padding flex ng-show="$ctrl.vm.selectedStep !== $ctrl.vm.maxStep">\n      <h4>Preview</h4>\n      <api-plan plan="$ctrl.plan" subscribable="false"></api-plan>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <h1>Plans</h1>\n  <div class="gv-form">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <div class="btn-group">\n        <button\n          class="btn btn-default"\n          ng-class="{\'active\': $ctrl.selectedStatus.indexOf(statusFilter) !== -1}"\n          ng-click="$ctrl.changeFilter(statusFilter)"\n          type="button"\n          ng-repeat="statusFilter in $ctrl.statusFilters"\n          style="text-transform: capitalize"\n        >\n          {{statusFilter.toLowerCase()}} <span ng-if="$ctrl.countByStatus[statusFilter]">({{$ctrl.countByStatus[statusFilter]}})</span>\n        </button>\n      </div>\n\n      <div layout="column" flex>\n        <div layout="row" layout-align="center" layout-wrap class="plans">\n          <div class="md-block" ng-repeat="plan in $ctrl.filteredPlans" layout="row" layout-align="center">\n            <md-card class="gravitee-card gravitee-plan-box" style="min-width: 250px; max-width: 350px">\n              <md-card-header>\n                <md-toolbar class="md-menu-toolbar">\n                  <div class="md-toolbar-tools">\n                    <div layout="column">\n                      <h4 ng-class="{italic: plan.status === \'STAGING\', strike: plan.status === \'CLOSED\'}">{{plan.name}}</h4>\n                      <span style="font-size: 12px">Authentication: {{plan.security | lowercase}}</span>\n                      <span ng-if="plan.general_conditions" style="font-size: 12px; margin-bottom: 1rem">With general conditions</span>\n                      <span style="font-size: 12px" ng-if="plan.tags && plan.tags.length > 0">Deploy on: {{plan.tags.join(\', \')}}</span>\n                    </div>\n                    <span flex></span>\n                    <span ng-if="plan.status !== \'CLOSED\'" permission permission-only="\'api-plan-u\'">\n                      <md-tooltip md-direction="top">Configure plan</md-tooltip>\n                      <ng-md-icon style="fill: grey" icon="mode_edit" ng-click="$ctrl.editPlan(plan)"></ng-md-icon>\n                    </span>\n\n                    <span ng-if="$ctrl.canDesign(plan)" permission permission-only="\'api-plan-u\'">\n                      <md-tooltip md-direction="top">Design plan</md-tooltip>\n                      <ng-md-icon style="fill: #6ba2c5" icon="palette" ng-click="$ctrl.design(plan)"></ng-md-icon>\n                    </span>\n                    <span ng-if="plan.status === \'STAGING\'" permission permission-only="\'api-plan-u\'">\n                      <md-tooltip md-direction="top">Publish plan</md-tooltip>\n                      <ng-md-icon style="fill: #6ba2c5" icon="backup" ng-click="$ctrl.publish(plan)"></ng-md-icon>\n                    </span>\n                    <span ng-if="plan.status === \'PUBLISHED\'" permission permission-only="\'api-plan-u\'">\n                      <md-tooltip md-direction="top">Deprecate plan</md-tooltip>\n                      <ng-md-icon style="fill: #d3772d" icon="portable_wifi_off" ng-click="$ctrl.deprecate(plan)"></ng-md-icon>\n                    </span>\n                    <span ng-if="plan.status !== \'CLOSED\'" permission permission-only="\'api-plan-u\'">\n                      <md-tooltip md-direction="top">Close plan</md-tooltip>\n                      <ng-md-icon style="fill: #d3091d" icon="close" ng-click="$ctrl.close(plan)"></ng-md-icon>\n                    </span>\n                  </div>\n                </md-toolbar>\n              </md-card-header>\n              <md-divider></md-divider>\n              <md-card-content layout="column">\n                <h4 class="gravitee-plan-content">{{plan.description}}</h4>\n                <md-divider></md-divider>\n                <div ng-if="plan.characteristics.length > 0">\n                  <h5 class="gravitee-plan-content">Characteristics</h5>\n                  <div class="gravitee-plan-content-div">\n                    <gv-state ng-repeat="characteristic in plan.characteristics">{{characteristic}}</gv-state>\n                  </div>\n                  <md-divider></md-divider>\n                </div>\n                <div ng-if="plan.excluded_groups_names.length > 0">\n                  <h5 class="gravitee-plan-content">Excluded groups</h5>\n                  <div class="gravitee-plan-content-div">\n                    <gv-state ng-repeat="excluded_group_name in plan.excluded_groups_names">{{excluded_group_name}}</gv-state>\n                  </div>\n                  <md-divider></md-divider>\n                </div>\n              </md-card-content>\n              <md-divider ng-if="graviteeUser || plan.isPublic"></md-divider>\n              <md-card-footer ng-if="graviteeUser || plan.isPublic">\n                <div layout="row" layout-align="end">\n                  <md-button\n                    ng-if="plan.security !== \'KEY_LESS\' || plan.security === undefined"\n                    class="md-primary md-raised"\n                    aria-label="Execute"\n                    ng-click="subscribe(plan)"\n                    ng-disabled="plan.status || planEdit"\n                  >\n                    {{plan.alreadySubscribed ? \'Subscribed\' : (plan.validation === \'AUTO\'?\'Subscribe\': \'Request for subscription\')}}\n                  </md-button>\n                  <md-button\n                    ng-if="plan.security === \'KEY_LESS\'"\n                    class="md-primary md-raised"\n                    aria-label="Execute"\n                    ng-click="subscribe(plan)"\n                    ng-disabled="plan.status || planEdit"\n                  >\n                    No subscription required\n                  </md-button>\n                </div>\n              </md-card-footer>\n            </md-card>\n          </div>\n        </div>\n        <div permission permission-only="\'api-plan-u\'" layout="row" layout-align="center" layout-wrap>\n          <span ng-if="$ctrl.filteredPlans.length != 0 && $ctrl.dndEnabled"\n            ><ng-md-icon icon="info" style="fill: #b1bdc5"></ng-md-icon> Plans can be re-ordered by dragging & dropping them.</span\n          >\n        </div>\n      </div>\n\n      <gravitee-empty-state\n        ng-if="$ctrl.filteredPlans.length == 0"\n        icon="view_week"\n        model="Plan"\n        message="Plans will appear here"\n        sub-message="{{$ctrl.creationEmptyMessage}}"\n        create-mode="true"\n      ></gravitee-empty-state>\n      <div\n        permission\n        permission-only="\'api-plan-c\'"\n        ng-style="$ctrl.filteredPlans.length == 0 && {\'text-align\':\'center\'}"\n        ng-if="!$ctrl.isApiDeprecated"\n      >\n        <md-button\n          ng-class="{\'md-fab-bottom-right\': $ctrl.filteredPlans.length > 0}"\n          class="md-fab"\n          aria-label="Add"\n          ng-click="$ctrl.addPlan()"\n        >\n          <ng-md-icon icon="add"></ng-md-icon>\n        </md-button>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Publish plan">\n  <md-dialog-content layout-padding>\n    <h4>Would you like to publish plan <code>{{plan.name}}</code> ?</h4>\n    <p>By publishing this plan, users will now be able to subscribe to it.</p>\n  </md-dialog-content>\n\n  <md-dialog-actions layout="row">\n    <md-button ng-click="hide()" md-autofocus> Cancel </md-button>\n    <md-button class="md-raised md-primary" ng-click="publish()"> Publish </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-step label="Define" md-complete="$ctrl.parent.vm.stepData[0].completed">\n  <md-step-body>\n    <md-content layout-padding class="gv-creation-general-content gv-creation-content">\n      <form name="$ctrl.planGeneralForm">\n        <section>\n          <md-subheader>General</md-subheader>\n\n          <div layout-gt-sm="row">\n            <md-input-container class="md-block" flex-gt-sm>\n              <label>Name</label>\n              <input ng-model="$ctrl.parent.plan.name" type="text" required name="name" md-maxlength="50" />\n              <div class="hint" ng-if="$ctrl.planGeneralForm.name.$valid || $ctrl.planGeneralForm.name.$pristine">Plan name</div>\n              <div ng-messages="$ctrl.planGeneralForm.name.$error">\n                <div ng-message="required">Name is required.</div>\n                <div ng-message="md-maxlength">The name has to be less than 50 characters long.</div>\n              </div>\n            </md-input-container>\n          </div>\n\n          <div layout-gt-sm="row">\n            <md-input-container class="md-block" flex-gt-sm>\n              <label>Description</label>\n              <input ng-model="$ctrl.parent.plan.description" type="text" required name="description" />\n              <div class="hint" ng-if="$ctrl.planGeneralForm.description.$valid || $ctrl.planGeneralForm.description.$pristine">\n                Provide a description of your plan, what it does, ...\n              </div>\n              <div ng-messages="$ctrl.planGeneralForm.description.$error">\n                <div ng-message="required">Description is required.</div>\n              </div>\n            </md-input-container>\n          </div>\n\n          <div layout-gt-sm="row">\n            <div class="md-block" flex-gt-sm>\n              <label>Characteristics</label>\n              <md-chips\n                ng-model="$ctrl.parent.plan.characteristics"\n                placeholder="Enter a characteristic"\n                md-add-on-blur="true"\n                secondary-placeholder="+Characteristic"\n                ng-click="$ctrl.planGeneralForm.$setDirty()"\n              ></md-chips>\n            </div>\n          </div>\n        </section>\n\n        <br />\n\n        <section>\n          <md-subheader>General Conditions</md-subheader>\n\n          <div layout-gt-sm="row">\n            <md-input-container class="md-block" flex="100">\n              <label\n                >Page of General Conditions\n                <span class="italic warn-general-conditions" ng-if="$ctrl.parent.shouldNotEditConditions()">*</span>\n              </label>\n              <md-select ng-model="$ctrl.parent.plan.general_conditions">\n                <md-option ng-repeat="page in $ctrl.parent.pages | orderBy:\'name\' " ng-value="page.id"> {{page.name}} </md-option>\n              </md-select>\n              <span class="italic warn-general-conditions" ng-if="$ctrl.parent.shouldNotEditConditions()">\n                * This plan is published, if you change the general conditions please remember to notify you API subscribers</span\n              >\n            </md-input-container>\n          </div>\n        </section>\n\n        <br />\n\n        <section>\n          <md-subheader>Subscriptions</md-subheader>\n\n          <div layout-gt-md="row">\n            <md-input-container class="md-block" flex-gt-md>\n              <md-switch\n                aria-label="Auto validate subscriptions"\n                ng-model="$ctrl.parent.plan.validation"\n                ng-true-value="\'AUTO\'"\n                ng-disabled="plan.security == \'KEY_LESS\'"\n                ng-false-value="\'MANUAL\'"\n              >\n                Auto validate subscription.\n              </md-switch>\n            </md-input-container>\n          </div>\n\n          <div layout-gt-md="row">\n            <md-input-container class="md-block" flex-gt-md>\n              <md-switch\n                aria-label="Consumer comment"\n                ng-model="$ctrl.parent.plan.comment_required"\n                ng-disabled="plan.security == \'KEY_LESS\'"\n              >\n                Consumer must provide a comment when subscribing to the plan.\n              </md-switch>\n            </md-input-container>\n            <md-input-container class="md-block" flex-gt-md>\n              <label>Custom message to display to consumer</label>\n              <input ng-model="$ctrl.parent.plan.comment_message" type="text" name="comment_message" md-maxlength="64" />\n              <div ng-messages="$ctrl.planGeneralForm.comment_message.$error">\n                <div ng-message="md-maxlength">The comment message has to be less than 64 characters long.</div>\n              </div>\n            </md-input-container>\n          </div>\n        </section>\n\n        <br />\n\n        <section>\n          <md-subheader>Deployment</md-subheader>\n          <div layout-gt-sm="row">\n            <md-input-container class="md-block" flex="100">\n              <label>Sharding tags</label>\n              <md-select ng-model="$ctrl.parent.plan.tags" multiple>\n                <md-option ng-repeat="tag in $ctrl.parent.tags" ng-value="tag.id" ng-disabled="$ctrl.parent.isTagDisabled(tag)">\n                  {{tag.name}}<span ng-if="tag.description" class="gravitee-general-description"> - {{tag.description}}</span>\n                </md-option>\n              </md-select>\n            </md-input-container>\n          </div>\n        </section>\n\n        <br />\n\n        <section>\n          <md-subheader>Access-Control</md-subheader>\n\n          <div layout-gt-sm="row">\n            <md-input-container class="md-block" flex="100">\n              <label>Groups excluded</label>\n              <md-select\n                ng-model="$ctrl.parent.plan.excluded_groups"\n                ng-change="$ctrl.parent.refreshPlanExcludedGroupsNames();"\n                multiple\n                ng-disabled="!($ctrl.parent.groups && $ctrl.parent.groups.length > 0)"\n              >\n                <md-option ng-repeat="group in $ctrl.parent.groups | orderBy:\'name\'" ng-value="group.id"> {{group.name}} </md-option>\n              </md-select>\n            </md-input-container>\n          </div>\n        </section>\n      </form>\n\n      <br />\n\n      <md-step-actions layout="row">\n        <div flex layout="row" layout-align="end top">\n          <md-button ng-disabled="$ctrl.planGeneralForm.$invalid" ng-click="$ctrl.gotoNextStep()">NEXT</md-button>\n        </div>\n      </md-step-actions>\n    </md-content>\n  </md-step-body>\n</md-step>\n'},,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-step label="Secure" md-complete="$ctrl.parent.vm.stepData[1].completed">\n  <md-step-body>\n    <md-content layout-padding class="gv-creation-general-content gv-creation-content">\n      <section>\n        <md-subheader>Authentication</md-subheader>\n        <form name="$ctrl.planGeneralForm">\n          <div layout-gt-sm="row">\n            <md-input-container class="md-block" flex-gt-sm>\n              <label>Authentication type</label>\n              <md-select\n                ng-model="$ctrl.parent.plan.security"\n                placeholder="Security type"\n                required\n                ng-disabled="$ctrl.parent.plan.id"\n                ng-change="$ctrl.onSecurityTypeChange()"\n              >\n                <md-option ng-repeat="type in $ctrl.securityTypes" ng-value="type.id">{{type.name}}</md-option>\n              </md-select>\n              <div class="hint">Select the type of authentication</div>\n            </md-input-container>\n          </div>\n        </form>\n      </section>\n\n      <br />\n\n      <section ng-if="$ctrl.securitySchema">\n        <md-subheader>Configuration</md-subheader>\n        <gv-schema-form\n          ng-attr-schema="{{ $ctrl.securitySchema }}"\n          validate-on-render\n          ng-attr-values="{{ $ctrl.parent.plan.securityDefinition }}"\n          ng-on-gv-schema-form:change="$ctrl.onSecurityDefinitionChange($event)"\n          ng-on-gv-schema-form:fetch-resources="$ctrl.onFetchResources($event)"\n        >\n        </gv-schema-form>\n      </section>\n\n      <br />\n\n      <section ng-if="$ctrl.securitySchema">\n        <md-subheader>Additional selection rule</md-subheader>\n        <form name="$ctrl.planGeneralForm">\n          <div layout-gt-sm="row">\n            <md-input-container class="md-block" flex-gt-sm>\n              <input ng-model="$ctrl.parent.plan.selection_rule" type="text" placeholder="Selection Rule" name="selectionrule" />\n              <div class="hint" style="top: 40px">\n                Define an additional rule when you\'re managing multiple plans of the same type to improve the plan\'s selection process. For\n                example, if you want to check the issuer of a jwt token: #context.attributes[\'jwt\'].claims[\'iss\'] == \'my-issuer\'\n              </div>\n            </md-input-container>\n          </div>\n        </form>\n      </section>\n\n      <md-step-actions layout="row">\n        <div flex>\n          <md-button ng-click="$ctrl.parent.moveToPreviousStep()">PREVIOUS</md-button>\n          <md-button class="md-raised md-warn" ui-sref="management.apis.detail.portal.plans.list">CANCEL</md-button>\n        </div>\n        <div flex layout="row" layout-align="end top">\n          <md-button\n            ng-if="$ctrl.parent.hasRestrictionStep()"\n            ng-disabled="$ctrl.planGeneralForm.$invalid || $ctrl.securityConfigurationForm.$invalid"\n            ng-click="$ctrl.gotoNextStep()"\n            >NEXT</md-button\n          >\n          <md-button\n            ng-if="!$ctrl.parent.hasRestrictionStep()"\n            ng-disabled="$ctrl.planGeneralForm.$invalid || $ctrl.securityConfigurationForm.$invalid"\n            ng-click="$ctrl.gotoNextStep()"\n            class="md-primary md-raised"\n            >SAVE</md-button\n          >\n        </div>\n      </md-step-actions>\n    </md-content>\n  </md-step-body>\n</md-step>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-step label="Restrictions" md-complete="$ctrl.parent.vm.stepData[2].completed">\n  <md-step-body>\n    <md-content layout-padding class="gv-creation-general-content gv-creation-content">\n      <section ng-repeat="policy in $ctrl.policies">\n        <md-subheader>\n          <md-checkbox ng-model="policy.enabled" aria-label="Enable policy" flex>\n            <div>{{policy.title}}</div>\n            <div class="hints">{{policy.description}}</div>\n          </md-checkbox>\n        </md-subheader>\n\n        <div layout-gt-sm="row" ng-if="policy.enabled">\n          <form\n            name="policy.form"\n            flex\n            sf-schema="policy.schema"\n            sf-form="[\'*\']"\n            sf-model="policy.model"\n            sf-options="{ validateOnRender: true, formDefaults: { startEmpty: true } }"\n          ></form>\n        </div>\n      </section>\n\n      <br />\n\n      <md-step-actions layout="row">\n        <div flex>\n          <md-button ng-click="$ctrl.parent.moveToPreviousStep()">PREVIOUS</md-button>\n          <md-button class="md-raised md-warn" ui-sref="management.apis.detail.portal.plans.list">CANCEL</md-button>\n        </div>\n\n        <div flex layout="row" layout-align="end top">\n          <md-button ng-if="!$ctrl.parent.isV2()" ng-disabled="!$ctrl.validate()" ng-click="$ctrl.gotoNextStep()">NEXT</md-button>\n          <md-button\n            ng-if="$ctrl.parent.isV2()"\n            ng-disabled="!$ctrl.validate()"\n            ng-click="$ctrl.gotoNextStep()"\n            class="md-primary md-raised"\n            >SAVE</md-button\n          >\n        </div>\n      </md-step-actions>\n    </md-content>\n  </md-step-body>\n</md-step>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-step label="Policies" md-complete="$ctrl.parent.vm.stepData[3].completed">\n  <md-step-body>\n    <md-content layout-padding class="gv-creation-general-content gv-creation-content">\n      <section>\n        <form name="$ctrl.planPolicyForm">\n          <div layout-gt-sm="row">\n            <md-input-container class="md-block" flex-gt-sm>\n              <label>Select policy</label>\n              <md-select ng-model="$ctrl.selectedPolicy" placeholder="Choose a policy">\n                <md-option ng-repeat="policy in $ctrl.parent.policies" ng-value="policy.id">{{policy.name}}</md-option>\n              </md-select>\n              <div class="hint">Select a policy to add at the end of the policy chain.</div>\n            </md-input-container>\n\n            <md-button ng-disabled="! $ctrl.selectedPolicy" ng-click="$ctrl.addPolicy()">ADD</md-button>\n          </div>\n        </form>\n      </section>\n\n      <section ng-if="$ctrl.parent.planPolicies && $ctrl.parent.planPolicies.length > 0">\n        <md-subheader>Policy Chain</md-subheader>\n\n        <md-card\n          ng-repeat="policy in $ctrl.parent.planPolicies"\n          ng-click="$ctrl.editPolicy($index, $event)"\n          class="gravitee-card gravitee-policy-card"\n          ng-class="$ctrl.getPolicyClass(policy)"\n          layout="row"\n          layout-align="space-between start"\n        >\n          <md-card-content layout="column" layout-align="start start" layout-fill>\n            <div ng-if="!policy.name" layout="column" layout-align="start start">\n              <span class="md-subhead">Unknown policy</span>\n              <i>Please check that the policy \'{{policy.id}}\' is installed in plugins</i>\n            </div>\n            <span class="md-subhead">{{policy.name}}</span>\n            <span class="gravitee-policy-card-description">{{policy.description}}</span>\n          </md-card-content>\n          <div layout="column" permission permission-only="\'api-definition-u\'">\n            <ng-md-icon\n              icon="close"\n              style="fill: #757575"\n              size="18px"\n              class="gravitee-card-close"\n              ng-click="$ctrl.removePolicy($index, path, $event)"\n            >\n              <md-tooltip md-direction="right"> Remove policy </md-tooltip>\n            </ng-md-icon>\n            <ng-md-icon\n              ng-if="policy.name"\n              icon="mode_edit"\n              style="fill: #757575"\n              size="18px"\n              class="gravitee-card-close"\n              ng-click="$ctrl.editPolicyDescription($index, path, $event)"\n            >\n              <md-tooltip md-direction="right"> Edit policy description </md-tooltip>\n            </ng-md-icon>\n            <ng-md-icon\n              icon="done"\n              ng-if="policy.enabled"\n              style="fill: #437536"\n              size="18px"\n              class="gravitee-card-close"\n              ng-click="$ctrl.switchPolicyEnabled($index, path, $event)"\n            >\n              <md-tooltip md-direction="right"> Policy is enabled. Click to disable it. </md-tooltip>\n            </ng-md-icon>\n            <ng-md-icon\n              icon="pause_circle_outline"\n              ng-if="!policy.enabled"\n              style="fill: #751c16"\n              size="18px"\n              class="gravitee-card-close"\n              ng-click="$ctrl.switchPolicyEnabled($index, path, $event)"\n            >\n              <md-tooltip md-direction="right"> Policy is disabled. Click to enable it. </md-tooltip>\n            </ng-md-icon>\n          </div>\n        </md-card>\n      </section>\n\n      <section ng-if="$ctrl.editablePolicy">\n        <md-subheader>Edit policy Configuration</md-subheader>\n\n        <form\n          name="$ctrl.policyConfigurationForm"\n          sf-schema="$ctrl.policySchema"\n          sf-form="[\'*\']"\n          sf-model="$ctrl.policyDefinition"\n          sf-options="{ validateOnRender: true, formDefaults: { startEmpty: true } }"\n          novalidate\n        ></form>\n      </section>\n\n      <br />\n\n      <md-step-actions layout="row">\n        <div flex>\n          <md-button ng-click="$ctrl.parent.moveToPreviousStep()">PREVIOUS</md-button>\n          <md-button class="md-raised md-warn" ui-sref="management.apis.detail.portal.plans.list">CANCEL</md-button>\n        </div>\n        <div flex layout="row" layout-align="end top">\n          <md-button ng-disabled="$ctrl.policyConfigurationForm.$invalid" ng-click="$ctrl.gotoNextStep()" class="md-primary md-raised"\n            >SAVE</md-button\n          >\n        </div>\n      </md-step-actions>\n    </md-content>\n  </md-step-body>\n</md-step>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <h1>Subscriptions</h1>\n  <div class="gv-form">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <div class="gv-filters" flex>\n        <form ng-submit="$ctrl.search()" name="$ctrl.subscriptionsFiltersForm">\n          <div layout-gt-sm="row">\n            <md-input-container class="md-block" flex-gt-sm flex="20">\n              <label>Plan</label>\n              <md-select ng-model="$ctrl.query.plans" placeholder="Plans" multiple>\n                <md-option ng-value="plan.id" ng-repeat="plan in $ctrl.plans track by plan.id">{{ plan.name }}</md-option>\n              </md-select>\n            </md-input-container>\n            <md-input-container class="md-block" flex-gt-sm flex="20">\n              <label>Application</label>\n              <md-select\n                ng-model="$ctrl.query.applications"\n                data-md-container-class="selectdemoSelectHeader"\n                md-on-open="$ctrl.applicationSearchTermSearch()"\n                placeholder="Applications"\n                multiple\n              >\n                <md-select-header class="demo-select-header">\n                  <input\n                    ng-model="$ctrl.applicationSearchTerm"\n                    ng-change="$ctrl.applicationSearchTermSearch()"\n                    ng-keydown="$event.stopPropagation()"\n                    type="search"\n                    placeholder="Search applications."\n                    class="demo-header-searchbox md-text"\n                  />\n                </md-select-header>\n\n                <md-option ng-if="$ctrl.subscribers === null" disabled>Loading...</md-option>\n                <md-option ng-value="subscriber.id" ng-repeat="subscriber in $ctrl.subscribers track by subscriber.id"\n                  >{{ subscriber.name }}</md-option\n                >\n                <md-optgroup ng-if="$ctrl.subscribersSelected && $ctrl.subscribersSelected.length > 0" label="Selected">\n                  <md-option ng-value="subscriber.id" ng-repeat="subscriber in $ctrl.subscribersSelected track by subscriber.id"\n                    >{{ subscriber.name }}</md-option\n                  >\n                </md-optgroup>\n              </md-select>\n            </md-input-container>\n            <md-input-container class="md-block" flex-gt-sm flex="20">\n              <label>Status</label>\n              <md-select ng-model="$ctrl.query.status" placeholder="Status" multiple>\n                <md-option ng-value="key" ng-repeat="(key, value) in $ctrl.status">{{ value }}</md-option>\n              </md-select>\n            </md-input-container>\n            <md-input-container class="md-block" flex-gt-sm flex="20">\n              <label>API key</label>\n              <input ng-model="$ctrl.query.api_key" />\n            </md-input-container>\n            <div>\n              <md-button type="submit" class="md-raised md-primary"> Search </md-button>\n              <md-button type="button" class="md-raised" ng-click="$ctrl.clearFilters()" ng-disabled="!$ctrl.hasFilter()">\n                Clear\n              </md-button>\n              <md-button\n                type="button"\n                class="md-raised"\n                ng-click="$ctrl.exportAsCSV()"\n                ng-disabled="!$ctrl.subscriptions.data || $ctrl.subscriptions.data.length === 0"\n              >\n                Export as CSV\n                <div id="hidden-export-container" style="display: none"></div>\n              </md-button>\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <md-table-container ng-if="$ctrl.subscriptions.data.length > 0">\n        <table md-table class="gv-table-dense">\n          <thead md-head>\n            <tr md-row>\n              <th md-column>Plan</th>\n              <th md-column>Application</th>\n              <th md-column>Created at</th>\n              <th md-column>Processed at</th>\n              <th md-column>Start at</th>\n              <th md-column>End at</th>\n              <th md-column>Status</th>\n              <th md-column></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="subscription in $ctrl.subscriptions.data track by subscription.id">\n              <td md-cell>\n                <a\n                  style="font-weight: bold"\n                  ui-sref="management.apis.detail.portal.subscriptions.subscription({\n              subscriptionId: subscription.id,\n              page: $ctrl.query.page,\n              size: $ctrl.query.size,\n              status: $ctrl.query.status,\n              application: $ctrl.query.applications,\n              plan: $ctrl.query.plans,\n              api_key: $ctrl.query.api_key\n            })"\n                >\n                  {{$ctrl.subscriptions.metadata[subscription.plan].name}}\n                </a>\n              </td>\n              <td md-cell>{{$ctrl.subscriptions.metadata[subscription.application].name}}</td>\n              <td md-cell>{{subscription.created_at | date:\'yyyy-MM-dd HH:mm:ss\'}}</td>\n              <td md-cell>{{subscription.processed_at | date:\'yyyy-MM-dd HH:mm:ss\'}}</td>\n              <td md-cell>{{subscription.starting_at || \'-\' | date:\'yyyy-MM-dd HH:mm:ss\'}}</td>\n              <td md-cell>{{subscription.ending_at || \'-\' | date:\'yyyy-MM-dd HH:mm:ss\'}}</td>\n              <td md-cell style="text-transform: capitalize">\n                <md-tooltip ng-if="subscription.reason" md-direction="left">{{subscription.reason}}</md-tooltip>\n                {{subscription.status}}\n              </td>\n              <td md-cell>\n                <gravitee-chart options="subscription.chartData" type="sparkline" height="20" width="120"></gravitee-chart>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <md-table-pagination\n        ng-if="$ctrl.subscriptions.data.length > 0"\n        md-limit="$ctrl.query.size"\n        md-limit-options="[10, 25, 50, 75, 100]"\n        md-page="$ctrl.subscriptions.page.current"\n        md-total="{{$ctrl.subscriptions.page.total_elements}}"\n        md-on-paginate="$ctrl.onPaginate"\n        md-page-select\n        class="gv-table-dense"\n      >\n      </md-table-pagination>\n\n      <gravitee-empty-state\n        ng-if="$ctrl.subscriptions.data.length === 0"\n        icon="vpn_key"\n        model="Subscription"\n        message="Your API Subscriptions will appear here"\n        create-mode="true"\n      ></gravitee-empty-state>\n\n      <md-button\n        permission\n        permission-only="\'api-subscription-c\'"\n        class="md-fab md-fab-bottom-right"\n        ng-class="{\'md-fab-bottom-right md-fab-scrollable\' : $ctrl.subscriptions.data.length > 0, \'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"\n        aria-label="Add"\n        ng-click="$ctrl.showAddSubscriptionModal()"\n      >\n        <ng-md-icon icon="add"></ng-md-icon>\n      </md-button>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Create a subscription">\n  <md-dialog-content layout-padding>\n    <h4>Create a subscription</h4>\n    <h5>Choose an application</h5>\n    <form name="CreateSubscriptionForm" ng-submit="$event.preventDefault()" novalidate>\n      <md-autocomplete\n        md-selected-item="dialogSubscriptionCreateController.selectedApp"\n        md-selected-item-change="dialogSubscriptionCreateController.selectedItemChange()"\n        md-search-text="searchText"\n        md-items="app in dialogSubscriptionCreateController.searchApplication(searchText)"\n        md-item-text="app.name"\n        md-min-length="1"\n        placeholder="Search application ..."\n        md-autofocus="true"\n        md-delay="300"\n        md-menu-class="autocomplete-create-subscription"\n        required\n        style="width: 400px"\n      >\n        <md-item-template>\n          <span class="item-title"> <span> {{app.name}} </span><span ng-if="app.type">({{app.type}}) </span> </span>\n          <span class="item-metadata"> By {{app.owner.displayName}} on {{app.created_at | humanDateFilter}} </span>\n        </md-item-template>\n        <md-not-found> No application matching "{{searchText}}" were found. </md-not-found>\n      </md-autocomplete>\n    </form>\n\n    <h5>Select a plan</h5>\n    <form name="CustomApiKeyForm" ng-submit="$event.preventDefault()">\n      <div layout="column" layout-align="start start" ng-cloak>\n        <span ng-if="dialogSubscriptionCreateController.atLeastOnePlanWithGeneralConditions()" class="general_conditions_disabled"\n          >Plan with general conditions can only be subscribed through the portal</span\n        >\n        <md-radio-group ng-model="dialogSubscriptionCreateController.selectedPlan" style="width: 100%">\n          <div ng-repeat="plan in dialogSubscriptionCreateController.plans | orderBy: \'order\'">\n            <md-radio-button\n              ng-value="plan"\n              ng-disabled="dialogSubscriptionCreateController.planAlreadyHaveSubscriptions(plan.id) || dialogSubscriptionCreateController.hasGeneralConditions(plan)"\n            >\n              {{plan.name}}\n              <md-tooltip md-direction="right"> {{plan.description}} </md-tooltip>\n              <div\n                ng-if="dialogSubscriptionCreateController.planAlreadyHaveSubscriptions(plan.id)"\n                style="color: rgba(0, 0, 0, 0.54); font-size: smaller"\n              >\n                There is already a <i>pending</i> or <i>accepted</i> subscription for this plan.\n              </div>\n            </md-radio-button>\n\n            <div\n              ng-if="dialogSubscriptionCreateController.selectedPlan.id === plan.id && dialogSubscriptionCreateController.planIsApiKey(plan.id) && dialogSubscriptionCreateController.canUseCustomApiKey"\n              style="color: rgba(0, 0, 0, 0.54); font-size: smaller; margin: 0 0 0 30px"\n            >\n              <api-key-validated-input\n                form-reference="CustomApiKeyForm"\n                api-id="dialogSubscriptionCreateController.api.id"\n                application-id="dialogSubscriptionCreateController.selectedApp.id"\n                label="\'You can provide a custom API key if you already have one\'"\n                on-change="dialogSubscriptionCreateController.onApiKeyValueChange"\n              ></api-key-validated-input>\n            </div>\n          </div>\n        </md-radio-group>\n      </div>\n    </form>\n  </md-dialog-content>\n\n  <md-dialog-actions layout="row">\n    <md-button ng-click="dialogSubscriptionCreateController.hide()"> Cancel </md-button>\n    <md-button\n      class="md-raised md-primary"\n      ng-click="dialogSubscriptionCreateController.save()"\n      ng-disabled="!dialogSubscriptionCreateController.selectedApp\n                            || !dialogSubscriptionCreateController.selectedPlan\n                            || dialogSubscriptionCreateController.customApiKeyInputState === \'invalid\'\n                            || CustomApiKeyForm.$invalid\n    "\n    >\n      Create\n    </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms" layout="column">\n  <div class="gv-forms-header">\n    <h1>Subscription</h1>\n    <a ui-sref="management.apis.detail.portal.subscriptions.list($ctrl.backStateParams)">Back to subscriptions</a>\n  </div>\n\n  <div class="gv-form">\n    <h2>Details</h2>\n    <div class="gv-form-content" layout="column">\n      <md-table-container>\n        <table md-table>\n          <tbody md-body class="subscription-details-table-body">\n            <tr md-row>\n              <td md-cell><span class="subscription-details-title-cell">ID</span></td>\n              <td md-cell>{{$ctrl.subscription.id}}</td>\n              <td md-cell><span class="subscription-details-title-cell">Created at</span></td>\n              <td md-cell>{{$ctrl.subscription.created_at | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n            </tr>\n            <tr md-row>\n              <td md-cell><span class="subscription-details-title-cell">Plan</span></td>\n              <td md-cell>\n                <span class="subscription-details-title-cell">{{$ctrl.subscription.plan.name}}</span> ({{$ctrl.subscription.plan.security}})\n              </td>\n              <td md-cell><span class="subscription-details-title-cell">Processed at</span></td>\n              <td md-cell>{{$ctrl.subscription.processed_at || \'-\' | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n            </tr>\n            <tr md-row ng-if="\'REJECTED\' !== $ctrl.subscription.status">\n              <td md-cell><span class="subscription-details-title-cell">Status</span></td>\n              <td md-cell>{{$ctrl.subscription.status|uppercase}}</td>\n              <td md-cell><span class="subscription-details-title-cell">Starting at</span></td>\n              <td md-cell>{{$ctrl.subscription.starting_at || \'-\' | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n            </tr>\n            <tr md-row ng-if="\'REJECTED\' === $ctrl.subscription.status">\n              <td md-cell><span class="subscription-details-title-cell">Status</span></td>\n              <td md-cell colspan="3">{{$ctrl.subscription.status|uppercase}}</td>\n            </tr>\n            <tr md-row ng-if="\'REJECTED\' !== $ctrl.subscription.status">\n              <td md-cell><span class="subscription-details-title-cell">Subscribed by</span></td>\n              <td md-cell>{{$ctrl.subscription.subscribed_by.displayName}}</td>\n              <td md-cell><span class="subscription-details-title-cell">Ending at</span></td>\n              <td md-cell>{{$ctrl.subscription.ending_at || \'-\' | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n            </tr>\n            <tr md-row ng-if="\'REJECTED\' === $ctrl.subscription.status">\n              <td md-cell><span class="subscription-details-title-cell">Subscribed by</span></td>\n              <td md-cell>{{$ctrl.subscription.subscribed_by.displayName}}</td>\n              <td md-cell><span class="subscription-details-title-cell">Closed at</span></td>\n              <td md-cell>{{$ctrl.subscription.closed_at | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n            </tr>\n            <tr md-row>\n              <td md-cell><span class="subscription-details-title-cell">Application</span></td>\n              <td md-cell>\n                <span class="subscription-details-title-cell">{{$ctrl.subscription.application.name}}</span>\n                ({{$ctrl.subscription.application.owner.displayName}}) - Type: {{$ctrl.subscription.application.type}}\n              </td>\n              <td md-cell><span class="subscription-details-title-cell">Domain</span></td>\n              <td md-cell>{{$ctrl.subscription.application.domain || \'-\'}}</td>\n            </tr>\n            <tr md-row>\n              <td md-cell style="border-top: 0px"></td>\n              <td md-cell style="border-top: 0px" colspan="3">{{$ctrl.subscription.application.description}}</td>\n            </tr>\n            <tr md-row ng-if="$ctrl.subscription.request">\n              <td md-cell><span class="subscription-details-title-cell">Message from subscriber</span></td>\n              <td md-cell colspan="3">{{$ctrl.subscription.request}}</td>\n            </tr>\n            <tr md-row ng-if="$ctrl.subscription.reason">\n              <td md-cell><span class="subscription-details-title-cell">Message to subscriber</span></td>\n              <td md-cell colspan="3">{{$ctrl.subscription.reason}}</td>\n            </tr>\n            <tr md-row ng-if="\'REJECTED\' !== $ctrl.subscription.status && $ctrl.subscription.paused_at">\n              <td md-cell><span class="subscription-details-title-cell">Paused at</span></td>\n              <td md-cell colspan="3">{{$ctrl.subscription.paused_at | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n            </tr>\n            <tr md-row ng-if="\'REJECTED\' !== $ctrl.subscription.status && $ctrl.subscription.closed_at">\n              <td md-cell><span class="subscription-details-title-cell">Closed at</span></td>\n              <td md-cell colspan="3">{{$ctrl.subscription.closed_at | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <div class="api-key-shared-mode-info-banner" ng-if="$ctrl.hasSharedApiKeyMode && $ctrl.subscription.status === \'PENDING\'">\n        <ng-banner>\n          Application <code>{{ $ctrl.subscription.application.name }}</code> is using the shared API key mode. This means that API keys used\n          by this subscription may be shared with others API subscriptions.\n        </ng-banner>\n      </div>\n\n      <div class="md-actions gravitee-api-save-button" layout="row" ng-if="$ctrl.subscription.status === \'PENDING\'">\n        <div permission permission-only="\'api-subscription-u\'">\n          <md-button class="md-raised" ng-click="$ctrl.accept()">\n            <ng-md-icon icon="done" style="fill: green"></ng-md-icon>\n            Accept\n          </md-button>\n          <md-button class="md-raised md-warn" ng-click="$ctrl.reject()">\n            <ng-md-icon icon="block" style="fill: white"></ng-md-icon>\n            Reject\n          </md-button>\n        </div>\n      </div>\n\n      <div\n        class="md-actions gravitee-api-save-button"\n        layout="row"\n        ng-if="$ctrl.subscription.status === \'ACCEPTED\' || $ctrl.subscription.status === \'PAUSED\'"\n      >\n        <md-button\n          class="md-raised md-primary"\n          ng-click="$ctrl.transfer()"\n          permission\n          permission-only="\'api-subscription-u\'"\n          ng-disabled="$ctrl.transferablePlans.length === 0"\n        >\n          <ng-md-icon icon="compare_arrows" style="fill: white"></ng-md-icon>\n          Transfer\n        </md-button>\n\n        <md-button\n          class="md-raised md-primary"\n          ng-click="$ctrl.pause()"\n          permission\n          permission-only="\'api-subscription-u\'"\n          ng-if="$ctrl.subscription.status === \'ACCEPTED\'"\n        >\n          <ng-md-icon icon="pause" style="fill: white"></ng-md-icon>\n          Pause\n        </md-button>\n\n        <md-button\n          class="md-raised md-primary"\n          ng-click="$ctrl.resume()"\n          permission\n          permission-only="\'api-subscription-u\'"\n          ng-if="$ctrl.subscription.status === \'PAUSED\'"\n        >\n          <ng-md-icon icon="play_arrow" style="fill: white"></ng-md-icon>\n          Resume\n        </md-button>\n\n        <md-button class="md-raised md-primary" ng-click="$ctrl.changeEndDate()" permission permission-only="\'api-subscription-u\'">\n          <ng-md-icon icon="play_arrow" style="fill: white"></ng-md-icon>\n          Change End Date\n        </md-button>\n\n        <md-button class="md-raised md-warn" ng-click="$ctrl.close()" permission permission-only="\'api-subscription-u\'">\n          <ng-md-icon icon="not_interested" style="fill: white"></ng-md-icon>\n          Close\n        </md-button>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class="gv-form"\n    ng-if="$ctrl.subscription.status === \'PENDING\' && $ctrl.keys.length > 0\n       || $ctrl.subscription.status !== \'PENDING\' && $ctrl.subscription.status !== \'REJECTED\' && $ctrl.subscription.plan.security === \'API_KEY\'"\n  >\n    <h2>{{$ctrl.apiKeysTitle}}</h2>\n    <div class="gv-form-content" layout="column">\n      <ng-banner ng-if="$ctrl.hasSharedApiKeyMode">\n        This subscription uses a shared API key.<br />\n        You can renew or revoke the shared API key at the application level.\n      </ng-banner>\n\n      <md-table-container>\n        <table md-table>\n          <thead md-head>\n            <tr md-row>\n              <th md-column>Key</th>\n              <th md-column>Created at</th>\n              <th md-column>Revoked / Expire at</th>\n              <th md-column></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="key in $ctrl.keys track by key.key">\n              <td md-cell style="line-height: 30px">\n                <ng-md-icon\n                  icon="{{$ctrl.isValid(key)?\'done\':\'clear\'}}"\n                  ng-style="{\'fill\': $ctrl.isValid(key)?\'#107F20\':\'#BE2628\'}"\n                ></ng-md-icon>\n                <code>{{key.key}}</code>\n                <span ng-if="$ctrl.isValid(key) && $ctrl.subscription.status === \'ACCEPTED\'">\n                  <md-tooltip md-direction="right">Copy to clipboard</md-tooltip>\n                  <ng-md-icon\n                    icon="content_copy"\n                    ngclipboard\n                    data-clipboard-text="{{key.key}}"\n                    ngclipboard-success="$ctrl.onCopyApiKeySuccess(e);"\n                    role="button"\n                  ></ng-md-icon>\n                </span>\n              </td>\n              <td md-cell>{{key.created_at | date:\'yyyy-MM-dd HH:mm:ss\'}}</td>\n              <td md-cell>{{key.revoked_at || key.expire_at | date:\'yyyy-MM-dd HH:mm:ss\'}}</td>\n              <td md-cell>\n                <span ng-if="!$ctrl.hasSharedApiKeyMode && $ctrl.isValid(key) && $ctrl.subscription.status === \'ACCEPTED\'">\n                  <md-tooltip md-direction="left">Revoke</md-tooltip>\n                  <ng-md-icon\n                    permission\n                    permission-only="\'api-subscription-u\'"\n                    style="top: 0"\n                    icon="not_interested"\n                    ng-click="$ctrl.revokeApiKey(key)"\n                  ></ng-md-icon>\n                </span>\n                <span ng-if="!$ctrl.hasSharedApiKeyMode && $ctrl.isValid(key) && $ctrl.subscription.status === \'ACCEPTED\'">\n                  <md-tooltip md-direction="left">Set expiration date</md-tooltip>\n                  <ng-md-icon\n                    permission\n                    permission-only="\'api-subscription-u\'"\n                    style="top: 0"\n                    icon="schedule"\n                    ng-click="$ctrl.expireApiKey(key)"\n                  ></ng-md-icon>\n                </span>\n                <span\n                  ng-if="!$ctrl.hasSharedApiKeyMode && !$ctrl.isValid(key) && ($ctrl.subscription.status === \'ACCEPTED\' || $ctrl.subscription.status === \'PAUSED\')"\n                >\n                  <md-tooltip md-direction="left">Reactivate</md-tooltip>\n                  <ng-md-icon\n                    permission\n                    permission-only="\'api-subscription-u\'"\n                    style="top: 0"\n                    icon="restore"\n                    ng-click="$ctrl.reactivateApiKey(key)"\n                  ></ng-md-icon>\n                </span>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <div\n        class="md-actions gravitee-api-save-button"\n        layout="row"\n        permission\n        permission-only="\'api-subscription-u\'"\n        ng-if="!$ctrl.hasSharedApiKeyMode && $ctrl.subscription.status === \'ACCEPTED\'"\n      >\n        <md-button class="md-raised md-primary" ng-click="$ctrl.renewApiKey()">\n          <ng-md-icon icon="autorenew" style="fill: white"></ng-md-icon>\n          Renew\n        </md-button>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Give a reason for the reject of subscription">\n  <md-dialog-content layout-padding>\n    <h4>Reject subscription</h4>\n    <div layout="column" ng-cloak class="md-inline-form">\n      <h5>Explain the reason of the reject</h5>\n      <textarea ng-model="reason"></textarea>\n    </div>\n  </md-dialog-content>\n\n  <md-dialog-actions layout="row">\n    <md-button ng-click="dialogSubscriptionRejectController.hide()" md-autofocus> Cancel </md-button>\n    <md-button class="md-raised md-warn" ng-click="dialogSubscriptionRejectController.save()"> Reject Subscription </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Define dates for the subscription" class="accept-subscription-dialog">\n  <md-dialog-content layout-padding>\n    <form name="SubscriptionForm" ng-submit="$event.preventDefault()">\n      <h4>Accept subscription</h4>\n      <div ng-cloak layout="column">\n        <div class="md-inline-form">\n          <md-input-container>\n            <label>Start date</label>\n            <md-datepicker ng-model="$ctrl.startingAt" md-min-date="$ctrl.now"></md-datepicker>\n          </md-input-container>\n          <md-input-container>\n            <label>End date</label>\n            <md-datepicker ng-model="$ctrl.endingAt" md-min-date="$ctrl.startingAt"></md-datepicker>\n          </md-input-container>\n        </div>\n        <md-input-container>\n          <div layout="column" ng-cloak class="md-inline-form">\n            <h5>If needed, add a message:</h5>\n            <textarea ng-model="$ctrl.reason" aria-label="Reason"></textarea>\n          </div>\n        </md-input-container>\n        <div ng-if="$ctrl.canUseCustomApiKey && !$ctrl.sharedApiKeyMode">\n          <h5 style="margin-bottom: 20px">This plan allows custom API keys. You can provide it here.</h5>\n          <div>\n            <api-key-validated-input\n              form-reference="SubscriptionForm"\n              api-id="$ctrl.apiId"\n              application-id="$ctrl.applicationId"\n              on-change="$ctrl.onApiKeyValueChange"\n            ></api-key-validated-input>\n          </div>\n        </div>\n      </div>\n    </form>\n  </md-dialog-content>\n\n  <md-dialog-actions layout="row">\n    <md-button ng-click="$ctrl.hide()">Cancel</md-button>\n    <md-button class="md-raised md-primary" ng-click="$ctrl.save()" ng-disabled="$ctrl.customApiKeyInputState === \'invalid\'"\n      >Accept</md-button\n    >\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="warning-dialog">\n  <form name="CustomApiKeyForm" ng-submit="$event.preventDefault()">\n    <md-dialog-content layout-padding>\n      <h4>{{title}}</h4>\n      <p ng-bind-html="msg"></p>\n      <div ng-if="customMessage">\n        <p ng-bind-html="customMessage" style="margin-bottom: 20px"></p>\n        <api-key-validated-input\n          form-reference="CustomApiKeyForm"\n          api-id="apiId"\n          application-id="applicationId"\n          on-change="ctrl.onApiKeyValueChange"\n        ></api-key-validated-input>\n      </div>\n    </md-dialog-content>\n    <md-dialog-actions layout="row">\n      <md-button ng-click="ctrl.cancel()">Cancel</md-button>\n      <md-button\n        class="md-raised md-warn"\n        ng-click="ctrl.confirm()"\n        ng-disabled="ctrl.customApiKeyInputState === \'invalid\'\n                            || CustomApiKeyForm.$invalid"\n        >{{confirmButton}}</md-button\n      >\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Set expiration date for API Key">\n  <form name="formExpireSubscriptionProperty" ng-submit="dialogApiKeyExpirationController.save()" novalidate>\n    <md-dialog-content layout-padding>\n      <h4>Expire API Key</h4>\n      <div ng-cloak class="md-inline-form">\n        <md-input-container style="margin-bottom: 0">\n          <label>New Expiration Date</label>\n          <input\n            moment-picker="$ctrl.endDateFormated"\n            format="YYYY-MM-DD HH:mm"\n            min-date="minDate"\n            max-date="maxDate"\n            ng-model="expiration"\n            ng-model-options="{ updateOn: \'blur\' }"\n          />\n        </md-input-container>\n\n        <md-subheader class="md-warn" ng-bind="error"></md-subheader>\n      </div>\n    </md-dialog-content>\n\n    <md-dialog-actions layout="row">\n      <md-button ng-click="dialogApiKeyExpirationController.hide()">Cancel</md-button>\n      <md-button type="submit" class="md-raised md-primary" ng-disabled="formExpireSubscriptionProperty.$invalid">Expire</md-button>\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Transfer subscription">\n  <md-dialog-content layout-padding>\n    <h4>Transfer subscription</h4>\n    <div ng-cloak layout="column">\n      <span ng-if="$ctrl.atLeastOnePlanWithGeneralConditions()" class="general_conditions_disabled"\n        >Plans with general conditions cannot be used</span\n      >\n      <md-radio-group ng-model="$ctrl.plan">\n        <md-radio-button\n          ng-repeat="plan in $ctrl.plans | orderBy: \'order\'"\n          ng-value="plan.id"\n          ng-disabled="$ctrl.hasGeneralConditions(plan)"\n        >\n          {{plan.name}}\n          <md-tooltip md-direction="right"> {{plan.description}} </md-tooltip>\n        </md-radio-button>\n      </md-radio-group>\n    </div>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="$ctrl.hide()">Cancel</md-button>\n    <md-button class="md-raised md-primary" ng-click="$ctrl.save()" ng-disabled="!$ctrl.plan">Transfer</md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Transfer subscription">\n  <md-dialog-content layout-padding>\n    <h4>Change the end date of the subscription</h4>\n    <div ng-cloak layout="column">\n      <p style="color: #d73a49">\n        Be careful, by changing the end date <code>{{ $ctrl.subscription.application.name }}</code> could be no longer have access to this\n        API.\n      </p>\n      <p ng-if="\'API_KEY\'===$ctrl.subscription.plan.security"><br />All API keys after the new end date will be revoked.</p>\n      <md-input-container style="margin-bottom: 0">\n        <label>New End Date</label>\n        <input\n          moment-picker="$ctrl.endDateFormated"\n          format="YYYY-MM-DD HH:mm"\n          min-date="$ctrl.now"\n          ng-model="$ctrl.endDate"\n          ng-model-options="{ updateOn: \'blur\' }"\n        />\n      </md-input-container>\n    </div>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="$ctrl.hide()">Cancel</md-button>\n    <md-button class="md-raised md-warn" ng-click="$ctrl.save()">Yes, Change the end date.</md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<section layout="column" flex>\n  <div layout="row">\n    <div class="gv-creation-steppers" flex="{{$ctrl.selectedStep !== $ctrl.steps.length ? 70: 100}}">\n      <md-steppers md-dynamic-height md-disable-tabs-behavior="true" md-stretch-steppers="always" md-selected="$ctrl.selectedStep">\n        <application-creation-step1></application-creation-step1>\n        <application-creation-step2></application-creation-step2>\n        <application-creation-step3></application-creation-step3>\n        <application-creation-step4></application-creation-step4>\n      </md-steppers>\n    </div>\n\n    <div class="gv-creation-timeline-wrapper" layout-padding flex ng-show="$ctrl.selectedStep !== $ctrl.steps.length">\n      <div>\n        <h4>Prepare your application</h4>\n        <md-divider></md-divider>\n      </div>\n      <div class="gv-creation-timeline">\n        <timeline>\n          <timeline-event ng-repeat="step in $ctrl.steps" side="right" ng-show="$ctrl.selectedStep == $index || step.completed">\n            <timeline-badge class="{{step.badgeClass}}">\n              <div class="application-creation__timeline-badge-container">\n                <gv-icon ng-prop-shape="step.badgeIconClass" class="application-creation__timeline-badge-container__icon"> </gv-icon>\n              </div>\n            </timeline-badge>\n            <timeline-panel class="{{step.badgeClass}}">\n              <timeline-heading>\n                <div\n                  style="font-weight: 600; text-overflow: ellipsis; white-space: nowrap; overflow: hidden"\n                  ng-bind-html="step.title"\n                ></div>\n              </timeline-heading>\n              <p>{{step.content}}</p>\n            </timeline-panel>\n          </timeline-event>\n        </timeline>\n      </div>\n    </div>\n  </div>\n</section>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-step label="General" md-complete="$ctrl.parent.steps[0].completed">\n  <md-step-body>\n    <md-content layout-padding class="gv-creation-general-content gv-creation-content">\n      <form name="applicationForm" ng-submit="$ctrl.parent.next()">\n        <div class="gv-form">\n          <div class="gv-form-content" layout="column">\n            <md-input-container class="md-block">\n              <label>Name</label>\n              <input ng-model="$ctrl.parent.application.name" type="text" name="name" md-maxlength="512" required />\n              <div class="hint" ng-if="$ctrl.shouldDisplayHint(applicationForm.name)">Application name</div>\n              <div ng-messages="applicationForm.name.$error">\n                <div ng-message="required">Application name is required.</div>\n                <div ng-message="md-maxlength">The name has to be less than 50 characters long.</div>\n              </div>\n            </md-input-container>\n\n            <md-input-container class="md-block">\n              <label>Description</label>\n              <input ng-model="$ctrl.parent.application.description" type="text" name="description" required />\n              <div class="hint" ng-if="$ctrl.shouldDisplayHint(applicationForm.description)">\n                Provide a description of your application, what it does, ...\n              </div>\n              <div ng-messages="applicationForm.description.$error">\n                <div ng-message="required">Application description is required.</div>\n              </div>\n            </md-input-container>\n\n            <md-input-container class="md-block">\n              <label>Domain</label>\n              <input ng-model="$ctrl.parent.application.domain" type="text" name="domain" />\n              <div class="hint" ng-if="$ctrl.shouldDisplayHint(applicationForm.domain)">\n                The domain your application will use, if relevant.\n              </div>\n            </md-input-container>\n          </div>\n        </div>\n        <md-step-actions layout="row">\n          <div flex>\n            <md-button ng-click="$ctrl.parent.previous()">CANCEL</md-button>\n          </div>\n          <div layout="row" flex layout-align="end top">\n            <md-button type="submit" ng-disabled="applicationForm.$invalid">NEXT</md-button>\n          </div>\n        </md-step-actions>\n      </form>\n    </md-content>\n  </md-step-body>\n</md-step>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-step label="Security" md-complete="$ctrl.parent.steps[1].completed">\n  <md-step-body>\n    <md-content layout-padding class="gv-creation-content">\n      <form name="applicationForm" ng-submit="$ctrl.parent.next()">\n        <div class="gv-form" ng-if="$ctrl.parent.clientRegistrationEnabled()">\n          <div class="gv-form-content" layout="column">\n            <div layout="row" layout-margin layout-align="center center">\n              <div\n                flex="20"\n                layout="column"\n                class="application-type-box"\n                ng-class="{\'application-type-box-selected\' : type.id === $ctrl.selectedType.id, \'application-type-box-unselected\' : type.id !== $ctrl.selectedType.id}"\n                ng-click="$ctrl.selectType(type)"\n                ng-repeat="type in $ctrl.parent.enabledApplicationTypes"\n              >\n                <ng-md-icon class="icon" size="48" icon="{{::type.icon}}"></ng-md-icon>\n                <span class="title">{{::type.name}}</span>\n                <span class="description">{{::type.description}}</span>\n              </div>\n            </div>\n          </div>\n\n          <div ng-if="$ctrl.selectedType.isOauth()">\n            <div class="gv-form-content" layout="column" ng-if="$ctrl.selectedType.allowed_grant_types">\n              <md-input-container class="md-block">\n                <label>Allowed grant types</label>\n                <md-select\n                  ng-model="$ctrl.parent.application.settings.oauth.grant_types"\n                  ng-change="$ctrl.updateGrantTypes()"\n                  multiple\n                  required\n                >\n                  <md-option\n                    ng-value="grantType.type"\n                    ng-repeat="grantType in $ctrl.selectedType.allowed_grant_types"\n                    ng-disabled="$ctrl.selectedType.isGrantTypeMandatory(grantType)"\n                  >\n                    {{::grantType.name}}\n                  </md-option>\n                </md-select>\n                <div class="hint">Grant types allowed for the client. Please set only grant types you need for security reasons.</div>\n              </md-input-container>\n\n              <md-input-container class="md-block" ng-if="$ctrl.displayRedirectUris()">\n                <label>Redirect URIs *</label>\n                <md-chips\n                  required\n                  md-add-on-blur="true"\n                  ng-model="$ctrl.parent.application.settings.oauth.redirect_uris"\n                  placeholder="Enter a redirect URI"\n                  md-on-remove="$ctrl.applicationForm.$setDirty()"\n                  ng-click="applicationForm.$setDirty()"\n                ></md-chips>\n                <div class="hint">URIs where the authorization server will send OAuth responses</div>\n              </md-input-container>\n            </div>\n          </div>\n        </div>\n\n        <div class="gv-form" ng-if="$ctrl.displaySimpleAppConfig()">\n          <div class="gv-form-content" layout="column">\n            <md-input-container class="md-block">\n              <label>Type</label>\n              <input ng-model="$ctrl.parent.application.settings.app.type" type="text" name="type" />\n              <div class="hint" ng-if="applicationForm.type.$valid || applicationForm.type.$pristine">\n                Type of the application (mobile, web, ...).\n              </div>\n            </md-input-container>\n\n            <md-input-container class="md-block" flex="50">\n              <label>Client ID</label>\n              <input\n                ng-model="$ctrl.parent.application.settings.app.client_id"\n                type="text"\n                name="clientId"\n                minlength="1"\n                md-maxlength="300"\n              />\n              <div class="hint" ng-if="applicationForm.clientId.$valid || applicationForm.clientId.$pristine">\n                The <code>Client_id</code> of the application. This field is required to subscribe to certain type of API Plan (OAuth2,\n                JWT).\n              </div>\n              <div ng-messages="applicationForm.clientId.$error">\n                <div ng-message="minlength">The name has to be more than 1 characters long.</div>\n                <div ng-message="md-maxlength">The name has to be less than 300 characters long.</div>\n              </div>\n            </md-input-container>\n          </div>\n        </div>\n        <md-step-actions layout="row">\n          <div flex>\n            <md-button ng-click="$ctrl.parent.previous()">PREVIOUS</md-button>\n          </div>\n          <div flex layout="row" layout-align="end top">\n            <md-button ng-click="$ctrl.parent.next()" ng-disabled="applicationForm.$dirty" ng-if="!$ctrl.parent.clientRegistrationEnabled()"\n              >SKIP</md-button\n            >\n            <md-button type="submit" ng-disabled="applicationForm.$invalid">NEXT</md-button>\n          </div>\n        </md-step-actions>\n      </form>\n    </md-content>\n  </md-step-body>\n</md-step>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-step label="Subscriptions" md-complete="$ctrl.parent.steps[2].completed">\n  <md-step-body>\n    <div layout="column" layout-align="space-around center" class="layout-padding">\n      <div layout="row" layout-align="space-around center" class="layout-padding" style="width: 100%">\n        <md-autocomplete\n          md-input-id="new-view-apis-autocomplete-id"\n          flex="70"\n          md-search-text="$ctrl.filterAPI"\n          md-selected-item-change="$ctrl.onSelectAPI(api)"\n          md-items="api in $ctrl.parent.apis | filter:$ctrl.filterAPI"\n          md-item-text="api.name"\n          placeholder="Select an API to subscribe"\n          md-autofocus="false"\n          md-min-length="0"\n          md-no-cache="true"\n          md-menu-class="autocomplete-custom-template"\n        >\n          <md-item-template>\n            <md-list-item class="md-2-line contact-item">\n              <div class="md-list-item-text" style="margin: 15px 0">\n                <h3>{{api.name}} <small>{{api.version}}</small></h3>\n              </div>\n            </md-list-item>\n          </md-item-template>\n          <md-not-found> No API matching "{{$ctrl.filterAPI}}" were found. </md-not-found>\n        </md-autocomplete>\n      </div>\n\n      <div class="gv-forms" style="width: 100%">\n        <div class="gv-form">\n          <div class="gv-form-content">\n            <gravitee-empty-state\n              ng-if="$ctrl.parent.selectedAPIs.length === 0 && !$ctrl.selectedAPI"\n              icon="dashboard"\n              model="API"\n              message="No API selected for your application"\n            ></gravitee-empty-state>\n\n            <div layout="row" layout-wrap class="inset" ng-if="$ctrl.parent.selectedAPIs.length > 0 && !$ctrl.selectedAPI">\n              <md-table-container style="width: 100%; min-height: 200px; text-align: center">\n                <table md-table>\n                  <thead md-head md-order="query.order">\n                    <tr md-row>\n                      <th md-column width="1%" md-order-by="name"><span>Name</span></th>\n                      <th md-column width="1%">Plans</th>\n                      <th md-column width="1%"></th>\n                    </tr>\n                  </thead>\n                  <tbody md-body>\n                    <tr md-row ng-repeat="api in $ctrl.getSelectedAPIs() track by api.id">\n                      <td md-cell nowrap>\n                        <gravitee-identity-picture\n                          image-id="api.id"\n                          image-url="::api.picture_url"\n                          image-name="api.name + \'  \' + api.version"\n                          image-width="40"\n                        ></gravitee-identity-picture>\n                        {{api.name}} ({{api.version}})\n                      </td>\n                      <td md-cell>{{api.plans}}</td>\n                      <td md-cell>\n                        <md-button class="md-icon-button" aria-label="Edit Plans" ng-click="$ctrl.onSelectAPI(api);">\n                          <ng-md-icon icon="settings"></ng-md-icon>\n                          <md-tooltip md-direction="left">Edit Plans</md-tooltip>\n                        </md-button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </md-table-container>\n            </div>\n\n            <div\n              ng-if="$ctrl.plans && $ctrl.selectedAPI"\n              layout="column"\n              flex\n              layout-align="center"\n              class="layout-padding"\n              style="overflow: auto; align-items: center"\n            >\n              <div style="width: 100%">\n                <div flex layout="row">\n                  <h4>Choose the plan that suits your business</h4>\n                  <span flex></span>\n                  <md-button class="md-icon-button" aria-label="Finish">\n                    <ng-md-icon icon="close" ng-click="$ctrl.selectedAPI = null; $ctrl.filterAPI = \'\';"></ng-md-icon>\n                  </md-button>\n                </div>\n                <md-divider></md-divider>\n                <div layout="row" layout-align="center" class="layout-padding" flex layout-wrap>\n                  <api-plan\n                    ng-repeat="plan in $ctrl.plans"\n                    plan="plan"\n                    subscribable="true"\n                    unsubscribable="true"\n                    on-subscribe="$ctrl.parent.onSubscribe($ctrl.selectedAPI, plan)"\n                    on-unsubscribe="$ctrl.parent.onUnsubscribe($ctrl.selectedAPI, plan)"\n                  ></api-plan>\n                  <h3 ng-if="$ctrl.plans.length === 0">\n                    There is no published plan for this API that you can subscribe with this type of application\n                  </h3>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <md-step-actions layout="row">\n      <div flex>\n        <md-button ng-click="$ctrl.parent.previous()">PREVIOUS</md-button>\n      </div>\n      <div flex layout="row" layout-align="end top">\n        <md-button ng-click="$ctrl.parent.next()" ng-disabled="$ctrl.parent.selectedPlans.length">SKIP</md-button>\n        <md-button ng-click="$ctrl.parent.next()" ng-disabled="!$ctrl.parent.selectedPlans.length">NEXT</md-button>\n      </div>\n    </md-step-actions>\n  </md-step-body>\n</md-step>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-step label="Validation" md-complete="$ctrl.parent.steps[3].completed">\n  <md-step-body>\n    <md-content flex layout-padding class="gv-abstract-content gv-creation-content">\n      <h5>\n        Application\n        <a ng-click="$ctrl.parent.goToStep(0)">\n          <md-tooltip>Jump to general edition</md-tooltip>\n          <ng-md-icon icon="mode_edit" size="20"></ng-md-icon>\n        </a>\n      </h5>\n      <p>You are about to create the application <code>{{$ctrl.parent.application.name}}</code>.</p>\n      <h5>\n        Security\n        <a ng-click="$ctrl.parent.goToStep(1)">\n          <md-tooltip>Jump to security edition</md-tooltip>\n          <ng-md-icon icon="mode_edit" size="20"></ng-md-icon>\n        </a>\n      </h5>\n      <p>The application type is <code>{{$ctrl.parent.applicationType}}</code>.</p>\n      <p ng-if="$ctrl.parent.application.settings.app.client_id">\n        The client id will be <code>{{$ctrl.parent.application.settings.app.client_id}}</code>.\n      </p>\n      <h5>\n        Subscriptions\n        <a ng-click="$ctrl.parent.goToStep(2)">\n          <md-tooltip>Jump to subscriptions edition</md-tooltip>\n          <ng-md-icon icon="mode_edit" size="20"></ng-md-icon>\n        </a>\n      </h5>\n      <p ng-bind-html="$ctrl.parent.getReadableApiSubscriptions()"></p>\n      <h5>Confirmation</h5>\n      <p style="padding-top: 0px">\n        You can now\n        <strong><md-button class="md-raised" ng-click="$ctrl.parent.clickOnCreate()">create the APPLICATION</md-button></strong> and start\n        to consume APIs.\n      </p>\n\n      <div layout="row">\n        <a ng-href="{{$ctrl.url}}" target="_blank" class="gv-abstract-documentation-link" flex\n          >To go further on APPLICATION configuration, please consult <strong>APPLICATION Management documentation</strong></a\n        >\n      </div>\n    </md-content>\n  </md-step-body>\n</md-step>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div layout="column" flex>\n  <div layout="row" layout-align="start center">\n    <div class="gravitee-application-header-image" layout="column" layout-align="center center"></div>\n    <div flex="70">\n      <h1>\n        {{$ctrl.application.name}}\n        <small ng-if="$ctrl.application.type" style="color: grey">( {{$ctrl.application.type}} )</small>\n        <md-button ng-if="!$ctrl.hideSubscribeLink" class="md-primary" ui-sref="management.applications.application.subscriptions.subscribe"\n          >Subscribe to APIs</md-button\n        >\n      </h1>\n      <md-content flex class="gravitee-api-header-description">\n        <div class="gravitee-api-header-read-more" read-more ng-model="$ctrl.application.description" words="false" length="150"></div>\n      </md-content>\n    </div>\n\n    <div flex="30" style="text-align: right">\n      <p style="padding: 0; margin: 0">\n        <span>{{$ctrl.application.owner.displayName}}<md-tooltip md-direction="left">Owner</md-tooltip></span>\n        <span><ng-md-icon icon="person"></ng-md-icon></span>\n      </p>\n      <p style="padding: 0; margin: 0">\n        <span>{{$ctrl.application.created_at | humanDateFilter}}<md-tooltip md-direction="left">Created at</md-tooltip></span>\n        <span><ng-md-icon icon="timer"></ng-md-icon></span>\n      </p>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<form name="formApplication" ng-submit="$ctrl.update()" novalidate>\n  <div class="gv-forms" layout="column" permission permission-only="\'application-definition-r\'">\n    <application-header application="$ctrl.application"></application-header>\n    <div class="gv-form">\n      <h2>General</h2>\n      <div class="gv-form-content" layout="column">\n        <div layout-gt-sm="row">\n          <div layout="column" flex>\n            <div layout-gt-sm="row">\n              <md-input-container flex>\n                <label>Name</label>\n                <input ng-model="$ctrl.application.name" type="text" name="name" md-maxlength="512" required />\n                <div class="hint" ng-if="formApplication.name.$valid || formApplication.name.$pristine">Application name</div>\n                <div ng-messages="formApplication.name.$error">\n                  <div ng-message="required">Application name is required.</div>\n                  <div ng-message="md-maxlength">The name has to be less than 50 characters long.</div>\n                </div>\n              </md-input-container>\n\n              <md-input-container ng-if="!$ctrl.isOAuthClient()">\n                <label>Type</label>\n                <input ng-model="$ctrl.application.settings.app.type" type="text" name="type" />\n                <div class="hint" ng-if="formApplication.type.$valid || formApplication.type.$pristine">\n                  Type of the application (mobile, web, ...).\n                </div>\n              </md-input-container>\n            </div>\n\n            <md-input-container>\n              <label>Description</label>\n              <input ng-model="$ctrl.application.description" type="text" name="description" required />\n              <div class="hint" ng-if="formApplication.description.$valid || formApplication.description.$pristine">\n                Provide a description of your application, what it does, ...\n              </div>\n              <div ng-messages="formApplication.description.$error">\n                <div ng-message="required">Application description is required.</div>\n              </div>\n            </md-input-container>\n\n            <md-input-container>\n              <label>Domain</label>\n              <input ng-model="$ctrl.application.domain" type="text" name="domain" />\n              <div class="hint" ng-if="formApplication.domain.$valid || formApplication.domain.$pristine">\n                The domain your application will use, if relevant.\n              </div>\n            </md-input-container>\n          </div>\n          <gravitee-image\n            image-id="$ctrl.application.id"\n            image="$ctrl.application.picture"\n            image-url="$ctrl.application.picture_url"\n            success-event-name="applicationPictureChangeSuccess"\n            image-name="$ctrl.application.name + \'  \' + $ctrl.application.type + \'  \' + $ctrl.application.owner.displayName"\n            can-delete="true"\n            delete-label="Use default"\n          ></gravitee-image>\n\n          <gravitee-image\n            image-id="\'bg-\' + $ctrl.application.id"\n            image="$ctrl.application.background"\n            image-url="$ctrl.application.background_url"\n            change-label="Change background"\n            no-default-image="true"\n            success-event-name="applicationBackgroundChangeSuccess"\n            image-name="\'bg-\' + $ctrl.application.name + \'  \' + $ctrl.application.type + \'  \' + $ctrl.application.owner.displayName"\n            can-delete="true"\n            delete-label="Use default"\n          ></gravitee-image>\n        </div>\n        <div layout="row">\n          <md-input-container class="md-block" flex>\n            <label>Owner</label>\n            <input type="text" disabled value="{{$ctrl.application.owner.displayName}}" />\n          </md-input-container>\n          <md-input-container class="md-block" flex>\n            <label>Created at</label>\n            <input type="text" disabled value="{{$ctrl.application.created_at | humanDateFilter}}" />\n          </md-input-container>\n        </div>\n      </div>\n    </div>\n\n    <div ng-if="!$ctrl.isOAuthClient()">\n      <h2>OAuth2 Integration</h2>\n      <div class="gv-form-content" layout="column">\n        <md-input-container>\n          <label>Client ID</label>\n          <input ng-model="$ctrl.application.settings.app.client_id" type="text" name="clientId" minlength="1" md-maxlength="300" />\n          <div class="hint" ng-if="formApplication.clientId.$valid || formApplication.clientId.$pristine">\n            The <code>Client_id</code> of the application. This field is required to subscribe to certain type of API Plan (OAuth2, JWT).\n          </div>\n          <div ng-messages="formApplication.clientId.$error">\n            <div ng-message="minlength">The name has to be more than 1 character long.</div>\n            <div ng-message="md-maxlength">The name has to be less than 300 characters long.</div>\n          </div>\n        </md-input-container>\n      </div>\n    </div>\n\n    <div ng-if="$ctrl.isOAuthClient()">\n      <h2>OpenID Connect Integration</h2>\n      <div class="gv-form-content" layout="column">\n        <div layout="row">\n          <md-input-container flex="40">\n            <label>Client ID</label>\n            <input ng-model="$ctrl.application.settings.oauth.client_id" type="text" readonly />\n          </md-input-container>\n\n          <span flex>\n            <md-tooltip md-direction="right">Copy to clipboard</md-tooltip>\n            <ng-md-icon\n              icon="content_copy"\n              ngclipboard\n              data-clipboard-text="{{$ctrl.application.settings.oauth.client_id}}"\n              ngclipboard-success="$ctrl.onCopyClientIdSuccess(e);"\n              role="button"\n            >\n            </ng-md-icon>\n          </span>\n\n          <md-input-container flex="40">\n            <label>Client Secret</label>\n            <input ng-model="$ctrl.application.settings.oauth.client_secret" type="text" readonly />\n          </md-input-container>\n\n          <span flex>\n            <md-tooltip md-direction="right">Copy to clipboard</md-tooltip>\n            <ng-md-icon\n              icon="content_copy"\n              ngclipboard\n              data-clipboard-text="{{$ctrl.application.settings.oauth.client_secret}}"\n              ngclipboard-success="$ctrl.onCopyClientSecretSuccess(e);"\n              role="button"\n            >\n            </ng-md-icon>\n          </span>\n\n          <md-button\n            class="md-raised md-primary"\n            type="button"\n            style="height: 36px"\n            ng-if="$ctrl.application.settings.oauth.renew_client_secret_supported"\n            ng-click="$ctrl.renewClientSecret($event)"\n            permission\n            permission-only="\'application-definition-u\'"\n          >\n            Renew secret\n          </md-button>\n        </div>\n\n        <md-input-container class="md-block">\n          <label>Allowed grant types</label>\n          <md-select ng-model="$ctrl.application.settings.oauth.grant_types" ng-change="$ctrl.updateGrantTypes()" multiple required>\n            <md-option\n              ng-value="grantType.type"\n              ng-repeat="grantType in $ctrl.applicationType.allowed_grant_types"\n              ng-disabled="$ctrl.applicationType.isGrantTypeMandatory(grantType)"\n            >\n              {{::grantType.name}}\n            </md-option>\n          </md-select>\n          <div class="hint">Grant types allowed for the client. Please set only grant types you need for security reasons.</div>\n        </md-input-container>\n\n        <md-input-container class="md-block" ng-if="$ctrl.applicationType.requires_redirect_uris">\n          <label>Redirect URIs</label>\n          <md-chips\n            required\n            ng-model="$ctrl.application.settings.oauth.redirect_uris"\n            placeholder="Enter a redirect URI"\n            ng-click="$ctrl.formApplication.$setDirty()"\n            md-add-on-blur="true"\n            md-on-remove="$ctrl.formApplication.$setDirty()"\n          ></md-chips>\n          <div class="hint">URIs where the authorization server will send OAuth responses</div>\n        </md-input-container>\n      </div>\n    </div>\n\n    <div class="gv-form">\n      <h2>Access-Control</h2>\n      <div class="gv-form-content" layout="column">\n        <md-input-container>\n          <label>Groups</label>\n          <md-select\n            aria-label="group"\n            ng-model="$ctrl.application.groups"\n            multiple\n            ng-disabled="!($ctrl.groups && $ctrl.groups.length > 0)"\n          >\n            <md-option ng-value="group.id" ng-repeat="group in $ctrl.groups">{{group.name}}</md-option>\n          </md-select>\n        </md-input-container>\n      </div>\n    </div>\n\n    <div class="md-actions gravitee-api-save-button" layout="row" ng-if="$ctrl.application.status !==\'ARCHIVED\'">\n      <md-button\n        class="md-raised md-primary"\n        type="submit"\n        ng-disabled="formApplication.$invalid || formApplication.$pristine"\n        permission\n        permission-only="\'application-definition-u\'"\n      >\n        Save\n      </md-button>\n      <md-button\n        class="md-raised"\n        type="button"\n        ng-click="$ctrl.reset()"\n        ng-disabled="formApplication.$invalid || formApplication.$pristine"\n        permission\n        permission-only="\'application-definition-u\'"\n      >\n        Reset\n      </md-button>\n      <md-button\n        class="md-raised md-warn"\n        type="button"\n        ng-click="$ctrl.showDeleteApplicationConfirm($event)"\n        permission\n        permission-only="\'application-definition-d\'"\n      >\n        Delete\n      </md-button>\n    </div>\n  </div>\n</form>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Add member" layout-padding flex="30">\n  <md-dialog-content class="searchMembers">\n    <form name="formMember" ng-submit="$event.preventDefault()">\n      <gv-user-autocomplete users-selected="usersSelected" user-filter-fn="userFilterFn"></gv-user-autocomplete>\n\n      <div ng-show="usersSelected.length > 0">\n        <md-subheader class="md-no-sticky">Select role</md-subheader>\n        <md-input-container class="md-block">\n          <label>Role</label>\n          <md-select ng-model="role" required>\n            <md-option ng-repeat="role in roles" ng-value="role" ng-disabled="role.system"> {{role.name}} </md-option>\n          </md-select>\n        </md-input-container>\n      </div>\n    </form>\n  </md-dialog-content>\n\n  <md-dialog-actions layout="row">\n    <md-button ng-click="hide()"> Cancel </md-button>\n    <md-button\n      type="submit"\n      class="md-raised md-primary"\n      ng-click="addMembers()"\n      ng-disabled="formMember.$invalid || usersSelected.length === 0"\n    >\n      Add\n    </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Transfer Application">\n  <md-dialog-content layout-padding>\n    <h4>Transfer Application</h4>\n    <p>\n      This action cannot be undone. If you are the primary owner of this Application, your role will be set to\n      <code>{{$ctrl.newRole.name}}</code>.\n    </p>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="cancel()"> Cancel </md-button>\n    <md-button ng-click="transferOwnership()" class="md-raised md-warn"> I understand, transfer this Application </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms" layout="column">\n  <application-header application="$ctrl.application"></application-header>\n  <div class="gv-form">\n    <h2>Members</h2>\n    <div class="gv-form-content" layout="column">\n      <md-checkbox\n        ng-model="$ctrl.application.disable_membership_notifications"\n        ng-true-value="false"\n        ng-false-value="true"\n        aria-label="Enables notifications when members are added to this application"\n        ng-change="$ctrl.toggleDisableMembershipNotifications()"\n      >\n        Enables notifications when members are added to this application\n      </md-checkbox>\n      <md-table-container ng-show="$ctrl.members.length">\n        <table md-table class="gv-table-dense">\n          <thead md-head md-order="order">\n            <tr md-row>\n              <th md-column width="1%" nowrap></th>\n              <th md-column order-by="lastname">Member</th>\n              <th md-column order-by="type">Role</th>\n              <th md-column></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="member in $ctrl.members | orderBy: order">\n              <td md-cell>\n                <gravitee-identity-picture\n                  image-id="member.id"\n                  image-url="$ctrl.getMembershipAvatar(member)"\n                  image-name="$ctrl.getMembershipDisplay(member)"\n                  image-width="40"\n                  image-border-radius="true"\n                  class="md-avatar"\n                ></gravitee-identity-picture>\n              </td>\n              <td md-cell>\n                <md-list-item class="md-2-line contact-item">\n                  <div class="md-list-item-text compact">\n                    <span ng-if="member.role == \'PRIMARY_OWNER\'"><b>{{$ctrl.getMembershipDisplay(member)}}</b></span>\n                    <span ng-if="member.role != \'PRIMARY_OWNER\'">{{$ctrl.getMembershipDisplay(member)}}</span>\n                  </div>\n                </md-list-item>\n              </td>\n              <td md-cell permission permission-only="\'application-member-u\'">\n                <md-select\n                  ng-model="member.role"\n                  ng-change="$ctrl.updateMember(member)"\n                  ng-disabled="member.role == \'PRIMARY_OWNER\'"\n                  aria-label="Update member role"\n                >\n                  <md-option ng-value="role.name" ng-repeat="role in $ctrl.roles" ng-disabled="role.system">{{role.name}}</md-option>\n                </md-select>\n              </td>\n              <td md-cell permission permission-except="\'application-member-u\'">\n                <span>{{member.role}}</span>\n              </td>\n              <td md-cell>\n                <div>\n                  <ng-md-icon\n                    ng-if="member.role != \'PRIMARY_OWNER\'"\n                    ng-click="$ctrl.showDeleteMemberConfirm($event, member)"\n                    icon="delete"\n                    size="24"\n                    style="cursor: pointer"\n                    permission\n                    permission-only="\'application-member-d\'"\n                  ></ng-md-icon>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n      <gravitee-empty-state\n        ng-if="!$ctrl.members.length"\n        icon="group"\n        model="Member"\n        message="Members will appear here"\n        sub-message="Start attaching a member"\n        create-mode="true"\n      ></gravitee-empty-state>\n\n      <div ng-style="!$ctrl.members.length && {\'text-align\':\'center\'}">\n        <md-button\n          permission\n          permission-only="\'application-member-c\'"\n          ng-class="{\'md-fab-bottom-right\': $ctrl.members.length}"\n          class="md-fab"\n          aria-label="Add"\n          ng-click="$ctrl.showAddMemberModal($event)"\n        >\n          <ng-md-icon icon="add"></ng-md-icon>\n        </md-button>\n      </div>\n    </div>\n  </div>\n\n  <div class="gv-form" ng-if="$ctrl.isAllowedToTransferOwnership()" permission permission-only="\'application-member-u\'">\n    <h2>Transfer ownership</h2>\n    <div class="gv-form-content" layout="column">\n      <p>Give full access to this application to an other user.</p>\n      <gv-user-autocomplete\n        users-selected="$ctrl.usersSelected"\n        place-holder="\'Select a user\'"\n        single-user="true"\n        user-filter-fn="$ctrl.userFilterFn"\n        default-users-list="$ctrl.defaultUsersList"\n      >\n      </gv-user-autocomplete>\n\n      <md-input-container>\n        <label>New Role for the current Primary Owner</label>\n        <md-select ng-model="$ctrl.newPORole">\n          <md-option ng-value="role" ng-repeat="role in $ctrl.newPORoles">{{role.name}}</md-option>\n        </md-select>\n      </md-input-container>\n      <div class="md-actions gravitee-api-save-button" layout="row">\n        <md-button\n          ng-disabled="!$ctrl.usersSelected || !$ctrl.usersSelected[0]"\n          class="md-raised md-primary"\n          ng-click="$ctrl.showTransferOwnershipConfirm($event)"\n          >Transfer</md-button\n        >\n      </div>\n    </div>\n  </div>\n\n  <div class="gv-form" ng-repeat="grp in $ctrl.groupIdsWithMembers">\n    <h2>{{$ctrl.groupMembers[grp].length}} members inherited from "{{$ctrl.groupById[grp].name}}"</h2>\n    <div class="gv-form-content" layout="column">\n      <div layout="row" layout-align="start end">\n        <div\n          style="margin-bottom: 5px"\n          ng-model="$ctrl.displayGroups[grp]"\n          ng-if="!$ctrl.displayGroups[grp]"\n          ng-click="$ctrl.displayGroups[grp]=true"\n        >\n          <a>Show</a>\n        </div>\n        <div\n          style="margin-bottom: 5px"\n          ng-model="$ctrl.displayGroups[grp]"\n          ng-if="$ctrl.displayGroups[grp]"\n          ng-click="$ctrl.displayGroups[grp]=false"\n        >\n          <a>Hide</a>\n        </div>\n      </div>\n      <md-content style="background: none" ng-if="$ctrl.displayGroups[grp]">\n        <md-table-container ng-show="$ctrl.groupMembers[grp].length">\n          <table md-table class="gv-table-dense">\n            <thead md-head md-order="order">\n              <tr md-row>\n                <th md-column order-by="username">Member</th>\n                <th md-column order-by="type">Role</th>\n              </tr>\n            </thead>\n            <tbody md-body>\n              <tr md-row ng-repeat="member in $ctrl.groupMembers[grp] | orderBy: order">\n                <td md-cell>{{$ctrl.getMembershipDisplay(member)}}</td>\n                <td md-cell>{{member.roles["APPLICATION"]}}</td>\n              </tr>\n            </tbody>\n          </table>\n        </md-table-container>\n      </md-content>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="application-subscriptions gv-forms gv-forms-fluid" layout="column">\n  <application-header application="$ctrl.application"></application-header>\n\n  <form ng-submit="$ctrl.doFilter()" name="$ctrl.subscriptionsFiltersForm">\n    <div layout-gt-sm="row">\n      <md-input-container class="md-block" flex-gt-sm flex="40">\n        <label>Api</label>\n        <md-select ng-model="$ctrl.filter.apis" placeholder="Apis" multiple>\n          <md-option ng-value="subscriber.id" ng-repeat="subscriber in $ctrl.subscribers track by subscriber.id"\n            >{{ subscriber.name }}\n          </md-option>\n        </md-select>\n      </md-input-container>\n      <md-input-container class="md-block" flex-gt-sm flex="40">\n        <label>Status</label>\n        <md-select ng-model="$ctrl.filter.status" placeholder="Status" multiple>\n          <md-option ng-value="key" ng-repeat="(key, value) in $ctrl.status">{{ value }}</md-option>\n        </md-select>\n      </md-input-container>\n      <md-input-container class="md-block" flex-gt-sm flex="20">\n        <label>API key</label>\n        <input ng-model="$ctrl.filter.apiKey" />\n      </md-input-container>\n      <div>\n        <md-button type="submit" class="md-raised md-primary"> Search </md-button>\n        <md-button type="button" class="md-raised" ng-click="$ctrl.clearFilter()" ng-disabled="!$ctrl.hasFilter()"> Clear </md-button>\n      </div>\n    </div>\n  </form>\n\n  <div ng-if="$ctrl.application.api_key_mode !== \'SHARED\'">\n    <application-subscriptions-list\n      list-label="\'Subscriptions\'"\n      application="$ctrl.application"\n      subscribers="$ctrl.subscribers"\n      filter-event="$ctrl.$filterEvent"\n      subscriptions="$ctrl.exclusiveSubscriptions"\n    ></application-subscriptions-list>\n  </div>\n\n  <div ng-if="$ctrl.application.api_key_mode === \'SHARED\'">\n    <application-subscriptions-list\n      list-label="\'Subscriptions\'"\n      application="$ctrl.application"\n      subscribers="$ctrl.subscribers"\n      filter-event="$ctrl.$filterEvent"\n      subscriptions="$ctrl.exclusiveSubscriptions"\n      security-types="[\'OAUTH2\',\'JWT\']"\n    ></application-subscriptions-list>\n    <application-subscriptions-list\n      list-label="\'Subscriptions using shared API Key\'"\n      application="$ctrl.application"\n      subscribers="$ctrl.subscribers"\n      filter-event="$ctrl.$filterEvent"\n      security-types="[\'API_KEY\']"\n      subscriptions="$ctrl.sharedSubscriptions"\n      query-params-prefix="\'shared_\'"\n    ></application-subscriptions-list>\n  </div>\n\n  <div class="empty-list" ng-if="$ctrl.exclusiveSubscriptions.data.length === 0 && $ctrl.sharedSubscriptions.data.length === 0">\n    <gravitee-empty-state icon="vpn_key" model="Subscription" message="Application\'s subscriptions will appear here"></gravitee-empty-state>\n    <md-button class="subscribe-button md-raised" ui-sref="management.applications.application.subscriptions.subscribe"\n      >Start playing with APIs</md-button\n    >\n  </div>\n\n  <div ng-if="$ctrl.areSharedApiKeysDisplayed()">\n    <api-keys application="$ctrl.application" />\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms" layout="column">\n  <application-header application="$ctrl.application"></application-header>\n  <div class="gv-forms-header">\n    <a ui-sref="management.applications.application.subscriptions.list($ctrl.backStateParams)">Back to subscriptions</a>\n  </div>\n\n  <div class="gv-form">\n    <h2>Subscription</h2>\n    <div class="gv-form-content" layout="column">\n      <md-table-container>\n        <table md-table>\n          <tbody md-body>\n            <tr md-row style="height: 30px">\n              <td md-cell><span style="font-weight: bold">ID</span></td>\n              <td md-cell>{{$ctrl.subscription.id}}</td>\n              <td md-cell><span style="font-weight: bold">Created at</span></td>\n              <td md-cell>{{$ctrl.subscription.created_at | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n            </tr>\n            <tr md-row style="height: 30px">\n              <td md-cell><span style="font-weight: bold">API</span></td>\n              <td md-cell><span style="font-weight: bold">{{$ctrl.subscription.api.name}}</span></td>\n              <td md-cell><span style="font-weight: bold">Processed at</span></td>\n              <td md-cell>{{$ctrl.subscription.processed_at || \'-\' | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n            </tr>\n            <tr md-row style="height: 30px" ng-if="\'REJECTED\' !== $ctrl.subscription.status">\n              <td md-cell><span style="font-weight: bold">Plan</span></td>\n              <td md-cell>\n                <span style="font-weight: bold">{{$ctrl.subscription.plan.name}}</span> ({{$ctrl.subscription.plan.security}})\n              </td>\n              <td md-cell><span style="font-weight: bold">Starting at</span></td>\n              <td md-cell>{{$ctrl.subscription.starting_at || \'-\' | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n            </tr>\n            <tr md-row style="height: 30px" ng-if="\'REJECTED\' !== $ctrl.subscription.status">\n              <td md-cell><span style="font-weight: bold">Status</span></td>\n              <td md-cell>{{$ctrl.subscription.status|uppercase}}</td>\n              <td md-cell><span style="font-weight: bold">Ending at</span></td>\n              <td md-cell>{{$ctrl.subscription.ending_at || \'-\' | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n            </tr>\n            <tr md-row style="height: 30px" ng-if="\'REJECTED\' === $ctrl.subscription.status">\n              <td md-cell><span style="font-weight: bold">Status</span></td>\n              <td md-cell>{{$ctrl.subscription.status|uppercase}}</td>\n              <td md-cell><span style="font-weight: bold">Closed at</span></td>\n              <td md-cell>{{$ctrl.subscription.closed_at | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n            </tr>\n            <tr md-row style="height: 30px" ng-if="$ctrl.subscription.request">\n              <td md-cell><span style="font-weight: bold">Message from subscriber</span></td>\n              <td md-cell colspan="3">{{$ctrl.subscription.request}}</td>\n            </tr>\n            <tr md-row style="height: 30px" ng-if="$ctrl.subscription.reason">\n              <td md-cell><span style="font-weight: bold">Message to subscriber</span></td>\n              <td md-cell colspan="3">{{$ctrl.subscription.reason}}</td>\n            </tr>\n            <tr md-row style="height: 30px" ng-if="\'REJECTED\' !== $ctrl.subscription.status && $ctrl.subscription.closed_at">\n              <td md-cell><span style="font-weight: bold">Closed at</span></td>\n              <td md-cell colspan="3">{{$ctrl.subscription.closed_at | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n            </tr>\n            <tr md-row style="height: 30px" ng-if="\'REJECTED\' !== $ctrl.subscription.status && $ctrl.subscription.paused_at">\n              <td md-cell><span style="font-weight: bold">Paused at</span></td>\n              <td md-cell colspan="3">{{$ctrl.subscription.paused_at | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n            </tr>\n            <tr md-row style="height: 30px">\n              <td md-cell><span style="font-weight: bold">Subscribed by</span></td>\n              <td md-cell colspan="3">{{$ctrl.subscription.subscribed_by.displayName}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <div\n        class="md-actions gravitee-api-save-button"\n        layout="row"\n        ng-if="$ctrl.subscription.status === \'ACCEPTED\' || $ctrl.subscription.status === \'PENDING\' || $ctrl.subscription.status === \'PAUSED\'"\n      >\n        <md-button class="md-raised md-warn" ng-click="$ctrl.close()" permission permission-only="\'application-subscription-d\'">\n          <ng-md-icon icon="not_interested" style="fill: white"></ng-md-icon>\n          Close\n        </md-button>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class="gv-form"\n    ng-if="$ctrl.subscription.status === \'PENDING\' && $ctrl.keys.length > 0\n          || $ctrl.subscription.status !== \'PENDING\' && $ctrl.subscription.status !== \'REJECTED\' && $ctrl.subscription.plan.security === \'API_KEY\'"\n  >\n    <api-keys list_event="$ctrl.$listApiKeysEvent" application="$ctrl.application" subscription="$ctrl.subscription" />\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <application-header application="$ctrl.application"></application-header>\n  <div layout="row">\n    <h1 flex>Overview</h1>\n    <div layout="row" ng-if="$ctrl.dashboards.length">\n      <label style="padding: 27px">Select a dashboard</label>\n      <md-input-container>\n        <md-select ng-model="$ctrl.dashboard" ng-change="$ctrl.onDashboardChanged()" aria-label="Dashboard selection">\n          <md-option ng-repeat="dashboard in $ctrl.dashboards" ng-value="dashboard"> {{dashboard.name}} </md-option>\n        </md-select>\n      </md-input-container>\n    </div>\n  </div>\n\n  <div class="gv-form">\n    <gv-dashboard model="$ctrl.dashboard" on-view-log-click="$ctrl.viewLogs()" access-logs="true"></gv-dashboard>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <application-header application="$ctrl.application"></application-header>\n  <div class="gv-form">\n    <h2>Logs</h2>\n    <div class="gv-form-content" layout="column">\n      <div layout="row">\n        <gv-logs-timeframe on-timeframe-change="$ctrl.timeframeChange(timeframe)" flex></gv-logs-timeframe>\n        <div style="margin: auto">\n          <md-button\n            type="button"\n            class="md-raised"\n            ng-click="$ctrl.exportAsCSV()"\n            ng-disabled="!$ctrl.logs.logs || $ctrl.logs.logs.length === 0"\n          >\n            Export as CSV\n          </md-button>\n        </div>\n      </div>\n\n      <gv-logs-filters context="application" on-filters-change="$ctrl.filtersChange(filters)" metadata="$ctrl.metadata"></gv-logs-filters>\n\n      <md-table-container layout-padding>\n        <table md-table class="gravitee-analytics-top-hits-table gv-table-dense">\n          <thead md-head md-order="$ctrl.query.field">\n            <tr md-row>\n              <th md-column width="1%" md-order-by="@timestamp" nowrap>Date</th>\n              <th md-column width="1%" md-order-by="status" nowrap>Status</th>\n              <th md-column width="1%" nowrap>API</th>\n              <th ng-if="$ctrl.Constants.org.settings.logging.user.displayed" md-column width="1%" md-order-by="user" nowrap>User</th>\n              <th md-column width="1%" nowrap>Plan</th>\n              <th md-column width="1%" md-order-by="method" nowrap>Method</th>\n              <th md-column md-order-by="path">Path</th>\n              <th md-column width="1%" md-order-by="response-time" md-numeric nowrap>Response time</th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr\n              ng-if="$ctrl.logs.logs.length > 0"\n              md-row\n              ng-repeat="log in $ctrl.logs.logs | limitTo: $ctrl.query.size"\n              md-auto-select\n              md-select="log"\n              md-select-id="key"\n              ng-class="{\'log-error\': log.status >= 400}"\n            >\n              <td md-cell nowrap>\n                <a\n                  ui-sref="management.applications.application.logs.log({\n          logId: log.id,\n          timestamp: log.timestamp,\n          from: $ctrl.query.from,\n          to: $ctrl.query.to,\n          q: $ctrl.query.query,\n          page: $ctrl.query.page,\n          size: $ctrl.query.size\n          })"\n                >\n                  {{log.timestamp | date:\'yyyy-MM-dd HH:mm:ss.sss\'}}\n                </a>\n              </td>\n              <td md-cell nowrap><span class="gv-statuscode-{{log.status / 100 | number:0}}xx">{{log.status}}</span></td>\n              <td md-cell nowrap>{{$ctrl.logs.metadata[log.api].name}}</td>\n              <td ng-if="$ctrl.Constants.org.settings.logging.user.displayed" md-cell nowrap>{{log.user}}</td>\n              <td md-cell nowrap>{{$ctrl.logs.metadata[log.plan].name}}</td>\n              <td md-cell nowrap style="text-align: center">\n                <span\n                  class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{log.method | uppercase}}-selected"\n                >\n                  {{log.method | uppercase}}\n                </span>\n              </td>\n              <td md-cell>{{log.path}}</td>\n              <td md-cell nowrap>{{log.responseTime}} ms</td>\n            </tr>\n            <tr ng-if="$ctrl.logs.total === 0">\n              <td md-cell colspan="8">No log</td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <md-table-pagination\n        md-limit="$ctrl.query.size"\n        md-limit-options="[5, 10, 15, 20, 30, 50, 100]"\n        md-page="$ctrl.query.page"\n        md-total="{{$ctrl.logs.total}}"\n        md-on-paginate="$ctrl.onPaginate"\n      >\n      </md-table-pagination>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div class="md-actions" layout="row">\n  <md-button ui-sref="management.applications.application.logs.list($ctrl.backStateParams)">\n    <ng-md-icon icon="reply"></ng-md-icon>\n    <span style="color: rgba(0, 0, 0, 0.54)">Back to logs</span>\n  </md-button>\n</div>\n\n<div class="log-table" layout="row" flex layout-padding layout-align="space-around center">\n  <div layout="column" flex="33">\n    <span class="log-header" style="text-align: center">Request</span>\n    <md-table-container class="gv-log-request-header">\n      <table md-table class="gv-table-dense">\n        <tbody md-body>\n          <tr md-row style="height: 30px">\n            <td md-cell><span style="font-weight: bold">Date</span></td>\n            <td md-cell>{{$ctrl.log.timestamp | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n          </tr>\n          <tr md-row style="height: 30px">\n            <td md-cell><span style="font-weight: bold">Request ID</span></td>\n            <td md-cell>{{$ctrl.log.id}}</td>\n          </tr>\n          <tr md-row style="height: 30px">\n            <td md-cell><span style="font-weight: bold">Transaction ID</span></td>\n            <td md-cell>{{$ctrl.log.transactionId}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </md-table-container>\n  </div>\n\n  <div layout="column" flex="33">\n    <span class="log-header" style="text-align: center">Context</span>\n    <md-table-container ng-class="{\'gv-log-response-header-{{$ctrl.log.status / 100 | number:0}}\': true}">\n      <table md-table class="gv-table-dense">\n        <tbody md-body>\n          <tr md-row style="height: 30px" ng-if="$ctrl.log.apiKey">\n            <td md-cell><span style="font-weight: bold">API Key</span></td>\n            <td md-cell>{{$ctrl.log.apiKey}}</td>\n          </tr>\n          <tr md-row style="height: 30px" ng-if="$ctrl.log.api">\n            <td md-cell><span style="font-weight: bold">API</span></td>\n            <td md-cell>{{$ctrl.log.metadata[$ctrl.log.api].name}}</td>\n          </tr>\n          <tr md-row style="height: 30px" ng-if="$ctrl.log.plan">\n            <td md-cell><span style="font-weight: bold">Plan</span></td>\n            <td md-cell>{{$ctrl.log.metadata[$ctrl.log.plan].name}}</td>\n          </tr>\n          <tr md-row style="height: 30px" ng-if="$ctrl.log.user && $ctrl.Constants.org.settings.logging.user.displayed">\n            <td md-cell><span style="font-weight: bold">User</span></td>\n            <td md-cell>{{$ctrl.log.user}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </md-table-container>\n  </div>\n</div>\n\n<hr />\n\n<div class="log-table" layout="row" flex layout-padding layout-align="center">\n  <div layout="column" layout-padding style="background-color: #e1f5fe; border: 1px solid #b3e5fc" flex="50">\n    <div flex="5" layout="row" style="background-color: #b3e5fc" layout-align="center center">\n      <span class="log-header" style="text-align: center">REQUEST</span>\n    </div>\n\n    <md-table-container>\n      <table md-table class="gv-table-dense">\n        <tbody md-body>\n          <tr md-row style="height: 30px">\n            <td md-cell><span style="font-weight: bold">Method</span></td>\n            <td md-cell>\n              <span\n                class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{$ctrl.log.method | uppercase}}-selected"\n              >\n                {{$ctrl.log.method | uppercase}}\n              </span>\n            </td>\n          </tr>\n          <tr md-row style="height: 30px">\n            <td md-cell><span style="font-weight: bold">URI</span></td>\n            <td md-cell>{{$ctrl.log.uri}}</td>\n          </tr>\n          <tr md-row style="height: 30px">\n            <td md-cell><span style="font-weight: bold">Content-length</span></td>\n            <td md-cell>{{$ctrl.log.requestContentLength | number}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </md-table-container>\n\n    <md-table-container>\n      <table md-table class="gv-table-dense">\n        <tbody md-body>\n          <tr md-row ng-repeat="(key, value) in $ctrl.log.request.headers" style="height: 30px">\n            <td md-cell><span style="font-weight: bold">{{key}}</span></td>\n            <td md-cell>{{value[0]}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </md-table-container>\n\n    <br />\n\n    <div ng-if="$ctrl.log.request.body" class="log-body">\n      <div\n        ui-codemirror\n        ui-codemirror-opts="{lineNumbers: true, lineWrapping: true, readOnly: true, mode: $ctrl.getMimeType($ctrl.log.request)}"\n        ng-model="$ctrl.log.request.body"\n      ></div>\n      <button class="copy">\n        <md-tooltip md-direction="top">Copy to clipboard</md-tooltip>\n        <ng-md-icon\n          icon="content_copy"\n          ngclipboard\n          data-clipboard-text="{{$ctrl.log.request.body}}"\n          ngclipboard-success="$ctrl.onCopyBodySuccess(e);"\n          role="button"\n        ></ng-md-icon>\n      </button>\n    </div>\n  </div>\n\n  <div flex="5" layout="column" layout-align="center center"></div>\n\n  <div\n    layout="column"\n    layout-padding\n    ng-class="{\'gv-log-response-panel-{{$ctrl.log.status / 100 | number:0}}\': true}"\n    style="margin-top: 3px"\n    flex="50"\n  >\n    <div flex="5" layout="row" layout-align="center center">\n      <span class="log-header" style="text-align: center">RESPONSE</span>\n    </div>\n\n    <md-table-container>\n      <table md-table class="gv-table-dense">\n        <tbody md-body>\n          <tr md-row style="height: 30px">\n            <td md-cell><span style="font-weight: bold">Status</span></td>\n            <td md-cell><span class="gv-statuscode-{{$ctrl.log.status / 100 | number:0}}xx">{{$ctrl.log.status | number}}</span></td>\n          </tr>\n          <tr md-row style="height: 30px">\n            <td md-cell><span style="font-weight: bold">Content-length</span></td>\n            <td md-cell>{{$ctrl.log.responseContentLength | number}}</td>\n          </tr>\n          <tr md-row style="height: 30px">\n            <td md-cell><span style="font-weight: bold">Response time</span></td>\n            <td md-cell>{{$ctrl.log.responseTime | number}} ms</td>\n          </tr>\n        </tbody>\n      </table>\n    </md-table-container>\n\n    <md-table-container>\n      <table md-table class="gv-table-dense">\n        <tbody md-body>\n          <tr md-row ng-repeat="(key, value) in $ctrl.log.response.headers" style="height: 30px">\n            <td md-cell><span style="font-weight: bold">{{key}}</span></td>\n            <td md-cell>{{value[0]}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </md-table-container>\n\n    <div ng-if="$ctrl.log.response.body" class="log-body">\n      <div\n        ui-codemirror\n        ui-codemirror-opts="{lineNumbers: true, lineWrapping: true, readOnly: true, mode: $ctrl.getMimeType($ctrl.log.response)}"\n        ng-model="$ctrl.log.response.body"\n      ></div>\n      <button class="copy">\n        <md-tooltip md-direction="top">Copy to clipboard</md-tooltip>\n        <ng-md-icon\n          icon="content_copy"\n          ngclipboard\n          data-clipboard-text="{{$ctrl.log.response.body}}"\n          ngclipboard-success="$ctrl.onCopyBodySuccess(e);"\n          role="button"\n        ></ng-md-icon>\n      </button>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-sub-content" ng-if="!$ctrl._displayEmptyMode">\n  <div class="gv-forms gv-forms-fluid" layout="column">\n    <div>\n      <h1>API Gateway</h1>\n      <md-switch\n        style="margin: 0 auto"\n        ng-model="$ctrl.showHistory"\n        ng-change="switchDisplayInstances()"\n        data-testid="instances_show-history-switch"\n      >\n        Show history\n      </md-switch>\n    </div>\n\n    <div class="gv-form-content">\n      <div layout="column" ng-if="!$ctrl.showHistory">\n        <md-card class="no-box-shadow" ng-if="$ctrl.instances.content.length > 0">\n          <md-card-header>\n            <md-card-header-text layout="row" layout-align="center">\n              <div class="input-group apis-header-filter" flex="60">\n                <input\n                  class="form-control"\n                  type="text"\n                  ng-model="$ctrl.searchGatewayInstances"\n                  placeholder="Search Gateway instances..."\n                  data-testid="instances_search-gateway-textfield"\n                />\n              </div>\n            </md-card-header-text>\n          </md-card-header>\n          <md-card-content ng-if="!$ctrl._displayEmptyMode" style="padding: 0; overflow-y: auto">\n            <div layout="row" layout-wrap class="inset">\n              <div\n                class="gravitee-instances-box"\n                ng-repeat="instance in $ctrl.instances.content | filter:$ctrl.searchGatewayInstances | orderBy:\'-started_at\'"\n                data-testid="instances_instances-box"\n              >\n                <a ui-sref="management.instances.detail.environment({instanceId: instance.event})">\n                  <md-card class="gravitee-instances-box gravitee-card gravitee-api-card">\n                    <md-card-header layout="row" layout-align="end start"> </md-card-header>\n                    <md-card-content>\n                      <div class="api-box-description">\n                        <ng-md-icon icon="{{$ctrl.getOSIcon(instance.operating_system_name)}}" size="60"></ng-md-icon>\n                        <div class="api-box-name-version">\n                          <div>{{instance.hostname}}</div>\n                          <div>{{instance.ip}}:{{instance.port}}</div>\n                          <span style="font-size: 10px">v.{{instance.version | limitTo:instance.version.indexOf("(")}}</span>\n                          <span ng-if="instance.tenant" style="font-size: 10px"> - {{instance.tenant}}</span>\n                          <div ng-if="instance.tags" style="font-size: 10px">Tags: {{instance.tags.join(\', \')}}</div>\n                        </div>\n                        <div class="api-box-state" layout-padding>\n                          <span\n                            ng-class="{\'gravitee-instances-started\':instance.state === \'STARTED\',\n                                \'gravitee-instances-stopped\':instance.state === \'STOPPED\'}"\n                            >{{instance.state}}</span\n                          >\n                        </div>\n                      </div>\n                    </md-card-content>\n                  </md-card>\n                </a>\n              </div>\n            </div>\n          </md-card-content>\n        </md-card>\n      </div>\n\n      <div layout="column" ng-if="$ctrl.showHistory">\n        <div class="gv-form">\n          <div style="height: 200px">\n            <gv-dashboard on-timeframe-change="$ctrl.onTimeframeChange(timeframe)"></gv-dashboard>\n          </div>\n\n          <div class="gv-form-content" layout="column">\n            <md-table-container>\n              <table md-table class="gv-table-dense">\n                <thead md-head>\n                  <tr md-row data-testid="instances_history-table-head">\n                    <th md-column>Host</th>\n                    <th md-column>Status</th>\n                    <th md-column>Tags</th>\n                    <th md-column>Tenant</th>\n                    <th md-column>Started at</th>\n                    <th md-column>Last heartbeat</th>\n                    <th md-column>Stopped at</th>\n                  </tr>\n                </thead>\n                <tbody md-body>\n                  <tr md-row ng-repeat="instance in $ctrl.instances.content | orderBy:\'-started_at\'" style="height: 25px">\n                    <td md-cell>\n                      <ng-md-icon icon="{{$ctrl.getOSIcon(instance.operating_system_name)}}" size="24"></ng-md-icon>\n                      <a ui-sref="management.instances.detail.environment({instanceId: instance.event})">\n                        <span>{{instance.hostname}} ({{instance.ip}}:{{instance.port}}) - </span>\n                        <span style="font-size: 10px">v.{{instance.version | limitTo:instance.version.indexOf("(")}}</span>\n                      </a>\n                    </td>\n                    <td md-cell>\n                      <span\n                        ng-class="{\'gravitee-instances-started\':instance.state === \'STARTED\',\n                                    \'gravitee-instances-stopped\':instance.state === \'STOPPED\'}"\n                        >{{instance.state}}</span\n                      >\n                    </td>\n                    <td md-cell>\n                      <div ng-if="instance.tags" style="font-size: 10px">{{instance.tags.join(\', \')}}</div>\n                    </td>\n                    <td md-cell>\n                      <span ng-if="instance.tenant" style="font-size: 10px">{{instance.tenant}}</span>\n                    </td>\n                    <td md-cell>{{instance.started_at | datetimeFilter }}</td>\n                    <td md-cell>\n                      <span ng-if="instance.last_heartbeat_at">{{instance.last_heartbeat_at | datetimeFilter }}</span>\n                      <span ng-if="!instance.last_heartbeat_at">-</span>\n                    </td>\n                    <td md-cell>\n                      <span ng-if="instance.stopped_at">{{instance.stopped_at | datetimeFilter }}</span>\n                      <span ng-if="!instance.stopped_at">-</span>\n                    </td>\n                  </tr>\n                  <tr ng-if="$ctrl.instances.content.length === 0">\n                    <td md-cell colspan="7">No instance</td>\n                  </tr>\n                </tbody>\n              </table>\n            </md-table-container>\n            <md-table-pagination\n              md-limit="$ctrl.query.limit"\n              md-limit-options="[10, 25, 50, 75, 100]"\n              md-page="$ctrl.query.page"\n              md-total="{{$ctrl.instances.totalElements}}"\n              md-on-limit="$ctrl.searchInstances"\n              md-on-paginate="$ctrl.searchInstances"\n              md-page-select\n            ></md-table-pagination>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<gravitee-empty-state\n  ng-if="$ctrl._displayEmptyMode"\n  icon="developer_dashboard"\n  model="Instance"\n  message="There is no API gateway instance running"\n></gravitee-empty-state>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="widget-card" flex>\n  <md-card-title class="gravitee-widget-draggable">\n    <md-card-title-text ng-if="!$ctrl.isModificationMode || ($ctrl.isModificationMode && !$ctrl.updateMode)">\n      <span class="md-title"><strong>{{ $ctrl.widget.title }}</strong></span>\n      <span class="md-subhead">{{ $ctrl.widget.subhead }}</span>\n    </md-card-title-text>\n    <md-card-title-text ng-if="$ctrl.isModificationMode && $ctrl.updateMode">\n      <md-input-container>\n        <label>Title</label>\n        <input type="text" ng-model="$ctrl.widget.title" required />\n      </md-input-container>\n      <md-input-container>\n        <label>Subtitle</label>\n        <input type="text" ng-model="$ctrl.widget.subhead" />\n      </md-input-container>\n    </md-card-title-text>\n    <md-card-title-media>\n      <a\n        aria-label="Modify widget"\n        ng-if="$ctrl.updateMode"\n        ng-click="$ctrl.isModificationMode=!$ctrl.isModificationMode"\n        ng-switch="$ctrl.isModificationMode"\n      >\n        <ng-md-icon ng-switch-when="true" icon="border_color"></ng-md-icon>\n        <ng-md-icon ng-switch-default icon="edit"></ng-md-icon>\n      </a>\n      <a title="Remove widget" ng-click="$ctrl.delete()"><ng-md-icon icon="close"></ng-md-icon></a>\n    </md-card-title-media>\n  </md-card-title>\n\n  <md-card-content ng-if="$ctrl.updateMode">\n    <gravitee-empty-state ng-if="!$ctrl.isModificationMode" icon="{{$ctrl.getIconFromType()}}" model="Dashboard"></gravitee-empty-state>\n    <div class="gv-widget-content" ng-if="!$ctrl.widget.chart.type" layout="column">\n      <md-input-container>\n        <label>Widget type</label>\n        <md-select ng-model="$ctrl.widget.chart.type" ng-change="$ctrl.isModificationMode = true" required>\n          <md-option ng-repeat="widgetType in [\'table\', \'line\', \'pie\', \'map\', \'stats\']" ng-value="widgetType">{{widgetType}}</md-option>\n        </md-select>\n      </md-input-container>\n    </div>\n    <div ng-if="$ctrl.isModificationMode" ng-switch="$ctrl.widget.chart.type">\n      <gv-widget-data-table-configuration ng-switch-when="table" chart="$ctrl.widget.chart"></gv-widget-data-table-configuration>\n      <gv-widget-data-line-configuration ng-switch-when="line" chart="$ctrl.widget.chart"></gv-widget-data-line-configuration>\n      <gv-widget-data-pie-configuration ng-switch-when="pie" chart="$ctrl.widget.chart"></gv-widget-data-pie-configuration>\n      <gv-widget-data-map-configuration ng-switch-when="map" chart="$ctrl.widget.chart"></gv-widget-data-map-configuration>\n      <gv-widget-data-stats-configuration ng-switch-when="stats" chart="$ctrl.widget.chart"></gv-widget-data-stats-configuration>\n    </div>\n  </md-card-content>\n\n  <md-card-content ng-if="!$ctrl.updateMode">\n    <div ng-if="$ctrl.fetchData" layout="column" layout-align="center center" flex>\n      <md-progress-circular md-mode="indeterminate" class="md-accent md-hue-1" md-diameter="50"></md-progress-circular>\n    </div>\n\n    <div style="height: 100%" ng-if="!$ctrl.fetchData && $ctrl.results" ng-switch on="$ctrl.widget.chart.type">\n      <gv-widget-data-table class="test" ng-switch-when="table" data="$ctrl.results"></gv-widget-data-table>\n      <gv-widget-chart-line ng-switch-when="line" data="$ctrl.results"></gv-widget-chart-line>\n      <gv-widget-chart-pie ng-switch-when="pie" data="$ctrl.results"></gv-widget-chart-pie>\n      <gv-widget-chart-map ng-switch-when="map" data="$ctrl.results"></gv-widget-chart-map>\n      <gv-widget-data-stats ng-switch-when="stats" data="$ctrl.results"></gv-widget-data-stats>\n      <gv-widget-chart-count ng-switch-when="count" data="$ctrl.results"></gv-widget-chart-count>\n    </div>\n\n    <div ng-if="!$ctrl.fetchData && !$ctrl.results" layout="column" layout-align="center center" flex>\n      <p><ng-md-icon icon="block" style="fill: grey"></ng-md-icon></p>\n      <p>No data</p>\n    </div>\n  </md-card-content>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-table-container ng-if="$ctrl.results.length > 0" style="height: 100%" class="gravitee-widget-table">\n  <table\n    md-table\n    class="gravitee-analytics-top-hits-table gv-table-dense"\n    multiple\n    md-row-select="$ctrl.widget.chart.selectable"\n    data-ng-model="$ctrl.selected"\n  >\n    <thead md-head>\n      <tr md-row style="height: 30px">\n        <th md-column ng-repeat="column in $ctrl.widget.chart.columns" ng-attr-md-numeric="$last">{{column}}</th>\n        <th md-column ng-if="$ctrl.widget.chart.percent" ng-attr-md-numeric>Percent</th>\n      </tr>\n    </thead>\n    <tbody md-body>\n      <tr\n        ng-if="$ctrl.results.length > 0"\n        md-row\n        ng-repeat="result in $ctrl.results | limitTo: $ctrl.widget.chart.paging: ($ctrl.paging - 1) * $ctrl.widget.chart.paging | orderBy:\'metadata.order\'"\n        md-select="result"\n        md-select-id="key"\n        style="height: 25px"\n        md-on-select="$ctrl.selectItem"\n        md-on-deselect="$ctrl.deselectItem"\n      >\n        <td md-cell>\n          <a ng-if="!result.metadata.deleted && !result.metadata.unknown && $ctrl.isClickable(result)" ng-click="$ctrl.goto(result.key)">\n            {{result.metadata.name}} <small ng-if="result.metadata.version">({{result.metadata.version}})</small>\n          </a>\n\n          <span ng-if="!result.metadata.deleted && !$ctrl.isClickable(result)">\n            {{result.metadata.name}} <small ng-if="result.metadata.version">({{result.metadata.version}})</small>\n          </span>\n\n          <span ng-if="result.metadata.deleted" style="color: grey"> {{result.metadata.name}} </span>\n        </td>\n        <td md-cell>{{result.value | number}}</td>\n        <td md-cell ng-if="$ctrl.widget.chart.percent">{{result.percent | number}}%</td>\n      </tr>\n      <tr ng-if="$ctrl.results.length === 0">\n        <td\n          md-cell\n          colspan="{{($ctrl.widget.chart.percent ? 3 : 2) + (($ctrl.widget.chart.selectable) ? ($ctrl.widget.chart.percent ? 2 : 1) : ($ctrl.widget.chart.percent ? 1 : 0))}}"\n        >\n          No result\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</md-table-container>\n<md-table-pagination\n  ng-if="$ctrl.results.length > 0"\n  class="gravitee-widget-pagination"\n  md-limit="$ctrl.widget.chart.paging"\n  md-page="$ctrl.paging"\n  md-total="{{$ctrl.results.length}}"\n></md-table-pagination>\n\n<div ng-if="$ctrl.results.length === 0" class="events-no-result" layout="column" layout-align="center center" flex>\n  No Data to display here\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gv-chart-line></gv-chart-line>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gv-chart-pie></gv-chart-pie>\n'},function(e,t,n){var i={"./ad/ad-all.geo.json":[1323,116],"./ae/ae-all.geo.json":[1324,117],"./af/af-all.geo.json":[1325,118],"./ag/ag-all.geo.json":[1326,119],"./al/al-all.geo.json":[1327,120],"./am/am-all.geo.json":[1328,121],"./ao/ao-all.geo.json":[1329,122],"./ar/ar-all.geo.json":[1330,123],"./as/as-all.geo.json":[1331,124],"./at/at-all.geo.json":[1332,125],"./au/au-all.geo.json":[1333,126],"./az/az-all.geo.json":[1334,127],"./ba/ba-all.geo.json":[1335,128],"./bb/bb-all.geo.json":[1336,129],"./bd/bd-all.geo.json":[1337,130],"./be/be-all.geo.json":[1338,131],"./bf/bf-all.geo.json":[1339,132],"./bg/bg-all.geo.json":[1340,133],"./bh/bh-all.geo.json":[1341,134],"./bi/bi-all-all.geo.json":[1342,135],"./bi/bi-all.geo.json":[1343,136],"./bj/bj-all.geo.json":[1344,137],"./bn/bn-all.geo.json":[1345,138],"./bo/bo-all.geo.json":[1346,139],"./br/br-all.geo.json":[1347,140],"./bs/bs-all.geo.json":[1348,141],"./bt/bt-all.geo.json":[1349,142],"./bw/bw-all.geo.json":[1350,143],"./by/by-all.geo.json":[1351,144],"./bz/bz-all.geo.json":[1352,145],"./ca/ca-ab-all.geo.json":[1353,146],"./ca/ca-all-all.geo.json":[1354,147],"./ca/ca-all.geo.json":[1355,148],"./ca/ca-bc-all.geo.json":[1356,149],"./ca/ca-mb-all.geo.json":[1357,150],"./ca/ca-nb-all.geo.json":[1358,151],"./ca/ca-nf-all.geo.json":[1359,152],"./ca/ca-ns-all.geo.json":[1360,153],"./ca/ca-nt-all.geo.json":[1361,154],"./ca/ca-nu-all.geo.json":[1362,155],"./ca/ca-on-all.geo.json":[1363,156],"./ca/ca-pe-all.geo.json":[1364,157],"./ca/ca-qc-all.geo.json":[1365,158],"./ca/ca-sk-all.geo.json":[1366,159],"./ca/ca-yt-all.geo.json":[1367,160],"./cd/cd-all.geo.json":[1368,161],"./cf/cf-all.geo.json":[1369,162],"./cg/cg-all.geo.json":[1370,163],"./ch/ch-all.geo.json":[1371,164],"./ci/ci-all.geo.json":[1372,165],"./ck/ck-all.geo.json":[1373,166],"./cl/cl-all.geo.json":[1374,167],"./cm/cm-all.geo.json":[1375,168],"./cn/cn-all.geo.json":[1376,169],"./co/co-all.geo.json":[1377,170],"./cr/cr-all.geo.json":[1378,171],"./cu/cu-all.geo.json":[1379,172],"./cv/cv-all.geo.json":[1380,173],"./cy/cy-all.geo.json":[1381,174],"./cz/cz-all.geo.json":[1382,175],"./de/de-all-all.geo.json":[1383,176],"./de/de-all.geo.json":[1384,177],"./de/de-bb-all-all.geo.json":[1385,178],"./de/de-bb-all.geo.json":[1386,179],"./de/de-be-all-all.geo.json":[1387,180],"./de/de-be-all.geo.json":[1388,181],"./de/de-bw-all-all.geo.json":[1389,182],"./de/de-bw-all.geo.json":[1390,183],"./de/de-by-all-all.geo.json":[1391,184],"./de/de-by-all.geo.json":[1392,185],"./de/de-hb-all-all.geo.json":[1393,186],"./de/de-hb-all.geo.json":[1394,187],"./de/de-he-all-all.geo.json":[1395,188],"./de/de-he-all.geo.json":[1396,189],"./de/de-hh-all-all.geo.json":[1397,190],"./de/de-hh-all.geo.json":[1398,191],"./de/de-mv-all-all.geo.json":[1399,192],"./de/de-mv-all.geo.json":[1400,193],"./de/de-ni-all-all.geo.json":[1401,194],"./de/de-ni-all.geo.json":[1402,195],"./de/de-nw-all-all.geo.json":[1403,196],"./de/de-nw-all.geo.json":[1404,197],"./de/de-rp-all-all.geo.json":[1405,198],"./de/de-rp-all.geo.json":[1406,199],"./de/de-sh-all-all.geo.json":[1407,200],"./de/de-sh-all.geo.json":[1408,201],"./de/de-sl-all-all.geo.json":[1409,202],"./de/de-sl-all.geo.json":[1410,203],"./de/de-sn-all-all.geo.json":[1411,204],"./de/de-sn-all.geo.json":[1412,205],"./de/de-st-all-all.geo.json":[1413,206],"./de/de-st-all.geo.json":[1414,207],"./de/de-th-all-all.geo.json":[1415,208],"./de/de-th-all.geo.json":[1416,209],"./dj/dj-all.geo.json":[1417,210],"./dk/dk-all.geo.json":[1418,211],"./dm/dm-all.geo.json":[1419,212],"./do/do-all.geo.json":[1420,213],"./dz/dz-all.geo.json":[1421,214],"./ec/ec-all.geo.json":[1422,215],"./ee/ee-all.geo.json":[1423,216],"./eg/eg-all.geo.json":[1424,217],"./eh/eh-all.geo.json":[1425,218],"./er/er-all.geo.json":[1426,219],"./es/es-all.geo.json":[1427,220],"./et/et-all.geo.json":[1428,221],"./fi/fi-all.geo.json":[1429,222],"./fj/fj-all.geo.json":[1430,223],"./fo/fo-all.geo.json":[1431,224],"./fr/fr-all-all.geo.json":[1432,225],"./fr/fr-all.geo.json":[1433,226],"./fr/fr-ara-all.geo.json":[1434,227],"./fr/fr-bfc-all.geo.json":[1435,228],"./fr/fr-bre-all.geo.json":[1436,229],"./fr/fr-cor-all.geo.json":[1437,230],"./fr/fr-cvl-all.geo.json":[1438,231],"./fr/fr-ges-all.geo.json":[1439,232],"./fr/fr-gf-all.geo.json":[1440,233],"./fr/fr-gua-all.geo.json":[1441,234],"./fr/fr-hdf-all.geo.json":[1442,235],"./fr/fr-idf-all.geo.json":[1443,236],"./fr/fr-lre-all.geo.json":[1444,237],"./fr/fr-may-all.geo.json":[1445,238],"./fr/fr-mq-all.geo.json":[1446,239],"./fr/fr-naq-all.geo.json":[1447,240],"./fr/fr-nor-all.geo.json":[1448,241],"./fr/fr-occ-all.geo.json":[1449,242],"./fr/fr-pac-all.geo.json":[1450,243],"./fr/fr-pdl-all.geo.json":[1451,244],"./ga/ga-all.geo.json":[1452,245],"./gb/gb-all.geo.json":[1453,246],"./gd/gd-all.geo.json":[1454,247],"./ge/ge-all.geo.json":[1455,248],"./gh/gh-all.geo.json":[1456,249],"./gl/gl-all.geo.json":[1457,250],"./gm/gm-all.geo.json":[1458,251],"./gn/gn-all.geo.json":[1459,252],"./gq/gq-all.geo.json":[1460,253],"./gr/gr-all.geo.json":[1461,254],"./gt/gt-all.geo.json":[1462,255],"./gu/gu-all.geo.json":[1463,256],"./gw/gw-all.geo.json":[1464,257],"./gy/gy-all.geo.json":[1465,258],"./hn/hn-all.geo.json":[1466,259],"./hr/hr-all.geo.json":[1467,260],"./ht/ht-all.geo.json":[1468,261],"./hu/hu-all.geo.json":[1469,262],"./id/id-all.geo.json":[1470,263],"./ie/ie-all.geo.json":[1471,264],"./il/il-all.geo.json":[1472,265],"./in/in-all.geo.json":[1473,266],"./iq/iq-all.geo.json":[1474,267],"./ir/ir-all.geo.json":[1475,268],"./is/is-all.geo.json":[1476,269],"./it/it-all.geo.json":[1477,270],"./jm/jm-all.geo.json":[1478,271],"./jo/jo-all.geo.json":[1479,272],"./jp/jp-all.geo.json":[1480,273],"./ke/ke-all.geo.json":[1481,274],"./kg/kg-all.geo.json":[1482,275],"./kh/kh-all.geo.json":[1483,276],"./km/km-all.geo.json":[1484,277],"./kn/kn-all.geo.json":[1485,278],"./kp/kp-all.geo.json":[1486,279],"./kr/kr-all.geo.json":[1487,280],"./kv/kv-all.geo.json":[1488,281],"./kw/kw-all.geo.json":[1489,282],"./kz/kz-all.geo.json":[1490,283],"./la/la-all.geo.json":[1491,284],"./lb/lb-all.geo.json":[1492,285],"./lc/lc-all.geo.json":[1493,286],"./li/li-all.geo.json":[1494,287],"./lk/lk-all.geo.json":[1495,288],"./lr/lr-all.geo.json":[1496,289],"./ls/ls-all.geo.json":[1497,290],"./lt/lt-all.geo.json":[1498,291],"./lu/lu-all.geo.json":[1499,292],"./lv/lv-all.geo.json":[1500,293],"./ly/ly-all.geo.json":[1501,294],"./ma/ma-all.geo.json":[1502,295],"./mc/mc-all.geo.json":[1503,296],"./md/md-all.geo.json":[1504,297],"./me/me-all.geo.json":[1505,298],"./mg/mg-all.geo.json":[1506,299],"./mk/mk-all.geo.json":[1507,300],"./ml/ml-all.geo.json":[1508,301],"./mm/mm-all.geo.json":[1509,302],"./mn/mn-all.geo.json":[1510,303],"./mp/mp-all.geo.json":[1511,304],"./mr/mr-all.geo.json":[1512,305],"./mt/mt-all.geo.json":[1513,306],"./mu/mu-all.geo.json":[1514,307],"./mw/mw-all.geo.json":[1515,308],"./mx/mx-all.geo.json":[1516,309],"./my/my-all.geo.json":[1517,310],"./mz/mz-all.geo.json":[1518,311],"./na/na-all.geo.json":[1519,312],"./nc/nc-all.geo.json":[1520,313],"./ne/ne-all.geo.json":[1521,314],"./ng/ng-all.geo.json":[1522,315],"./ni/ni-all.geo.json":[1523,316],"./nl/nl-all-all.geo.json":[1524,317],"./nl/nl-all.geo.json":[1525,318],"./nl/nl-dr-all.geo.json":[1526,319],"./nl/nl-fl-all.geo.json":[1527,320],"./nl/nl-fr-all.geo.json":[1528,321],"./nl/nl-ge-all.geo.json":[1529,322],"./nl/nl-gr-all.geo.json":[1530,323],"./nl/nl-li-all.geo.json":[1531,324],"./nl/nl-nb-all.geo.json":[1532,325],"./nl/nl-nh-all.geo.json":[1533,326],"./nl/nl-ov-all.geo.json":[1534,327],"./nl/nl-ut-all.geo.json":[1535,328],"./nl/nl-ze-all.geo.json":[1536,329],"./nl/nl-zh-all.geo.json":[1537,330],"./no/no-ag-all.geo.json":[1538,331],"./no/no-all-all.geo.json":[1539,332],"./no/no-all.geo.json":[1540,333],"./no/no-in-all.geo.json":[1541,334],"./no/no-mr-all.geo.json":[1542,335],"./no/no-no-all.geo.json":[1543,336],"./no/no-os-all.geo.json":[1544,337],"./no/no-ro-all.geo.json":[1545,338],"./no/no-td-all.geo.json":[1546,339],"./no/no-tf-all.geo.json":[1547,340],"./no/no-vi-all.geo.json":[1548,341],"./no/no-vl-all.geo.json":[1549,342],"./no/no-vt-all.geo.json":[1550,343],"./np/np-all.geo.json":[1551,344],"./nr/nr-all.geo.json":[1552,345],"./nz/nz-all.geo.json":[1553,346],"./om/om-all.geo.json":[1554,347],"./pa/pa-all.geo.json":[1555,348],"./pe/pe-all.geo.json":[1556,349],"./pg/pg-all.geo.json":[1557,350],"./ph/ph-all.geo.json":[1558,351],"./pk/pk-all.geo.json":[1559,352],"./pl/pl-all.geo.json":[1560,353],"./pr/pr-all-all.geo.json":[1561,354],"./pr/pr-all.geo.json":[1562,355],"./pt/pt-all.geo.json":[1563,356],"./pw/pw-all.geo.json":[1564,357],"./py/py-all.geo.json":[1565,358],"./qa/qa-all.geo.json":[1566,359],"./ro/ro-all.geo.json":[1567,360],"./rs/rs-all.geo.json":[1568,361],"./ru/ru-all.geo.json":[1569,362],"./rw/rw-all.geo.json":[1570,363],"./sa/sa-all.geo.json":[1571,364],"./sb/sb-all.geo.json":[1572,365],"./sc/sc-all.geo.json":[1573,366],"./sd/sd-all.geo.json":[1574,367],"./se/se-all.geo.json":[1575,368],"./sg/sg-all.geo.json":[1576,369],"./si/si-all.geo.json":[1577,370],"./sk/sk-all.geo.json":[1578,371],"./sl/sl-all.geo.json":[1579,372],"./sm/sm-all.geo.json":[1580,373],"./sn/sn-all.geo.json":[1581,374],"./so/so-all.geo.json":[1582,375],"./sr/sr-all.geo.json":[1583,376],"./ss/ss-all.geo.json":[1584,377],"./st/st-all.geo.json":[1585,378],"./sv/sv-all.geo.json":[1586,379],"./sx/sx-all.geo.json":[1587,380],"./sy/sy-all.geo.json":[1588,381],"./sz/sz-all.geo.json":[1589,382],"./td/td-all.geo.json":[1590,383],"./tf/tf-all.geo.json":[1591,384],"./tg/tg-all.geo.json":[1592,385],"./th/th-all.geo.json":[1593,386],"./tj/tj-all.geo.json":[1594,387],"./tl/tl-all.geo.json":[1595,388],"./tm/tm-all.geo.json":[1596,389],"./tn/tn-all.geo.json":[1597,390],"./tr/tr-all.geo.json":[1598,391],"./tt/tt-all.geo.json":[1599,392],"./tw/tw-all.geo.json":[1600,393],"./tz/tz-all.geo.json":[1601,394],"./ua/ua-all.geo.json":[1602,395],"./ug/ug-all.geo.json":[1603,396],"./us/us-ak-all.geo.json":[1604,397],"./us/us-al-all.geo.json":[1605,398],"./us/us-all-all.geo.json":[1606,399],"./us/us-all.geo.json":[1607,400],"./us/us-ar-all.geo.json":[1608,401],"./us/us-az-all.geo.json":[1609,402],"./us/us-ca-all.geo.json":[1610,403],"./us/us-co-all.geo.json":[1611,404],"./us/us-ct-all.geo.json":[1612,405],"./us/us-dc-all.geo.json":[1613,406],"./us/us-de-all.geo.json":[1614,407],"./us/us-fl-all.geo.json":[1615,408],"./us/us-ga-all.geo.json":[1616,409],"./us/us-hi-all.geo.json":[1617,410],"./us/us-ia-all.geo.json":[1618,411],"./us/us-id-all.geo.json":[1619,412],"./us/us-il-all.geo.json":[1620,413],"./us/us-in-all.geo.json":[1621,414],"./us/us-ks-all.geo.json":[1622,415],"./us/us-ky-all.geo.json":[1623,416],"./us/us-la-all.geo.json":[1624,417],"./us/us-ma-all.geo.json":[1625,418],"./us/us-md-all.geo.json":[1626,419],"./us/us-me-all.geo.json":[1627,420],"./us/us-mi-all.geo.json":[1628,421],"./us/us-mn-all.geo.json":[1629,422],"./us/us-mo-all.geo.json":[1630,423],"./us/us-ms-all.geo.json":[1631,424],"./us/us-mt-all.geo.json":[1632,425],"./us/us-nc-all.geo.json":[1633,426],"./us/us-nd-all.geo.json":[1634,427],"./us/us-ne-all.geo.json":[1635,428],"./us/us-nh-all.geo.json":[1636,429],"./us/us-nj-all.geo.json":[1637,430],"./us/us-nm-all.geo.json":[1638,431],"./us/us-nv-all.geo.json":[1639,432],"./us/us-ny-all.geo.json":[1640,433],"./us/us-oh-all.geo.json":[1641,434],"./us/us-ok-all.geo.json":[1642,435],"./us/us-or-all.geo.json":[1643,436],"./us/us-pa-all.geo.json":[1644,437],"./us/us-ri-all.geo.json":[1645,438],"./us/us-sc-all.geo.json":[1646,439],"./us/us-sd-all.geo.json":[1647,440],"./us/us-tn-all.geo.json":[1648,441],"./us/us-tx-all.geo.json":[1649,442],"./us/us-ut-all.geo.json":[1650,443],"./us/us-va-all.geo.json":[1651,444],"./us/us-vt-all.geo.json":[1652,445],"./us/us-wa-all.geo.json":[1653,446],"./us/us-wi-all.geo.json":[1654,447],"./us/us-wv-all.geo.json":[1655,448],"./us/us-wy-all.geo.json":[1656,449],"./uy/uy-all.geo.json":[1657,450],"./uz/uz-all.geo.json":[1658,451],"./vc/vc-all.geo.json":[1659,452],"./ve/ve-all.geo.json":[1660,453],"./vi/vi-all.geo.json":[1661,454],"./vn/vn-all.geo.json":[1662,455],"./vu/vu-all.geo.json":[1663,456],"./wf/wf-all.geo.json":[1664,457],"./ws/ws-all.geo.json":[1665,458],"./ye/ye-all.geo.json":[1666,459],"./za/za-all.geo.json":[1667,460],"./zm/zm-all.geo.json":[1668,461],"./zw/zw-all.geo.json":[1669,462]};function a(e){if(!n.o(i,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=i[e],a=t[0];return n.e(t[1]).then((function(){return n.t(a,3)}))}a.keys=function(){return Object.keys(i)},a.id=746,e.exports=a},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gv-chart-map></gv-chart-map>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gv-stats></gv-stats>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div layout="column">\n  <md-switch ng-model="$ctrl.isCustomField" aria-label="Use custom field?">Use custom field?</md-switch>\n\n  <div layout="row">\n    <md-input-container ng-show="!$ctrl.isCustomField">\n      <label>Field</label>\n      <md-select ng-model="$ctrl.field" ng-change="$ctrl.onFieldChanged()">\n        <md-option ng-repeat="field in $ctrl.fields" ng-value="field.value">{{field.label}}</md-option>\n      </md-select>\n    </md-input-container>\n\n    <md-input-container ng-show="$ctrl.isCustomField">\n      <label>Field</label>\n      <input name="Field" ng-model="$ctrl.field" ng-change="$ctrl.onFieldChanged()" />\n    </md-input-container>\n  </div>\n</div>\n\n<div layout="row">\n  <md-input-container>\n    <label>Projection</label>\n    <md-select ng-model="$ctrl.projection" ng-change="$ctrl.onProjectionChanged()">\n      <md-option ng-repeat="projection in $ctrl.projections" ng-value="projection.value">{{projection.label}}</md-option>\n    </md-select>\n  </md-input-container>\n\n  <md-input-container>\n    <label>Order</label>\n    <md-select ng-model="$ctrl.order" ng-change="$ctrl.onProjectionChanged()">\n      <md-option ng-repeat="order in $ctrl.projectionOrders" ng-value="order.value">{{order.label}}</md-option>\n    </md-select>\n  </md-input-container>\n</div>\n\n<div layout="column">\n  <md-input-container>\n    <md-checkbox ng-model="$ctrl.chart.percent" ng-disabled="$ctrl.projection !== \'_count\'"> Display percentage </md-checkbox>\n  </md-input-container>\n\n  <md-input-container>\n    <md-checkbox ng-model="$ctrl.chart.selectable"> Allows to check a row to filter </md-checkbox>\n  </md-input-container>\n\n  <md-input-container>\n    <label>Paging</label>\n    <input type="number" ng-model="$ctrl.chart.paging" min="5" max="100" required />\n  </md-input-container>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div layout="column">\n  <md-switch ng-model="$ctrl.isCustomField" aria-label="Use custom field?">Use custom field?</md-switch>\n\n  <div layout="row">\n    <md-input-container ng-show="!$ctrl.isCustomField">\n      <label>Field</label>\n      <md-select ng-model="$ctrl.data" ng-change="$ctrl.onDataChanged()" multiple="true">\n        <md-option ng-repeat="field in $ctrl.fields" ng-value="field.aggValue">{{field.aggLabel}}</md-option>\n      </md-select>\n    </md-input-container>\n\n    <md-input-container ng-show="$ctrl.isCustomField">\n      <label>Field</label>\n      <input name="Field" ng-model="$ctrl.field" ng-change="$ctrl.onFieldChanged()" />\n    </md-input-container>\n  </div>\n\n  <md-input-container>\n    <md-checkbox ng-model="$ctrl.chart.stacked"> Display stacked </md-checkbox>\n  </md-input-container>\n\n  <md-input-container>\n    <md-checkbox ng-model="$ctrl.chart.selectable"> Allows to check a field to filter </md-checkbox>\n  </md-input-container>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div layout="column">\n  <md-switch ng-model="$ctrl.isCustomField" aria-label="Use custom field?">Use custom field?</md-switch>\n\n  <div layout="row">\n    <md-input-container ng-show="!$ctrl.isCustomField">\n      <label>Field</label>\n      <md-select ng-model="$ctrl.chart.request.field">\n        <md-option ng-repeat="field in $ctrl.fields" ng-value="field.value">{{field.label}}</md-option>\n      </md-select>\n    </md-input-container>\n\n    <md-input-container ng-show="$ctrl.isCustomField">\n      <label>Field</label>\n      <input name="Field" ng-model="$ctrl.field" ng-change="$ctrl.onFieldChanged()" />\n    </md-input-container>\n  </div>\n</div>\n\n<div layout="row" ng-repeat="data in $ctrl.data" ng-show="!$ctrl.isCustomField">\n  <ng-md-icon icon="clear" aria-label="Remove data" ng-click="$ctrl.removeData(data)"></ng-md-icon>\n\n  <md-input-container>\n    <label>Min</label>\n    <input type="number" ng-model="data.min" min="0" required ng-change="$ctrl.onDataChanged()" />\n  </md-input-container>\n\n  <md-input-container>\n    <label>Max</label>\n    <input type="number" ng-model="data.max" min="0" required ng-change="$ctrl.onDataChanged()" />\n  </md-input-container>\n\n  <md-input-container>\n    <label>Label</label>\n    <input type="text" ng-model="data.label" required ng-change="$ctrl.onDataChanged()" />\n  </md-input-container>\n\n  <div\n    type="text"\n    ng-model="data.color"\n    ng-change="$ctrl.onDataChanged()"\n    md-color-picker="$ctrl.buttonConfig"\n    md-color-clear-button="false"\n    required\n  ></div>\n</div>\n\n<ng-md-icon ng-show="!$ctrl.isCustomField" icon="add" aria-label="Add data" ng-click="$ctrl.addData()"></ng-md-icon>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div layout="column">\n  <md-input-container>\n    <label>Field</label>\n    <md-select ng-model="$ctrl.selectedField" ng-change="$ctrl.onFieldChanged()">\n      <md-option ng-repeat="field in $ctrl.fields" ng-value="field">{{field.label}}</md-option>\n    </md-select>\n  </md-input-container>\n\n  <md-input-container>\n    <label>Stats</label>\n    <md-select ng-model="$ctrl.selectedStatsKeys" multiple="true" ng-change="$ctrl.onStatsChanged()" required>\n      <md-option ng-repeat="stat in $ctrl.availableStats" ng-value="stat.key">{{stat.label}}</md-option>\n    </md-select>\n  </md-input-container>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-form-content" layout="column" ng-if="$ctrl.model.definition && $ctrl.model.definition.length">\n  <div ng-if="!$ctrl.updateMode && !$ctrl.customTimeframe">\n    <gv-dashboard-timeframe on-timeframe-change="$ctrl.timeframeChange(timeframe)"></gv-dashboard-timeframe>\n    <gv-dashboard-filter on-filter-change="$ctrl.queryFilterChange(query, widget)"></gv-dashboard-filter>\n    <div layout="row" flex="100" layout-align="end center" ng-if="$ctrl.accessLogs">\n      <md-button md-no-ink class="md-primary" ng-click="$ctrl.viewLogs()">View logs</md-button>\n    </div>\n  </div>\n\n  <div gridster="$ctrl.dashboardOptions" layout="row" style="width: 100%">\n    <md-card gridster-item="widget" ng-repeat="widget in $ctrl.model.definition">\n      <gv-widget\n        widget="widget"\n        update-mode="$ctrl.updateMode"\n        global-query="$ctrl.model.query_filter"\n        custom-timeframe="$ctrl.customTimeframe"\n      ></gv-widget>\n    </md-card>\n  </div>\n</div>\n\n<gravitee-empty-state\n  ng-if="!$ctrl.model.definition || !$ctrl.model.definition.length"\n  icon="insert_chart"\n  model="Dashboard"\n  message="{{$ctrl.updateMode?\'Start adding widgets\': \'No widget defined\'}}"\n></gravitee-empty-state>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="widget-card chipsdemoBasicUsage" flex ng-if="$ctrl.filters.length > 0">\n  <md-card-title>\n    <md-card-title-text>\n      <span class="md-title"><strong>Filters</strong></span>\n    </md-card-title-text>\n  </md-card-title>\n  <md-card-content>\n    <md-chips\n      class="custom-chips"\n      md-add-on-blur="true"\n      md-removable="true"\n      readonly="true"\n      ng-model="$ctrl.filters"\n      md-on-remove="$ctrl.deleteChips($chip)"\n    >\n      <md-chip-template>\n        <span>\n          <strong>{{$chip.label}}</strong>\n        </span>\n      </md-chip-template>\n      <button md-chip-remove class="md-primary vegetablechip">\n        <ng-md-icon icon="close"></ng-md-icon>\n      </button>\n    </md-chips>\n  </md-card-content>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="widget-card" flex>\n  <md-card-title>\n    <md-card-title-text>\n      <span class="md-title">\n        <div layout="row" layout-align="start center">\n          <div flex layout="row" layout-align="end center">\n            <div style="text-align: center; width: 34%">\n              <md-input-container ng-if="$ctrl.$state.params[\'apiId\']">\n                <md-select ng-model="$ctrl.displayMode" ng-change="$ctrl.updateDisplayMode()" aria-label="Display mode">\n                  <md-option ng-repeat="displayMode in $ctrl.displayModes" ng-value="displayMode"> {{displayMode.label}} </md-option>\n                </md-select>\n              </md-input-container>\n            </div>\n\n            <md-button class="md-primary" ng-click="$ctrl.refresh()">\n              <ng-md-icon icon="refresh" size="20"></ng-md-icon>\n              Refresh\n            </md-button>\n\n            <div>\n              <ng-md-icon icon="autorenew" size="20"></ng-md-icon>\n              <md-input-container>\n                <md-select ng-model="$ctrl.autoRefreshInterval" ng-change="$ctrl.autoRefreshChange()" aria-label="Auto refresh">\n                  <md-option ng-repeat="interval in $ctrl.arIntervals" ng-value="interval.interval"> {{interval.label}} </md-option>\n                </md-select>\n              </md-input-container>\n            </div>\n          </div>\n        </div>\n      </span>\n    </md-card-title-text>\n  </md-card-title>\n  <md-card-content>\n    <div layout="row" layout-align="space-around center" style="margin-bottom: 10px">\n      <div class="btn-group float-right">\n        <button\n          class="btn btn-default"\n          type="button"\n          ng-repeat="timeframe in $ctrl.timeframes track by timeframe.id"\n          ng-click="$ctrl.updateTimeframe(timeframe.id)"\n          ng-class="{\'gravitee-analytics-timeframe-active\' : timeframe === $ctrl.timeframe}"\n        >\n          {{timeframe.title}}\n        </button>\n      </div>\n\n      <div class="gv-log-filter-dates">\n        <md-input-container style="margin-bottom: 0">\n          <label>from</label>\n          <input\n            moment-picker="$ctrl.pickerStartDateFormated"\n            format="YYYY-MM-DD HH:mm"\n            max-date="$ctrl.pickerEndDate"\n            ng-model="$ctrl.pickerStartDate"\n            ng-model-options="{ updateOn: \'blur\' }"\n          />\n        </md-input-container>\n        <md-input-container style="margin-bottom: 0">\n          <label>to</label>\n          <input\n            moment-picker="$ctrl.pickerEndDateFormated"\n            format="YYYY-MM-DD HH:mm"\n            min-date="$ctrl.pickerStartDate"\n            ng-model="$ctrl.pickerEndDate"\n            ng-model-options="{ updateOn: \'blur\' }"\n          />\n        </md-input-container>\n        <md-button type="button" class="md-raised" ng-click="$ctrl.updateRangeDate()">Apply</md-button>\n      </div>\n    </div>\n  </md-card-content>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="contextual-doc-container" ng-class="{ open: $ctrl.isOpen }" ng-if="$ctrl.$state.current.name !== \'user\'">\n  <div class="contextual-doc-container__fixed">\n    <div class="contextual-doc-header">\n      <div class="contextual-doc-header-title">\n        <h3>Documentation</h3>\n      </div>\n      <div>\n        <a ng-click="$ctrl.openDocumentation()"\n          ><ng-md-icon icon="close" style="fill: rgba(0, 0, 0, 0.54)" size="20" style="top: 0"></ng-md-icon\n        ></a>\n      </div>\n    </div>\n\n    <div class="contextual-doc-content" class="markdown-page" ng-bind-html=" $ctrl.page.content"></div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div layout="row" layout-align="space-around center" style="margin: 24px 0">\n  <div class="btn-group float-right">\n    <button\n      class="btn btn-default"\n      ng-repeat="timeframe in $ctrl.timeframes track by timeframe.id"\n      ng-click="$ctrl.updateTimeframe(timeframe.id)"\n      ng-class="{\'gravitee-analytics-timeframe-active\' : timeframe === $ctrl.timeframe}"\n    >\n      {{timeframe.title}}\n    </button>\n  </div>\n\n  <div class="gv-log-filter-dates">\n    <md-input-container style="margin-bottom: 0">\n      <label>from</label>\n      <input\n        moment-picker="$ctrl.pickerStartDateFormated"\n        format="YYYY-MM-DD HH:mm"\n        max-date="$ctrl.pickerEndDate"\n        ng-model="$ctrl.pickerStartDate"\n        ng-model-options="{ updateOn: \'blur\' }"\n      />\n    </md-input-container>\n    <md-input-container style="margin-bottom: 0">\n      <label>to</label>\n      <input\n        moment-picker="$ctrl.pickerEndDateFormated"\n        format="YYYY-MM-DD HH:mm"\n        min-date="$ctrl.pickerStartDate"\n        ng-model="$ctrl.pickerEndDate"\n        ng-model-options="{ updateOn: \'blur\' }"\n      />\n    </md-input-container>\n    <md-button class="md-raised" ng-click="$ctrl.updateRangeDate()">Apply</md-button>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<form ng-submit="$ctrl.search()" name="logsFiltersForm">\n  <div layout-gt-sm="row">\n    <md-input-container class="md-block" flex-gt-sm flex="20">\n      <label>Request ID</label>\n      <input ng-model="$ctrl.filters.id" />\n    </md-input-container>\n    <md-input-container class="md-block" flex-gt-sm flex="20">\n      <label>Transaction ID</label>\n      <input ng-model="$ctrl.filters.transaction" />\n    </md-input-container>\n    <md-input-container class="md-block" flex-gt-sm flex="20">\n      <label>Methods</label>\n      <md-select ng-model="$ctrl.filters.method" placeholder="Methods" multiple>\n        <md-option ng-value="key" ng-repeat="(key, value) in $ctrl.methods">{{ value }}</md-option>\n      </md-select>\n    </md-input-container>\n    <md-input-container class="md-block" flex-gt-sm flex="20">\n      <label>Path</label>\n      <input ng-model="$ctrl.filters.uri" />\n    </md-input-container>\n    <md-input-container class="md-block" flex-gt-sm flex="20">\n      <label>Response times</label>\n      <md-select ng-model="$ctrl.filters.responseTime" placeholder="Response times" multiple>\n        <md-option ng-value="key" ng-repeat="(key, value) in $ctrl.responseTimes">{{ value }}</md-option>\n      </md-select>\n    </md-input-container>\n    <md-input-container class="md-block" flex-gt-sm flex="20">\n      <label>HTTP Status</label>\n      <md-select ng-model="$ctrl.filters.status" placeholder="HTTP Status" multiple>\n        <md-option ng-value="key" ng-repeat="(key, value) in $ctrl.httpStatus">{{key}} - {{ value }}</md-option>\n      </md-select>\n    </md-input-container>\n  </div>\n  <div layout-gt-sm="row">\n    <md-input-container class="md-block" flex-gt-sm flex="20" ng-if="$ctrl.context === \'api\' || $ctrl.context === \'platform\'">\n      <label>Applications</label>\n      <md-select ng-model="$ctrl.filters.application" placeholder="Application" multiple>\n        <md-option ng-value="app.id" ng-repeat="app in $ctrl.metadata.applications">{{app.name}}</md-option>\n      </md-select>\n    </md-input-container>\n    <md-input-container class="md-block" flex-gt-sm flex="20" ng-if="$ctrl.context === \'application\' || $ctrl.context === \'platform\'">\n      <label>Apis</label>\n      <md-select ng-model="$ctrl.filters.api" placeholder="API" multiple>\n        <md-option ng-value="api.id" ng-repeat="api in $ctrl.metadata.apis">{{api.name}}</md-option>\n      </md-select>\n    </md-input-container>\n    <md-input-container class="md-block" flex-gt-sm flex="20" ng-if="$ctrl.context === \'api\'">\n      <label>Plans</label>\n      <md-select ng-model="$ctrl.filters.plan" placeholder="Plan" multiple>\n        <md-option ng-value="plan.id" ng-repeat="plan in $ctrl.metadata.plans">{{plan.name}}</md-option>\n      </md-select>\n    </md-input-container>\n    <md-input-container class="md-block" flex-gt-sm flex="20" ng-if="$ctrl.metadata.tenants.length > 0">\n      <label>Tenants</label>\n      <md-select ng-model="$ctrl.filters.tenant" placeholder="Tenant" multiple>\n        <md-option ng-value="tenant.id" ng-repeat="tenant in $ctrl.metadata.tenants">{{tenant.name}}</md-option>\n      </md-select>\n    </md-input-container>\n    <md-input-container ng-if="$ctrl.$state.params[\'apiId\']">\n      <md-select ng-model="$ctrl.displayMode" ng-change="$ctrl.updateDisplayMode()" placeholder="Display mode">\n        <md-option ng-repeat="displayMode in $ctrl.displayModes" ng-value="displayMode"> {{displayMode.label}} </md-option>\n      </md-select>\n    </md-input-container>\n    <md-input-container class="md-block" flex-gt-sm>\n      <label>Search in payloads</label>\n      <input ng-model="$ctrl.filters.body" />\n    </md-input-container>\n    <md-input-container class="md-block" flex-gt-sm ng-if="$ctrl.context != \'platform\'">\n      <label>Endpoint</label>\n      <input ng-model="$ctrl.filters.endpoint" />\n    </md-input-container>\n    <md-input-container class="md-block" flex-gt-sm ng-if="$ctrl.context === \'api\'">\n      <label>Remote Address</label>\n      <input ng-model="$ctrl.filters[\'remote-address\']" />\n    </md-input-container>\n    <div>\n      <md-button type="submit" class="md-raised md-primary"> Search </md-button>\n      <md-button type="button" class="md-flat" ng-click="$ctrl.clearFilters()" ng-disabled="!$ctrl.hasFilters()"> Clear filters </md-button>\n    </div>\n  </div>\n</form>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid api-analytics-logs-log" layout="column">\n  <div class="gv-forms-header">\n    <h1>Log</h1>\n    <a ui-sref="management.apis.detail.analytics.logs.list($ctrl.backStateParams)">Back to Logs</a>\n\n    <div class="pull-right" style="margin-top: 16px">\n      <md-button type="button" class="md-raised" ng-click="$ctrl.goToLog($ctrl.previousLog)" ng-disabled="!$ctrl.previousLog">\n        Previous\n      </md-button>\n\n      <md-button type="button" class="md-raised" ng-click="$ctrl.goToLog($ctrl.nextLog)" ng-disabled="!$ctrl.nextLog"> Next </md-button>\n    </div>\n  </div>\n\n  <div class="gv-form">\n    <div layout="row" layout-padding>\n      <span class="log-header" flex="5"></span>\n\n      <div flex="45" layout="row" layout-align="center center">\n        <span class="log-header">REQUEST</span>\n      </div>\n\n      <span class="log-header" flex="5" ng-if="$ctrl.log.endpoint"></span>\n\n      <div flex="45" layout="row" layout-align="center center">\n        <span class="log-header">RESPONSE</span>\n      </div>\n    </div>\n    <div layout="row" class="log-table gv-request-response-table" flex layout-padding layout-align="space-around start">\n      <div layout="column" flex="50">\n        <md-table-container class="gv-log-request-header">\n          <table md-table class="gv-table-dense">\n            <tbody md-body>\n              <tr md-row style="height: 30px">\n                <td md-cell style="width: 1%; font-weight: bold" nowrap>Date</td>\n                <td md-cell>{{$ctrl.log.timestamp | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n              </tr>\n              <tr md-row style="height: 30px" ng-if="$ctrl.log.host">\n                <td md-cell style="width: 1%; font-weight: bold" nowrap>Host</td>\n                <td md-cell>{{$ctrl.log.host}}</td>\n              </tr>\n              <tr md-row>\n                <td md-cell style="width: 1%; font-weight: bold" nowrap>Request</td>\n                <td md-cell>\n                  <span\n                    class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{$ctrl.log.method | uppercase}}-selected"\n                  >\n                    {{$ctrl.log.method | uppercase}}\n                  </span>\n                  <span>{{$ctrl.log.uri}}</span>\n                </td>\n              </tr>\n              <tr md-row>\n                <td md-cell style="width: 1%; font-weight: bold" nowrap>Content-length</td>\n                <td md-cell>{{$ctrl.log.requestContentLength}}</td>\n              </tr>\n              <tr md-row>\n                <td md-cell style="width: 1%; font-weight: bold" nowrap>Request ID</td>\n                <td md-cell>{{$ctrl.log.id}}</td>\n              </tr>\n              <tr md-row>\n                <td md-cell style="width: 1%; font-weight: bold" nowrap>Transaction ID</td>\n                <td md-cell>{{$ctrl.log.transactionId}}</td>\n              </tr>\n              <tr md-row>\n                <td md-cell style="width: 1%; font-weight: bold" nowrap>Remote IP</td>\n                <td md-cell>{{$ctrl.log.remoteAddress}}</td>\n              </tr>\n            </tbody>\n          </table>\n        </md-table-container>\n      </div>\n      <div layout="column" flex="50">\n        <md-table-container ng-class="{\'gv-log-response-header-{{$ctrl.log.status / 100 | number:0}}\': true}">\n          <table md-table class="gv-table-dense">\n            <tbody md-body>\n              <tr md-row>\n                <td md-cell style="width: 1%; font-weight: bold" nowrap>Status</td>\n                <td md-cell><span class="gv-statuscode-{{$ctrl.log.status / 100 | number:0}}xx">{{$ctrl.log.status}}</span></td>\n              </tr>\n              <tr md-row>\n                <td md-cell style="width: 1%; font-weight: bold" nowrap>Global response time</td>\n                <td md-cell>{{$ctrl.log.responseTime | number}} ms</td>\n              </tr>\n              <tr md-row>\n                <td md-cell style="width: 1%; font-weight: bold" nowrap>API response time</td>\n                <td md-cell>{{$ctrl.log.apiResponseTime | number}} ms</td>\n              </tr>\n              <tr md-row>\n                <td md-cell style="width: 1%; font-weight: bold" nowrap>Latency</td>\n                <td md-cell>{{$ctrl.log.responseTime - $ctrl.log.apiResponseTime | number}} ms</td>\n              </tr>\n              <tr md-row>\n                <td md-cell style="width: 1%; font-weight: bold" nowrap>Content-length</td>\n                <td md-cell>{{$ctrl.log.responseContentLength}}</td>\n              </tr>\n            </tbody>\n          </table>\n        </md-table-container>\n      </div>\n    </div>\n\n    <div\n      layout="row"\n      layout-align="end start"\n      layout-padding\n      ng-model="$ctrl.displayContext"\n      ng-click="$ctrl.displayContext=!$ctrl.displayContext"\n    >\n      <a>\n        <p ng-if="!$ctrl.displayContext">Show context</p>\n        <p ng-if="$ctrl.displayContext">Hide context</p>\n      </a>\n    </div>\n\n    <div ng-if="$ctrl.displayContext">\n      <div layout="row" layout-padding>\n        <span class="log-header" flex="5"></span>\n\n        <div flex="45" layout="row" layout-align="center center">\n          <span class="log-header">CONTEXT</span>\n        </div>\n\n        <span class="log-header" flex="5" ng-if="$ctrl.log.endpoint"></span>\n\n        <div flex="45" layout="row" layout-align="center center">\n          <span class="log-header">GATEWAY</span>\n        </div>\n      </div>\n      <div layout="row" class="log-table" flex layout-align="space-around start">\n        <div layout="column" flex="50">\n          <md-table-container>\n            <table md-table class="gv-table-dense">\n              <tbody md-body>\n                <tr md-row ng-if="$ctrl.log.securityToken">\n                  <td md-cell style="width: 1%; font-weight: bold" nowrap>\n                    {{$ctrl.log.securityType === \'API_KEY\' ? \'API key\' : \'Client id\'}}\n                  </td>\n                  <td md-cell>{{$ctrl.log.securityToken}}</td>\n                </tr>\n                <tr md-row ng-if="$ctrl.log.application">\n                  <td md-cell style="width: 1%; font-weight: bold" nowrap>Application</td>\n                  <td md-cell>{{$ctrl.log.metadata[$ctrl.log.application].name}}</td>\n                </tr>\n                <tr md-row ng-if="$ctrl.log.plan">\n                  <td md-cell style="width: 1%; font-weight: bold" nowrap>Plan</td>\n                  <td md-cell>{{$ctrl.log.metadata[$ctrl.log.plan].name}}</td>\n                </tr>\n                <tr md-row ng-if="$ctrl.log.user && $ctrl.Constants.org.settings.logging.user.displayed">\n                  <td md-cell style="width: 1%; font-weight: bold" nowrap>User</td>\n                  <td md-cell>{{$ctrl.log.user}}</td>\n                </tr>\n                <tr md-row>\n                  <td md-cell style="width: 1%; font-weight: bold" nowrap>Endpoint</td>\n                  <td md-cell>{{$ctrl.log.endpoint}}</td>\n                </tr>\n                <tr md-row ng-if="$ctrl.log.subscription">\n                  <td md-cell></td>\n                  <td md-cell>\n                    <a ui-sref="management.apis.detail.portal.subscriptions.subscription({subscriptionId: $ctrl.log.subscription})"\n                      >Go to subscription</a\n                    >\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </md-table-container>\n        </div>\n        <div layout="column" flex="50">\n          <md-table-container>\n            <table md-table class="gv-table-dense">\n              <tbody md-body>\n                <tr md-row>\n                  <td md-cell style="width: 1%; font-weight: bold" nowrap>Host</td>\n                  <td md-cell>{{$ctrl.log.metadata[$ctrl.log.gateway].hostname}}</td>\n                </tr>\n                <tr md-row>\n                  <td md-cell style="width: 1%; font-weight: bold" nowrap>IP</td>\n                  <td md-cell>{{$ctrl.log.metadata[$ctrl.log.gateway].ip}}</td>\n                </tr>\n                <tr md-row ng-if="$ctrl.log.tenant">\n                  <td md-cell style="width: 1%; font-weight: bold" nowrap>Tenant</td>\n                  <td md-cell>{{$ctrl.log.tenant}}</td>\n                </tr>\n              </tbody>\n            </table>\n          </md-table-container>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class="gv-form gv-form-danger" ng-if="$ctrl.log.message">\n    <h2>Error</h2>\n    <gv-code\n      flex\n      readonly\n      ng-attr-value="{{$ctrl.log.message}}"\n      ng-attr-options="{{$ctrl.codeMirrorOptions()}}"\n      ng-on-gv-code:clipboard-copy="$ctrl.onCopyBodySuccess($event);"\n    ></gv-code>\n  </div>\n\n  <div>\n    <div class="log-table" layout="column">\n      <div layout="row" layout-padding>\n        <span class="log-header" flex="5"></span>\n\n        <div flex="45" layout="row" layout-align="center center">\n          <span class="log-header">CONSUMER</span>\n        </div>\n\n        <span class="log-header" flex="5" ng-if="$ctrl.log.endpoint"></span>\n\n        <div flex="45" layout="row" layout-align="center center">\n          <span class="log-header">GATEWAY</span>\n        </div>\n      </div>\n\n      <div layout="row" layout-padding style="background-color: #e1f5fe; border: 1px solid #b3e5fc">\n        <div flex="5" layout="row" layout-align="center center" style="background-color: #b3e5fc">\n          <span class="vertical-text log-header" style="text-align: center">REQUEST</span>\n        </div>\n\n        <div layout="column" flex="45" ng-if="$ctrl.log.clientRequest">\n          <md-table-container>\n            <table md-table class="gv-table-dense">\n              <tbody md-body>\n                <tr md-row>\n                  <td md-cell>\n                    <span\n                      class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{$ctrl.log.method | uppercase}}-selected"\n                    >\n                      {{$ctrl.log.clientRequest.method | uppercase}}\n                    </span>\n                  </td>\n                  <td md-cell>{{$ctrl.log.clientRequest.uri}}</td>\n                </tr>\n              </tbody>\n            </table>\n          </md-table-container>\n          <br />\n\n          <div ng-if="$ctrl.log.clientRequest.queryParams.length > 0">\n            <div class="log-section-title">Query Params</div>\n            <md-table-container>\n              <table md-table class="gv-table-dense">\n                <tbody md-body>\n                  <tr md-row ng-repeat="queryParam in $ctrl.log.clientRequest.queryParams" style="height: 30px">\n                    <td md-cell><span style="font-weight: bold">{{queryParam.key}}</span></td>\n                    <td md-cell>{{queryParam.value}}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </md-table-container>\n            <br />\n          </div>\n\n          <div>\n            <div class="log-section-title">Headers</div>\n            <md-table-container>\n              <table md-table class="gv-table-dense">\n                <tbody md-body>\n                  <tr md-row ng-repeat="header in $ctrl.log.clientRequest.headersAsList" style="height: 30px">\n                    <td md-cell><span style="font-weight: bold">{{header[0]}}</span></td>\n                    <td md-cell>{{header[1]}}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </md-table-container>\n            <br />\n          </div>\n\n          <div ng-if="$ctrl.log.clientRequest.body" class="log-body">\n            <gv-code\n              flex\n              readonly\n              ng-attr-clipboard="true"\n              ng-attr-value="{{$ctrl.log.clientRequest.body}}"\n              ng-attr-options="{{$ctrl.codeMirrorOptions($ctrl.log.clientRequest)}}"\n              ng-on-gv-code:clipboard-copy="$ctrl.onCopyBodySuccess($event);"\n            ></gv-code>\n          </div>\n        </div>\n        <div layout="column" flex="45" layout-align="center center" ng-if="!$ctrl.log.clientRequest">\n          <p>No log for this request.</p>\n          <p permission permission-only="\'api-log-u\'">\n            Please check or <a ui-sref="management.apis.detail.analytics.logs.loggingconfigure">configure logging mode</a> (client).\n          </p>\n          <p permission permission-except="\'api-log-u\'">Please check or configure logging mode (client).</p>\n        </div>\n\n        <div layout="column" layout-align="center center">\n          <span>\n            <ng-md-icon icon="arrow_forward" size="30px"></ng-md-icon>\n          </span>\n        </div>\n\n        <div layout="column" flex="45" ng-if="$ctrl.log.proxyRequest">\n          <md-table-container>\n            <table md-table class="gv-table-dense">\n              <tbody md-body>\n                <tr md-row>\n                  <td md-cell>\n                    <span\n                      class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{$ctrl.log.proxyRequest.method | uppercase}}-selected"\n                    >\n                      {{$ctrl.log.proxyRequest.method | uppercase}}\n                    </span>\n                  </td>\n                  <td md-cell>{{$ctrl.log.proxyRequest.uri}}</td>\n                </tr>\n              </tbody>\n            </table>\n          </md-table-container>\n          <br />\n          <div ng-if="$ctrl.log.proxyRequest.queryParams.length > 0">\n            <div class="log-section-title">Query Params</div>\n            <md-table-container>\n              <table md-table class="gv-table-dense">\n                <tbody md-body>\n                  <tr md-row ng-repeat="queryParam in $ctrl.log.proxyRequest.queryParams" style="height: 30px">\n                    <td md-cell><span style="font-weight: bold">{{queryParam.key}}</span></td>\n                    <td md-cell>{{queryParam.value}}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </md-table-container>\n            <br />\n          </div>\n\n          <div>\n            <div class="log-section-title">Headers</div>\n            <md-table-container ng-if="$ctrl.log.endpoint">\n              <table md-table class="gv-table-dense">\n                <tbody md-body>\n                  <tr md-row ng-repeat="header in $ctrl.log.proxyRequest.headersAsList" style="height: 30px">\n                    <td md-cell><span style="font-weight: bold">{{header[0]}}</span></td>\n                    <td md-cell>{{header[1]}}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </md-table-container>\n            <br />\n          </div>\n\n          <div ng-if="$ctrl.log.proxyRequest.body" class="log-body">\n            <gv-code\n              flex\n              readonly\n              ng-attr-clipboard="true"\n              ng-attr-value="{{$ctrl.log.proxyRequest.body}}"\n              ng-attr-options="{{$ctrl.codeMirrorOptions($ctrl.log.proxyRequest)}}"\n              ng-on-gv-code:clipboard-copy="$ctrl.onCopyBodySuccess($event);"\n            ></gv-code>\n          </div>\n        </div>\n        <div layout="column" flex="45" layout-align="center center" ng-if="!$ctrl.log.proxyRequest">\n          <p>No log for this request.</p>\n          <p permission permission-only="\'api-log-u\'">\n            Please check or <a ui-sref="management.apis.detail.analytics.logs.loggingconfigure">configure logging mode</a> (proxy).\n          </p>\n          <p permission permission-except="\'api-log-u\'">Please check or configure logging mode (proxy).</p>\n        </div>\n      </div>\n\n      <div\n        layout="row"\n        layout-padding\n        ng-class="{\'gv-log-response-panel-{{$ctrl.log.status / 100 | number:0}}\': true}"\n        style="margin-top: 3px"\n      >\n        <div flex="5" layout="row" layout-align="center center">\n          <span class="vertical-text log-header" style="text-align: center">RESPONSE</span>\n        </div>\n\n        <div layout="column" flex="45" ng-if="$ctrl.log.clientResponse">\n          <md-table-container>\n            <table md-table class="gv-table-dense">\n              <tbody md-body>\n                <tr md-row>\n                  <td md-cell><span style="font-weight: bold">Status</span></td>\n                  <td md-cell>\n                    <span class="gv-statuscode-{{$ctrl.log.clientResponse.status / 100 | number:0}}xx"\n                      >{{$ctrl.log.clientResponse.status | number}}</span\n                    >\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </md-table-container>\n\n          <br />\n\n          <div>\n            <div class="log-section-title">Headers</div>\n            <md-table-container>\n              <table md-table class="gv-table-dense">\n                <tbody md-body>\n                  <tr md-row ng-repeat="header in $ctrl.log.clientResponse.headersAsList" style="height: 30px">\n                    <td md-cell><span style="font-weight: bold">{{header[0]}}</span></td>\n                    <td md-cell>{{header[1]}}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </md-table-container>\n            <br />\n          </div>\n\n          <div ng-if="$ctrl.log.clientResponse.body" class="log-body">\n            <gv-code\n              flex\n              readonly\n              ng-attr-clipboard="true"\n              ng-attr-value="{{$ctrl.log.clientResponse.body}}"\n              ng-attr-options="{{$ctrl.codeMirrorOptions($ctrl.log.clientResponse)}}"\n              ng-on-gv-code:clipboard-copy="$ctrl.onCopyBodySuccess($event);"\n            ></gv-code>\n          </div>\n        </div>\n        <div layout="column" flex="45" layout-align="center center" ng-if="!$ctrl.log.clientResponse">\n          <p>No log for this response.</p>\n          <p permission permission-only="\'api-log-u\'">\n            Please check or <a ui-sref="management.apis.detail.analytics.logs.loggingconfigure">configure logging mode</a> (client).\n          </p>\n          <p permission permission-except="\'api-log-u\'">Please check or configure logging mode (client).</p>\n        </div>\n\n        <div layout="column" layout-align="center center">\n          <span>\n            <ng-md-icon icon="arrow_back" size="30px"></ng-md-icon>\n          </span>\n        </div>\n\n        <div layout="column" flex="45" ng-if="$ctrl.log.proxyResponse">\n          <md-table-container>\n            <table md-table class="gv-table-dense">\n              <tbody md-body>\n                <tr md-row>\n                  <td md-cell><span style="font-weight: bold">Status</span></td>\n                  <td md-cell>\n                    <span class="gv-statuscode-{{$ctrl.log.proxyResponse.status / 100 | number:0}}xx"\n                      >{{$ctrl.log.proxyResponse.status | number}}</span\n                    >\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </md-table-container>\n          <br />\n          <div>\n            <div class="log-section-title">Headers</div>\n            <md-table-container ng-if="$ctrl.log.endpoint">\n              <table md-table class="gv-table-dense">\n                <tbody md-body>\n                  <tr md-row ng-repeat="header in $ctrl.log.proxyResponse.headersAsList" style="height: 30px">\n                    <td md-cell><span style="font-weight: bold">{{header[0]}}</span></td>\n                    <td md-cell>{{header[1]}}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </md-table-container>\n            <br />\n          </div>\n\n          <div ng-if="$ctrl.log.proxyResponse.body" class="log-body">\n            <gv-code\n              flex\n              readonly\n              ng-attr-clipboard="true"\n              ng-attr-value="{{$ctrl.log.proxyResponse.body}}"\n              ng-attr-options="{{$ctrl.codeMirrorOptions($ctrl.log.proxyResponse)}}"\n              ng-on-gv-code:clipboard-copy="$ctrl.onCopyBodySuccess($event);"\n            ></gv-code>\n          </div>\n        </div>\n        <div layout="column" flex="45" layout-align="center center" ng-if="!$ctrl.log.proxyResponse">\n          <p>No log for this response.</p>\n          <p permission permission-only="\'api-log-u\'">\n            Please check or <a ui-sref="management.apis.detail.analytics.logs.loggingconfigure">configure logging mode</a> (proxy).\n          </p>\n          <p permission permission-except="\'api-log-u\'">Please check or configure logging mode (proxy).</p>\n        </div>\n      </div>\n      <div flex="5"></div>\n    </div>\n  </div>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="New path mapping" style="min-width: 600px">\n  <form name="formLoggingConfiguration" ng-submit="$ctrl.save()" novalidate>\n    <md-dialog-content layout-padding layout="column">\n      <h4>Logging condition editor</h4>\n      <label style="color: #5a646d">When multiple conditions are defined, a logical AND is applied.</label>\n\n      <div layout="column">\n        <div layout="row">\n          <md-input-container class="md-block" flex-gt-sm>\n            <label>Condition type</label>\n            <md-select ng-model="$ctrl.selectedType" md-auto-focus>\n              <md-option ng-repeat="type in $ctrl.types" value="{{ type.id }}"> {{ type.title }} </md-option>\n            </md-select>\n          </md-input-container>\n          <md-button md-no-ink class="md-primary" ng-click="$ctrl.addCondition()" ng-disabled="!$ctrl.selectedType"> Add </md-button>\n        </div>\n\n        <hr />\n\n        <div layout="row" ng-repeat="condition in $ctrl.conditions" ng-switch on="condition.type.id">\n          \x3c!-- plan --\x3e\n          <div ng-switch-when="plan" layout="row" layout-align="center center" flex>\n            <div flex="10">\n              <ng-md-icon icon="close" size="24px" ng-click="$ctrl.removeCondition($index)"></ng-md-icon>\n            </div>\n            <md-input-container flex>\n              <label>Plan is </label>\n              <md-select ng-model="condition.value" required>\n                <md-option ng-repeat="plan in $ctrl.plans" value="{{plan.id}}"> {{plan.name}} </md-option>\n              </md-select>\n            </md-input-container>\n          </div>\n\n          \x3c!-- application --\x3e\n          <div ng-switch-when="application" layout="row" layout-align="center center" flex>\n            <div flex="10">\n              <ng-md-icon icon="close" size="24px" ng-click="$ctrl.removeCondition($index)"></ng-md-icon>\n            </div>\n            <md-input-container flex>\n              <label>Application is </label>\n              <md-select ng-model="condition.value" required>\n                <md-option ng-repeat="application in $ctrl.subscribers" value="{{application.id}}"> {{application.name}} </md-option>\n              </md-select>\n            </md-input-container>\n          </div>\n\n          \x3c!-- request header --\x3e\n          <div ng-switch-when="request-header" layout="row" layout-align="center center" flex>\n            <div flex="10">\n              <ng-md-icon icon="close" size="24px" ng-click="$ctrl.removeCondition($index)"></ng-md-icon>\n            </div>\n            <div layout="row" layout-align="space-between center" flex>\n              <md-input-container>\n                <label>Header name</label>\n                <input aria-label="Header name" ng-model="condition.param1" type="text" required />\n              </md-input-container>\n              <span> is equals to </span>\n              <md-input-container>\n                <label>value</label>\n                <input aria-label="Header value" ng-model="condition.value" type="text" required />\n              </md-input-container>\n            </div>\n          </div>\n\n          \x3c!-- request param --\x3e\n          <div ng-switch-when="request-param" layout="row" layout-align="center center" flex>\n            <div flex="10">\n              <ng-md-icon icon="close" size="24px" ng-click="$ctrl.removeCondition($index)"></ng-md-icon>\n            </div>\n            <div layout="row" layout-align="space-between center" flex>\n              <md-input-container>\n                <label>Query parameter name</label>\n                <input aria-label="Param name" ng-model="condition.param1" type="text" required />\n              </md-input-container>\n              <span> is equals to </span>\n              <md-input-container>\n                <label>value</label>\n                <input aria-label="Param value" ng-model="condition.value" type="text" required />\n              </md-input-container>\n            </div>\n          </div>\n\n          \x3c!-- request method --\x3e\n          <div ng-switch-when="request-method" layout="row" layout-align="center center" flex>\n            <div flex="10">\n              <ng-md-icon icon="close" size="24px" ng-click="$ctrl.removeCondition($index)"></ng-md-icon>\n            </div>\n            <md-input-container flex>\n              <label>HTTP Method is</label>\n              <md-select ng-model="condition.value" required>\n                <md-option ng-repeat="method in $ctrl.methods" value="{{method}}"> {{method}} </md-option>\n              </md-select>\n            </md-input-container>\n          </div>\n\n          \x3c!-- request remote address --\x3e\n          <div ng-switch-when="request-remote-address" layout="row" layout-align="center center" flex>\n            <div flex="10">\n              <ng-md-icon icon="close" size="24px" ng-click="$ctrl.removeCondition($index)"></ng-md-icon>\n            </div>\n            <md-input-container style="margin-bottom: 0; padding-bottom: 0" flex>\n              <label>Request remote address is</label>\n              <input ng-model="condition.value" type="text" required />\n            </md-input-container>\n          </div>\n\n          \x3c!-- logging duration --\x3e\n          <div ng-switch-when="logging-duration" layout="row" layout-align="center center" flex>\n            <div flex="10">\n              <ng-md-icon icon="close" size="24px" ng-click="$ctrl.removeCondition($index)"></ng-md-icon>\n            </div>\n            <div layout="row" layout-align="space-between center" flex>\n              <span>Logging is ended in </span>\n              <md-input-container style="margin-bottom: 0; padding-bottom: 0">\n                <label>Duration Time</label>\n                <input ng-model="condition.param1" type="number" min="1" required />\n              </md-input-container>\n              <md-input-container>\n                <label>Time Unit</label>\n                <md-select ng-model="condition.param2" required>\n                  <md-option ng-value="timeUnit" ng-repeat="timeUnit in $ctrl.timeUnits">{{timeUnit}}</md-option>\n                </md-select>\n              </md-input-container>\n            </div>\n          </div>\n\n          \x3c!-- logging end date --\x3e\n          <div ng-switch-when="logging-end-date" layout="row" layout-align="center center" flex>\n            <div flex="10">\n              <ng-md-icon icon="close" size="24px" ng-click="$ctrl.removeCondition($index)"></ng-md-icon>\n            </div>\n            <md-input-container flex>\n              <label>Logging is ended at </label>\n              <input\n                moment-picker="pickerStartDateFormated"\n                format="YYYY-MM-DD HH:mm"\n                ng-model="condition.param1"\n                ng-model-options="{ updateOn: \'blur\' }"\n                required\n              />\n            </md-input-container>\n          </div>\n        </div>\n      </div>\n    </md-dialog-content>\n\n    <md-dialog-actions layout="row">\n      <md-button ng-click="$ctrl.hide()">Cancel</md-button>\n      <md-button type="submit" class="md-raised md-primary" ng-disabled="!$ctrl.isValid()">Save</md-button>\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div ng-if="$ctrl.hasErrors()" class="gv-error">\n  <h5>{{ $ctrl.title }}</h5>\n  <ul>\n    <li ng-repeat="msg in $ctrl.messages track by $index">{{msg}}</li>\n  </ul>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gravitee-identity-picture">\n  <img\n    id="avatar_{{imageId}}"\n    class="avatar show"\n    ng-class="imageBorderRadius?\'rounded\':\'\'"\n    ng-style="imageWidth?{\'width\':imageWidth+\'px\'}:\'\'"\n    ngf-no-object-url="true"\n    ngf-src="identityPictureCtrl.getSource()"\n    onerror="angular.element(this).scope() ? angular.element(this).scope().imgError() : \'\'"\n    onload="angular.element(this).scope() ? angular.element(this).scope().imgLoad() : \'\'"\n    gv-theme-element="{{imageTheme}}"\n  />\n  <div id="jdenticon_{{imageId}}" class="jdenticon" ng-class="imageBorderRadius?\'rounded\':\'\'" gv-theme-element="{{imageTheme}}"></div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div\n  class="gravitee-upload-image"\n  ng-class="{checkered: checkeredBackground}"\n  ngf-select="imgCtrl.selectImage($file,$invalidFiles)"\n  ngf-pattern="\'image/*\'"\n  ngf-accept="\'{{accept}}\'"\n  ngf-max-size="maxSize"\n>\n  <p class="background">{{ changeLabel }}</p>\n  <gravitee-identity-picture\n    image-id="imageId"\n    image="image"\n    image-url="imageUrl"\n    image-name="imageName"\n    image-width="110"\n    no-default-image="noDefaultImage"\n  >\n  </gravitee-identity-picture>\n</div>\n<div class="gravitee-upload-image-button">\n  <a ng-if="canDelete && !imgCtrl.isDefaultImage()" ng-click="imgCtrl.onDelete($event)">{{ deleteLabel }}</a>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-sub-content">\n  <div class="gv-forms gv-forms-fluid" layout="column">\n    <div class="gv-form">\n      <h1 flex>Platform Logs</h1>\n      <div class="gv-form-content" layout="column">\n        <div layout="row">\n          <gv-logs-timeframe on-timeframe-change="$ctrl.timeframeChange(timeframe)" flex></gv-logs-timeframe>\n          <div style="margin: auto">\n            <md-button\n              type="button"\n              class="md-raised"\n              ng-click="$ctrl.exportAsCSV()"\n              ng-disabled="!$ctrl.logs.logs || $ctrl.logs.logs.length === 0"\n            >\n              Export as CSV\n            </md-button>\n          </div>\n        </div>\n\n        <gv-logs-filters context="platform" on-filters-change="$ctrl.filtersChange(filters)" metadata="$ctrl.metadata"></gv-logs-filters>\n\n        <md-table-container layout-padding>\n          <table md-table class="gravitee-analytics-top-hits-table gv-table-dense">\n            <thead md-head md-order="$ctrl.query.field">\n              <tr md-row>\n                <th md-column width="1%" md-order-by="@timestamp" nowrap>Date</th>\n                <th md-column width="1%" md-order-by="status" nowrap>Status</th>\n                <th md-column width="1%" nowrap>API</th>\n                <th md-column width="1%" nowrap>Application</th>\n                <th ng-if="$ctrl.Constants.org.settings.logging.user.displayed" md-column width="1%" md-order-by="user" nowrap>User</th>\n                <th md-column width="1%" nowrap>Plan</th>\n                <th md-column width="1%" md-order-by="method" nowrap>Method</th>\n                <th md-column md-order-by="path">Path</th>\n                <th md-column width="1%" md-order-by="response-time" md-numeric nowrap>Response time</th>\n              </tr>\n            </thead>\n            <tbody md-body>\n              <tr\n                ng-if="$ctrl.logs.logs.length > 0"\n                md-row\n                ng-repeat="log in $ctrl.logs.logs | limitTo: $ctrl.query.size"\n                md-auto-select\n                md-select="log"\n                md-select-id="key"\n                ng-class="{\'log-error\': log.status >= 400}"\n              >\n                <td md-cell nowrap>\n                  <a\n                    ui-sref="management.log({\n          logId: log.id,\n          timestamp: log.timestamp,\n          from: $ctrl.query.from,\n          to: $ctrl.query.to,\n          q: $ctrl.query.query,\n          page: $ctrl.query.page,\n          size: $ctrl.query.size\n          })"\n                  >\n                    {{log.timestamp | date:\'yyyy-MM-dd HH:mm:ss.sss\'}}\n                  </a>\n                </td>\n                <td md-cell nowrap><span class="gv-statuscode-{{log.status / 100 | number:0}}xx">{{log.status}}</span></td>\n                <td md-cell nowrap>{{$ctrl.logs.metadata[log.api].name}}</td>\n                <td md-cell nowrap>{{$ctrl.logs.metadata[log.application].name}}</td>\n                <td ng-if="$ctrl.Constants.org.settings.logging.user.displayed" md-cell nowrap>{{log.user}}</td>\n                <td md-cell nowrap>{{$ctrl.logs.metadata[log.plan].name}}</td>\n                <td md-cell nowrap style="text-align: center">\n                  <span\n                    class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{log.method | uppercase}}-selected"\n                  >\n                    {{log.method | uppercase}}\n                  </span>\n                </td>\n                <td md-cell>{{log.path}}</td>\n                <td md-cell nowrap>{{log.responseTime}} ms</td>\n              </tr>\n              <tr ng-if="$ctrl.logs.total === 0">\n                <td md-cell colspan="8">No log</td>\n              </tr>\n            </tbody>\n          </table>\n        </md-table-container>\n\n        <md-table-pagination\n          md-limit="$ctrl.query.size"\n          md-limit-options="[5, 10, 15, 20, 30, 50, 100]"\n          md-page="$ctrl.query.page"\n          md-total="{{$ctrl.logs.total}}"\n          md-on-paginate="$ctrl.onPaginate"\n        >\n        </md-table-pagination>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-sub-content">\n  <div class="gv-forms gv-forms-fluid" layout="column">\n    <div class="gv-forms-header">\n      <h1>Platform Log</h1>\n      <a ui-sref="management.logs($ctrl.backStateParams)">Back to Logs</a>\n    </div>\n\n    <div class="gv-form">\n      <h2>Details</h2>\n      <div class="gv-form-content" layout="column">\n        <div ng-model="$ctrl.displayContext" ng-if="!$ctrl.displayContext" ng-click="$ctrl.displayContext=true">\n          <a>Show context</a>\n        </div>\n        <div ng-model="$ctrl.displayContext" ng-if="$ctrl.displayContext" ng-click="$ctrl.displayContext=false">\n          <a>Hide context</a>\n        </div>\n\n        <div ng-if="$ctrl.displayContext" layout="row" class="log-table" flex layout-padding layout-align="space-around start">\n          <div layout="column" flex="50">\n            <span class="log-header" style="text-align: center">Context</span>\n            <md-table-container>\n              <table md-table class="gv-table-dense">\n                <tbody md-body>\n                  <tr md-row ng-if="$ctrl.log.securityToken">\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>\n                      {{$ctrl.log.securityType === \'API_KEY\'?\'API key\': \'Client id\'}}\n                    </td>\n                    <td md-cell>{{$ctrl.log.securityToken}}</td>\n                  </tr>\n                  <tr md-row ng-if="$ctrl.log.application">\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Application</td>\n                    <td md-cell>{{$ctrl.log.metadata[$ctrl.log.application].name}}</td>\n                  </tr>\n                  <tr md-row ng-if="$ctrl.log.plan">\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Plan</td>\n                    <td md-cell>{{$ctrl.log.metadata[$ctrl.log.plan].name}}</td>\n                  </tr>\n                  <tr md-row ng-if="$ctrl.log.user && $ctrl.Constants.org.settings.logging.user.displayed">\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>User</td>\n                    <td md-cell>{{$ctrl.log.user}}</td>\n                  </tr>\n                  <tr md-row>\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Endpoint</td>\n                    <td md-cell>{{$ctrl.log.endpoint}}</td>\n                  </tr>\n                  <tr md-row ng-if="$ctrl.log.subscription">\n                    <td md-cell></td>\n                    <td md-cell>\n                      <a\n                        ui-sref="management.apis.detail.portal.subscriptions.subscription({apiId: $ctrl.log.api, subscriptionId: $ctrl.log.subscription})"\n                        >Go to subscription</a\n                      >\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </md-table-container>\n          </div>\n          <div layout="column" flex="50">\n            <span class="log-header" style="text-align: center">Gateway</span>\n            <md-table-container>\n              <table md-table class="gv-table-dense">\n                <tbody md-body>\n                  <tr md-row>\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Host</td>\n                    <td md-cell>{{$ctrl.log.metadata[$ctrl.log.gateway].hostname}}</td>\n                  </tr>\n                  <tr md-row>\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>IP</td>\n                    <td md-cell>{{$ctrl.log.metadata[$ctrl.log.gateway].ip}}</td>\n                  </tr>\n                  <tr md-row ng-if="$ctrl.log.tenant">\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Tenant</td>\n                    <td md-cell>{{$ctrl.log.tenant}}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </md-table-container>\n          </div>\n        </div>\n\n        <div layout="row" class="log-table gv-request-response-table" flex layout-padding layout-align="space-around start">\n          <div layout="column" flex="50">\n            <span class="log-header" style="text-align: center">Request</span>\n            <md-table-container class="gv-log-request-header">\n              <table md-table class="gv-table-dense">\n                <tbody md-body>\n                  <tr md-row style="height: 30px">\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Date</td>\n                    <td md-cell>{{$ctrl.log.timestamp | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n                  </tr>\n                  <tr md-row style="height: 30px" ng-if="$ctrl.log.host">\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Host</td>\n                    <td md-cell>{{$ctrl.log.host}}</td>\n                  </tr>\n                  <tr md-row>\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Request</td>\n                    <td md-cell>\n                      <span\n                        class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{$ctrl.log.method | uppercase}}-selected"\n                      >\n                        {{$ctrl.log.method | uppercase}}\n                      </span>\n                      <span>{{$ctrl.log.uri}}</span>\n                    </td>\n                  </tr>\n                  <tr md-row>\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Content-length</td>\n                    <td md-cell>{{$ctrl.log.requestContentLength}}</td>\n                  </tr>\n                  <tr md-row>\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Request ID</td>\n                    <td md-cell>{{$ctrl.log.id}}</td>\n                  </tr>\n                  <tr md-row>\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Transaction ID</td>\n                    <td md-cell>{{$ctrl.log.transactionId}}</td>\n                  </tr>\n                  <tr md-row>\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Remote IP</td>\n                    <td md-cell>{{$ctrl.log.remoteAddress}}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </md-table-container>\n          </div>\n          <div layout="column" flex="50">\n            <span class="log-header" style="text-align: center">Response</span>\n            <md-table-container ng-class="{\'gv-log-response-header-{{$ctrl.log.status / 100 | number:0}}\': true}">\n              <table md-table class="gv-table-dense">\n                <tbody md-body>\n                  <tr md-row>\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Status</td>\n                    <td md-cell><span class="gv-statuscode-{{$ctrl.log.status / 100 | number:0}}xx">{{$ctrl.log.status}}</span></td>\n                  </tr>\n                  <tr md-row>\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Global response time</td>\n                    <td md-cell>{{$ctrl.log.responseTime | number}} ms</td>\n                  </tr>\n                  <tr md-row>\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>API response time</td>\n                    <td md-cell>{{$ctrl.log.apiResponseTime | number}} ms</td>\n                  </tr>\n                  <tr md-row>\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Latency</td>\n                    <td md-cell>{{$ctrl.log.responseTime - $ctrl.log.apiResponseTime | number}} ms</td>\n                  </tr>\n                  <tr md-row>\n                    <td md-cell style="width: 1%; font-weight: bold" nowrap>Content-length</td>\n                    <td md-cell>{{$ctrl.log.responseContentLength}}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </md-table-container>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class="gv-form gv-form-danger" ng-if="$ctrl.log.message">\n      <h2>Error</h2>\n      <div class="gv-form-content" layout="column">\n        <div\n          flex\n          ui-codemirror\n          ui-codemirror-opts="{lineNumbers: true, readOnly: true, mode: \'text/x-java\'}"\n          ng-model="$ctrl.log.message"\n        ></div>\n      </div>\n    </div>\n\n    <div class="gv-form">\n      <h2></h2>\n      <div class="gv-form-content" layout="column">\n        <div class="log-table" layout="column" layout-padding>\n          <div layout="row" layout-padding>\n            <span class="log-header" flex="5"></span>\n\n            <div flex="45" layout="row" layout-align="center center">\n              <span class="log-header">CONSUMER</span>\n            </div>\n\n            <span class="log-header" flex="5" ng-if="$ctrl.log.endpoint"></span>\n\n            <div flex="45" layout="row" layout-align="center center">\n              <span class="log-header">GATEWAY</span>\n            </div>\n          </div>\n\n          <div layout="row" layout-padding style="background-color: #e1f5fe; border: 1px solid #b3e5fc">\n            <div flex="5" layout="row" layout-align="center center" style="background-color: #b3e5fc">\n              <span class="vertical-text log-header" style="text-align: center">REQUEST</span>\n            </div>\n\n            <div layout="column" flex="45" ng-if="$ctrl.log.clientRequest">\n              <md-table-container>\n                <table md-table class="gv-table-dense">\n                  <tbody md-body>\n                    <tr md-row>\n                      <td md-cell>\n                        <span\n                          class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{$ctrl.log.method | uppercase}}-selected"\n                        >\n                          {{$ctrl.log.clientRequest.method | uppercase}}\n                        </span>\n                      </td>\n                      <td md-cell>{{$ctrl.log.clientRequest.uri}}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </md-table-container>\n\n              <br />\n\n              <md-table-container>\n                <table md-table class="gv-table-dense">\n                  <tbody md-body>\n                    <tr md-row ng-repeat="header in $ctrl.log.clientRequest.headersAsList" style="height: 30px">\n                      <td md-cell><span style="font-weight: bold">{{header[0]}}</span></td>\n                      <td md-cell>{{header[1]}}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </md-table-container>\n\n              <br />\n\n              <div ng-if="$ctrl.log.clientRequest.body" class="log-body">\n                <div\n                  ui-codemirror\n                  ui-codemirror-opts="{lineNumbers: true, lineWrapping: true, readOnly: true, mode: $ctrl.getMimeType($ctrl.log.clientRequest)}"\n                  ng-model="$ctrl.log.clientRequest.body"\n                ></div>\n                <button class="copy">\n                  <md-tooltip md-direction="top">Copy to clipboard</md-tooltip>\n                  <ng-md-icon\n                    icon="content_copy"\n                    ngclipboard\n                    data-clipboard-text="{{$ctrl.log.clientRequest.body}}"\n                    ngclipboard-success="$ctrl.onCopyBodySuccess(e);"\n                    role="button"\n                  ></ng-md-icon>\n                </button>\n              </div>\n            </div>\n            <div layout="column" flex="45" layout-align="center center" ng-if="!$ctrl.log.clientRequest">\n              <p>No log for this request.</p>\n              <p>Please check or configure logging mode (client).</p>\n            </div>\n\n            <div flex="5" layout="column" layout-align="center center">\n              <span>\n                <ng-md-icon icon="arrow_forward" size="30px"></ng-md-icon>\n              </span>\n            </div>\n\n            <div layout="column" flex="45" ng-if="$ctrl.log.proxyRequest">\n              <md-table-container>\n                <table md-table class="gv-table-dense">\n                  <tbody md-body>\n                    <tr md-row>\n                      <td md-cell>\n                        <span\n                          class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{$ctrl.log.proxyRequest.method | uppercase}}-selected"\n                        >\n                          {{$ctrl.log.proxyRequest.method | uppercase}}\n                        </span>\n                      </td>\n                      <td md-cell>{{$ctrl.log.proxyRequest.uri}}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </md-table-container>\n\n              <br />\n\n              <md-table-container ng-if="$ctrl.log.endpoint">\n                <table md-table class="gv-table-dense">\n                  <tbody md-body>\n                    <tr md-row ng-repeat="header in $ctrl.log.proxyRequest.headersAsList" style="height: 30px">\n                      <td md-cell><span style="font-weight: bold">{{header[0]}}</span></td>\n                      <td md-cell>{{header[1]}}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </md-table-container>\n\n              <br />\n\n              <div ng-if="$ctrl.log.proxyRequest.body" class="log-body">\n                <div\n                  ui-codemirror\n                  ui-codemirror-opts="{lineNumbers: true, lineWrapping: true, readOnly: true, mode: $ctrl.getMimeType($ctrl.log.proxyRequest)}"\n                  ng-model="$ctrl.log.proxyRequest.body"\n                ></div>\n                <button class="copy">\n                  <md-tooltip md-direction="top">Copy to clipboard</md-tooltip>\n                  <ng-md-icon\n                    icon="content_copy"\n                    ngclipboard\n                    data-clipboard-text="{{$ctrl.log.proxyRequest.body}}"\n                    ngclipboard-success="$ctrl.onCopyBodySuccess(e);"\n                    role="button"\n                  ></ng-md-icon>\n                </button>\n              </div>\n            </div>\n            <div layout="column" flex="45" layout-align="center center" ng-if="!$ctrl.log.proxyRequest">\n              <p>No log for this request.</p>\n              <p>Please check or configure logging mode (proxy).</p>\n            </div>\n          </div>\n\n          <div\n            layout="row"\n            layout-padding\n            ng-class="{\'gv-log-response-panel-{{$ctrl.log.status / 100 | number:0}}\': true}"\n            style="margin-top: 3px"\n          >\n            <div flex="5" layout="row" layout-align="center center">\n              <span class="vertical-text log-header" style="text-align: center">RESPONSE</span>\n            </div>\n\n            <div layout="column" flex="45" ng-if="$ctrl.log.clientResponse">\n              <md-table-container>\n                <table md-table class="gv-table-dense">\n                  <tbody md-body>\n                    <tr md-row>\n                      <td md-cell><span style="font-weight: bold">Status</span></td>\n                      <td md-cell>\n                        <span class="gv-statuscode-{{$ctrl.log.clientResponse.status / 100 | number:0}}xx"\n                          >{{$ctrl.log.clientResponse.status | number}}</span\n                        >\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </md-table-container>\n\n              <br />\n\n              <md-table-container>\n                <table md-table class="gv-table-dense">\n                  <tbody md-body>\n                    <tr md-row ng-repeat="header in $ctrl.log.clientResponse.headersAsList" style="height: 30px">\n                      <td md-cell><span style="font-weight: bold">{{header[0]}}</span></td>\n                      <td md-cell>{{header[1]}}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </md-table-container>\n\n              <br />\n\n              <div ng-if="$ctrl.log.clientResponse.body" class="log-body">\n                <div\n                  ui-codemirror\n                  ui-codemirror-opts="{lineNumbers: true, readOnly: true, lineWrapping: true, mode: $ctrl.getMimeType($ctrl.log.clientResponse)}"\n                  ng-model="$ctrl.log.clientResponse.body"\n                ></div>\n                <button class="copy">\n                  <md-tooltip md-direction="top">Copy to clipboard</md-tooltip>\n                  <ng-md-icon\n                    icon="content_copy"\n                    ngclipboard\n                    data-clipboard-text="{{$ctrl.log.clientResponse.body}}"\n                    ngclipboard-success="$ctrl.onCopyBodySuccess(e);"\n                    role="button"\n                  ></ng-md-icon>\n                </button>\n              </div>\n            </div>\n            <div layout="column" flex="45" layout-align="center center" ng-if="!$ctrl.log.clientResponse">\n              <p>No log for this response.</p>\n              <p>Please check or configure logging mode (client).</p>\n            </div>\n\n            <div flex="5" layout="column" layout-align="center center">\n              <span>\n                <ng-md-icon icon="arrow_back" size="30px"></ng-md-icon>\n              </span>\n            </div>\n\n            <div layout="column" flex="45" ng-if="$ctrl.log.proxyResponse">\n              <md-table-container>\n                <table md-table class="gv-table-dense">\n                  <tbody md-body>\n                    <tr md-row>\n                      <td md-cell><span style="font-weight: bold">Status</span></td>\n                      <td md-cell>\n                        <span class="gv-statuscode-{{$ctrl.log.proxyResponse.status / 100 | number:0}}xx"\n                          >{{$ctrl.log.proxyResponse.status | number}}</span\n                        >\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </md-table-container>\n\n              <br />\n\n              <md-table-container ng-if="$ctrl.log.endpoint">\n                <table md-table class="gv-table-dense">\n                  <tbody md-body>\n                    <tr md-row ng-repeat="header in $ctrl.log.proxyResponse.headersAsList" style="height: 30px">\n                      <td md-cell><span style="font-weight: bold">{{header[0]}}</span></td>\n                      <td md-cell>{{header[1]}}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </md-table-container>\n\n              <br />\n\n              <div ng-if="$ctrl.log.proxyResponse.body" class="log-body">\n                <div\n                  ui-codemirror\n                  ui-codemirror-opts="{lineNumbers: true, lineWrapping: true, readOnly: true, mode: $ctrl.getMimeType($ctrl.log.proxyResponse)}"\n                  ng-model="$ctrl.log.proxyResponse.body"\n                ></div>\n                <button class="copy">\n                  <md-tooltip md-direction="top">Copy to clipboard</md-tooltip>\n                  <ng-md-icon\n                    icon="content_copy"\n                    ngclipboard\n                    data-clipboard-text="{{$ctrl.log.proxyResponse.body}}"\n                    ngclipboard-success="$ctrl.onCopyBodySuccess(e);"\n                    role="button"\n                  ></ng-md-icon>\n                </button>\n              </div>\n            </div>\n            <div layout="column" flex="45" layout-align="center center" ng-if="!$ctrl.log.proxyResponse">\n              <p>No log for this response.</p>\n              <p>Please check or configure logging mode (proxy).</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Delete category \'{{category}}\'">\n  <md-dialog-content layout-padding>\n    <p>Are you sure you want to delete the category \'{{category}}\'?</p>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="cancel()" md-auto-focus> Cancel </md-button>\n    <md-button ng-click="ok()" class="md-raised md-warn"> Delete category </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Detach api \'{{api}}\'">\n  <md-dialog-content layout-padding>\n    <p>Are you sure you want to detach the API {{api}} ?</p>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="cancel()" md-auto-focus> Cancel </md-button>\n    <md-button ng-click="ok()" class="md-raised md-warn"> Detach API </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div layout="column" flex layout-align="center center" style="color: #424e5a">\n  <ng-md-icon icon="{{icon}}" ng-style="{\'fill\':fill?fill:\'#cdcccc\'}" size="120"></ng-md-icon>\n  <h2>{{message}}</h2>\n  <div>\n    <h5>{{subMessage}}</h5>\n  </div>\n  <div ng-transclude></div>\n</div>\n'},function(e,t){e.exports="\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label=\"Delete {{$ctrl.referenceType ? $ctrl.referenceType + '\\'s ' : ''}}metadata '{{$ctrl.metadata}}'\">\n  <md-dialog-content layout-padding>\n    <p>Are you sure you want to delete the {{$ctrl.referenceType ? $ctrl.referenceType + '\\'s ' : ''}}metadata '{{$ctrl.metadataName}}'?</p>\n  </md-dialog-content>\n  <md-dialog-actions layout=\"row\">\n    <md-button ng-click=\"$ctrl.cancel()\"> Cancel </md-button>\n    <md-button ng-click=\"$ctrl.delete()\" class=\"md-raised md-warn\">\n      Delete {{$ctrl.referenceType ? $ctrl.referenceType + '\\'s ' : ''}}metadata\n    </md-button>\n  </md-dialog-actions>\n</md-dialog>\n"},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <h1>Categories</h1>\n  <div class="gv-form">\n    <div class="gv-form-content" layout="column">\n      <md-input-container class="gv-input-container-dense">\n        <md-switch\n          ng-model="$ctrl.settings.portal.apis.categoryMode.enabled"\n          aria-label="Category Mode"\n          ng-change="$ctrl.toggleDisplayMode();"\n          ng-disabled="$ctrl.isReadonlySetting(\'portal.apis.categoryMode.enabled\')"\n        >\n          Enable Category Mode\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.apis.categoryMode.enabled\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-switch>\n        <div class="hint">\n          Switch on to enable Category mode and automatically replace API gallery by Category gallery. Switch off to disable this option.\n        </div>\n      </md-input-container>\n\n      <md-table-container ng-if="$ctrl.categories && $ctrl.categories.length > 0">\n        <table md-table>\n          <thead md-head>\n            <tr md-row>\n              <th md-column width="1%"></th>\n              <th md-column width="1%" nowrap>Name</th>\n              <th md-column>Description</th>\n              <th md-column width="1%" nowrap>Visibility</th>\n              <th md-column width="1%" nowrap>APIs</th>\n              <th md-column width="96px" nowrap></th>\n              <th md-column width="48px" nowrap></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="category in $ctrl.categories | orderBy:category.order">\n              <td md-cell nowrap>\n                <gravitee-identity-picture\n                  image-id="category.id"\n                  image-url="::category.picture_url"\n                  image-name="category.name"\n                  image-width="40"\n                ></gravitee-identity-picture>\n              </td>\n              <td md-cell width="1%" nowrap>\n                <a ui-sref="management.settings.categories.category({categoryId: category.key})">{{category.name}}</a>\n              </td>\n              <td md-cell>{{category.description}}</td>\n              <td permission permission-only="\'environment-category-u\'" md-cell width="1%" nowrap>\n                <ng-md-icon icon="visibility{{category.hidden?\'_off\':\'\'}}" ng-click="$ctrl.toggleVisibility(category)"></ng-md-icon>\n              </td>\n              <td md-cell width="1%" nowrap>{{category.totalApis}}</td>\n              <td md-cell width="96px" nowrap style="text-align: center">\n                <ng-md-icon\n                  permission\n                  permission-only="\'environment-category-u\'"\n                  ng-if="!$first"\n                  icon="arrow_upwards"\n                  ng-click="$ctrl.upward($index)"\n                ></ng-md-icon>\n                <ng-md-icon\n                  permission\n                  permission-only="\'environment-category-u\'"\n                  ng-if="!$last"\n                  icon="arrow_downward"\n                  ng-click="$ctrl.downward($index)"\n                ></ng-md-icon>\n              </td>\n              <td md-cell width="48px" style="padding: 0 12px !important">\n                <ng-md-icon permission permission-only="\'environment-category-d\'" icon="delete" ng-click="$ctrl.deleteCategory(category)">\n                  <md-tooltip md-direction="top" md-visible="false">Delete</md-tooltip>\n                </ng-md-icon>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n    </div>\n  </div>\n  <gravitee-empty-state\n    ng-if="!$ctrl.categories || $ctrl.categories.length == 0"\n    icon="category_module"\n    message="There is no category to manage"\n  ></gravitee-empty-state>\n</div>\n\n<md-button\n  permission\n  permission-only="\'environment-category-c\'"\n  aria-label="Add category"\n  class="md-fab md-fab-bottom-right md-fab-scrollable"\n  ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"\n  ui-sref="management.settings.categories.create"\n>\n  <md-tooltip md-direction="top" md-visible="false">Add a new category</md-tooltip>\n  <ng-md-icon icon="add"></ng-md-icon>\n</md-button>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms" layout="column">\n  <div class="gv-forms-header">\n    <h1>{{$ctrl.createMode ? \'New\' : \'Edit\'}} category</h1>\n    <a ui-sref="management.settings.categories.list">Back to categories</a>\n  </div>\n  <div class="gv-form">\n    <h2>General</h2>\n    <div class="gv-form-content" layout="column">\n      <form name="$ctrl.categoryForm">\n        <div layout="row">\n          <div layout="column" flex>\n            <div layout-gt-sm="row">\n              <md-input-container class="md-block" flex-gt-sm>\n                <label>Name</label>\n                <input ng-model="$ctrl.category.name" type="text" required name="name" maxlength="50" />\n                <div class="hint" ng-if="$ctrl.categoryForm.name.$valid || $ctrl.categoryForm.name.$pristine">Category Name</div>\n                <div ng-messages="$ctrl.categoryForm.name.$error">\n                  <div ng-message="required">Category name is required.</div>\n                  <div ng-message="md-maxlength">The name has to be less than 50 characters long.</div>\n                </div>\n              </md-input-container>\n            </div>\n\n            <div layout-gt-sm="row">\n              <md-input-container class="md-block" flex-gt-sm>\n                <label>Description</label>\n                <input ng-model="$ctrl.category.description" type="text" name="description" />\n                <div class="hint" ng-if="$ctrl.categoryForm.description.$valid || $ctrl.categoryForm.description.$pristine">\n                  Provide a description of your category\n                </div>\n              </md-input-container>\n            </div>\n\n            <div layout-gt-sm="row" class="new-category-form-input-action">\n              <md-input-container class="md-block" flex-gt-sm>\n                <label>Visibility</label>\n                <ng-md-icon icon="visibility{{$ctrl.category.hidden?\'_off\':\'\'}}" ng-click="$ctrl.toggleVisibility()"></ng-md-icon>\n                <div class="hint" ng-if="$ctrl.categoryForm.name.$valid || $ctrl.categoryForm.name.$pristine">\n                  Choose to display or hide the category\n                </div>\n              </md-input-container>\n            </div>\n\n            <div layout-gt-sm="row">\n              <md-input-container class="md-block" flex-gt-xs>\n                <label>Documentation page</label>\n                <md-select ng-model="$ctrl.category.page">\n                  <md-option ng-repeat="resource in $ctrl.pages" ng-value="resource.id">\n                    <md-icon ng-if="resource.type" md-svg-src="assets/logo_{{resource.type | lowercase}}.svg"></md-icon>\n                    <div ng-if="resource.type">\n                      <span style="font-style: italic; opacity: 0.5">{{ resource.parentPath }}</span>/{{ resource.name }}\n                    </div>\n                  </md-option>\n                </md-select>\n                <div class="hint">Provide a documentation page for your category</div>\n              </md-input-container>\n            </div>\n          </div>\n          <div>\n            <gravitee-image\n              image-id="\'category\'"\n              image="$ctrl.category.picture"\n              image-url="$ctrl.category.picture_url"\n              image-name="$ctrl.category.name"\n              success-event-name="categoryPictureChangeSuccess"\n            ></gravitee-image>\n          </div>\n          <div>\n            <gravitee-image\n              image-id="\'bg-category\'"\n              image="$ctrl.category.background"\n              image-url="$ctrl.category.background_url"\n              image-name="\'bg-\' + $ctrl.category.name"\n              change-label="Change background"\n              no-default-image="true"\n              success-event-name="categoryBackgroundChangeSuccess"\n              can-delete="true"\n              delete-label="Use default"\n            ></gravitee-image>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <div class="gv-form">\n    <h2>APIs</h2>\n    <div class="gv-form-content" layout="column">\n      <blockquote style="border-left: none">\n        <p style="font-size: 12px">\n          <ng-md-icon icon="info" style="fill: grey"></ng-md-icon>\n          Choose among APIs which one will be attached to the category.\n        </p>\n      </blockquote>\n\n      <div layout="row" layout-align="space-around center">\n        <md-autocomplete\n          md-input-id="new-category-apis-autocomplete-id"\n          flex="70"\n          md-search-text="$ctrl.searchText"\n          md-selected-item-change="$ctrl.selectedApiChange(api)"\n          md-items="api in $ctrl.searchAPI($ctrl.searchText)"\n          md-item-text="api.name"\n          placeholder="Select an API"\n          md-autofocus="false"\n          md-delay="500"\n          md-min-length="0"\n          md-no-cache="true"\n          md-menu-class="autocomplete-custom-template"\n        >\n          <md-item-template>\n            <md-list-item class="md-2-line contact-item">\n              <div class="md-list-item-text compact">\n                <h3><ng-md-icon icon="collections_bookmark" style="fill: grey"></ng-md-icon> {{api.name}}</h3>\n                <h4 ng-if="api.version">\n                  <ng-md-icon icon="watch_later" style="fill: grey" size="14px"></ng-md-icon> <small>{{api.version}}</small>\n                </h4>\n              </div>\n            </md-list-item>\n          </md-item-template>\n          <md-not-found> No API matching "{{$ctrl.searchText}}" were found. </md-not-found>\n        </md-autocomplete>\n      </div>\n\n      <md-table-container style="margin-top: 10px" ng-if="$ctrl.getApis().length > 0">\n        <table md-table>\n          <thead md-head>\n            <tr md-row>\n              <th md-column><span>Name</span></th>\n              <th md-column>Version</th>\n              <th md-column>Context path</th>\n              <th md-column>Highlight API <md-tooltip md-direction="top">Highlight API will put your API in the spotlights</md-tooltip></th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="api in $ctrl.getApis() track by api.id">\n              <td md-cell>{{api.name}}</td>\n              <td md-cell>{{api.version}}</td>\n              <td md-cell>{{api.context_path}}</td>\n              <td md-cell>\n                <md-checkbox\n                  ng-click="$ctrl.toggleHighlightAPI(api)"\n                  aria-label="highlight API"\n                  ng-checked="$ctrl.isHighlightApi(api)"\n                ></md-checkbox>\n              </td>\n              <td md-cell>\n                <ng-md-icon\n                  permission\n                  permission-only="\'environment-category-u\'"\n                  icon="delete"\n                  ng-click="$ctrl.removeApi(api)"\n                ></ng-md-icon>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <div layout="row">\n        <md-button\n          ng-disabled="$ctrl.categoryForm.$invalid || $ctrl.categoryForm.$pristine && !$ctrl.formChanged"\n          ng-click="$ctrl.save()"\n          permission\n          permission-only="[\'environment-category-c\', \'environment-category-u\']"\n          class="md-raised md-primary"\n        >\n          Save\n        </md-button>\n        <md-button\n          ng-disabled="$ctrl.categoryForm.$invalid || $ctrl.categoryForm.$pristine && !$ctrl.formChanged"\n          ng-click="$ctrl.reset()"\n          permission\n          permission-only="[\'environment-category-c\', \'environment-category-u\']"\n          class="md-raised"\n        >\n          Reset\n        </md-button>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <h1>{{$ctrl.referenceType ? $ctrl.referenceType + \'\\\'s \' : \'Global\\\'s \'}}metadata</h1>\n  <div class="gv-form">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <md-table-container>\n        <table md-table class="gv-table-dense" ng-init="metadataOrder = \'key\'">\n          <thead md-head md-order="metadataOrder">\n            <tr md-row>\n              <th md-column md-order-by="key">Key</th>\n              <th md-column md-order-by="name">Name</th>\n              <th md-column md-order-by="format">Format</th>\n              <th md-column md-order-by="value">Value</th>\n              <th md-column md-order-by="defaultValue" ng-if="$ctrl.referenceType === \'API\'">Default value</th>\n              <th md-column nowrap ng-if="$ctrl.canDelete"></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="metadata in $ctrl.metadata | orderBy: metadataOrder">\n              <td md-cell>\n                <a ng-if="$ctrl.canUpdate" ng-click="$ctrl.updateMetadata(metadata)">{{metadata.key}}</a>\n                <span ng-if="!$ctrl.canUpdate">{{metadata.key}}</span>\n              </td>\n              <td md-cell>{{metadata.name}}</td>\n              <td md-cell>{{metadata.format | lowercase}}</td>\n              <td md-cell>{{metadata.value}}</td>\n              <td md-cell ng-if="$ctrl.referenceType === \'API\'">{{metadata.defaultValue}}</td>\n              <td md-cell ng-if="$ctrl.canDelete">\n                <div style="width: 64px" layout="row" layout-align="end end">\n                  <ng-md-icon\n                    icon="delete"\n                    ng-click="$ctrl.deleteMetadata(metadata)"\n                    style="font-size: 24px; height: 24px"\n                    ng-if="$ctrl.metadataDeletable(metadata)"\n                  >\n                    <md-tooltip md-direction="top" md-visible="false"\n                      >Delete {{$ctrl.referenceType ? $ctrl.referenceType + \'\\\'s \' : \'\'}}metadata</md-tooltip\n                    >\n                  </ng-md-icon>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n    </div>\n  </div>\n</div>\n\n<md-button\n  ng-if="$ctrl.canCreate"\n  aria-label="Add {{$ctrl.referenceType ? $ctrl.referenceType + \'\\\'s \' : \'\'}}metadata"\n  class="md-fab md-fab-bottom-right md-fab-scrollable"\n  ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"\n  ng-click="$ctrl.newMetadata()"\n>\n  <md-tooltip md-direction="top" md-visible="false"\n    >Add a new {{$ctrl.referenceType ? $ctrl.referenceType + \'\\\'s \' : \'\'}}metadata</md-tooltip\n  >\n  <ng-md-icon icon="add"></ng-md-icon>\n</md-button>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div flex layout="row">\n  <application-navigation [application-name]="$ctrl.application.name"></application-navigation>\n  <div class="gv-sub-content" flex layout="column" ui-view></div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<api-navigation\n  [api-name]="apiCtrl.api.name"\n  [api-version]="apiCtrl.api.version"\n  [api-state]="apiCtrl.api.state"\n  [api-lifecycle-state]="apiCtrl.api.lifecycle_state"\n  [api-is-sync]="apiCtrl.apiIsSynchronized"\n  [api-origin]="apiCtrl.api.definition_context.origin"\n  [gravitee-version]="apiCtrl.api.gravitee"\n>\n  <div id="banner" class="top-api-banner">\n    <div class="gravitee-api-banner" ng-class="{\'gravitee-api-banner-min\': reducedMode}" ng-if="apiCtrl.canReview()" ng-cloak="">\n      <div class="gravitee-api-banner-content" style="background-color: #d73a49">\n        API in review<span permission permission-only="\'api-reviews-u\'"\n          >, <a href="" ng-click="apiCtrl.showReviewConfirm($event, apiCtrl.api)">accept/reject changes</a></span\n        >\n      </div>\n    </div>\n    <div class="gravitee-api-banner" ng-class="{\'gravitee-api-banner-min\': reducedMode}" ng-if="apiCtrl.isRequestForChanges()" ng-cloak="">\n      <div class="gravitee-api-banner-content" style="background-color: #d73a49">API reviewer requested changes</div>\n    </div>\n    <div class="gravitee-api-banner" ng-class="{\'gravitee-api-banner-min\': reducedMode}" ng-if="apiCtrl.isInDraft()" ng-cloak="">\n      <div class="gravitee-api-banner-content" style="background-color: #54a3ff">API in draft</div>\n    </div>\n    <div class="gravitee-api-banner" ng-class="{\'gravitee-api-banner-min\': reducedMode}" ng-if="apiCtrl.isReviewOK()" ng-cloak="">\n      <div class="gravitee-api-banner-content" style="background-color: #429f46">\n        API review accepted<span permission permission-only="\'api-reviews-u\'"\n          >,\n          <a href="" ng-click="apiCtrl.showRequestForChangesConfirm($event, apiCtrl.api)">request for changes</a>\n        </span>\n      </div>\n    </div>\n    <div\n      class="gravitee-api-banner"\n      ng-class="{\'gravitee-api-banner-min\': reducedMode}"\n      ng-hide="apiCtrl.apiIsSynchronized || apiCtrl.apiJustDeployed"\n      ng-cloak=""\n      ng-if="apiCtrl.canDeploy()"\n    >\n      <div class="gravitee-api-banner-content">\n        API out of sync<span permission permission-only="\'api-definition-u\'"\n          >, <a href="" ng-click="apiCtrl.showDeployAPIConfirm($event, apiCtrl.api)">deploy your API</a></span\n        >\n      </div>\n    </div>\n    <div class="gravitee-api-banner" ng-class="{\'gravitee-api-banner-min\': reducedMode}" ng-if="apiCtrl.isDeprecated()" ng-cloak="">\n      <div class="gravitee-api-banner-content" style="background-color: #d73a49">API deprecated</div>\n    </div>\n  </div>\n\n  <div id="view" class="api-content">\n    <div\n      flex\n      ng-class="{\n        \'gv-sub-content-design\': apiCtrl.$state.current.name.startsWith(\'management.apis.detail.design.flows\'),\n        \'gv-sub-content-fullscreen\': apiCtrl.$state.current.data.useAngularMaterial,\n        \'gv-sub-content\': !apiCtrl.$state.current.data.useAngularMaterial\n      }"\n      ui-view\n      layout="column"\n    ></div>\n  </div>\n</api-navigation>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<section class="new-api-import">\n  <div layout="column">\n    <div layout="row" layout-align="center" style="margin-top: 40px">\n      <div layout="column" class="import-container">\n        <div class="card-import">\n          <div class="title">{{ getDefinitionVersionTitle(definitionVersion) }}</div>\n          <div class="description">\n            <abbr title="The import refer to the definition version included in file to choose the DESIGN MODE">API definition</abbr>\n            or your Swagger descriptor file or a WSDL\n          </div>\n          <gv-api-import\n            policies="$ctrl.policies"\n            definition-version="$ctrl.definitionVersion"\n            cancel-action="$ctrl.cancelImport()"\n          ></gv-api-import>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <div layout="row">\n    <h1 flex>Overview</h1>\n    <div layout="row" ng-if="analyticsCtrl.dashboards.length">\n      <label style="padding: 27px">Select a dashboard</label>\n      <md-input-container>\n        <md-select ng-model="analyticsCtrl.dashboard" ng-change="analyticsCtrl.onDashboardChanged()" aria-label="Dashboard selection">\n          <md-option ng-repeat="dashboard in analyticsCtrl.dashboards" ng-value="dashboard"> {{dashboard.name}} </md-option>\n        </md-select>\n      </md-input-container>\n    </div>\n  </div>\n\n  <div class="gv-form">\n    <gv-dashboard model="analyticsCtrl.dashboard" on-view-log-click="analyticsCtrl.viewLogs()" access-logs="true"></gv-dashboard>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <div class="gv-forms-header">\n    <h1>Logs</h1>\n    <a permission permission-only="\'api-log-u\'" ui-sref="management.apis.detail.analytics.logs.loggingconfigure">Configure the logging</a>\n  </div>\n  <div class="gv-form">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <div layout="row">\n        <gv-logs-timeframe on-timeframe-change="logsCtrl.timeframeChange(timeframe)" flex></gv-logs-timeframe>\n        <div style="margin: auto">\n          <md-button\n            type="button"\n            class="md-raised"\n            ng-click="logsCtrl.exportAsCSV()"\n            ng-disabled="!logsCtrl.logs.logs || logsCtrl.logs.logs.length === 0"\n          >\n            Export as CSV\n            <div id="hidden-export-container" style="display: none"></div>\n          </md-button>\n        </div>\n      </div>\n\n      <gv-logs-filters\n        context="api"\n        on-filters-change="logsCtrl.filtersChange(filters)"\n        metadata="logsCtrl.metadata"\n        api="logsCtrl.api"\n      ></gv-logs-filters>\n\n      <md-table-container layout-padding>\n        <table\n          md-table\n          class="gravitee-analytics-top-hits-table gv-table-dense"\n          multiple\n          md-row-select="logsCtrl.widget.chart.selectable"\n          data-ng-model="logsCtrl.selected"\n        >\n          <thead md-head md-order="logsCtrl.query.field">\n            <tr md-row>\n              <th md-column width="1%" md-order-by="@timestamp" nowrap>Date</th>\n              <th md-column width="1%" md-order-by="status" nowrap>Status</th>\n              <th md-column width="1%" nowrap>Application</th>\n              <th ng-if="logsCtrl.Constants.org.settings.logging.user.displayed" md-column width="1%" md-order-by="user" nowrap>User</th>\n              <th md-column width="1%" nowrap>Plan</th>\n              <th md-column width="1%" md-order-by="method" nowrap>Method</th>\n              <th md-column md-order-by="path">Path</th>\n              <th md-column width="1%" md-order-by="response-time" md-numeric nowrap>Response time</th>\n              <th md-column width="1%" nowrap>Endpoint</th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr\n              ng-if="logsCtrl.logs.logs.length > 0"\n              md-row\n              ng-repeat="log in logsCtrl.logs.logs | limitTo: logsCtrl.query.size"\n              md-auto-select\n              md-select="log"\n              md-select-id="key"\n              ng-class="{\'log-error\': log.status >= 400}"\n            >\n              <td md-cell nowrap>\n                <a\n                  ui-sref="management.apis.detail.analytics.logs.log({\n              logId: log.id,\n              timestamp: log.timestamp,\n              from: logsCtrl.query.from,\n              to: logsCtrl.query.to,\n              q: logsCtrl.query.query,\n              page: logsCtrl.query.page,\n              size: logsCtrl.query.size\n              })"\n                >\n                  {{log.timestamp | date:\'yyyy-MM-dd HH:mm:ss.sss\'}}\n                </a>\n              </td>\n              <td md-cell nowrap><span class="gv-statuscode-{{log.status / 100 | number:0}}xx">{{log.status}}</span></td>\n              <td md-cell nowrap>{{logsCtrl.getMetadata(log.application).name}}</td>\n              <td ng-if="logsCtrl.Constants.org.settings.logging.user.displayed" md-cell nowrap>{{log.user}}</td>\n              <td md-cell nowrap>{{logsCtrl.getMetadata(log.plan).name}}</td>\n              <td md-cell nowrap style="text-align: center">\n                <span\n                  class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{log.method | uppercase}}-selected"\n                >\n                  {{log.method | uppercase}}\n                </span>\n              </td>\n              <td md-cell>{{log.path}}</td>\n              <td md-cell nowrap>{{log.responseTime}} ms</td>\n              <td md-cell><span ng-if="log.endpoint">X</span></td>\n            </tr>\n            <tr ng-if="logsCtrl.logs.total === 0">\n              <td md-cell colspan="9" style="text-align: center">No log</td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <md-table-pagination\n        md-limit="logsCtrl.query.size"\n        md-limit-options="[5, 10, 15, 20, 30, 50, 100]"\n        md-page="logsCtrl.query.page"\n        md-total="{{logsCtrl.logs.total}}"\n        md-on-paginate="logsCtrl.onPaginate"\n      >\n      </md-table-pagination>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<form\n  name="formLogging"\n  ng-submit="loggingCtrl.update(loggingCtrl.api)"\n  novalidate\n  class="api-analytics-logging-configuration"\n  ng-class="{\'api-analytics-logging-configuration_enabled\' : loggingCtrl.enabled}"\n>\n  <div class="gv-forms" layout="column">\n    <div class="gv-forms-header">\n      <h1>Logging configuration</h1>\n      <a ui-sref="management.apis.detail.analytics.logs.list">Back to logs</a>\n    </div>\n\n    <div class="gv-form">\n      <div class="gv-form-content">\n        <div layout="row" flex-xs="50">\n          <md-input-container class="md-block" flex-gt-sm>\n            <gv-switch\n              label="Enabled / Disabled"\n              description="Use logging with caution and only for development purpose.<br/> It can have an impact on API performances and is requiring more spaces for analytics storage."\n              gv-model\n              ng-on-gv-switch:input="loggingCtrl.switchMode($event)"\n              ng-model="loggingCtrl.enabled"\n            >\n            </gv-switch>\n          </md-input-container>\n        </div>\n\n        <div class="api-analytics-logging-configuration_form-details">\n          <div layout="row" flex-xs="50">\n            <md-input-container class="md-block" flex-gt-sm>\n              <label class="md-no-float">Mode</label>\n\n              <gv-option\n                class="api-analytics-logging-configuration_form-details_options"\n                ng-attr-options="{{loggingModes}}"\n                ng-model="loggingCtrl.api.proxy.logging.mode"\n                gv-model\n              ></gv-option>\n            </md-input-container>\n          </div>\n\n          <div layout="row" flex-xs="50">\n            <md-input-container class="md-block" flex-gt-sm>\n              <label class="md-no-float">Content</label>\n              <gv-option\n                class="api-analytics-logging-configuration_form-details_options"\n                ng-attr-options="{{contentModes}}"\n                ng-model="loggingCtrl.api.proxy.logging.content"\n                gv-model\n              ></gv-option>\n            </md-input-container>\n          </div>\n\n          <div layout="row" flex-xs="50">\n            <md-input-container class="md-block" flex-gt-sm>\n              <label class="md-no-float">Scope</label>\n              <gv-option\n                class="api-analytics-logging-configuration_form-details_options"\n                ng-attr-options="{{scopeModes}}"\n                ng-model="loggingCtrl.api.proxy.logging.scope"\n                gv-model\n              ></gv-option>\n            </md-input-container>\n          </div>\n\n          <div layout="row" flex-xs="50">\n            <md-input-container class="logging-configuration__input-container">\n              <label class="md-no-float">Condition</label>\n              <div class="logging-configuration__input-container__expression-container">\n                <gv-expression-language\n                  rows="1"\n                  gv-model\n                  class="logging-configuration__input-container__expression-container__input"\n                  ng-attr-grammar="{{loggingCtrl.spelGrammar}}"\n                  ng-model="loggingCtrl.api.proxy.logging.condition"\n                  placeholder="{#request.headers[\'Content-Type\'][0] === \'application/json\'}"\n                ></gv-expression-language>\n                <gv-button\n                  ng-if="!loggingCtrl.hasCondition()"\n                  outlined\n                  link\n                  icon="design:edit"\n                  title="Show editor"\n                  ng-click="loggingCtrl.showConditionEditor()"\n                >\n                </gv-button>\n                <gv-button\n                  outlined\n                  link\n                  ng-if="loggingCtrl.hasCondition()"\n                  icon="home:trash"\n                  title="Clear condition"\n                  ng-click="loggingCtrl.clearCondition()"\n                >\n                </gv-button>\n              </div>\n            </md-input-container>\n          </div>\n        </div>\n\n        <div class="md-actions gravitee-api-save-button" layout="row">\n          <gv-button\n            permission\n            permission-only="\'api-log-u\'"\n            type="submit"\n            icon="general:save"\n            ng-disabled="formLogging.$invalid || formLogging.$pristine"\n          >\n            Save\n          </gv-button>\n          <gv-button\n            permission\n            permission-only="\'api-log-u\'"\n            outlined\n            type="button"\n            icon="general:update"\n            ng-click="loggingCtrl.reset()"\n            ng-disabled="formLogging.$pristine"\n          >\n            Reset\n          </gv-button>\n        </div>\n\n        <div class="gv-page-draft-banner" ng-if="loggingCtrl.maxDuration && loggingCtrl.maxDuration > 0">\n          <ng-md-icon icon="warning" class="gv-warning"></ng-md-icon>\n          A maximum duration of <code>{{loggingCtrl.maxDuration}}</code>milliseconds will be applied to your condition.\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <div class="gv-forms-header">\n    <h1>Path Mappings</h1>\n  </div>\n\n  <div class="gv-form">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <md-table-container ng-show="$parent.apiCtrl.api.path_mappings.length">\n        <table md-table>\n          <thead md-head>\n            <tr md-row>\n              <th width="80%" md-column>Path</th>\n              <th md-column permission permission-only="\'api-definition-u\'"></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="pathMapping in $parent.apiCtrl.api.path_mappings">\n              <td md-cell>\n                <span><b>{{pathMapping}}</b></span>\n              </td>\n              <td md-cell permission permission-only="\'api-definition-u\'">\n                <div layout="row">\n                  <ng-md-icon\n                    ng-click="apiPathMappingCtrl.showSavePathMappingDialog($index)"\n                    icon="edit"\n                    size="24"\n                    style="margin-right: 20px"\n                  ></ng-md-icon>\n                  <ng-md-icon ng-click="apiPathMappingCtrl.delete($index)" icon="delete" size="24"></ng-md-icon>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <gravitee-empty-state\n        ng-if="!$parent.apiCtrl.api.path_mappings.length"\n        icon="map"\n        model="pathMapping"\n        message="Path mappings will appear here"\n        sub-message="Start creating a path mapping"\n        create-mode="true"\n      ></gravitee-empty-state>\n\n      <md-fab-speed-dial\n        permission\n        permission-only="\'api-definition-c\'"\n        ng-style="!$parent.apiCtrl.api.path_mappings.length && {\'text-align\':\'center\'}"\n        md-direction="{{$parent.apiCtrl.api.path_mappings.length?\'left\':\'down\'}}"\n        md-open="false"\n        ng-class="{\'md-fab-bottom-right\': $parent.apiCtrl.api.path_mappings.length}"\n        class="md-scale"\n      >\n        <md-fab-trigger>\n          <md-button class="md-fab">\n            <ng-md-icon icon="add"></ng-md-icon>\n          </md-button>\n        </md-fab-trigger>\n\n        <md-fab-actions>\n          <md-button\n            class="md-fab md-raised md-mini"\n            aria-label="Add path mapping"\n            ng-click="apiPathMappingCtrl.showSavePathMappingDialog()"\n          >\n            <ng-md-icon icon="create" style="fill: #333"></ng-md-icon>\n          </md-button>\n          <md-button\n            class="md-fab md-raised md-mini"\n            aria-label="Add path mapping by swagger"\n            ng-click="apiPathMappingCtrl.showImportPathMappingDialog()"\n          >\n            <md-icon md-svg-src="assets/logo_swagger.svg"></md-icon>\n          </md-button>\n        </md-fab-actions>\n      </md-fab-speed-dial>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gv-alert-dashboard\n  reference-type="\'API\'"\n  reference-id="$parent.apiCtrl.api.id"\n  has-configured-alerts="$ctrl.hasConfiguredAlerts"\n  has-alerting-plugin="$ctrl.hasAlertingPlugin"\n></gv-alert-dashboard>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gv-audit api="api" apis="apis" applications="applications" events="events"></gv-audit>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div layout="row" flex class="api-events" style="margin-top: 20px">\n  <div class="api-history-timeline" flex="20">\n    <timeline>\n      <div ng-repeat="eventTimeline in apiHistoryCtrl.eventsTimeline">\n        <timeline-event side="right">\n          <timeline-badge class="{{eventTimeline.badgeClass}}">\n            <div class="api-history-timeline__timeline-badge-container">\n              <gv-icon ng-prop-shape="eventTimeline.badgeIconClass" class="api-history-timeline__timeline-badge-container__icon"> </gv-icon>\n            </div>\n          </timeline-badge>\n          <a class="timeline-link" ng-click="apiHistoryCtrl.selectEvent(eventTimeline)">\n            <timeline-panel ng-class="{active : apiHistoryCtrl.isEventSelected(eventTimeline)}" class="{{eventTimeline.badgeClass}}">\n              <timeline-heading>\n                <div class="api-history-timeline_heading-title">\n                  <h5>\n                    {{eventTimeline.title | uppercase}} {{eventTimeline.deploymentNumber ? \'#\' + eventTimeline.deploymentNumber : \'\'}}\n                  </h5>\n                  <gv-icon\n                    class="api-history-icon"\n                    ng-show="apiHistoryCtrl.eventToCompareRequired && !apiHistoryCtrl.isEventSelected(eventTimeline)"\n                    shape="design:border"\n                  ></gv-icon>\n                  <gv-icon\n                    class="api-history-icon"\n                    ng-show="apiHistoryCtrl.isEventSelectedForComparaison(eventTimeline)"\n                    shape="code:git#4"\n                  ></gv-icon>\n                </div>\n                <p ng-if="eventTimeline.deploymentLabel">\n                  <small class="text-muted ng-binding">\n                    <gv-icon shape="action:info" class="api-history-timeline__timeline-small-icon"> </gv-icon>\n                    {{eventTimeline.deploymentLabel}}</small\n                  >\n                </p>\n                <p ng-if="eventTimeline.when">\n                  <small class="text-muted ng-binding">\n                    <gv-icon shape="home:clock" class="api-history-timeline__timeline-small-icon"> </gv-icon>\n                    {{eventTimeline.when | date : \'medium\'}} by {{eventTimeline.user.displayName}}\n                  </small>\n                </p>\n                <p ng-if="eventTimeline.isCurrentAPI">\n                  <small class="text-muted ng-binding">\n                    <gv-icon shape="action:info" class="api-history-timeline__timeline-small-icon"> </gv-icon>\n                    In progress API definition</small\n                  >\n                </p>\n              </timeline-heading>\n            </timeline-panel>\n          </a>\n        </timeline-event>\n      </div>\n    </timeline>\n  </div>\n\n  <div class="api-events-content" flex="80">\n    <div ng-show="apiHistoryCtrl.eventsSelected.length == 1" class="api-events-content-descriptor">\n      <md-card style="box-shadow: none">\n        <div ng-show="apiHistoryCtrl.eventsTimeline.length > 1" class="api-event-content_actions">\n          <div>\n            <gv-button\n              ng-show="apiHistoryCtrl.eventsSelected[0].isCurrentAPI"\n              icon="finance:cloud-upload"\n              ng-click="apiHistoryCtrl.$scope.$parent.apiCtrl.showDeployAPIConfirm($event, apiHistoryCtrl.api)"\n              >Deploy</gv-button\n            >\n            <gv-button\n              permission\n              permission-only="\'api-definition-u\'"\n              icon="code:time-schedule"\n              ng-show="(!apiHistoryCtrl.eventsSelected[0].isCurrentAPI && apiHistoryCtrl.eventsSelected[0].event.id != apiHistoryCtrl.events[0].id) || (!apiHistoryCtrl.eventsSelected[0].isCurrentAPI && apiHistoryCtrl.eventsTimeline[0].isCurrentAPI)"\n              ng-click="apiHistoryCtrl.showRollbackAPIConfirm($event, apiHistoryCtrl.eventSelectedPayload)"\n              >Rollback</gv-button\n            >\n            <gv-popover class="clipboard__popover" event="click" delay="750" .arrow="${false}">\n              <gv-button outlined class="api-events_copy-btn" icon="general:clipboard" ng-click="apiHistoryCtrl.copyToClipboard($event)"\n                >Copy to clipboard</gv-button\n              >\n              <div slot="popover" class="clipboard__popover-content">\n                <gv-icon shape="code:check"></gv-icon>\n                <div>Definition copied</div>\n              </div>\n            </gv-popover>\n            <gv-button\n              ng-show="apiHistoryCtrl.eventsTimeline.length > 1"\n              title="Click and select event from timeline to compare"\n              ng-attr-loading="{{apiHistoryCtrl.eventToCompareRequired ? true : undefined}}"\n              ng-attr-outlined="{{apiHistoryCtrl.mode !== apiHistoryCtrl.modes.Diff ? true : undefined}}"\n              ng-attr-primary="{{apiHistoryCtrl.mode === apiHistoryCtrl.modes.Diff ? true : undefined}}"\n              icon="code:git#4"\n              ng-click="apiHistoryCtrl.enableDiff()"\n              >Diff</gv-button\n            >\n            <gv-button\n              ng-show="apiHistoryCtrl.events.length > 0 && apiHistoryCtrl.eventsSelected[0].event.id != apiHistoryCtrl.events[0].id"\n              icon="code:git#3"\n              ng-attr-outlined="{{apiHistoryCtrl.mode !== apiHistoryCtrl.modes.DiffWithMaster ? true : undefined}}"\n              ng-attr-primary="{{apiHistoryCtrl.mode === apiHistoryCtrl.modes.DiffWithMaster ? true : undefined}}"\n              outlined\n              ng-click="apiHistoryCtrl.diffWithMaster()"\n              >Diff with published API</gv-button\n            >\n          </div>\n          <div class="api-event-content_actions-right">\n            <div ng-show="apiHistoryCtrl.hasDiff()" class="api-event_diff-count">\n              <span class="api-event_diff-added">+ {{apiHistoryCtrl.added}}</span>\n              <span class="api-event_diff-removed">- {{apiHistoryCtrl.removed}}</span>\n            </div>\n            <gv-switch\n              ng-show="apiHistoryCtrl.hasDesign()"\n              ng-on-gv-switch:input="apiHistoryCtrl.toggleMode($event)"\n              ng-value="apiHistoryCtrl.mode !== apiHistoryCtrl.modes.Design"\n              label="Mode"\n              description="Design / Definition"\n            ></gv-switch>\n          </div>\n        </div>\n        <md-card-content class="api-event-content_content">\n          <pre ng-show="apiHistoryCtrl.mode === apiHistoryCtrl.modes.Payload" class="api-history-definition">\n{{apiHistoryCtrl.eventSelectedPayloadDefinition | json}}</pre\n          >\n          <pre\n            ng-show="apiHistoryCtrl.hasDiff()"\n            class="api-history-definition"\n            gravitee-diff\n            old-value="apiHistoryCtrl.left"\n            new-value="apiHistoryCtrl.right"\n          ></pre>\n          <gv-policy-studio\n            class="api-event_policy-studio"\n            flows-title="API Flows"\n            readonly\n            has-properties\n            has-resources\n            has-plans\n            has-conditional-steps\n            ng-on-gv-policy-studio:fetch-documentation="apiHistoryCtrl.fetchPolicyDocumentation($event)"\n            ng-on-gv-resources:fetch-documentation="apiHistoryCtrl.fetchResourceDocumentation($event)"\n            ng-show="apiHistoryCtrl.mode === apiHistoryCtrl.modes.Design"\n          ></gv-policy-studio>\n        </md-card-content>\n      </md-card>\n    </div>\n  </div>\n</div>\n<gravitee-empty-state\n  ng-if="apiHistoryCtrl.eventsTimeline.length == 0"\n  icon="history"\n  model="History"\n  message="Your API History will appear here"\n  sub-message="We will Keep you informed of API changes"\n></gravitee-empty-state>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div ng-if="apiEventsCtrl.eventsTimeline.length > 0" layout="row" layout-align="center center" flex style="margin-top: 20px">\n  <div class="api-events-timeline" flex="50">\n    <timeline>\n      <div ng-repeat="eventTimeline in apiEventsCtrl.eventsTimeline">\n        <timeline-event>\n          <timeline-badge class="{{eventTimeline.badgeClass}}">\n            <gv-icon class="api-events-timeline__timeline-icon" ng-prop-shape="eventTimeline.badgeIconClass"> </gv-icon>\n          </timeline-badge>\n          <timeline-panel class="{{eventTimeline.badgeClass}}">\n            <timeline-heading>\n              <h5>{{eventTimeline.title | uppercase}}</h5>\n              <p ng-if="eventTimeline.when">\n                <small class="text-muted ng-binding">\n                  <gv-icon class="api-events-timeline__timeline-date-icon" shape="home:clock"> </gv-icon>\n                  {{eventTimeline.when | date : \'medium\'}} by {{eventTimeline.user.displayName}}</small\n                >\n              </p>\n            </timeline-heading>\n          </timeline-panel>\n        </timeline-event>\n      </div>\n    </timeline>\n  </div>\n</div>\n<gravitee-empty-state\n  ng-if="apiEventsCtrl.eventsTimeline.length == 0"\n  icon="event_note"\n  model="Event"\n  message="Your API Events will appear here"\n  sub-message="Keep playing with your API to see events history"\n></gravitee-empty-state>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div layout="row">\n  <div flex="20" layout="column">\n    <div class="inset">\n      <h5>Policies ({{apiPoliciesCtrl.policiesToCopy.length}})</h5>\n      <md-divider></md-divider>\n    </div>\n    <div class="gravitee-policy-draggable gravitee-policy-panel gravitee-policy-panel-left">\n      <md-card\n        ng-repeat="policy in apiPoliciesCtrl.policiesToCopy"\n        class="gravitee-card gravitee-policy-card"\n        id="{{policy.policyId}}"\n        ng-cloak\n      >\n        <md-tooltip md-direction="right"> version: {{policy.version}} </md-tooltip>\n        <md-card-content layout="row" layout-align="space-between">\n          <span class="md-subhead">{{policy.name}}</span>\n        </md-card-content>\n      </md-card>\n    </div>\n  </div>\n\n  <div flex="40" layout="column">\n    <form name="editPathForm" novalidate>\n      <div layout="row" layout-align="start center" class="gravitee-policy-filters">\n        <span\n          flex\n          class="badge gravitee-policy-method-badge-filter"\n          ng-class="apiPoliciesCtrl.getHttpMethodClass(httpMethod, apiPoliciesCtrl.httpMethodsFilter)"\n          ng-repeat="httpMethod in apiPoliciesCtrl.httpMethods"\n          ng-click="apiPoliciesCtrl.toggleHttpMethod(httpMethod, apiPoliciesCtrl.httpMethodsFilter)"\n        >\n          {{httpMethod | uppercase}}\n        </span>\n      </div>\n      <md-divider></md-divider>\n      <div class="gravitee-policy-panel gravitee-policy-panel-center">\n        <v-accordion class="vAccordion--default" multiple>\n          <v-pane ng-repeat="path in apiPoliciesCtrl.sortedPaths()" expanded="$first">\n            <v-pane-header>\n              <h3 class="gravitee-policy-path" ng-if=\'path === "/"\'>{{path}}</h3>\n              <div ng-if=\'path !== "/"\' layout="row" layout-align="space-between center">\n                <div flex="90">\n                  <md-input-container style="margin: 0; width: 100%">\n                    <input\n                      ng_model="path"\n                      name="path{{$index}}"\n                      class="gravitee-policy-path"\n                      required\n                      aria-label="path"\n                      ui-validate="{\n                            pathAlreadyExists : \'apiPoliciesCtrl.pathNotExists($value, $index)\',\n                            mustStartWithSlash : \'apiPoliciesCtrl.pathStartWithSlash($value)\'\n                         }"\n                      ng-keydown="apiPoliciesCtrl.pathKeyPress($event, editPathForm[\'path\'+$index], path, $index)"\n                      ng-blur="apiPoliciesCtrl.restoreOldPath($index, editPathForm[\'path\'+$index])"\n                      ng-click="$event.stopPropagation();"\n                    />\n                    <div ng-messages="editPathForm[\'path\'+$index].$error" ng-show="editPathForm[\'path\'+$index].$dirty">\n                      <div ng-message="required">This is required!</div>\n                      <div ng-message="pathAlreadyExists">This path is already configured.</div>\n                      <div ng-message="mustStartWithSlash">The path must start with /</div>\n                    </div>\n                  </md-input-container>\n                </div>\n                <div style="margin-right: 15px">\n                  <ng-md-icon\n                    icon="delete"\n                    style="fill: #757575"\n                    size="18px"\n                    ng-click="apiPoliciesCtrl.removePath(path);$event.stopPropagation();"\n                  >\n                    <md-tooltip md-direction="right"> Remove path </md-tooltip>\n                  </ng-md-icon>\n                </div>\n              </div>\n            </v-pane-header>\n            <v-pane-content>\n              <div ng-class="apiPoliciesCtrl.getDropzoneClass(path)" data-path="{{path}}">\n                <md-card\n                  ng-repeat="policy in apiPoliciesCtrl.apiPoliciesByPath[path]"\n                  ng-click="apiPoliciesCtrl.editPolicy($index, path, $event)"\n                  ng-hide="apiPoliciesCtrl.filterByMethod(policy)"\n                  class="gravitee-card gravitee-policy-card"\n                  ng-class="apiPoliciesCtrl.getApiPolicyClass(policy)"\n                  layout="row"\n                  layout-align="space-between start"\n                >\n                  <md-card-content layout="column" layout-align="start start" layout-fill>\n                    <div ng-if="!policy.name" layout="column" layout-align="start start">\n                      <span class="md-subhead">Unknown policy</span>\n                      <i>Please check that the policy \'{{policy.policyId}}\' is installed in plugins</i>\n                    </div>\n                    <span class="md-subhead">{{policy.name}}</span>\n                    <span class="gravitee-policy-card-description">{{policy.description}}</span>\n                    <div\n                      ng-class="{\'gravitee-policy-card-method\': policy.description}"\n                      layout="row"\n                      layout-align="start center"\n                      layout-fill\n                    >\n                      <div ng-switch="policy.methods.length === apiPoliciesCtrl.httpMethods.length">\n                        <span\n                          class="badge gravitee-policy-method-badge-info gravitee-policy-method-badge-GET-selected"\n                          ng-switch-when="true"\n                          >ALL</span\n                        >\n                        <span\n                          class="badge gravitee-policy-method-badge-info gravitee-policy-method-badge-{{method}}-selected"\n                          ng-switch-when="false"\n                          ng-repeat="method in policy.methods"\n                          >{{method | uppercase}}</span\n                        >\n                      </div>\n                    </div>\n                  </md-card-content>\n                  <div layout="column" permission permission-only="\'api-definition-u\'">\n                    <ng-md-icon\n                      icon="close"\n                      style="fill: #757575"\n                      size="18px"\n                      class="gravitee-card-close"\n                      ng-click="apiPoliciesCtrl.removePolicy($index, path, $event)"\n                    >\n                      <md-tooltip md-direction="right"> Remove policy </md-tooltip>\n                    </ng-md-icon>\n                    <ng-md-icon\n                      ng-if="policy.name"\n                      icon="mode_edit"\n                      style="fill: #757575"\n                      size="18px"\n                      class="gravitee-card-close"\n                      ng-click="apiPoliciesCtrl.editPolicyDescription($index, path, $event)"\n                    >\n                      <md-tooltip md-direction="right"> Edit policy description </md-tooltip>\n                    </ng-md-icon>\n                    <ng-md-icon\n                      icon="done"\n                      ng-if="policy.enabled"\n                      style="fill: #437536"\n                      size="18px"\n                      class="gravitee-card-close"\n                      ng-click="apiPoliciesCtrl.switchPolicyEnabled($index, path, $event)"\n                    >\n                      <md-tooltip md-direction="right"> Policy is enabled. Click to disable it. </md-tooltip>\n                    </ng-md-icon>\n                    <ng-md-icon\n                      icon="pause_circle_outline"\n                      ng-if="!policy.enabled"\n                      style="fill: #751c16"\n                      size="18px"\n                      class="gravitee-card-close"\n                      ng-click="apiPoliciesCtrl.switchPolicyEnabled($index, path, $event)"\n                    >\n                      <md-tooltip md-direction="right"> Policy is disabled. Click to enable it. </md-tooltip>\n                    </ng-md-icon>\n                  </div>\n                </md-card>\n              </div>\n              <span ng-if="apiPoliciesCtrl.initDragularDropZone(path)"></span>\n            </v-pane-content>\n          </v-pane>\n        </v-accordion>\n      </div>\n    </form>\n  </div>\n\n  <div flex layout="column">\n    <div ng-if="apiPoliciesCtrl.selectedApiPolicy.policyId">\n      <div class="inset">\n        <div layout="row" layout-align="space-between center">\n          <h5>{{policy.name}}</h5>\n        </div>\n        <md-divider></md-divider>\n      </div>\n      <div layout="row" layout-align="start center" layout-wrap>\n        <span\n          flex="10"\n          class="badge gravitee-policy-method-badge-info"\n          ng-class="apiPoliciesCtrl.getHttpMethodClass(httpMethod, apiPoliciesCtrl.selectedApiPolicy.methods)"\n          ng-repeat="httpMethod in apiPoliciesCtrl.httpMethods"\n          ng-click="apiPoliciesCtrl.toggleHttpMethod(httpMethod, apiPoliciesCtrl.selectedApiPolicy.methods)"\n        >\n          {{httpMethod | uppercase}}\n        </span>\n      </div>\n      <div class="gravitee-policy-panel gravitee-policy-panel-right">\n        <form\n          name="policyConfigurationForm"\n          sf-schema="policyJsonSchema"\n          sf-form="policyJsonSchemaForm"\n          sf-model="apiPoliciesCtrl.selectedApiPolicy[apiPoliciesCtrl.selectedApiPolicy.policyId]"\n          sf-options="{ validateOnRender: true, formDefaults: { startEmpty: true } }"\n          novalidate\n        ></form>\n\n        <div ng-if="apiPoliciesCtrl.schemaByPolicyId[apiPoliciesCtrl.selectedApiPolicy.policyId]">\n          <md-divider></md-divider>\n          <md-button\n            permission\n            permission-only="\'api-definition-u\'"\n            class="md-raised"\n            ng-disabled="!apiPoliciesCtrl.httpMethodsUpdated && (policyConfigurationForm.$invalid || policyConfigurationForm.$pristine)"\n            ng-click="apiPoliciesCtrl.savePaths();"\n            >Save\n          </md-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<md-button\n  permission\n  permission-only="\'api-definition-d\'"\n  class="md-fab md-mini md-fab-bottom-right gravitee-policy-migration-button"\n  aria-label="Update to Policy studio"\n  ng-click="apiPoliciesCtrl.migrateApiToPolicyStudio()"\n>\n  <ng-md-icon icon="queue_play_next"></ng-md-icon>\n  <md-tooltip md-direction="top"> Migrate API to Policy Studio </md-tooltip>\n</md-button>\n\n<md-button\n  permission\n  permission-only="\'api-definition-d\'"\n  class="md-fab md-fab-bottom-right"\n  aria-label="Add"\n  ng-click="apiPoliciesCtrl.showAddPathModal($event)"\n>\n  <ng-md-icon icon="add"></ng-md-icon>\n  <md-tooltip md-direction="top"> Add a path </md-tooltip>\n</md-button>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <div class="gv-forms-header">\n    <h1>Resources</h1>\n  </div>\n  <div class="gv-form">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <md-table-container ng-show="$parent.apiCtrl.api.resources.length > 0">\n        <table md-table>\n          <thead md-head md-order="order">\n            <tr md-row>\n              <th md-column order-by="name">Name</th>\n              <th md-column order-by="type">Type</th>\n              <th md-column>Enabled</th>\n              <th md-column permission permission-only="\'api-definition-u\'"></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="resource in $parent.apiCtrl.api.resources | orderBy: order">\n              <td md-cell>\n                <span><b>{{resource.name}}</b></span>\n              </td>\n              <td md-cell>{{apiResourcesCtrl.getResourceTypeName(resource.type)}}</td>\n              <td md-cell>\n                <ng-md-icon ng-if="resource.enabled" icon="play_circle_outline" style="fill: green"></ng-md-icon>\n                <ng-md-icon ng-if="!resource.enabled" icon="pause_circle_outline" style="fill: red"></ng-md-icon>\n              </td>\n              <td md-cell permission permission-only="\'api-definition-u\'">\n                <div layout="row">\n                  <ng-md-icon\n                    ng-click="apiResourcesCtrl.showResourcePanel(resource)"\n                    icon="settings"\n                    size="24"\n                    style="margin-right: 20px"\n                  ></ng-md-icon>\n                  <ng-md-icon ng-click="apiResourcesCtrl.deleteResource($index)" icon="delete" size="24"></ng-md-icon>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <md-sidenav class="md-sidenav-right md-whiteframe-z2 resource" md-component-id="resource-config">\n        <md-toolbar>\n          <div class="md-toolbar-tools">\n            <h2 style="color: white">\n              <span>Resource: {{apiResourcesCtrl.resource.name}} [{{apiResourcesCtrl.resource.type}}]</span>\n            </h2>\n            <span flex></span>\n\n            <md-switch\n              ng-model="resourceEnabled"\n              ng-disabled="resourceConfigurationForm.$invalid || apiResourcesCtrl.creation"\n              ng-change="apiResourcesCtrl.switchEnabled()"\n              class="md-block"\n              aria-label="Enable resource"\n            ></md-switch>\n          </div>\n        </md-toolbar>\n\n        <md-content layout-padding>\n          <h4>General</h4>\n          <form name="resourceForm" ng-submit="apiResourcesCtrl.save()" novalidate>\n            <div layout="row" layout-sm="column">\n              <md-input-container class="md-block" flex-gt-xs>\n                <label>Name</label>\n                <input required ng-model="apiResourcesCtrl.resource.name" md-autofocus type="text" ng-required="true" />\n              </md-input-container>\n\n              <div flex="5" hide-xs hide-sm>\n                \x3c!-- Spacer //--\x3e\n              </div>\n\n              <md-input-container class="md-block" flex-gt-xs>\n                <label>Type</label>\n                <md-select\n                  ng-model="apiResourcesCtrl.resource.type"\n                  placeholder="Type"\n                  required\n                  ng-required="true"\n                  ng-change="apiResourcesCtrl.onTypeChange()"\n                  ng-disabled="!apiResourcesCtrl.creation"\n                >\n                  <md-option ng-repeat="type in apiResourcesCtrl.types" ng-value="type.id">{{type.name}}</md-option>\n                </md-select>\n              </md-input-container>\n            </div>\n          </form>\n\n          <br />\n\n          <h4>Configuration</h4>\n          <div layout="row" layout-align="start center">\n            <form\n              name="resourceConfigurationForm"\n              sf-schema="apiResourcesCtrl.resourceJsonSchema"\n              sf-form="apiResourcesCtrl.resourceJsonSchemaForm"\n              sf-model="apiResourcesCtrl.resource.configuration"\n              sf-options="{ validateOnRender: true, formDefaults: { startEmpty: true } }"\n              novalidate\n            ></form>\n          </div>\n\n          <br />\n\n          <div layout="column" layout-align="start center" layout-wrap>\n            <md-button\n              class="md-raised"\n              ng-disabled="resourceConfigurationForm.$invalid || resourceForm.$invalid"\n              ng-click="apiResourcesCtrl.saveResource()"\n              >Save</md-button\n            >\n          </div>\n        </md-content>\n      </md-sidenav>\n\n      <gravitee-empty-state\n        ng-if="$parent.apiCtrl.api.resources.length == 0"\n        icon="style"\n        model="Resource"\n        message="Resources will appear here"\n        sub-message="Start creating a resource"\n        create-mode="true"\n      ></gravitee-empty-state>\n\n      <div permission permission-only="\'api-definition-c\'" ng-style="$parent.apiCtrl.api.resources.length == 0 && {\'text-align\':\'center\'}">\n        <md-button\n          ng-class="{\'md-fab-bottom-right\': $parent.apiCtrl.api.resources.length > 0}"\n          class="md-fab"\n          aria-label="Add resource"\n          ng-click="apiResourcesCtrl.showResourcePanel()"\n        >\n          <ng-md-icon icon="add"></ng-md-icon>\n        </md-button>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid properties" layout="column">\n  <div class="gv-forms-header">\n    <h1>Properties</h1>\n    <span permission permission-only="\'api-definition-u\'">\n      <ng-md-icon icon="settings" ng-click="apiPropertiesCtrl.open()"></ng-md-icon>\n    </span>\n  </div>\n  <div class="gv-form">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <div layout="row" style="padding-left: 16px" ng-if="dynamicPropertyEnabled">\n        <span>\n          Dynamic properties service is actually <code>running</code> state and run with cron expression\n          <code>{{apiPropertiesCtrl.dynamicPropertyService.schedule}}</code> using\n          <code>{{apiPropertiesCtrl.dynamicPropertyService.provider}}</code> provider.\n        </span>\n      </div>\n\n      <form\n        ng-if="apiPropertiesCtrl.hasPropertiesDefined()"\n        name="formApiProperties"\n        ng-submit="apiPropertiesCtrl.update(apiPropertiesCtrl.api)"\n        novalidate\n      >\n        <md-table-container>\n          <table md-table ng-init="reverse = false">\n            <thead md-head md-order="name">\n              <tr md-row>\n                <th md-column>\n                  <md-checkbox\n                    aria-label="Select all"\n                    ng-model="apiPropertiesCtrl.selectAll"\n                    ng-change="apiPropertiesCtrl.toggleSelectAll(apiPropertiesCtrl.selectAll)"\n                  ></md-checkbox>\n                </th>\n                <th md-column md-order-by="name" ng-click="reverse = !reverse">Name</th>\n                <th md-column>Value</th>\n                <th md-column hide-gt-xs show-gt-sm>Dynamic</th>\n                <th md-column width="80px" nowrap></th>\n              </tr>\n            </thead>\n            <tbody md-body>\n              <tr md-row ng-repeat="property in apiPropertiesCtrl.api.properties|orderBy:name:reverse">\n                <td md-cell>\n                  <md-checkbox\n                    aria-label="Select {{property.key}}"\n                    ng-model="apiPropertiesCtrl.selectedProperties[property.key]"\n                    ng-change="apiPropertiesCtrl.checkSelectAll()"\n                  ></md-checkbox>\n                </td>\n                <td md-cell>{{property.key}}</td>\n                <td\n                  permission\n                  permission-only="\'api-definition-u\'"\n                  md-cell\n                  ng-click="apiPropertiesCtrl.editValue($event, property)"\n                  ng-class="{\'gravitee-placeholder\': property.value}"\n                >\n                  {{property.value || \'Set value\'}}\n                </td>\n                <td permission permission-except="\'api-definition-u\'">{{property.value}}</td>\n                <td md-cell hide-gt-xs show-gt-sm>\n                  <ng-md-icon ng-show="property.dynamic" icon="check"></ng-md-icon>\n                </td>\n                <td md-cell>\n                  <ng-md-icon\n                    permission\n                    permission-only="\'api-definition-d\'"\n                    ng-show="!property.dynamic"\n                    ng-click="apiPropertiesCtrl.deleteProperty(property.key)"\n                    icon="delete"\n                  ></ng-md-icon>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </md-table-container>\n        <div class="md-actions gravitee-api-save-button" layout="row">\n          <md-button\n            class="md-raised md-warn float-right"\n            type="button"\n            ng-click="apiPropertiesCtrl.deleteSelectedProperties()"\n            permission\n            permission-only="[\'api-definition-u\']"\n            ng-disabled="!apiPropertiesCtrl.hasSelectedProperties()"\n          >\n            Delete\n          </md-button>\n        </div>\n      </form>\n\n      <gravitee-empty-state\n        ng-if="!apiPropertiesCtrl.hasPropertiesDefined()"\n        icon="assignment"\n        model="Property"\n        message="Properties will appear here"\n        sub-message="Start creating a property"\n        create-mode="true"\n      ></gravitee-empty-state>\n\n      <div ng-style="!apiPropertiesCtrl.hasPropertiesDefined() && {\'text-align\':\'center\'}">\n        <md-button\n          permission\n          permission-only="\'api-definition-u\'"\n          ng-class="{\'md-fab-bottom-right\': apiPropertiesCtrl.hasPropertiesDefined()}"\n          class="md-fab"\n          aria-label="Add"\n          ng-click="apiPropertiesCtrl.showPropertyModal()"\n        >\n          <ng-md-icon icon="add"></ng-md-icon>\n        </md-button>\n      </div>\n\n      <div flex></div>\n\n      <md-sidenav class="md-sidenav-right md-whiteframe-z2 healthcheck" md-component-id="dynamic-properties-config">\n        <md-toolbar>\n          <div class="md-toolbar-tools">\n            <h2 style="color: white">\n              <span>Dynamic properties settings</span>\n            </h2>\n            <span flex></span>\n            <md-switch\n              ng-model="dynamicPropertyEnabled"\n              ng-disabled="formDynamicProperties.$invalid"\n              ng-change="apiPropertiesCtrl.switchEnabled()"\n              class="md-block"\n              aria-label="Enable dynamic-property service"\n            ></md-switch>\n          </div>\n        </md-toolbar>\n\n        <md-content layout-padding>\n          <div style="margin-left: 7px; font-style: italic; border-left: 2px solid #b1bdc5">\n            <span>This service is requiring an API deployment.</span><br />\n            <span>Do not forget to deploy API to start dynamic-properties service.</span>\n          </div>\n\n          <form name="formDynamicProperties" ng-submit="apiPropertiesCtrl.update()" novalidate>\n            <h4>Polling frequency</h4>\n\n            <md-input-container flex class="md-block">\n              <gv-cron-editor\n                required\n                ng-value="apiPropertiesCtrl.dynamicPropertyService.schedule"\n                ng-on-input="apiPropertiesCtrl.updateSchedule($event)"\n                label="Schedule"\n              ></gv-cron-editor>\n\n              <div class="hint">A cron expression to schedule the health check</div>\n            </md-input-container>\n\n            <br />\n\n            <h4>Provider</h4>\n            <div layout="row" layout-sm="column">\n              <md-input-container class="md-block" flex-gt-xs>\n                <label>Type</label>\n                <md-select\n                  ng-model="apiPropertiesCtrl.dynamicPropertyService.provider"\n                  placeholder="Type"\n                  required\n                  ng-required="true"\n                  ng-change="apiPropertiesCtrl.onProviderTypeChange()"\n                >\n                  <md-option ng-repeat="provider in apiPropertiesCtrl.dynamicPropertyProviders" ng-value="provider.id"\n                    >{{provider.name}}</md-option\n                  >\n                </md-select>\n              </md-input-container>\n            </div>\n\n            <br />\n\n            <div ng-if="apiPropertiesCtrl.dynamicPropertyService.provider">\n              <h4>\n                Configuration\n\n                <md-button\n                  ng-if="apiPropertiesCtrl.dynamicPropertyService.provider == \'HTTP\'"\n                  class="md-icon-button"\n                  aria-label="Expected HTTP provider output"\n                  ng-click="apiPropertiesCtrl.showExpectedProviderOutput()"\n                >\n                  <ng-md-icon class="no-top" icon="info" style="fill: #b1bdc5"></ng-md-icon>\n                </md-button>\n              </h4>\n\n              <div ng-if="apiPropertiesCtrl.dynamicPropertyService.provider == \'HTTP\'" layout="column" layout-sm="column">\n                <md-input-container class="md-block" flex-gt-sm>\n                  <label>HTTP Service URL</label>\n                  <input ng-model="apiPropertiesCtrl.dynamicPropertyService.configuration.url" type="url" ng-required="true" />\n                </md-input-container>\n\n                <md-input-container class="md-block" flex-gt-sm>\n                  <label>HTTP Method</label>\n                  <md-select\n                    ng-model="apiPropertiesCtrl.dynamicPropertyService.configuration.method"\n                    placeholder="HTTP Methods"\n                    required\n                    ng-required="true"\n                  >\n                    <md-option ng-value="method" ng-repeat="method in apiPropertiesCtrl.getHttpMethods()">{{method}}</md-option>\n                  </md-select>\n                </md-input-container>\n\n                <div layout="column" layout-sm="column" style="margin-bottom: 15px">\n                  <h5 style="color: grey">\n                    <span>Headers</span>\n                    <ng-md-icon\n                      icon="add_circle_outline"\n                      style="fill: #b1bdc5"\n                      aria-label="Add HTTP header"\n                      ng-click="apiPropertiesCtrl.addHTTPHeader()"\n                      >Add headers</ng-md-icon\n                    >\n                  </h5>\n                  <div\n                    layout="row"\n                    layout-sm="column"\n                    layout-align="center center"\n                    ng-repeat="header in apiPropertiesCtrl.dynamicPropertyService.configuration.headers"\n                  >\n                    <ng-md-icon\n                      icon="remove_circle_outline"\n                      style="fill: #b1bdc5"\n                      aria-label="Delete header"\n                      ng-click="apiPropertiesCtrl.removeHTTPHeader($index)"\n                    ></ng-md-icon>\n\n                    <div flex="5" hide-xs hide-sm>\n                      \x3c!-- Spacer //--\x3e\n                    </div>\n\n                    <md-input-container flex-gt-sm>\n                      <input aria-label="Header name" ng-model="header.name" type="text" placeholder="Header name" ng-required="true" />\n                    </md-input-container>\n\n                    <div flex="5" hide-xs hide-sm>\n                      \x3c!-- Spacer //--\x3e\n                    </div>\n\n                    <md-input-container flex-gt-sm>\n                      <input aria-label="Header value" ng-model="header.value" type="text" placeholder="Header value" ng-required="true" />\n                    </md-input-container>\n                  </div>\n                </div>\n\n                <md-input-container class="md-block" flex-gt-sm>\n                  <label style="transform: translate3d(0, 6px, 0) scale(0.75) !important"> Request body </label>\n\n                  <textarea\n                    ui-codemirror="{ onLoad : apiPropertiesCtrl.codemirrorLoaded }"\n                    ui-codemirror-opts="apiPropertiesCtrl.requestBodyOptions"\n                    ng-model="apiPropertiesCtrl.dynamicPropertyService.configuration.body"\n                    rows="5"\n                  ></textarea>\n                </md-input-container>\n\n                <md-input-container class="md-block" flex-gt-sm>\n                  <label style="transform: translate3d(0, 6px, 0) scale(0.75) !important"> Transformation (JOLT Specification) </label>\n\n                  <textarea\n                    ui-codemirror="{ onLoad : apiPropertiesCtrl.codemirrorLoaded }"\n                    ui-codemirror-opts="apiPropertiesCtrl.joltSpecificationOptions"\n                    ng-model="apiPropertiesCtrl.dynamicPropertyService.configuration.specification"\n                    ng-required="true"\n                    rows="5"\n                  ></textarea>\n                </md-input-container>\n              </div>\n\n              <br />\n            </div>\n\n            <md-divider></md-divider>\n\n            <div class="md-actions gravitee-api-save-button" layout="row">\n              <md-button class="md-accent" type="submit" ng-disabled="formDynamicProperties.$invalid || formDynamicProperties.$pristine">\n                Save\n              </md-button>\n              <md-button\n                class="md-warn"\n                type="button"\n                ng-click="apiPropertiesCtrl.reset()"\n                ng-disabled="formDynamicProperties.$invalid || formDynamicProperties.$pristine"\n              >\n                Reset\n              </md-button>\n            </div>\n          </form>\n        </md-content>\n      </md-sidenav>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<ui-view></ui-view>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <div class="gv-forms-header">\n    <h1>Health-check</h1>\n    <a permission permission-only="\'api-health-u\'" ui-sref="management.apis.detail.proxy.healthcheck">Configure Health-check</a>\n  </div>\n  <div class="gv-form">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <div layout="row" layout-align="end center">\n        <md-button class="md-primary" permission permission-only="\'api-health-r\'" ng-click="healthCheckCtrl.updateChart()">\n          <ng-md-icon icon="refresh"></ng-md-icon>\n          Refresh data\n        </md-button>\n      </div>\n      <md-content flex>\n        <gv-logs-timeframe on-timeframe-change="healthCheckCtrl.timeframeChange(timeframe)" flex></gv-logs-timeframe>\n        <div layout="column" flex>\n          <div layout="row" flex>\n            <md-card flex>\n              <div class="widget-card" flex>\n                <md-card-title>\n                  <md-card-title-text>\n                    <span class="md-title"><strong>Global availability</strong></span>\n                    <span class="md-subhead">Global availability including results of all health-checked endpoints (see below).</span>\n                  </md-card-title-text>\n                  <md-card-title-media> </md-card-title-media>\n                </md-card-title>\n                <md-card-content>\n                  <div>\n                    <gravitee-chart options="healthCheckCtrl.chartData" zoom="true" type="areaspline" height="180"></gravitee-chart>\n                  </div>\n                  <div layout="row" layout-padding layout-align="center center">\n                    <div flex="15"><h5>Last minute</h5></div>\n                    <div flex="15"><h5>Last hour</h5></div>\n                    <div flex="15"><h5>Last day</h5></div>\n                    <div flex="15"><h5>Last week</h5></div>\n                    <div flex="15"><h5>Last month</h5></div>\n                  </div>\n                  <div layout="row" layout-padding layout-align="center center">\n                    <gv-healthcheck-metric\n                      availability="healthCheckCtrl.endpoint.availabilities.data.global[\'1m\']"\n                      responsetime="healthCheckCtrl.endpoint.responsetimes.data.global[\'1m\']"\n                      layout="column"\n                      flex="15"\n                    ></gv-healthcheck-metric>\n                    <gv-healthcheck-metric\n                      availability="healthCheckCtrl.endpoint.availabilities.data.global[\'1h\']"\n                      responsetime="healthCheckCtrl.endpoint.responsetimes.data.global[\'1h\']"\n                      layout="column"\n                      flex="15"\n                    ></gv-healthcheck-metric>\n                    <gv-healthcheck-metric\n                      availability="healthCheckCtrl.endpoint.availabilities.data.global[\'1d\']"\n                      responsetime="healthCheckCtrl.endpoint.responsetimes.data.global[\'1d\']"\n                      layout="column"\n                      flex="15"\n                    ></gv-healthcheck-metric>\n                    <gv-healthcheck-metric\n                      availability="healthCheckCtrl.endpoint.availabilities.data.global[\'1w\']"\n                      responsetime="healthCheckCtrl.endpoint.responsetimes.data.global[\'1w\']"\n                      layout="column"\n                      flex="15"\n                    ></gv-healthcheck-metric>\n                    <gv-healthcheck-metric\n                      availability="healthCheckCtrl.endpoint.availabilities.data.global[\'1M\']"\n                      responsetime="healthCheckCtrl.endpoint.responsetimes.data.global[\'1M\']"\n                      layout="column"\n                      flex="15"\n                    ></gv-healthcheck-metric>\n                  </div>\n                </md-card-content>\n              </div>\n            </md-card>\n          </div>\n          <div layout="row">\n            <md-card flex>\n              <div class="widget-card" flex>\n                <md-card-title>\n                  <md-card-title-text>\n                    <span class="md-title"><strong>Per-endpoint availability</strong></span>\n                    <span class="md-subhead">Availability per-endpoint where health-check is enabled</span>\n                  </md-card-title-text>\n                  <md-card-title-media> </md-card-title-media>\n                </md-card-title>\n                <md-card-content>\n                  <div align="column">\n                    <div layout="row" layout-padding>\n                      <div flex="25"></div>\n                      <div flex="15"><h5>Last minute</h5></div>\n                      <div flex="15"><h5>Last hour</h5></div>\n                      <div flex="15"><h5>Last day</h5></div>\n                      <div flex="15"><h5>Last week</h5></div>\n                      <div flex="15"><h5>Last month</h5></div>\n                    </div>\n                    <div\n                      layout="row"\n                      ng-repeat="(endpoint, metrics) in healthCheckCtrl.endpoint.availabilities.data.buckets"\n                      layout-padding\n                    >\n                      <div layout="column" flex="25">\n                        <span style="font-weight: bold">{{endpoint}}</span>\n                        <span style="color: rgba(0, 0, 0, 0.54); font-size: 11px"\n                          >{{healthCheckCtrl.endpoint.availabilities.data.metadata[endpoint].target}}</span\n                        >\n                      </div>\n                      <gv-healthcheck-metric\n                        availability="metrics[\'1m\']"\n                        responsetime="healthCheckCtrl.endpoint.responsetimes.data.buckets[endpoint][\'1m\']"\n                        layout="column"\n                        flex="15"\n                      ></gv-healthcheck-metric>\n                      <gv-healthcheck-metric\n                        availability="metrics[\'1h\']"\n                        responsetime="healthCheckCtrl.endpoint.responsetimes.data.buckets[endpoint][\'1h\']"\n                        layout="column"\n                        flex="15"\n                      ></gv-healthcheck-metric>\n                      <gv-healthcheck-metric\n                        availability="metrics[\'1d\']"\n                        responsetime="healthCheckCtrl.endpoint.responsetimes.data.buckets[endpoint][\'1d\']"\n                        layout="column"\n                        flex="15"\n                      ></gv-healthcheck-metric>\n                      <gv-healthcheck-metric\n                        availability="metrics[\'1w\']"\n                        responsetime="healthCheckCtrl.endpoint.responsetimes.data.buckets[endpoint][\'1w\']"\n                        layout="column"\n                        flex="15"\n                      ></gv-healthcheck-metric>\n                      <gv-healthcheck-metric\n                        availability="metrics[\'1M\']"\n                        responsetime="healthCheckCtrl.endpoint.responsetimes.data.buckets[endpoint][\'1M\']"\n                        layout="column"\n                        flex="15"\n                      ></gv-healthcheck-metric>\n                    </div>\n                  </div>\n                </md-card-content>\n              </div>\n            </md-card>\n\n            <md-card flex="50" ng-if="healthCheckCtrl.displayGatewayHC()">\n              <div class="widget-card" flex>\n                <md-card-title>\n                  <md-card-title-text>\n                    <span class="md-title"><strong>Per-gateway availability</strong></span>\n                    <span class="md-subhead">Availability per-gateway where health-check is enabled</span>\n                  </md-card-title-text>\n                  <md-card-title-media> </md-card-title-media>\n                </md-card-title>\n                <md-card-content>\n                  <div align="column">\n                    <div layout="row" layout-padding>\n                      <div flex="25"></div>\n                      <div flex="15"><h5>Last minute</h5></div>\n                      <div flex="15"><h5>Last hour</h5></div>\n                      <div flex="15"><h5>Last day</h5></div>\n                      <div flex="15"><h5>Last week</h5></div>\n                      <div flex="15"><h5>Last month</h5></div>\n                    </div>\n                    <div layout="row" ng-repeat="(gateway, metrics) in healthCheckCtrl.gateway.availabilities.data.buckets">\n                      <div\n                        layout="row"\n                        layout-padding\n                        ng-if="healthCheckCtrl.gateway.availabilities.data.metadata[gateway].deleted !== \'true\'"\n                        flex\n                      >\n                        <div layout="column" flex="25">\n                          <span style="font-weight: bold">{{healthCheckCtrl.gateway.availabilities.data.metadata[gateway].hostname}}</span>\n                          <span style="color: rgba(0, 0, 0, 0.54); font-size: 11px"\n                            >{{healthCheckCtrl.gateway.availabilities.data.metadata[gateway].deleted}}</span\n                          >\n                          <span style="color: rgba(0, 0, 0, 0.54); font-size: 11px"\n                            >{{healthCheckCtrl.gateway.availabilities.data.metadata[gateway].ip}}</span\n                          >\n                        </div>\n                        <gv-healthcheck-metric\n                          availability="metrics[\'1m\']"\n                          responsetime="healthCheckCtrl.gateway.responsetimes.data.buckets[gateway][\'1m\']"\n                          layout="column"\n                          flex="15"\n                        ></gv-healthcheck-metric>\n                        <gv-healthcheck-metric\n                          availability="metrics[\'1h\']"\n                          responsetime="healthCheckCtrl.gateway.responsetimes.data.buckets[gateway][\'1h\']"\n                          layout="column"\n                          flex="15"\n                        ></gv-healthcheck-metric>\n                        <gv-healthcheck-metric\n                          availability="metrics[\'1d\']"\n                          responsetime="healthCheckCtrl.gateway.responsetimes.data.buckets[gateway][\'1d\']"\n                          layout="column"\n                          flex="15"\n                        ></gv-healthcheck-metric>\n                        <gv-healthcheck-metric\n                          availability="metrics[\'1w\']"\n                          responsetime="healthCheckCtrl.gateway.responsetimes.data.buckets[gateway][\'1w\']"\n                          layout="column"\n                          flex="15"\n                        ></gv-healthcheck-metric>\n                        <gv-healthcheck-metric\n                          availability="metrics[\'1M\']"\n                          responsetime="healthCheckCtrl.gateway.responsetimes.data.buckets[gateway][\'1M\']"\n                          layout="column"\n                          flex="15"\n                        ></gv-healthcheck-metric>\n                      </div>\n                    </div>\n                  </div>\n                </md-card-content>\n              </div>\n            </md-card>\n          </div>\n          <div layout="row">\n            <md-card flex>\n              <div class="widget-card" flex>\n                <md-card-title>\n                  <md-card-title-text layout="row">\n                    <span class="md-title" flex><strong>Latest check</strong></span>\n                    <span class="md-title"\n                      ><md-switch aria-label="Show only status transitions" ng-model="transitionMode"\n                        >Show only status transitions</md-switch\n                      ></span\n                    >\n                  </md-card-title-text>\n                  <md-card-title-media> </md-card-title-media>\n                </md-card-title>\n                <md-card-content>\n                  <div layout="column" layout-padding>\n                    <md-table-container>\n                      <table\n                        md-table\n                        class="gravitee-analytics-top-hits-table"\n                        multiple\n                        md-row-select="healthCheckCtrl.widget.chart.selectable"\n                        data-ng-model="healthCheckCtrl.selected"\n                      >\n                        <thead md-head>\n                          <tr md-row>\n                            <th md-column>Date</th>\n                            <th md-column>Endpoint</th>\n                            <th md-column>Gateway</th>\n                            <th md-column>Health</th>\n                            <th md-column>Target</th>\n                            <th md-column>Status | Elapsed Time</th>\n                            <th md-column></th>\n                          </tr>\n                        </thead>\n                        <tbody md-body>\n                          <tr\n                            ng-if="transitionMode?healthCheckCtrl.transitionLogs.logs.length > 0:healthCheckCtrl.logs.logs.length > 0"\n                            md-row\n                            ng-repeat="log in transitionMode?healthCheckCtrl.transitionLogs.logs:healthCheckCtrl.logs.logs | limitTo: healthCheckCtrl.query.size"\n                            md-auto-select\n                            md-select="log"\n                            md-select-id="key"\n                          >\n                            <td md-cell>{{log.timestamp | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n                            <td md-cell>\n                              <md-tooltip md-direction="bottom">{{healthCheckCtrl.getEndpointStatus(log.state)}}</md-tooltip>\n                              <ng-md-icon ng-if="log.state === 0" icon="close" size="14px" style="fill: red"></ng-md-icon>\n                              <ng-md-icon ng-if="log.state === 1" icon="trending_down" size="14px" style="fill: orange"></ng-md-icon>\n                              <ng-md-icon ng-if="log.state === 2" icon="trending_up" size="14px" style="fill: orange"></ng-md-icon>\n                              <ng-md-icon ng-if="log.state === 3" icon="check" size="14px" style="fill: green"></ng-md-icon>\n                              {{log.endpoint}}\n                            </td>\n                            <td md-cell>\n                              {{transitionMode?healthCheckCtrl.transitionLogs.metadata[log.gateway].hostname:healthCheckCtrl.logs.metadata[log.gateway].hostname}}\n                            </td>\n                            <td md-cell>\n                              <ng-md-icon ng-if="log.success" icon="done" size="14px" style="fill: green"></ng-md-icon>\n                              <ng-md-icon ng-if="!log.success" icon="close" size="14px" style="fill: red"></ng-md-icon>\n                            </td>\n                            <td md-cell>\n                              <span> {{log.request.method | uppercase}} {{log.request.uri}} </span>\n                            </td>\n                            <td md-cell>{{log.response.status}} | {{log.responseTime}} ms</td>\n                            <td md-cell>\n                              <ng-md-icon\n                                ng-if="!log.success"\n                                icon="remove_red_eye"\n                                size="16px"\n                                ui-sref="management.apis.detail.proxy.healthCheckDashboard.log({log: log.id})"\n                              ></ng-md-icon>\n                            </td>\n                          </tr>\n                          <tr ng-if="transitionMode?healthCheckCtrl.transitionLogs.total === 0:healthCheckCtrl.logs.total === 0">\n                            <td md-cell colspan="6">No log</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </md-table-container>\n\n                    <md-table-pagination\n                      md-limit="healthCheckCtrl.query.size"\n                      md-limit-options="[10, 25, 50, 75, 100]"\n                      md-page="healthCheckCtrl.query.page"\n                      md-total="{{transitionMode?healthCheckCtrl.transitionLogs.total:healthCheckCtrl.logs.total}}"\n                      md-on-paginate="healthCheckCtrl.onPaginate"\n                      md-page-select\n                    >\n                    </md-table-pagination>\n                  </div>\n                </md-card-content>\n              </div>\n            </md-card>\n          </div>\n        </div>\n      </md-content>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div class="log-table" layout="row" layout-padding>\n  <div layout="column" flex="33">\n    <md-table-container>\n      <table md-table>\n        <tbody md-body>\n          <tr md-row style="height: 30px">\n            <td md-cell><span style="font-weight: bold">ID</span></td>\n            <td md-cell>{{healthCheckLogCtrl.log.id}}</td>\n          </tr>\n          <tr md-row style="height: 30px">\n            <td md-cell><span style="font-weight: bold">Timestamp</span></td>\n            <td md-cell>{{healthCheckLogCtrl.log.timestamp | date:\'MMM d, y h:mm:ss.sss a\'}}</td>\n          </tr>\n          <tr md-row style="height: 30px">\n            <td md-cell><span style="font-weight: bold">Response time</span></td>\n            <td md-cell>{{healthCheckLogCtrl.log.responseTime | number}} ms</td>\n          </tr>\n          <tr md-row style="height: 30px">\n            <td md-cell><span style="font-weight: bold">Gateway</span></td>\n            <td md-cell>{{healthCheckLogCtrl.log.gateway}}</td>\n          </tr>\n          <tr md-row style="height: 30px">\n            <td md-cell><span style="font-weight: bold">Assertion</span></td>\n            <td md-cell>{{healthCheckLogCtrl.log.message}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </md-table-container>\n  </div>\n</div>\n\n<div class="log-table" layout="row" layout-padding>\n  <div layout="row" layout-padding flex="45" class="gv-log-response-panel">\n    <div flex="10" layout="row" layout-align="center center">\n      <span class="vertical-text log-header" style="text-align: center">REQUEST</span>\n    </div>\n\n    <div layout="column" flex>\n      <md-table-container>\n        <table md-table>\n          <tbody md-body>\n            <tr md-row>\n              <td md-cell>\n                <span\n                  class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{healthCheckLogCtrl.log.request.method | uppercase}}-selected"\n                >\n                  {{healthCheckLogCtrl.log.request.method | uppercase}}\n                </span>\n              </td>\n              <td md-cell>{{healthCheckLogCtrl.log.request.uri}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <br />\n\n      <md-table-container ng-if="healthCheckLogCtrl.log.request.headers">\n        <table md-table>\n          <tbody md-body>\n            <tr md-row ng-repeat="(key, value) in healthCheckLogCtrl.log.request.headers" style="height: 30px">\n              <td md-cell><span style="font-weight: bold">{{key}}</span></td>\n              <td md-cell>{{value[0]}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n      <div ng-if="healthCheckLogCtrl.log.request.headers === undefined || healthCheckLogCtrl.log.request.headers.length === 0">\n        <span>No HTTP Headers</span>\n      </div>\n\n      <br />\n\n      <div\n        ng-if="healthCheckLogCtrl.log.request.body"\n        ui-codemirror\n        ui-codemirror-opts="{lineNumbers: true, readOnly: true, lineWrapping: true, mode: healthCheckLogCtrl.getMimeType(healthCheckLogCtrl.log.request)}"\n        ng-model="healthCheckLogCtrl.log.response.body"\n      ></div>\n    </div>\n  </div>\n\n  <div flex="5" layout="column" layout-align="center center">\n    <span>\n      <ng-md-icon icon="arrow_forward" size="30px"></ng-md-icon>\n    </span>\n  </div>\n\n  <div\n    layout="row"\n    layout-padding\n    flex="45"\n    ng-class="{\'gv-log-response-panel-{{healthCheckLogCtrl.log.response.status / 100 | number:0}}\': true}"\n  >\n    <div flex="10" layout="row" layout-align="center center">\n      <span class="vertical-text log-header" style="text-align: center">RESPONSE</span>\n    </div>\n\n    <div layout="column" flex>\n      <md-table-container>\n        <table md-table>\n          <tbody md-body>\n            <tr md-row>\n              <td md-cell><span style="font-weight: bold">Status</span></td>\n              <td md-cell>{{healthCheckLogCtrl.log.response.status | number}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <br />\n\n      <md-table-container ng-if="healthCheckLogCtrl.log.response.headers">\n        <table md-table>\n          <tbody md-body>\n            <tr md-row ng-repeat="(key, value) in healthCheckLogCtrl.log.response.headers" style="height: 30px">\n              <td md-cell><span style="font-weight: bold">{{key}}</span></td>\n              <td md-cell>{{value[0]}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n      <div ng-if="healthCheckLogCtrl.log.response.headers === undefined || healthCheckLogCtrl.log.response.headers.length === 0">\n        <span>No HTTP Headers</span>\n      </div>\n\n      <br />\n\n      <div\n        ng-if="healthCheckLogCtrl.log.response.body"\n        ui-codemirror\n        ui-codemirror-opts="{lineNumbers: true, readOnly: true, lineWrapping: true, mode: healthCheckLogCtrl.getMimeType(healthCheckLogCtrl.log.response)}"\n        ng-model="healthCheckLogCtrl.log.response.body"\n      ></div>\n    </div>\n  </div>\n</div>\n<section>\n  <md-button class="md-button" aria-label="Back to healthcheck" ng-click="healthCheckLogCtrl.backToHealthcheck()">\n    <ng-md-icon icon="reply"></ng-md-icon>\n    <span style="color: rgba(0, 0, 0, 0.54)">Back to healthcheck</span>\n  </md-button>\n</section>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms" layout="column">\n  <h1>Members</h1>\n\n  <div class="gv-form">\n    <h2>{{apiMembersCtrl.members.length}} direct members</h2>\n    <div class="gv-form-content" layout="column">\n      <md-checkbox\n        ng-model="apiMembersCtrl.api.disable_membership_notifications"\n        ng-true-value="false"\n        ng-false-value="true"\n        aria-label="Enables notifications when members are added to this API"\n        ng-change="apiMembersCtrl.toggleDisableMembershipNotifications()"\n      >\n        Enables notifications when members are added to this API\n      </md-checkbox>\n      <md-table-container ng-show="apiMembersCtrl.members.length">\n        <table md-table class="gv-table-dense">\n          <thead md-head md-order="order">\n            <tr md-row>\n              <th md-column width="1%" nowrap></th>\n              <th md-column order-by="lastname">Member</th>\n              <th md-column order-by="type">Role</th>\n              <th md-column permission permission-only="\'api-member-u\'"></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="member in apiMembersCtrl.members | orderBy: order">\n              <td md-cell>\n                <gravitee-identity-picture\n                  image-id="member.id"\n                  image-url="apiMembersCtrl.getMembershipAvatar(member)"\n                  image-name="apiMembersCtrl.getMembershipDisplay(member)"\n                  image-width="32"\n                  image-border-radius="true"\n                ></gravitee-identity-picture>\n              </td>\n              <td md-cell>\n                <md-list-item>\n                  <span ng-if="member.role == \'PRIMARY_OWNER\'"><b>{{apiMembersCtrl.getMembershipDisplay(member)}}</b></span>\n                  <span ng-if="member.role != \'PRIMARY_OWNER\'">{{apiMembersCtrl.getMembershipDisplay(member)}}</span>\n                </md-list-item>\n              </td>\n              <td permission permission-only="\'api-member-u\'" md-cell>\n                <md-select\n                  ng-model="member.role"\n                  ng-change="apiMembersCtrl.updateMember(member)"\n                  ng-disabled="member.role == \'PRIMARY_OWNER\'"\n                  aria-label="Update member role"\n                >\n                  <md-option ng-value="role.name" ng-repeat="role in apiMembersCtrl.roles" ng-disabled="role.system"\n                    >{{role.name}}</md-option\n                  >\n                </md-select>\n              </td>\n              <td permission permission-except="\'api-member-u\'" md-cell>\n                <md-select ng-model="member.role" ng-change="apiMembersCtrl.updateMember(member)" disabled aria-label="Update member role">\n                  <md-option ng-value="role.name" ng-repeat="role in apiMembersCtrl.roles">{{role.name}}</md-option>\n                </md-select>\n              </td>\n              <td md-cell permission permission-only="\'api-member-u\'">\n                <ng-md-icon\n                  ng-if="member.role != \'PRIMARY_OWNER\'"\n                  ng-click="apiMembersCtrl.showDeleteMemberConfirm($event, member)"\n                  icon="delete"\n                  size="24"\n                  style="cursor: pointer"\n                ></ng-md-icon>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n      <gravitee-empty-state\n        ng-if="!apiMembersCtrl.members.length"\n        icon="group"\n        model="Member"\n        message="Members will appear here"\n        sub-message="Start attaching a member"\n        create-mode="true"\n      ></gravitee-empty-state>\n    </div>\n  </div>\n\n  <div class="gv-form" ng-repeat="grp in apiMembersCtrl.groupIdsWithMembers">\n    <h2>\n      {{apiMembersCtrl.groupMembers[grp].length}} members inherited from group "{{apiMembersCtrl.groupById[grp].name}}"\n      <span ng-if="apiMembersCtrl.groupById[grp].primary_owner" flex class="badge" style="background-color: #039be5">Primary Owner</span>\n    </h2>\n    <div class="gv-form-content" layout="column">\n      <div layout="row" layout-align="start end">\n        <div\n          style="margin-bottom: 5px"\n          ng-model="apiMembersCtrl.displayGroups[grp]"\n          ng-if="!apiMembersCtrl.displayGroups[grp]"\n          ng-click="apiMembersCtrl.displayGroups[grp]=true"\n        >\n          <a>Show</a>\n        </div>\n        <div\n          style="margin-bottom: 5px"\n          ng-model="apiMembersCtrl.displayGroups[grp]"\n          ng-if="apiMembersCtrl.displayGroups[grp]"\n          ng-click="apiMembersCtrl.displayGroups[grp]=false"\n        >\n          <a>Hide</a>\n        </div>\n      </div>\n      <div style="background: none" ng-if="apiMembersCtrl.displayGroups[grp]">\n        <md-table-container ng-show="apiMembersCtrl.groupMembers[grp].length">\n          <table md-table class="gv-table-dense">\n            <thead md-head md-order="order">\n              <tr md-row>\n                <th md-column order-by="username">Member</th>\n                <th md-column order-by="type">Role</th>\n              </tr>\n            </thead>\n            <tbody md-body>\n              <tr md-row ng-repeat="member in apiMembersCtrl.groupMembers[grp] | orderBy: order">\n                <td md-cell>\n                  <md-list-item>\n                    <gravitee-identity-picture\n                      image-id="member.id"\n                      image-url="apiMembersCtrl.getMembershipAvatar(member)"\n                      image-name="apiMembersCtrl.getMembershipDisplay(member)"\n                      image-width="32"\n                      image-border-radius="true"\n                    ></gravitee-identity-picture>\n                    <span>{{apiMembersCtrl.getMembershipDisplay(member)}}</span>\n                  </md-list-item>\n                </td>\n                <td md-cell>{{member.roles["API"]}}</td>\n              </tr>\n            </tbody>\n          </table>\n        </md-table-container>\n      </div>\n    </div>\n  </div>\n\n  <div ng-style="!apiMembersCtrl.members.length && {\'text-align\':\'center\'}">\n    <md-button\n      permission\n      permission-only="\'api-member-c\'"\n      ng-class="{\'md-fab-bottom-right\': apiMembersCtrl.members.length}"\n      class="md-fab"\n      aria-label="Add"\n      ng-click="apiMembersCtrl.showAddMemberModal($event)"\n    >\n      <ng-md-icon icon="add"></ng-md-icon>\n    </md-button>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<form name="portalCtrl.formApi" ng-submit="portalCtrl.update(portalCtrl.api)" layout="column">\n  <div class="gv-forms" layout="column">\n    <h1>Groups</h1>\n\n    <div class="gv-form">\n      <h2></h2>\n      <div class="gv-form-content" layout="column">\n        <md-input-container permission permission-only="\'api-definition-u\'" class="flex">\n          <label>Groups</label>\n          <md-select\n            ng-model="portalCtrl.api.groups"\n            multiple\n            ng-disabled="!(portalCtrl.attachableGroups && portalCtrl.attachableGroups.length > 0)"\n          >\n            <md-option ng-repeat="group in portalCtrl.attachableGroups" ng-value="group.id"> {{group.name}} </md-option>\n          </md-select>\n        </md-input-container>\n        <div permission permission-except="\'api-definition-u\'" layout="column">\n          <label>Groups</label>\n          <md-chips permission permission-except="\'api-definition-u\'" readonly="true" ng-model="portalCtrl.attachedGroups">\n            <md-chip-template>{{$chip.name}}</md-chip-template>\n          </md-chips>\n        </div>\n        <div class="md-actions gravitee-api-save-button" layout="row">\n          <md-button\n            permission\n            permission-only="\'api-definition-u\'"\n            class="md-raised md-primary"\n            type="submit"\n            ng-disabled="portalCtrl.formApi.$invalid || portalCtrl.formApi.$pristine"\n          >\n            Save\n          </md-button>\n          <md-button\n            permission\n            permission-only="\'api-definition-u\'"\n            class="md-raised"\n            type="button"\n            ng-click="portalCtrl.reset()"\n            ng-disabled="portalCtrl.formApi.$invalid || portalCtrl.formApi.$pristine"\n          >\n            Reset\n          </md-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms" layout="column">\n  <h1>Transfer ownership</h1>\n\n  <div class="gv-form">\n    <h2></h2>\n    <div\n      class="gv-form-content"\n      layout="column"\n      layout-align="start stretch"\n      ng-if="apiTransferOwnershipCtrl.isAllowedToTransferOwnership()"\n    >\n      <p ng-if="apiTransferOwnershipCtrl.ApiPrimaryOwnerModeService.isHybrid()">Give full access to this API to another user or group.</p>\n      <p ng-if="apiTransferOwnershipCtrl.ApiPrimaryOwnerModeService.isUserOnly()">Give full access to this API to another user.</p>\n      <p ng-if="apiTransferOwnershipCtrl.ApiPrimaryOwnerModeService.isGroupOnly()">Give full access to this API to another group.</p>\n      <div layout="column" flex>\n        <div\n          layout="row "\n          layout-align="center center"\n          layout-padding="5px"\n          flex\n          ng-if="apiTransferOwnershipCtrl.ApiPrimaryOwnerModeService.isHybrid() && apiTransferOwnershipCtrl.poGroups && apiTransferOwnershipCtrl.poGroups.length > 0"\n        >\n          <md-radio-group ng-model="apiTransferOwnershipCtrl.useGroupAsPrimaryOwner" flex>\n            <div layout="row" layout-align="start center">\n              <md-radio-button ng-value="false" aria-label="false" style="margin-bottom: initial"></md-radio-button>\n              <gv-user-autocomplete\n                users-selected="apiTransferOwnershipCtrl.usersSelected"\n                place-holder="\'Select a user\'"\n                single-user="true"\n                user-filter-fn="apiTransferOwnershipCtrl.userFilterFn"\n                default-users-list="apiTransferOwnershipCtrl.defaultUsersList"\n                disabled="apiTransferOwnershipCtrl.useGroupAsPrimaryOwner"\n                flex\n              >\n              </gv-user-autocomplete>\n            </div>\n            <div layout="row" layout-align="start center">\n              <md-radio-button ng-value="true" aria-label="true" style="margin-bottom: initial"></md-radio-button>\n              <md-input-container flex>\n                <label>Primary Owner Group</label>\n                <md-select\n                  ng-model="apiTransferOwnershipCtrl.newPrimaryOwnerGroup"\n                  ng-disabled="!apiTransferOwnershipCtrl.useGroupAsPrimaryOwner"\n                >\n                  <md-option ng-value=""></md-option>\n                  <md-option ng-repeat="group in apiTransferOwnershipCtrl.poGroups" ng-value="group.id">{{group.name}}</md-option>\n                </md-select>\n              </md-input-container>\n            </div>\n          </md-radio-group>\n        </div>\n        <div\n          layout="row "\n          layout-align="center center"\n          layout-padding="5px"\n          flex\n          ng-if="(apiTransferOwnershipCtrl.ApiPrimaryOwnerModeService.isHybrid() && !(apiTransferOwnershipCtrl.poGroups && apiTransferOwnershipCtrl.poGroups.length > 0)) || apiTransferOwnershipCtrl.ApiPrimaryOwnerModeService.isUserOnly()"\n        >\n          <gv-user-autocomplete\n            users-selected="apiTransferOwnershipCtrl.usersSelected"\n            place-holder="\'Select a user\'"\n            single-user="true"\n            user-filter-fn="apiTransferOwnershipCtrl.userFilterFn"\n            default-users-list="apiTransferOwnershipCtrl.defaultUsersList"\n            flex\n          >\n          </gv-user-autocomplete>\n        </div>\n        <div\n          layout="row "\n          layout-align="center center"\n          layout-padding="5px"\n          flex\n          ng-if="apiTransferOwnershipCtrl.ApiPrimaryOwnerModeService.isGroupOnly() && apiTransferOwnershipCtrl.poGroups && apiTransferOwnershipCtrl.poGroups.length > 0"\n        >\n          <md-input-container flex>\n            <label>Primary Owner Group</label>\n            <md-select\n              ng-model="apiTransferOwnershipCtrl.newPrimaryOwnerGroup"\n              ng-disabled="!apiTransferOwnershipCtrl.useGroupAsPrimaryOwner"\n            >\n              <md-option ng-value=""></md-option>\n              <md-option ng-repeat="group in apiTransferOwnershipCtrl.poGroups" ng-value="group.id">{{group.name}}</md-option>\n            </md-select>\n          </md-input-container>\n        </div>\n        <div\n          layout="row "\n          layout-align="center center"\n          layout-padding="5px"\n          flex\n          ng-if="!apiTransferOwnershipCtrl.canUseGroupAsPrimaryOwner()"\n        >\n          <md-input-container flex>\n            <div>\n              You can\'t set a group as primary owner. To set a group as a primary owner, the group must contain a member with a primary\n              owner API role.\n            </div>\n          </md-input-container>\n        </div>\n\n        <br />\n        <md-input-container class="md-block" flex ng-if="apiTransferOwnershipCtrl.api.owner.type.toUpperCase() === \'USER\'">\n          <label>New role for current Primary Owner</label>\n          <md-select ng-model="apiTransferOwnershipCtrl.newPORole">\n            <md-option ng-value="role" ng-repeat="role in apiTransferOwnershipCtrl.newPORoles">{{role.name}}</md-option>\n          </md-select>\n        </md-input-container>\n      </div>\n      <div class="md-actions gravitee-api-save-button" layout="row" flex>\n        <md-button\n          ng-disabled="!apiTransferOwnershipCtrl.newPORole && apiTransferOwnershipCtrl.api.owner.type.toUpperCase() === \'USER\'"\n          class="md-primary md-raised"\n          ng-click="apiTransferOwnershipCtrl.showTransferOwnershipConfirm($event)"\n          >Transfer</md-button\n        >\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="warning-dialog">\n  <form ng-submit="ctrl.generate()">\n    <md-dialog-content layout-padding>\n      <h4>{{ctrl.title}}</h4>\n      <md-input-container ng-show="!ctrl.token" style="width: 100%">\n        <label>Name</label>\n        <input type="text" md-maxlength="64" autofocus ng-model="ctrl.name" placeholder="What’s this token for?" />\n      </md-input-container>\n      <div ng-if="ctrl.token">\n        <h5>Make sure to copy your new personal access token now. You won’t be able to see it again.</h5>\n        <span>\n          <code>{{ctrl.token.token}}</code>\n          <md-tooltip md-direction="right">Copy to clipboard</md-tooltip>\n          <ng-md-icon\n            size="20"\n            style="fill: #424e5a"\n            icon="content_copy"\n            ngclipboard\n            data-clipboard-text="{{ctrl.token.token}}"\n            ngclipboard-success="onClipboardSuccess()"\n            role="button"\n          ></ng-md-icon>\n        </span>\n        <h6>Example of use:</h6>\n        <span>\n          <code>{{ctrl.getExampleOfUse(ctrl.token.token)}}</code>\n          <md-tooltip md-direction="right">Copy to clipboard</md-tooltip>\n          <ng-md-icon\n            size="20"\n            style="fill: #424e5a"\n            icon="content_copy"\n            ngclipboard\n            data-clipboard-text="{{ctrl.getExampleOfUse(ctrl.token.token)}}"\n            ngclipboard-success="onClipboardSuccess()"\n            role="button"\n          ></ng-md-icon>\n        </span>\n      </div>\n    </md-dialog-content>\n    <md-dialog-actions layout="row">\n      <md-button ng-if="!ctrl.token" type="button" ng-click="ctrl.cancel()">Cancel</md-button>\n      <md-button ng-if="!ctrl.token" class="md-raised md-primary" type="submit" ng-disabled="!ctrl.name">Generate</md-button>\n      <md-button ng-if="ctrl.token" type="button" ng-click="ctrl.confirm()">OK</md-button>\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms" style="padding: 20px">\n  <h1>User information</h1>\n  <div class="gv-form">\n    <p>{{$ctrl.user.displayName}}</p>\n    <div class="gv-form-content gravitee-user-container" layout="column">\n      <form name="formUser" ng-submit="$ctrl.save()">\n        <div layout="row">\n          <div flex="80">\n            <div class="gravitee-user-container__info-row">\n              <ng-md-icon class="gravitee-user-container__editable-info-row__icon" icon="person"></ng-md-icon>\n              <md-input-container class="gravitee-user-container__editable-info-row__label">\n                <label>Firstname</label>\n                <input\n                  ng-model="$ctrl.user.firstname"\n                  type="text"\n                  ng-required="$ctrl.isInternalUser()"\n                  ng-disabled="!$ctrl.isInternalUser()"\n                />\n              </md-input-container>\n              <md-input-container class="gravitee-user-container__editable-info-row__label">\n                <label>Lastname</label>\n                <input\n                  ng-model="$ctrl.user.lastname"\n                  type="text"\n                  ng-required="$ctrl.isInternalUser()"\n                  ng-disabled="!$ctrl.isInternalUser()"\n                />\n              </md-input-container>\n            </div>\n            <div class="gravitee-user-container__editable-info-row">\n              <ng-md-icon class="gravitee-user-container__editable-info-row__icon" icon="contact_mail"></ng-md-icon>\n              <md-input-container class="gravitee-user-container__editable-info-row__label">\n                <label>Email</label>\n                <input ng-model="$ctrl.user.email" type="text" ng-required="$ctrl.isInternalUser()" ng-disabled="!$ctrl.isInternalUser()" />\n              </md-input-container>\n            </div>\n\n            <div class="gravitee-user-container__info-row">\n              <ng-md-icon class="gravitee-user-container__info-row__icon" icon="lock">\n                <md-tooltip>\n                  <span ng-repeat="auth in $ctrl.user.authorities">{{auth.authority}}{{$last ? \'\' : \',&nbsp\'}}</span>\n                </md-tooltip>\n              </ng-md-icon>\n              <label ng-repeat="role in $ctrl.user.roles"\n                >{{"[" + role.scope + "]&nbsp;" + role.name}}{{$last ? \'\' : \'&nbsp;-&nbsp;\'}}</label\n              >\n            </div>\n            <div class="gravitee-user-container__info-row">\n              <ng-md-icon class="gravitee-user-container__info-row__icon" icon="group"></ng-md-icon>\n              <label>{{$ctrl.groups}}</label>\n            </div>\n            <div\n              class="gravitee-user-container__info-row"\n              ng-if="$ctrl.fields && $ctrl.fields.length > 0"\n              ng-repeat="field in $ctrl.fields"\n            >\n              <label class="gravitee-user-container__info-row__icon">{{field.label}}</label>\n              <md-input-container class="gravitee-user-container__editable-info-row__label">\n                <input\n                  ng-if="!field.values || field.values.length == 0"\n                  ng-model="$ctrl.user.customFields[field.key]"\n                  type="text"\n                  ng-required="field.required"\n                />\n                <md-select\n                  style="padding-bottom: 2em"\n                  ng-if="field.values && field.values.length > 0"\n                  ng-model="$ctrl.user.customFields[field.key]"\n                  ng-required="field.required"\n                >\n                  <md-option ng-value="value" ng-repeat="value in field.values">{{ value }}</md-option>\n                </md-select>\n              </md-input-container>\n            </div>\n          </div>\n\n          <div>\n            <gravitee-image\n              image-id="$ctrl.user.id"\n              image="$ctrl.user.picture"\n              image-url="$ctrl.user.picture_url"\n              image-border-radius="true"\n              image-name="$ctrl.user.displayName"\n              image-form="formUser"\n              can-delete="true"\n              delete-label="Use default"\n            ></gravitee-image>\n          </div>\n        </div>\n        <div layout="row" style="margin-top: 20px">\n          <md-button type="submit" ng-disabled="formUser.$pristine">Update</md-button>\n          <md-button ng-click="$ctrl.cancel()" ng-disabled="formUser.$pristine">Cancel</md-button>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <div class="gv-form">\n    <h2>Personal access tokens</h2>\n    <span>Tokens you have generated that can be used to access the Gravitee.io management API.</span>\n    <div class="gv-form-content" layout="column">\n      <md-button class="md-raised" ng-click="$ctrl.generateToken()" style="width: 40%; margin: 0 auto"> Generate token </md-button>\n      <md-table-container ng-show="$ctrl.tokens.length">\n        <table md-table>\n          <thead md-head>\n            <tr md-row>\n              <th md-column>Name</th>\n              <th md-column>Created</th>\n              <th md-column>Last use</th>\n              <th md-column></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="token in $ctrl.tokens">\n              <td md-cell>\n                <span><b>{{token.name}}</b></span>\n              </td>\n              <td md-cell>\n                <span><b>{{token.created_at | datetimeFilter}}</b></span>\n              </td>\n              <td md-cell>\n                <span><b>{{token.last_use_at? (token.last_use_at | humanDateFilter) : \'never\'}}</b></span>\n              </td>\n              <td md-cell>\n                <ng-md-icon ng-click="$ctrl.revoke(token)" icon="delete" size="24" title="Revoke token \'{{token.name}}\'"></ng-md-icon>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n    </div>\n  </div>\n\n  <div class="gv-form gv-form-danger">\n    <h2>Danger Zone</h2>\n    <div class="gv-form-content" layout="column">\n      <div layout="row" layout-align="space-between center" ng-if="!$ctrl.canDeleteMyAccount()">\n        <div class="gv-form-danger-text">\n          Please transfer ownership of your APIs and applications or delete them before deleting your account\n        </div>\n        <div><md-button class="md-flat md-warn" type="button" ng-disabled="true">Delete my account</md-button></div>\n      </div>\n\n      <div layout="row" layout-align="space-between center" ng-if="$ctrl.canDeleteMyAccount()">\n        <div class="gv-form-danger-text">\n          Please transfer ownership of your APIs and applications or delete them before deleting your account\n        </div>\n        <div><md-button class="md-flat md-warn" type="button" ng-click="$ctrl.deleteMyAccount()">Delete my account</md-button></div>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="tasks">\n  <div ng-if="$ctrl.tasks.data.length > 0" class="tasks__list">\n    <span class="tasks__list__title">My Tasks ({{$ctrl.tasks.data.length}})</span>\n    <md-card class="tasks__list__task" ng-repeat="task in $ctrl.tasks.data | orderBy: \'-created_at\'">\n      <div ng-if="task.type !== \'PROMOTION_APPROVAL\'" ng-click="$ctrl.go(task)">\n        <div class="tasks__list__task__header">\n          <div class="tasks__list__task__header__left">\n            <gv-icon ng-if="$ctrl.icon(task)" class="tasks__list__task__header__left__icon" shape="{{$ctrl.icon(task)}}"></gv-icon>\n            <div class="tasks__list__task__header__left__title">{{$ctrl.title(task)}}</div>\n          </div>\n          <div class="tasks__list__task__header__right">\n            <div class="tasks__list__task__header__right__date">{{task.created_at | humanDatetimeFilter}}</div>\n          </div>\n        </div>\n\n        <div class="tasks__list__task__description">\n          <div ng-bind-html="$ctrl.taskMessage(task)"></div>\n        </div>\n        <div class="tasks__list__task__actions">\n          <md-button>{{$ctrl.actionLabel(task)}}</md-button>\n        </div>\n      </div>\n\n      <promotion-task ng-if="task.type === \'PROMOTION_APPROVAL\'" task="task" task-handled="$ctrl.removeTask(task)"></promotion-task>\n    </md-card>\n  </div>\n\n  <gravitee-empty-state\n    class="tasks__empty"\n    ng-if="!$ctrl.tasks.data || $ctrl.tasks.data.length === 0"\n    icon="wb_sunny"\n    message="Congratulations, you did all your tasks!"\n  ></gravitee-empty-state>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="promotion-task">\n  <div class="promotion-task__header">\n    <div class="promotion-task__header__left">\n      <gv-icon class="promotion-task__header__left__icon" shape="maps:rocket"></gv-icon>\n      <div class="promotion-task__header__left__title">API Promotion Request</div>\n    </div>\n    <div class="promotion-task__header__right">\n      <div class="promotion-task__header__right__date">{{$ctrl.task.created_at | humanDatetimeFilter}}</div>\n    </div>\n  </div>\n\n  <div class="promotion-task__description">\n    <div>\n      <strong>{{:: $ctrl.task.data.authorDisplayName}}</strong> requested the promotion of API\n      <code>{{::$ctrl.task.data.apiName}}</code> from environment <strong>{{::$ctrl.task.data.sourceEnvironmentName}}</strong> to\n      environment <strong>{{::$ctrl.task.data.targetEnvironmentName}}</strong>\n    </div>\n    <div class="promotion-task__description__details">\n      <div ng-if="$ctrl.task.data.isApiUpdate">\n        Since the API has already been promoted to this environment, accepting this promotion will update the existing API.\n      </div>\n      <div ng-if="!$ctrl.task.data.isApiUpdate">Accepting this promotion will create a new API in the specified environment.</div>\n    </div>\n  </div>\n\n  <div class="promotion-task__actions">\n    <div class="promotion-task__actions__reject">\n      <md-button ng-click="$ctrl.openRejectDialog()"><gv-icon shape="content:clear"></gv-icon>REJECT</md-button>\n    </div>\n    <div class="promotion-task__actions__accept">\n      <md-button ng-click="$ctrl.openAcceptDialog()"><gv-icon shape="action:done"></gv-icon>ACCEPT</md-button>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div layout="row" ng-style="$ctrl.api ? \'\' : {\'margin\': \'0 0 0 -32px\'}">\n  <div class="gv-sub-menu menu">\n    <div ng-if="$ctrl.api" class="md-headline">{{$ctrl.api.name}} ({{$ctrl.api.version}})</div>\n    <div ng-if="$ctrl.application" class="md-headline">{{$ctrl.application.name}}</div>\n    <div class="aui-nav-heading">\n      <strong>Notifications</strong>\n    </div>\n\n    <ul class="aui-nav">\n      <li\n        class="iterable-item"\n        ui-sref-active="aui-nav-selected"\n        ng-repeat="notificationSetting in $ctrl.notificationSettings"\n        ng-click="$ctrl.selectNotificationSetting(notificationSetting)"\n      >\n        <a class="execute" ui-sref="^.notifications.notification({notificationId: notificationSetting.id || \'portal\'})"\n          >{{notificationSetting.name}}</a\n        >\n      </li>\n    </ul>\n  </div>\n  <div flex class="notifications-content" ui-view layout="column"></div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <div class="gv-forms" layout="column">\n    <form name="$ctrl.formNotification" novalidate>\n      <h1>{{$ctrl.selectedNotificationSetting.name}}</h1>\n      <div class="gv-form">\n        <h2>Settings</h2>\n        <div class="gv-form-content" layout="column">\n          <div ng-if="$ctrl.selectedNotificationSetting.config_type===\'GENERIC\'">\n            <h5>Configure the notifier you want to use:</h5>\n            <div layout="column">\n              <md-input-container flex>\n                <label>Notifier</label>\n                <input readonly ng-model="$ctrl.selectedNotificationSetting.notifier" />\n              </md-input-container>\n              <md-input-container flex>\n                <label ng-if="$ctrl.selectedNotifier.type === \'EMAIL\'">Email list (use space, \',\' or \';\' to separate emails)</label>\n                <label ng-if="$ctrl.selectedNotifier.type === \'WEBHOOK\'">URL (Gravitee will POST datas to this url)</label>\n                <input ng-model="$ctrl.selectedNotificationSetting.config" aria-label="Notifier configuration" />\n              </md-input-container>\n              <md-input-container flex ng-if="$ctrl.selectedNotifier.type === \'WEBHOOK\'">\n                <md-checkbox ng-model="$ctrl.selectedNotificationSetting.useSystemProxy" aria-label="Use system proxy"\n                  >Use system proxy</md-checkbox\n                >\n              </md-input-container>\n            </div>\n          </div>\n          <h5>Which events would you like to subscribe for ?</h5>\n          <div layout="column">\n            <div ng-repeat="category in $ctrl.hooksCategories" style="margin-top: 18px">\n              <h6>{{category}}</h6>\n              <div layout="row" layout-wrap>\n                <div flex="35" ng-repeat="hook in $ctrl.hooksByCategory[category]">\n                  <md-checkbox ng-model="$ctrl.hookStatus[hook.id]" aria-label="Notification Hook">\n                    <b>{{hook.label}}</b>\n                    <br />\n                    {{hook.description}}\n                  </md-checkbox>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class="md-actions gravitee-api-save-button" layout="row">\n            <md-button\n              class="md-raised md-primary"\n              type="submit"\n              permission\n              permission-only="[\'api-notification-u\', \'application-notification-u\', \'environment-notification-u\']"\n              ng-disabled="!$ctrl.validate() || $ctrl.formNotification.$pristine"\n              ng-click="$ctrl.save()"\n            >\n              Save\n            </md-button>\n            <md-button\n              class="md-raised md-warn"\n              type="button"\n              ng-click="$ctrl.delete()"\n              permission\n              permission-only="[\'api-notification-d\', \'application-notification-d\', \'environment-notification-d\']"\n              ng-if="$ctrl.selectedNotificationSetting.config_type===\'GENERIC\'"\n            >\n              Delete\n            </md-button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n  <md-button\n    permission\n    permission-only="[\'api-notification-c\', \'application-notification-c\', \'environment-notification-c\']"\n    class="md-fab md-fab-bottom-right md-fab-scrollable"\n    ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"\n    aria-label="Add"\n    ng-click="$ctrl.addDialog()"\n  >\n    <ng-md-icon icon="add"></ng-md-icon>\n  </md-button>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="New Notification Settings">\n  <form name="formNotificationSetting" ng-submit="dialogAddNotificationSettingsController.save()" novalidate>\n    <md-dialog-content layout="column" layout-padding>\n      <h4>New Notification Settings</h4>\n      <md-input-container>\n        <label>Name</label>\n        <input ng-model="dialogAddNotificationSettingsController.name" id="name" required autofocus />\n      </md-input-container>\n      <md-input-container>\n        <label>Notifier</label>\n        <md-select ng-model="dialogAddNotificationSettingsController.selectedNotifier" ng-model-options="{trackBy: \'$value.id\'}" required>\n          <md-option ng-repeat="notifier in dialogAddNotificationSettingsController.notifiers" ng-value="notifier">\n            {{notifier.name}}\n          </md-option>\n        </md-select>\n      </md-input-container>\n    </md-dialog-content>\n\n    <md-dialog-actions layout="row">\n      <md-button ng-click="dialogAddNotificationSettingsController.hide()"> Cancel </md-button>\n      <md-button type="submit" class="md-raised md-primary" ng-disabled="formNotificationSetting.$invalid"> Add </md-button>\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <div class="gv-forms-header">\n    <h1>Documentation</h1>\n    <a permission permission-only="[\'environment-documentation-c\', \'api-documentation-c\']" ng-click="$ctrl.importPages()">\n      Import multiple files\n    </a>\n    <md-button\n      class="md-raised md-primary"\n      type="button"\n      ng-if="$ctrl.hasExternalDoc()"\n      ng-click="$ctrl.fetch()"\n      ng-disabled="$ctrl.fetchAllInProgress"\n      permission\n      permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n    >\n      Fetch all\n    </md-button>\n  </div>\n  <div class="gv-form">\n    <div layout="row" layout-align="space-between center" ng-if="!renameFolder">\n      <h2>\n        <span ng-repeat="folder in $ctrl.breadcrumb">\n          <a ng-if="$ctrl.apiId && !$last" ui-sref="management.apis.detail.portal.documentation({apiId: $ctrl.apiId, parent: folder.id})"\n            >{{folder.name}}</a\n          >\n          <a ng-if="!$ctrl.apiId && !$last" ui-sref="management.settings.documentation.list({parent: folder.id})">{{folder.name}}</a>\n          <span ng-if="$ctrl.apiId && $last">{{folder.name}}</span>\n          <span ng-if="!$ctrl.apiId && $last">{{folder.name}}</span>\n          <span ng-if="$first || !$last ">&nbsp;/&nbsp;</span>\n        </span>\n      </h2>\n      <div ng-if="$ctrl.breadcrumb.length > 1 && $ctrl.currentFolder.type != \'SYSTEM_FOLDER\'">\n        <md-button\n          type="button"\n          class="md-raised md-primary"\n          ng-click="$ctrl.changeFolderVisibility()"\n          aria-label="visibility"\n          permission\n          permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n        >\n          {{ $ctrl.currentFolder.visibility === \'PRIVATE\' ? \'Make PUBLIC\' : \'Make PRIVATE\'}}</md-button\n        >\n        <md-button\n          type="button"\n          class="md-raised md-primary"\n          ng-click="$ctrl.toggleRenameFolder()"\n          aria-label="Edit"\n          permission\n          permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n          ng-if="!translateFolder"\n        >\n          Rename Folder</md-button\n        >\n        <md-button\n          type="button"\n          class="md-raised md-primary"\n          ng-click="$ctrl.toggleTranslateFolder()"\n          aria-label="Translations"\n          permission\n          permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n        >\n          {{ translateFolder? \'Browse Folder\' : \'Translate Folder\' }}</md-button\n        >\n      </div>\n    </div>\n    <div layout="row" layout-align="space-between center" ng-if="renameFolder">\n      <h2>\n        <span ng-repeat="folder in $ctrl.breadcrumb">\n          <span ng-if="!$last">{{folder.name}}</span>\n          <input ng-if="$last" type="text" ng-model="$ctrl.newFolderName" />\n          <span ng-if="$first || !$last ">&nbsp;/&nbsp;</span>\n        </span>\n      </h2>\n      <div ng-if="$ctrl.breadcrumb.length > 1">\n        <md-button type="button" class="md-raised md-primary" ng-click="$ctrl.renameFolder()" aria-label="Edit"> Save</md-button>\n        <md-button class="md-raised" type="button" ng-click="$ctrl.toggleRenameFolder()"> Cancel </md-button>\n      </div>\n    </div>\n\n    \x3c!-- translation --\x3e\n    <div ng-if="translateFolder">\n      <md-table-container>\n        <table md-table class="gv-table-dense">\n          <thead md-head>\n            <tr md-row>\n              <th md-column width="48px">Language</th>\n              <th md-column>Name</th>\n              <th md-column width="1%" nowrap>Last Update</th>\n              <th md-column width="48px"></th>\n              <th md-column width="48px"></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr ng-if="!$ctrl.currentFolder.translations.length || $ctrl.currentFolder.translations.length <= 0">\n              <td md-cell colspan="5"><span>No translation available</span></td>\n            </tr>\n            <tr md-row ng-repeat="translation in $ctrl.currentFolder.translations">\n              <td md-cell width="48px">\n                <span>\n                  <a ng-click="$ctrl.selectTranslation(translation)">{{translation.configuration.lang}}</a>\n                </span>\n              </td>\n              <td md-cell>{{translation.name}}</td>\n              <td md-cell width="1%" nowrap>{{translation.lastModificationDate | date:\'medium\'}}</td>\n              <td md-cell width="48px">\n                <ng-md-icon\n                  icon="delete"\n                  ng-click="$ctrl.remove(translation)"\n                  style="font-size: 24px; height: 24px"\n                  permission\n                  permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n                >\n                  <md-tooltip md-direction="top" md-visible="false">Remove</md-tooltip>\n                </ng-md-icon>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <div style="text-align: right">\n        <md-button\n          permission\n          permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n          type="button"\n          aria-label="Add translation"\n          class="md-raised md-primary"\n          ng-click="$ctrl.addTranslation()"\n        >\n          Add a translation\n        </md-button>\n      </div>\n\n      <div class="gv-form-content" ng-if="$ctrl.currentTranslation">\n        <md-input-container class="md-block">\n          <label>Language (max. 2 characters)</label>\n          <input ng-model="$ctrl.currentTranslation.configuration.lang" maxlength="2" required />\n        </md-input-container>\n        <md-input-container class="md-block">\n          <label>Translated title</label>\n          <input type="text" ng-model="$ctrl.currentTranslation.name" required />\n        </md-input-container>\n      </div>\n\n      <div class="md-actions gravitee-api-save-button" layout="row" style="padding-top: 32px" ng-if="$ctrl.currentTranslation">\n        <md-button\n          permission\n          permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n          type="button"\n          aria-label="Save translation"\n          class="md-raised md-primary"\n          ng-click="$ctrl.saveFolderTranslation()"\n          ng-disabled="!$ctrl.currentTranslation.configuration.lang || !$ctrl.currentTranslation.name"\n        >\n          Save translation\n        </md-button>\n        <md-button class="md-raised" type="button" ng-click="$ctrl.refreshCurrentFolder()"> Reset </md-button>\n      </div>\n    </div>\n\n    \x3c!-- browse folder--\x3e\n    <div class="gv-form-content" layout="column" ng-if="!translateFolder">\n      <md-table-container ng-if="$ctrl.pages.length > 0 || ($ctrl.systemFolders.length > 0 && $ctrl.rootDir==\'\') ">\n        <table md-table class="gv-table-dense">\n          <thead md-head>\n            <tr md-row>\n              <th md-column class="column-with-logo">Name</th>\n              <th md-column width="48px"></th>\n              <th md-column width="48px"></th>\n              <th md-column width="48px"></th>\n              <th md-column width="76px"></th>\n              <th md-column width="1%" nowrap>Last Update</th>\n              <th md-column width="48px"></th>\n              <th md-column width="24px"></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-if="!$ctrl.rootDir || $ctrl.rootDir == \'\'" ng-repeat="page in $ctrl.systemFolders">\n              <td md-cell>\n                <md-icon md-svg-src="assets/logo_{{page.type | lowercase}}.svg" style="margin-right: 12px"></md-icon>\n                <span>\n                  <a ng-click="$ctrl.openUrl(page)">{{page.name}}</a>\n                </span>\n              </td>\n              <td md-cell width="48px"></td>\n              <td md-cell width="48px"></td>\n              <td md-cell width="48px"></td>\n              <td md-cell width="76px"></td>\n              <td md-cell width="1%"></td>\n              <td md-cell width="48px"></td>\n              <td md-cell width="24px"></td>\n            </tr>\n            <tr md-row ng-repeat="page in $ctrl.pages">\n              <td md-cell>\n                <md-icon md-svg-src="assets/logo_{{page.type | lowercase}}.svg"></md-icon>\n                <sub ng-if="\'LINK\' === page.type" class="icon-button-homepage">\n                  <ng-md-icon\n                    ng-if="\'external\' === page.configuration.resourceType"\n                    icon="open_in_new"\n                    size="12"\n                    style="fill: black"\n                  ></ng-md-icon>\n                  <ng-md-icon\n                    ng-if="\'page\' === page.configuration.resourceType"\n                    icon="insert_drive_file"\n                    size="12"\n                    style="fill: black"\n                  ></ng-md-icon>\n                  <ng-md-icon\n                    ng-if="\'category\' === page.configuration.resourceType"\n                    icon="view_comfy"\n                    size="12"\n                    style="fill: black"\n                  ></ng-md-icon>\n                  <md-tooltip>{{ page.configuration.resourceType }}</md-tooltip>\n                </sub>\n\n                <span style="margin-left: 12px">\n                  <a ng-style="page.published?\'\':{\'font-style\': \'italic\', \'color\': \'grey\'}" ng-click="$ctrl.openUrl(page)">\n                    {{page.name}}\n                  </a>\n                  <sup ng-if="page.homepage" class="icon-button-homepage">\n                    <ng-md-icon icon="home" size="12" style="fill: rgb(68, 138, 255)"></ng-md-icon>\n                  </sup>\n                  <sup\n                    ng-if="page.translations && (page.type !== \'LINK\' || (page.type === \'LINK\' && page.configuration && page.configuration.inherit && page.configuration.inherit === \'false\'))"\n                    class="icon-button-homepage"\n                  >\n                    <ng-md-icon icon="language" size="12" style="fill: rgb(68, 138, 255)">\n                      <md-tooltip>Translated</md-tooltip>\n                    </ng-md-icon>\n                  </sup>\n                </span>\n              </td>\n              <td md-cell width="48px">\n                <ng-md-icon\n                  icon="link"\n                  ng-click="$ctrl.createShortCut(page)"\n                  style="font-size: 24px; height: 24px"\n                  ng-if="$ctrl.canCreateShortCut(page.id, page.type)"\n                  permission\n                  permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n                >\n                  <md-tooltip md-direction="top" md-visible="false">Create a Link in ...</md-tooltip>\n                </ng-md-icon>\n              </td>\n              <td md-cell width="48px">\n                <ng-md-icon\n                  icon="archive"\n                  ng-click="$ctrl.moveToFolder(page)"\n                  style="font-size: 24px; height: 24px"\n                  ng-if="page.type !== \'folder\'"\n                  permission\n                  permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n                >\n                  <md-tooltip md-direction="top" md-visible="false">Move to ...</md-tooltip>\n                </ng-md-icon>\n              </td>\n              <td md-cell width="48px">\n                <ng-md-icon\n                  ng-if="!page.published && !$ctrl.isLink(page.type)"\n                  icon="{{$ctrl.isMarkdownTemplate(page.type) ? \'check_box_outline_blank\' : \'cloud_queue\'}}"\n                  ng-click="$ctrl.togglePublish(page)"\n                  style="font-size: 24px; height: 24px"\n                  permission\n                  permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n                >\n                  <md-tooltip md-direction="top" md-visible="false">\n                    {{$ctrl.isMarkdownTemplate(page.type) ? \'Make template available\' : \'Publish this page\'}}\n                  </md-tooltip>\n                </ng-md-icon>\n                <ng-md-icon\n                  ng-if="page.published && !$ctrl.isLink(page.type)"\n                  icon="{{$ctrl.isMarkdownTemplate(page.type) ? \'check_box\' : \'cloud_done\'}}"\n                  ng-click="$ctrl.togglePublish(page)"\n                  style="font-size: 24px; height: 24px"\n                  permission\n                  permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n                >\n                  <md-tooltip md-direction="top" md-visible="false">\n                    {{$ctrl.isMarkdownTemplate(page.type) ? \'Make template unavailable\' : \'Unpublish this page\'}}\n                  </md-tooltip>\n                </ng-md-icon>\n              </td>\n              <td md-cell width="76px" nowrap>\n                <ng-md-icon\n                  ng-if="!$first"\n                  icon="arrow_upwards"\n                  ng-click="$ctrl.upward(page)"\n                  permission\n                  permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n                >\n                  <md-tooltip md-direction="top" md-visible="false">Move upward</md-tooltip>\n                </ng-md-icon>\n                <span ng-if="$first" style="padding-right: 28px"></span>\n                <ng-md-icon\n                  ng-if="!$last"\n                  icon="arrow_downward"\n                  ng-click="$ctrl.downward(page)"\n                  permission\n                  permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n                >\n                  <md-tooltip md-direction="top" md-visible="false">Move downward</md-tooltip>\n                </ng-md-icon>\n              </td>\n              <td md-cell width="1%" nowrap>{{page.lastModificationDate | date:\'medium\'}}</td>\n              <td md-cell width="48px">\n                <ng-md-icon\n                  icon="delete"\n                  ng-click="$ctrl.remove(page)"\n                  style="font-size: 24px; height: 24px"\n                  permission\n                  permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n                >\n                  <md-tooltip md-direction="top" md-visible="false">Remove</md-tooltip>\n                </ng-md-icon>\n              </td>\n              <td md-cell width="24px">\n                <ng-md-icon\n                  ng-if="$ctrl.isPage(page.type) || $ctrl.isFolder(page.type)"\n                  icon="{{ page.visibility === \'PRIVATE\' ? \'lock\' : \'public\' }}"\n                  size="20"\n                  style="fill: #cdcdcd"\n                >\n                  <md-tooltip>{{ page.visibility | uppercase }}</md-tooltip>\n                </ng-md-icon>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <gravitee-empty-state\n        ng-if="$ctrl.rootDir != \'\' && $ctrl.pages.length == 0"\n        icon="insert_drive_file"\n        model="Page"\n        message="Documentation will appear here"\n        sub-message="Start creating a page"\n        create-mode="true"\n      ></gravitee-empty-state>\n\n      <md-fab-speed-dial\n        md-direction="{{$ctrl.pages.length > 0 ? \'left\' : \'down\'}}"\n        md-open="false"\n        ng-class="{\'md-fab-bottom-right md-fab-scrollable\' : $ctrl.pages.length > 0, \'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"\n        class="md-scale"\n      >\n        <md-fab-trigger>\n          <md-button\n            aria-label="menu"\n            class="md-fab md-success"\n            permission\n            permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n          >\n            <md-tooltip ng-if="$ctrl.pages.length > 0" md-direction="top" md-visible="false">New page</md-tooltip>\n            <ng-md-icon icon="add"></ng-md-icon>\n          </md-button>\n        </md-fab-trigger>\n\n        <md-fab-actions>\n          <md-button ng-repeat="typeInfo in $ctrl.supportedTypes" class="md-fab md-raised md-mini" ng-click="$ctrl.newPage(typeInfo.type)">\n            <md-tooltip md-direction="{{$ctrl.pages.length > 0 ? \'top\' : \'right\'}}">{{typeInfo.tooltip}}</md-tooltip>\n            <md-icon md-svg-src="assets/logo_{{typeInfo.type | lowercase}}.svg"></md-icon>\n          </md-button>\n        </md-fab-actions>\n      </md-fab-speed-dial>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div style="display: inline-block">\n  <md-input-container class="md-block" ng-if="$ctrl.withPublishOption">\n    <md-checkbox ng-model="$ctrl.page.published" aria-label="Published" class="md-align-top-left" flex>\n      Publish all imported pages\n    </md-checkbox>\n  </md-input-container>\n\n  <h3>{{ $ctrl.title }}</h3>\n  <div layout="row">\n    <md-button\n      ng-repeat="fetcher in $ctrl.fetchers"\n      ng-click="$ctrl.configureFetcher(fetcher)"\n      ng-class="{\'md-raised\': fetcher.id === $ctrl.page.source.type}"\n      aria-label="fetcher"\n    >\n      <md-icon md-svg-icon="assets/logo_{{fetcher.id | lowercase}}.svg" style="width: 80px; height: 40px"></md-icon>\n    </md-button>\n  </div>\n  <div layout="column">\n    <form\n      name="PageConfigFetcherForm"\n      sf-schema="fetcherJsonSchema"\n      sf-form="$ctrl.fetcherJsonSchemaForm"\n      sf-model="$ctrl.page.source.configuration"\n    ></form>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid gv-edit-page" layout="column">\n  <div class="gv-forms-header" layout="row" layout-align="space-between end" ng-if="!rename">\n    <div>\n      <md-icon md-svg-src="assets/logo_{{$ctrl.page.type | lowercase}}.svg" style="margin: 0 8px 12px 0"></md-icon>\n      <h1>{{$ctrl.page.name}}</h1>\n      <sup ng-if="($ctrl.isLink() && $ctrl.page.configuration.inherit && $ctrl.page.configuration.inherit === \'true\')">\n        <ng-md-icon icon="lock" size="12" style="fill: black">\n          <md-tooltip>Inherited</md-tooltip>\n        </ng-md-icon>\n      </sup>\n      <a ng-click="$ctrl.cancel()">Back to Documentation</a>\n    </div>\n    <div ng-if="$ctrl.canUpdate">\n      <md-button class="md-raised md-primary" type="button" ng-if="$ctrl.page.source" ng-click="$ctrl.fetch()"> Fetch </md-button>\n      <md-button\n        type="button"\n        class="md-raised md-primary"\n        ng-click="$ctrl.toggleRename()"\n        aria-label="Rename"\n        ng-disabled="$ctrl.isLink() && $ctrl.page.configuration.inherit && $ctrl.page.configuration.inherit !== \'false\'"\n      >\n        Rename\n      </md-button>\n      <md-button\n        ng-if="$ctrl.page.metadata.edit_url"\n        type="button"\n        style="padding: 0 6px"\n        target="_blank"\n        href="{{$ctrl.page.metadata.edit_url}}"\n        aria-label="Edit"\n      >\n        <md-icon\n          md-svg-icon="assets/logo_{{$ctrl.page.metadata.provider_name | lowercase}}-fetcher.svg"\n          style="height: 24px; padding: 0; vertical-align: inherit"\n        ></md-icon>\n        Edit on {{$ctrl.page.metadata.provider_name}}\n      </md-button>\n    </div>\n  </div>\n\n  <div ng-if="$ctrl.usedAsGeneralConditions()" class="page-as-general-conditions">\n    This page is used as general conditions, if you change the content please remember to notify your API subscribers\n  </div>\n  <div class="gv-forms-header" layout="row" layout-align="space-between end" ng-if="rename">\n    <div>\n      <md-icon md-svg-src="assets/logo_{{$ctrl.page.type | lowercase}}.svg" style="margin: 0 8px 12px 0"></md-icon>\n      <input type="text" ng-model="$ctrl.newName" autofocus />\n    </div>\n    <div>\n      <md-button type="button" class="md-raised md-primary" ng-click="$ctrl.rename()" aria-label="Edit"> Save </md-button>\n      <md-button class="md-raised" type="button" ng-click="$ctrl.toggleRename()"> Cancel </md-button>\n    </div>\n  </div>\n\n  <div class="gv-form" ng-if="!$ctrl.isFolder()">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <div ng-if="editorReadonly && $ctrl.canUpdate" class="gv-page-draft-banner">\n        <ng-md-icon icon="warning" class="gv-warning"></ng-md-icon>\n        Page\'s content is retrieved from an external source. If you want to edit content manually,\n        <a ng-click="$ctrl.goToExternalSource()">please change the configuration</a>.\n      </div>\n\n      <md-tabs md-dynamic-height md-selected="$ctrl.selectedTab">\n        \x3c!-- page --\x3e\n        <md-tab md-on-select="$ctrl.selectTab(0)">\n          <md-tab-label>Page</md-tab-label>\n          <md-tab-body>\n            <div ng-if="$ctrl.currentTab === \'content\'">\n              <div class="gv-page-draft-banner" ng-if="!$ctrl.page.published">\n                <ng-md-icon icon="warning" class="gv-warning"></ng-md-icon>\n                {{ $ctrl.getBannerMessage() }}\n              </div>\n\n              <gv-edit-page-content\n                ng-if="!$ctrl.isLink()"\n                can-update="$ctrl.canUpdate"\n                page="$ctrl.page"\n                pages-to-link="$ctrl.pagesToLink"\n              ></gv-edit-page-content>\n              <gv-edit-link-content\n                ng-if="$ctrl.isLink()"\n                category-resources="$ctrl.categoryResources"\n                folders-by-id="$ctrl.foldersById"\n                page="$ctrl.page"\n                page-list="$ctrl.pageList"\n                system-folders-by-id="$ctrl.systemFoldersById"\n              ></gv-edit-link-content>\n            </div>\n          </md-tab-body>\n        </md-tab>\n\n        \x3c!-- translations --\x3e\n        <md-tab md-on-select="$ctrl.selectTab(1)" ng-if="$ctrl.canUpdate && !$ctrl.isMarkdownTemplate()">\n          <md-tab-label>Translations</md-tab-label>\n          <md-tab-body>\n            <gv-edit-page-translations\n              api-id="$ctrl.apiId"\n              can-update="$ctrl.canUpdate"\n              current-translation="$ctrl.currentTranslation"\n              page="$ctrl.page"\n              pages-to-link="$ctrl.pagesToLink"\n            ></gv-edit-page-translations>\n          </md-tab-body>\n        </md-tab>\n\n        \x3c!-- configuration --\x3e\n        <md-tab md-on-select="$ctrl.selectTab(2)" ng-if="$ctrl.canUpdate && !$ctrl.isLink()">\n          <md-tab-label>Configuration</md-tab-label>\n          <md-tab-body>\n            <gv-edit-page-configuration page="$ctrl.page"></gv-edit-page-configuration>\n          </md-tab-body>\n        </md-tab>\n\n        \x3c!-- external source --\x3e\n        <md-tab md-on-select="$ctrl.selectTab(3)" ng-if="$ctrl.canUpdate && !$ctrl.isLink()">\n          <md-tab-label>External Source</md-tab-label>\n          <md-tab-body>\n            <gv-edit-page-fetchers fetchers="$ctrl.resolvedFetchers" page="$ctrl.page" title=""></gv-edit-page-fetchers>\n          </md-tab-body>\n        </md-tab>\n\n        \x3c!-- access control --\x3e\n        <md-tab md-on-select="$ctrl.selectTab(4)" ng-if="$ctrl.canUpdate">\n          <md-tab-label>Access Control</md-tab-label>\n          <md-tab-body>\n            <gv-edit-page-acls page="$ctrl.page" groups="$ctrl.groups" roles="$ctrl.roles" is-api-page="!!$ctrl.apiId"></gv-edit-page-acls>\n          </md-tab-body>\n        </md-tab>\n\n        \x3c!-- Attached resources --\x3e\n        <md-tab\n          md-on-select="$ctrl.selectTab(5)"\n          ng-if="$ctrl.canUpdate && ($ctrl.isMarkdown() || $ctrl.isAsciiDoc() || $ctrl.isAsyncApi())"\n        >\n          <md-tab-label>Attached resources</md-tab-label>\n          <md-tab-body>\n            <gv-edit-page-attached-resources\n              api-id="$ctrl.apiId"\n              attached-resources="$ctrl.attachedResources"\n              page="$ctrl.page"\n              on-save="$ctrl.reset()"\n            ></gv-edit-page-attached-resources>\n          </md-tab-body>\n        </md-tab>\n      </md-tabs>\n\n      <gv-error error="$ctrl.error"></gv-error>\n\n      <div\n        class="md-actions gravitee-api-save-button"\n        layout="row"\n        style="padding-top: 32px"\n        ng-if="$ctrl.canUpdate && $ctrl.currentTab !== \'attached-resources\'"\n      >\n        <md-button\n          class="md-raised md-primary"\n          type="submit"\n          ng-click="$ctrl.save()"\n          ng-disabled="!$ctrl.page.name"\n          ng-if="$ctrl.currentTab !== \'translations\' || !$ctrl.currentTranslation"\n        >\n          Save\n        </md-button>\n        <md-button\n          permission\n          permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n          type="button"\n          aria-label="Save translation"\n          class="md-raised md-primary"\n          ng-click="$ctrl.saveTranslation()"\n          ng-if="$ctrl.currentTab === \'translations\' && $ctrl.currentTranslation"\n          ng-disabled="!$ctrl.currentTranslation.configuration.lang || !$ctrl.currentTranslation.name"\n        >\n          Save translation\n        </md-button>\n        <md-button class="md-raised" type="button" ng-click="$ctrl.reset()"> Reset </md-button>\n        <md-button class="md-flat md-warn" type="button" ng-if="$ctrl.page.source" ng-click="$ctrl.removeFetcher()">\n          Remove External Source Configuration\n        </md-button>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\x3c!-- edit LINK --\x3e\n<div style="display: inline-block; width: 100%">\n  <md-input-container class="md-block">\n    <label>Type of link</label>\n    <md-select ng-model="$ctrl.page.configuration.resourceType" required ng-change="$ctrl.onChangeLinkType()">\n      <md-option ng-value="\'external\'">External link</md-option>\n      <md-option ng-value="\'page\'">Link to an existing documentation page</md-option>\n      <md-option ng-value="\'category\'">Link to a category</md-option>\n    </md-select>\n  </md-input-container>\n\n  \x3c!-- external link--\x3e\n  <div ng-if="\'external\' === $ctrl.page.configuration.resourceType">\n    <md-input-container class="md-block" flex-gt-xs>\n      <label>URL</label>\n      <input ng-model="$ctrl.page.content" required />\n    </md-input-container>\n  </div>\n\n  \x3c!-- category link --\x3e\n  <div ng-if="\'category\' === $ctrl.page.configuration.resourceType">\n    <md-input-container ng-if="\'category\' === $ctrl.page.configuration.resourceType" class="md-block" flex-gt-xs>\n      <label>Target</label>\n      <md-select ng-model="$ctrl.page.content" required>\n        <md-option ng-repeat="resource in $ctrl.categoryResources" ng-value="resource.key" ng-click="$ctrl.updateLinkName(resource.name)"\n          >{{ resource.name }}\n        </md-option>\n      </md-select>\n    </md-input-container>\n\n    <div ng-if="$ctrl.page.content">\n      <md-switch\n        ng-model="$ctrl.page.configuration.inherit"\n        ng-true-value="\'true\'"\n        ng-false-value="\'false\'"\n        aria-label="Inherit from related category"\n        ng-change="$ctrl.updateLinkNameWithCategoryId($ctrl.page.content)"\n      >\n        Inherit name from category\n      </md-switch>\n      <div class="hint">\n        <div ng-if="$ctrl.page.configuration.inherit === \'false\'">Switch on to inherit name from category.</div>\n        <div ng-if="$ctrl.page.configuration.inherit === \'true\'">Switch off to be able to modify the name of the link.</div>\n      </div>\n    </div>\n  </div>\n\n  \x3c!-- page link --\x3e\n  <div ng-if="\'page\' === $ctrl.page.configuration.resourceType">\n    <md-input-container ng-if="\'page\' === $ctrl.page.configuration.resourceType" class="md-block" flex-gt-xs>\n      <label>Target</label>\n      <md-select ng-model="$ctrl.page.content" required ng-change="$ctrl.checkIfFolder()">\n        <md-option ng-repeat="resource in $ctrl.pageList" ng-value="resource.id" ng-click="$ctrl.updateLinkName(resource.name)">\n          <md-icon md-svg-src="assets/logo_{{resource.type | lowercase}}.svg"></md-icon>\n          <span style="font-style: italic; opacity: 0.5">{{ resource.parentPath }}</span>/{{ resource.name }}\n        </md-option>\n      </md-select>\n    </md-input-container>\n\n    <div ng-if="$ctrl.page.content && $ctrl.page.content !== \'root\'">\n      <md-switch\n        ng-model="$ctrl.page.configuration.inherit"\n        ng-true-value="\'true\'"\n        ng-false-value="\'false\'"\n        aria-label="Inherit from related page"\n        ng-change="$ctrl.updateLinkNameWithPageId($ctrl.page.content)"\n      >\n        Inherit name and translations from page\n      </md-switch>\n      <div class="hint">\n        <div ng-if="$ctrl.page.configuration.inherit === \'false\'">Switch on to inherit name and translations from page.</div>\n        <div ng-if="$ctrl.page.configuration.inherit === \'true\'">\n          Switch off to be able to modify the name of the link and add custom translations.\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<form name="$ctrl.formACLs" novalidate style="padding: 1rem">\n  <div layout="row">\n    <gv-switch\n      label="Private"\n      flex="100"\n      description="Deny access to an anonymous user and more fine grained access management with roles and groups"\n      gv-model\n      ng-model="acls.isPrivate"\n    ></gv-switch>\n  </div>\n\n  <div layout="row">\n    <md-input-container class="md-block" flex="100">\n      <label>Roles</label>\n      <md-select ng-model="acls.roles" multiple ng-disabled="!acls.isPrivate">\n        <md-option ng-repeat="role in $ctrl.roles | orderBy:\'name\'" ng-value="role.id"> {{role.name}} </md-option>\n      </md-select>\n    </md-input-container>\n  </div>\n\n  <div layout="row">\n    <md-input-container class="md-block" flex="100">\n      <label>Groups</label>\n      <md-select ng-model="acls.groups" multiple ng-disabled="!acls.isPrivate">\n        <md-option ng-repeat="group in $ctrl.groups | orderBy:\'name\'" ng-value="group.id"> {{group.name}} </md-option>\n      </md-select>\n    </md-input-container>\n  </div>\n\n  <div layout="row">\n    <gv-switch\n      label="Excluded"\n      flex="100"\n      description="Exclude access to selected roles/groups"\n      ng-disabled="!acls.isPrivate"\n      ng-model="acls.excludedAccessControls"\n      gv-model\n    ></gv-switch>\n  </div>\n</form>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="confirm-dialog">\n  <md-dialog-content layout-padding>\n    <h4>{{title}}</h4>\n    <md-input-container class="md-block">\n      <label>Name</label>\n      <input type="text" ng-model="filename" placeholder="Leave blank to use the current filename" />\n    </md-input-container>\n\n    <md-input-container class="md-block">\n      <input type="file" fileloader="selectedFile" />\n    </md-input-container>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="ctrl.cancel()">{{cancelButton}}</md-button>\n    <md-button ng-disabled="!selectedFile" class="md-raised md-primary" ng-click="ctrl.confirm()">{{confirmButton}}</md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-table-container>\n  <table md-table class="gv-table-dense">\n    <thead md-head>\n      <tr md-row>\n        <th md-column>Name</th>\n        <th md-column>Type</th>\n        <th md-column width="1%" nowrap>Created at</th>\n        <th md-column width="48px"></th>\n      </tr>\n    </thead>\n    <tbody md-body>\n      <tr md-row ng-if="!$ctrl.attachedResources || !$ctrl.attachedResources.length || $ctrl.attachedResources.length <= 0">\n        <td md-cell colspan="4"><span>No attached resources</span></td>\n      </tr>\n      <tr\n        md-row\n        ng-if="$ctrl.attachedResources && $ctrl.attachedResources.length && $ctrl.attachedResources.length > 0"\n        ng-repeat="resource in $ctrl.attachedResources"\n      >\n        <td md-cell>{{resource.fileName}}</td>\n        <td md-cell>{{resource.mimeType}}</td>\n        <td md-cell width="1%" nowrap>{{resource.createAt | date:\'medium\'}}</td>\n        <td md-cell width="48px">\n          <ng-md-icon\n            icon="delete"\n            ng-click="$ctrl.removeAttachedResource(resource)"\n            style="font-size: 24px; height: 24px"\n            permission\n            permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n          >\n            <md-tooltip md-direction="top" md-visible="false">Remove</md-tooltip>\n          </ng-md-icon>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</md-table-container>\n\n<div style="text-align: right">\n  <md-button\n    permission\n    permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n    type="button"\n    aria-label="Add new resource"\n    class="md-raised md-primary"\n    ng-click="$ctrl.addAttachedResource()"\n  >\n    Add a new resource\n  </md-button>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h3>General</h3>\n<md-input-container ng-if="!$ctrl.isMarkdownTemplate()" class="md-block gv-input-container-dense">\n  <md-checkbox ng-model="$ctrl.page.homepage" aria-label="set as homepage" class="md-align-top-left" flex> Set as homepage </md-checkbox>\n</md-input-container>\n\n<md-input-container class="md-block gv-input-container-dense">\n  <md-checkbox\n    ng-model="$ctrl.page.published"\n    aria-label="{{!$ctrl.isMarkdownTemplate() ? \'Published\' : \'Available\'}}"\n    class="md-align-top-left"\n    flex\n    ng-disabled="$ctrl.usedAsGeneralConditions()"\n  >\n    {{($ctrl.usedAsGeneralConditions() ? \'Publish this page (Used as general conditions, publishing actions are disabled)\' :\n    !$ctrl.isMarkdownTemplate() ? \'Publish this page\' : \'Make template available\')}}\n  </md-checkbox>\n</md-input-container>\n\n\x3c!-- SWAGGER Configuration --\x3e\n<div ng-if="$ctrl.isSwagger()" layout="column">\n  <div ng-if="$ctrl.shouldShowOpenApiDocFormat">\n    <h3>OpenAPI documentation viewer:</h3>\n    <md-radio-group ng-model="$ctrl.page.configuration.viewer">\n      <md-radio-button value="Swagger" class="md-primary">{{ $ctrl.openApiFormatLabel(\'Swagger\') }}</md-radio-button>\n      <md-radio-button value="Redoc">{{ $ctrl.openApiFormatLabel(\'Redoc\') }}</md-radio-button>\n    </md-radio-group>\n  </div>\n\n  <md-checkbox\n    ng-model="$ctrl.page.configuration.entrypointsAsServers"\n    ng-true-value="\'true\'"\n    ng-false-value="\'false\'"\n    ng-click="$ctrl.toggleEntrypointAsServer()"\n  >\n    Use entrypoints of the API as server urls (in that case, the base URL is no more used).\n  </md-checkbox>\n\n  <md-input-container class="md-block">\n    <label>Base URL</label>\n    <input\n      type="text"\n      ng-model="$ctrl.page.configuration.tryItURL"\n      ng-disabled="$ctrl.page.configuration.entrypointsAsServers === \'true\'"\n    />\n    <div class="hint">\n      Custom base URL to use as server url (if empty and not using api\'s entrypoints, the server url of the swagger / openapi descriptor\n      will be used).\n    </div>\n  </md-input-container>\n\n  <md-checkbox ng-model="$ctrl.page.configuration.entrypointAsBasePath" ng-true-value="\'true\'" ng-false-value="\'false\'">\n    Use context-path of the API (this will replace the path of the server url with the context-path of the API)\n  </md-checkbox>\n\n  <div ng-if="$ctrl.page.configuration.viewer === \'Swagger\'" layout="column">\n    <h3>Swagger</h3>\n    <md-checkbox ng-model="$ctrl.page.configuration.tryIt" ng-true-value="\'true\'" ng-false-value="\'false\'">\n      Enable "Try it!" mode. Perhaps you will have to configure the CORS in the proxy section.\n    </md-checkbox>\n    <md-checkbox ng-model="$ctrl.page.configuration.tryItAnonymous" ng-true-value="\'true\'" ng-false-value="\'false\'">\n      Allow "Try it!" for anonymous users\n    </md-checkbox>\n    <md-checkbox ng-model="$ctrl.page.configuration.showURL" ng-true-value="\'true\'" ng-false-value="\'false\'">\n      Show the URL to download the content\n    </md-checkbox>\n    <md-checkbox ng-model="$ctrl.page.configuration.displayOperationId" ng-true-value="\'true\'" ng-false-value="\'false\'">\n      Display the operationId in the operations list\n    </md-checkbox>\n    <md-input-container class="md-block">\n      <label>Default expansion setting for the operations and tags</label>\n      <md-select ng-model="$ctrl.page.configuration.docExpansion">\n        <md-option ng-value="\'list\'">Expands only the tags</md-option>\n        <md-option ng-value="\'full\'">Expands the tags and operations</md-option>\n        <md-option ng-value="\'none\'">Expands nothing</md-option>\n      </md-select>\n    </md-input-container>\n    <md-checkbox ng-model="$ctrl.page.configuration.enableFiltering" ng-true-value="\'true\'" ng-false-value="\'false\'" class="md-block">\n      Add a top bar to filter content\n    </md-checkbox>\n    <md-checkbox ng-model="$ctrl.page.configuration.showExtensions" ng-true-value="\'true\'" ng-false-value="\'false\'" class="md-block">\n      Display vendor extension (X-) fields and values for Operations, Parameters, and Schema\n    </md-checkbox>\n    <md-checkbox ng-model="$ctrl.page.configuration.showCommonExtensions" ng-true-value="\'true\'" ng-false-value="\'false\'">\n      Display extensions (pattern, maxLength, minLength, maximum, minimum) fields and values for Parameters\n    </md-checkbox>\n    <md-input-container class="md-block">\n      <label>Number of max tagged operations displayed</label>\n      <input type="number" ng-model="$ctrl.page.configuration.maxDisplayedTags" />\n      <div class="hint">Limits the number of tagged operations displayed to at most this many (-1 means show all operations).</div>\n    </md-input-container>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\x3c!-- edit AsciiDoc or AsynApi Or Swagger inline --\x3e\n<div ng-if="$ctrl.isSwagger() || $ctrl.isAsciiDoc() || $ctrl.isAsyncApi()" style="display: inline-block; width: 100%">\n  <div layout="row" ng-class="{\'newPageEditor\': $ctrl.newPage, \'editPageEditor\': !$ctrl.newPage}">\n    <gv-code\n      ng-if="$ctrl.canUpdate"\n      class="editPanel"\n      flex="50"\n      autofocus\n      ng-attr-value="{{$ctrl.page.content}}"\n      ng-attr-options="{{$ctrl.codeMirrorOptions}}"\n      ng-model="$ctrl.page.content"\n      gv-model\n    ></gv-code>\n    <gv-page-ascii-doc ng-if="$ctrl.isAsciiDoc()" class="editPanel" flex="50" page-content="$ctrl.page.content"></gv-page-ascii-doc>\n    <gv-page-async-api ng-if="$ctrl.isAsyncApi()" class="editPanel" flex="50" page-content="$ctrl.page.content"></gv-page-async-api>\n    <gv-page-swagger\n      ng-if="$ctrl.isSwagger()"\n      class="editPanel"\n      flex="50"\n      page="$ctrl.page"\n      page-content="$ctrl.page.content"\n      page-configuration="$ctrl.page.configuration"\n      edit="$ctrl.canUpdate"\n    ></gv-page-swagger>\n  </div>\n</div>\n\n\x3c!-- edit MARKDOWN inline --\x3e\n<div ng-if="$ctrl.isMarkdown() || $ctrl.isMarkdownTemplate()" style="display: inline-block; width: 100%">\n  <div class="md-block">\n    <gv-page-editor-markdown ng-if="$ctrl.canUpdate" page="$ctrl.page" pages-to-link="$ctrl.pagesToLink"></gv-page-editor-markdown>\n    <gv-page-markdown ng-if="!$ctrl.canUpdate" page="$ctrl.page"></gv-page-markdown>\n  </div>\n</div>\n\n\x3c!-- import file --\x3e\n<div style="display: inline-block" ng-if="$ctrl.canUpdate">\n  <h3>Select a file to import:</h3>\n  <input type="file" filecontent="$ctrl.page.content" filename="pageContentFile.name" />\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-table-container>\n  <table md-table class="gv-table-dense">\n    <thead md-head>\n      <tr md-row>\n        <th md-column width="48px">Language</th>\n        <th md-column>Name</th>\n        <th md-column ng-if="$ctrl.page.type === \'LINK\' && $ctrl.page.configuration.resourceType === \'external\'">URL</th>\n        <th md-column width="1%" nowrap>Last Update</th>\n        <th md-column width="48px"></th>\n      </tr>\n    </thead>\n    <tbody md-body>\n      <tr md-row ng-if="!$ctrl.page.translations.length || $ctrl.page.translations.length <= 0">\n        <td md-cell colspan="5"><span>No translation available</span></td>\n      </tr>\n      <tr md-row ng-repeat="translation in $ctrl.page.translations">\n        <td md-cell width="48px">\n          <span>\n            <a ng-click="$ctrl.selectTranslation(translation)">{{translation.configuration.lang}}</a>\n          </span>\n        </td>\n        <td md-cell>{{translation.name}}</td>\n        <td md-cell ng-if="$ctrl.page.type === \'LINK\' && $ctrl.page.configuration.resourceType === \'external\'">{{translation.content}}</td>\n        <td md-cell width="1%" nowrap>{{translation.lastModificationDate | date:\'medium\'}}</td>\n        <td md-cell width="48px">\n          <ng-md-icon\n            icon="delete"\n            ng-click="$ctrl.removeTranslation(translation)"\n            style="font-size: 24px; height: 24px"\n            permission\n            permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n          >\n            <md-tooltip md-direction="top" md-visible="false">Remove</md-tooltip>\n          </ng-md-icon>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</md-table-container>\n\n<div style="text-align: right">\n  <md-button\n    permission\n    permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"\n    type="button"\n    aria-label="Add translation"\n    class="md-raised md-primary"\n    ng-click="$ctrl.addTranslation()"\n  >\n    Add a translation\n  </md-button>\n</div>\n<div class="gv-form-content" ng-if="$ctrl.currentTranslation">\n  <md-input-container class="md-block">\n    <label>Language (max. 2 characters)</label>\n    <input ng-model="$ctrl.currentTranslation.configuration.lang" maxlength="2" required />\n  </md-input-container>\n  <md-input-container class="md-block">\n    <label>Translated title</label>\n    <input type="text" ng-model="$ctrl.currentTranslation.name" required />\n  </md-input-container>\n  <md-input-container class="md-block" ng-if="$ctrl.page.type === \'LINK\' && $ctrl.page.configuration.resourceType === \'external\'">\n    <label>URL</label>\n    <input type="text" ng-model="$ctrl.currentTranslation.content" required />\n  </md-input-container>\n\n  <md-input-container class="gv-input-container-dense" ng-if="$ctrl.page.type !== \'LINK\'">\n    <md-switch\n      ng-model="$ctrl.currentTranslation.configuration.inheritContent"\n      ng-true-value="\'true\'"\n      ng-false-value="\'false\'"\n      aria-label="Inherit content"\n      ng-change="$ctrl.updateTranslationContent()"\n    >\n      Inherit content\n    </md-switch>\n    <div class="hint">\n      <div ng-if="$ctrl.currentTranslation.configuration.inheritContent === \'false\'">Switch on to inherit content.</div>\n      <div ng-if="$ctrl.currentTranslation.configuration.inheritContent === \'true\'">\n        Switch off to be able to modify the content of the page for this language.\n      </div>\n    </div>\n  </md-input-container>\n\n  <gv-edit-page-content\n    ng-if="$ctrl.currentTranslation.configuration.inheritContent === \'false\' && $ctrl.page.type !== \'LINK\'"\n    can-update="$ctrl.canUpdate"\n    page="$ctrl.currentTranslation"\n    pages-to-link="$ctrl.pagesToLink"\n    page-type="$ctrl.page.type"\n  ></gv-edit-page-content>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<h2></h2>\n<div class="gv-form-content" layout="column">\n  <form name="$ctrl.formNewFolder" ng-submit="$ctrl.save()" novalidate>\n    <md-input-container class="md-block" flex-gt-xs>\n      <label>Name</label>\n      <input ng-model="$ctrl.page.name" required />\n    </md-input-container>\n    <md-input-container class="md-block gv-input-container-dense">\n      <md-checkbox\n        ng-model="$ctrl.page.visibility"\n        ng-false-value="\'PUBLIC\'"\n        ng-true-value="\'PRIVATE\'"\n        aria-label="visibility"\n        class="md-align-top-left"\n        flex\n      >\n        Make private <i>(Deny access to anonymous user)</i>\n      </md-checkbox>\n    </md-input-container>\n    <div class="md-actions gravitee-api-save-button" layout="row">\n      <md-button class="md-raised md-primary" type="submit" ng-disabled="$ctrl.formNewFolder.$invalid || $ctrl.formNewFolder.$pristine">\n        Save\n      </md-button>\n    </div>\n  </form>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms" layout="column">\n  <div class="gv-forms-header">\n    <h1>Import Files</h1>\n    <a ng-click="$ctrl.cancel()">Back to Documentation</a>\n  </div>\n  <div class="gv-form">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <div class="gv-page-draft-banner">\n        <ng-md-icon icon="warning" class="gv-warning"></ng-md-icon>\n        All files (with a supported page type) will be imported, generating one request by file to import.<br />\n        If you use an external source with rate limiting, you can reach your maximum requests authorized.\n      </div>\n\n      <blockquote>\n        <p style="font-size: 12px">\n          <ng-md-icon icon="info" style="fill: grey"></ng-md-icon>\n          You can import a whole directory (only available in few sources), or import a Gravitee.io descriptor (refer to the documentation).\n          If the filepath is not filled, the root directory will be imported.\n        </p>\n      </blockquote>\n\n      <gv-edit-page-fetchers\n        fetchers="$ctrl.fetchers"\n        page="$ctrl.page"\n        title="\'Select your source:\'"\n        with-publish-option="true"\n      ></gv-edit-page-fetchers>\n\n      <div class="md-actions gravitee-api-save-button" layout="row" style="padding-top: 32px">\n        <md-button\n          class="md-raised md-primary"\n          type="submit"\n          ng-click="$ctrl.import()"\n          ng-disabled="!$ctrl.page.source.type || $ctrl.importInProgress"\n        >\n          Import\n        </md-button>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<h2></h2>\n<div class="gv-form-content" layout="column">\n  <form name="$ctrl.formNewLink" ng-submit="$ctrl.save()" novalidate>\n    <md-input-container class="md-block">\n      <label>Type of link</label>\n      <md-select ng-model="$ctrl.page.configuration.resourceType" required ng-change="$ctrl.onChangeLinkType()">\n        <md-option ng-value="\'external\'">External link</md-option>\n        <md-option ng-value="\'page\'">Link to an existing documentation page</md-option>\n        <md-option ng-value="\'category\'">Link to a category</md-option>\n      </md-select>\n    </md-input-container>\n\n    \x3c!-- external link--\x3e\n    <div ng-if="\'external\' === $ctrl.page.configuration.resourceType">\n      <md-input-container class="md-block" flex-gt-xs>\n        <label>Name</label>\n        <input ng-model="$ctrl.page.name" required />\n      </md-input-container>\n      <md-input-container class="md-block" flex-gt-xs>\n        <label>URL</label>\n        <input ng-model="$ctrl.page.content" required />\n      </md-input-container>\n    </div>\n\n    \x3c!-- category link --\x3e\n    <div ng-if="\'category\' === $ctrl.page.configuration.resourceType">\n      <md-input-container ng-if="\'category\' === $ctrl.page.configuration.resourceType" class="md-block" flex-gt-xs>\n        <label>Target</label>\n        <md-select ng-model="$ctrl.page.content" required>\n          <md-option ng-repeat="resource in $ctrl.categoryResources" ng-value="resource.key" ng-click="$ctrl.updateLinkName(resource.name)">\n            {{ resource.name }}\n          </md-option>\n        </md-select>\n      </md-input-container>\n\n      <md-switch\n        ng-model="$ctrl.page.configuration.inherit"\n        ng-true-value="\'true\'"\n        ng-false-value="\'false\'"\n        aria-label="Inherit from related category"\n      >\n        Inherit name from category\n      </md-switch>\n      <div class="hint">\n        <div ng-if="$ctrl.page.configuration.inherit === \'false\'">Switch on to inherit name from category.</div>\n        <div ng-if="$ctrl.page.configuration.inherit === \'true\'">Switch off to be able to modify the name of the link.</div>\n      </div>\n\n      <md-input-container class="md-block" ng-if="$ctrl.page.configuration.inherit === \'false\'" flex-gt-xs>\n        <label>Name</label>\n        <input ng-model="$ctrl.page.name" />\n      </md-input-container>\n    </div>\n\n    \x3c!-- page link --\x3e\n    <div ng-if="\'page\' === $ctrl.page.configuration.resourceType">\n      <md-input-container ng-if="\'page\' === $ctrl.page.configuration.resourceType" class="md-block" flex-gt-xs>\n        <label>Target</label>\n        <md-select ng-model="$ctrl.page.content" required ng-change="$ctrl.checkIfFolder()">\n          <md-option ng-repeat="resource in $ctrl.pageList" ng-value="resource.id" ng-click="$ctrl.updateLinkName(resource.name)">\n            <md-icon md-svg-src="assets/logo_{{resource.type | lowercase}}.svg"></md-icon>\n            <span style="font-style: italic; opacity: 0.5">{{ resource.parentPath }}</span>/{{ resource.name }}\n          </md-option>\n        </md-select>\n      </md-input-container>\n\n      <div ng-if="$ctrl.page.content && $ctrl.page.content !== \'root\'">\n        <md-switch\n          ng-model="$ctrl.page.configuration.inherit"\n          ng-true-value="\'true\'"\n          ng-false-value="\'false\'"\n          aria-label="Inherit from related page"\n        >\n          Inherit name and translations from page\n        </md-switch>\n        <div class="hint">\n          <div ng-if="$ctrl.page.configuration.inherit === \'false\'">Switch on to inherit name and translations from page.</div>\n          <div ng-if="$ctrl.page.configuration.inherit === \'true\'">\n            Switch off to be able to modify the name of the link and add custom translations.\n          </div>\n        </div>\n\n        <md-input-container class="md-block" ng-if="$ctrl.page.configuration.inherit === \'false\'" flex-gt-xs>\n          <label>Name</label>\n          <input ng-model="$ctrl.page.name" />\n        </md-input-container>\n      </div>\n      <div ng-if="$ctrl.page.content && $ctrl.page.content === \'root\'">\n        <md-input-container class="md-block" flex-gt-xs>\n          <label>Name</label>\n          <input ng-model="$ctrl.page.name" required />\n        </md-input-container>\n      </div>\n    </div>\n\n    <div class="md-actions gravitee-api-save-button" layout="row">\n      <md-button class="md-raised md-primary" type="submit" ng-disabled="$ctrl.formNewLink.$invalid || $ctrl.formNewLink.$pristine">\n        Save\n      </md-button>\n    </div>\n  </form>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <div>\n    <md-icon md-svg-src="assets/logo_{{$ctrl.page.type | lowercase}}.svg" style="margin: 0 8px 12px 0"></md-icon>\n    <h1>{{$ctrl.getPageName()}}</h1>\n    <a ng-click="$ctrl.cancel()">Back to Documentation</a>\n  </div>\n\n  \x3c!-- FOLDER or LINK --\x3e\n  <div class="gv-form" ng-switch="$ctrl.page.type">\n    <gv-new-folder ng-switch-when="FOLDER" page="$ctrl.page" on-save="$ctrl.save(true)"></gv-new-folder>\n    <gv-new-link\n      ng-switch-when="LINK"\n      category-resources="$ctrl.categoryResources"\n      folders-by-id="$ctrl.foldersById"\n      page="$ctrl.page"\n      page-list="$ctrl.pageList"\n      on-save="$ctrl.save(false)"\n      system-folders-by-id="$ctrl.systemFoldersById"\n    ></gv-new-link>\n  </div>\n\n  \x3c!-- ASCIIDOC, SWAGGER, MARKDOWN or MARKDOWN_TEMPLATE--\x3e\n  <div class="gv-form" ng-if="!$ctrl.isFolder() && !$ctrl.isLink()">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <div layout="row">\n        <md-input-container class="md-block" flex>\n          <label>Name</label>\n          <input ng-model="$ctrl.page.name" required />\n        </md-input-container>\n      </div>\n      <md-input-container ng-if="!$ctrl.isMarkdownTemplate()" class="md-block gv-input-container-dense">\n        <md-checkbox ng-model="$ctrl.page.homepage" aria-label="set as homepage" class="md-warn md-align-top-left" flex>\n          Set as homepage\n        </md-checkbox>\n      </md-input-container>\n      <md-input-container class="md-block gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.page.published"\n          aria-label="{{!$ctrl.isMarkdownTemplate() ? \'Published\' : \'Available\'}}"\n          class="md-align-top-left"\n          flex\n        >\n          {{!$ctrl.isMarkdownTemplate() ? \'Publish this page\' : \'Make template available\'}}\n        </md-checkbox>\n      </md-input-container>\n      <md-input-container ng-if="!$ctrl.isMarkdownTemplate()" class="md-block gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.page.visibility"\n          ng-false-value="\'PUBLIC\'"\n          ng-true-value="\'PRIVATE\'"\n          aria-label="visibility"\n          class="md-align-top-left"\n          flex\n        >\n          Make private <i>(Deny access to anonymous user)</i>\n        </md-checkbox>\n      </md-input-container>\n      <h3>How to get the content ?</h3>\n      <md-radio-group ng-model="getContentMode" ng-change="$ctrl.changeContentMode(getContentMode)">\n        <md-radio-button value="inline" class="md-primary" selected>Fill the content inline</md-radio-button>\n        <md-radio-button value="import">Import from file</md-radio-button>\n        <md-radio-button value="fetcher">Import from an external source (gitlab, bitbucket, ...)</md-radio-button>\n      </md-radio-group>\n\n      \x3c!-- MARKDOWN-TEMPLATE selection --\x3e\n      <div layout-gt-sm="row">\n        <md-input-container ng-if="($ctrl.isMarkdown() || $ctrl.isMarkdownTemplate()) && $ctrl.templates.length > 0" flex-gt-xs>\n          <label>Template</label>\n          <md-select ng-model="$ctrl.selectedTemplate" ng-change="$ctrl.onChangeMarkdownTemplate()">\n            <md-option ng-repeat="template in $ctrl.templates" ng-value="template">\n              <div ng-if="template.type">\n                <md-icon md-svg-src="assets/logo_{{template.type | lowercase}}.svg"></md-icon>\n                <span style="font-style: italic; opacity: 0.5">{{ template.parentPath }}</span>/{{ template.name }}\n              </div>\n            </md-option>\n          </md-select>\n          <div class="hint">Choose a template</div>\n        </md-input-container>\n      </div>\n\n      <div class="gv-page-info-banner" ng-if="($ctrl.isMarkdown() || $ctrl.isMarkdownTemplate()) && $ctrl.templates.length > 0">\n        <ng-md-icon icon="info" class="gv-info"></ng-md-icon>\n        Selecting a template will override the current documentation.\n      </div>\n\n      \x3c!-- edit inline --\x3e\n      <h3 ng-if="\'inline\' === getContentMode">Type your documentation here:</h3>\n      <gv-edit-page-content\n        ng-if="\'inline\' === getContentMode"\n        can-update="true"\n        new-page="true"\n        page="$ctrl.page"\n        pages-to-link="$ctrl.pagesToLink"\n      ></gv-edit-page-content>\n\n      \x3c!-- import file --\x3e\n      <div ng-if="\'import\' === getContentMode" style="display: inline-block">\n        <h3>Select a file to import:</h3>\n        <input type="file" filecontent="$ctrl.page.content" filename="$ctrl.page.name" />\n      </div>\n\n      \x3c!-- Import via fetchers --\x3e\n      <gv-edit-page-fetchers\n        ng-if="\'fetcher\' === getContentMode"\n        fetchers="$ctrl.resolvedFetchers"\n        page="$ctrl.page"\n        title="\'Select your source:\'"\n      ></gv-edit-page-fetchers>\n\n      <gv-error error="$ctrl.error"></gv-error>\n\n      <div class="md-actions gravitee-api-save-button" layout="row" style="padding-top: 32px">\n        <md-button class="md-raised md-primary" type="submit" ng-click="$ctrl.save(false)" ng-disabled="!$ctrl.page.name"> Save </md-button>\n      </div>\n    </div>\n  </div>\n</div>\n'},,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gv-documentation ng-attr-text="{{$ctrl.pageContent}}" ng-attr-without-header="\'true\'">\n  <div slot="empty">\n    <gv-icon class="no-content-page-icon" shape="text:align-center"></gv-icon>\n    <div>No content to display</div>\n  </div>\n</gv-documentation>\n'},,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gv-documentation ng-if="!$ctrl.pageContent" ng-attr-without-header="\'true\'">\n  <div slot="empty">\n    <gv-icon class="no-content-page-icon" shape="text:align-center"></gv-icon>\n    <div>No content to display</div>\n  </div>\n</gv-documentation>\n\n<asyncapi-component ng-if="$ctrl.pageContent" schema="{{$ctrl.pageContent}}" cssImportPath="assets/style/asyncapi-component.css">\n</asyncapi-component>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="confirm-dialog">\n  <md-dialog-content layout-padding>\n    <h4>{{title}}</h4>\n    <md-select ng-model="selectedPage" required>\n      <md-option ng-repeat="page in pages" ng-value="page">\n        <md-icon md-svg-src="assets/logo_{{page.type | lowercase}}.svg"></md-icon>\n        <span style="font-style: italic; opacity: 0.5">{{ page.parentPath }}</span>/{{ page.name }}\n      </md-option>\n    </md-select>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="ctrl.cancel()">Cancel</md-button>\n    <md-button ng-click="ctrl.select()" ng-disabled="!selectedPage">Add</md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div id="editSection"></div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div ng-if="$ctrl.page.content" ng-bind-html="$ctrl.htmlContent" class="markdown-page"></div>\n'},,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div id="swagger-container"></div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="progress">\n  <div\n    class="progress-bar"\n    ng-class="{\'progress-bar-success\': $ctrl.value >= 95, \'progress-bar-warning\': $ctrl.value < 95 && $ctrl.value >= 80 , \'progress-bar-danger\': $ctrl.value < 80 && $ctrl.value >= 30, \'progress-bar-fatal\': $ctrl.value < 30 }"\n    role="progressbar"\n    aria-valuenow="{{$ctrl.value}}"\n    aria-valuemin="0"\n    aria-valuemax="100"\n    ng-style="{width: $ctrl.value + \'%\'}"\n  >\n    {{$ctrl.value}}%\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div ng-if="$ctrl.availability >= 0">\n  <progress-bar value="$ctrl.availability | floor  "></progress-bar>\n  <md-tooltip md-direction="top"> {{$ctrl.availability | number: 3}}% </md-tooltip>\n</div>\n<span ng-if="$ctrl.responsetime >= 0" class="label label-primary" style="font-weight: bold; font-size: 10.5px">\n  {{$ctrl.responsetime | number: 0 }}ms\n</span>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <h1>Audit</h1>\n\n  <div class="gv-form">\n    <h2>Logs</h2>\n    <div class="gv-form-content" layout="column">\n      <div layout="row" layout-align="space-around end">\n        <div layout="column" layout-align="end start">\n          <div layout="row" layout-align="space-around end">\n            <md-input-container>\n              <label>Events</label>\n              <md-select ng-model="$ctrl.query.event">\n                <md-option ng-value="undefined"></md-option>\n                <md-option ng-repeat="evt in $ctrl.events" ng-value="evt"> {{evt}} </md-option>\n              </md-select>\n            </md-input-container>\n            <md-input-container ng-if="!$ctrl.query.envLog && !$ctrl.query.orgLog && !$ctrl.api">\n              <label>Applications</label>\n              <md-select ng-model="$ctrl.query.application">\n                <md-option ng-value="undefined"></md-option>\n                <md-option ng-repeat="app in $ctrl.applications | orderBy:name" ng-value="app.id"> {{app.name}} </md-option>\n              </md-select>\n            </md-input-container>\n            <md-input-container ng-if="!$ctrl.query.envLog && !$ctrl.query.orgLog && !$ctrl.api">\n              <label>APIs</label>\n              <md-select ng-model="$ctrl.query.api">\n                <md-option ng-value="undefined"></md-option>\n                <md-option ng-repeat="api in $ctrl.apis | orderBy:name" ng-value="api.id"> {{api.name}} </md-option>\n              </md-select>\n            </md-input-container>\n          </div>\n        </div>\n        <div layout="row" layout-align="space-between end">\n          <md-datepicker ng-model="$ctrl.query.from" md-placeholder="Select start date" md-max-date="$ctrl.query.to"></md-datepicker>\n          <md-datepicker ng-model="$ctrl.query.to" md-placeholder="Select end date" md-min-date="$ctrl.query.from"></md-datepicker>\n          <md-button class="md-raised" ng-click="$ctrl.search()">Apply</md-button>\n        </div>\n      </div>\n      <md-table-container>\n        <table md-table class="gv-table-dense">\n          <thead md-head>\n            <tr md-row>\n              <th md-column>Date</th>\n              <th md-column>User</th>\n              <th md-column ng-if="!$ctrl.api">Type</th>\n              <th md-column ng-if="!$ctrl.api">Reference</th>\n              <th md-column>Event</th>\n              <th md-column>Target</th>\n              <th md-column>Patch</th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr ng-if="$ctrl.auditLogs.length > 0" md-row ng-repeat="log in $ctrl.auditLogs">\n              <td md-cell nowrap>{{log.createdAt | date : \'dd/MM/yyyy HH:mm:ss.sss\'}}</td>\n              <td md-cell>{{$ctrl.getNameByReference({type: \'USER\', id: log.user})}}</td>\n              <td md-cell nowrap ng-if="!$ctrl.api">{{log.referenceType}}</td>\n              <td md-cell nowrap ng-if="!$ctrl.api">{{$ctrl.getNameByReference({type: log.referenceType, id: log.referenceId})}}</td>\n              <td md-cell nowrap>{{log.event}}</td>\n              <td md-cell>\n                <div class="audit-properties" ng-repeat="(key, prop) in  $ctrl.getDisplayableProperties(log.properties)">\n                  <div class="audit-property">{{key}}:</div>\n                  <div>{{prop}}</div>\n                </div>\n              </td>\n              <td md-cell>\n                <div\n                  ui-codemirror\n                  ui-refresh="true"\n                  ui-codemirror-opts="{lineWrapping: true, readOnly: nocursor, mode: {name: \'javascript\', json: true}}"\n                  ng-model="log.prettyPatch"\n                  ng-if="log.displayPatch"\n                ></div>\n                <a ng-if="!log.displayPatch" ng-click="log.displayPatch=true">show</a>\n                <a ng-if="log.displayPatch" ng-click="log.displayPatch=false">hide</a>\n              </td>\n            </tr>\n            <tr ng-if="$ctrl.auditLogs.length === 0">\n              <td md-cell colspan="7">No audit logs</td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <md-table-pagination\n        ng-if="$ctrl.result.size > 0"\n        md-limit="$ctrl.result.size"\n        md-page="$ctrl.query.page"\n        md-total="{{$ctrl.result.total}}"\n        md-on-paginate="$ctrl.onPaginate"\n      >\n      </md-table-pagination>\n    </div>\n  </div>\n</div>\n'},,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div flex>\n  <div flex layout="row">\n    <div class="gv-sub-menu menu">\n      <div class="md-headline">\n        <p>Organization settings</p>\n        <div>\n          <gv-button\n            ui-sref="management"\n            link\n            icon="navigation:angle-double-left"\n            title="Go back to API Management"\n            ng-if="$ctrl.Constants.org.environments && $ctrl.Constants.org.environments.length > 0"\n            >Go back to APIM</gv-button\n          >\n        </div>\n      </div>\n      <div\n        class="aui-nav-heading"\n        ng-if="$ctrl.settingsMenu.organizationIdentityProviders.perm\n                 || $ctrl.settingsMenu.consoleSettings.perm"\n      >\n        <strong>Console</strong>\n      </div>\n      <ul class="aui-nav">\n        <li\n          class="iterable-item"\n          ng-class="{\'aui-nav-selected\': $ctrl.$state.includes(\'organization.settings.ng-identityproviders\') || $ctrl.$state.includes(\'organization.settings.ng-identityprovider-new\') || $ctrl.$state.includes(\'organization.settings.ng-identityprovider-edit\') }"\n          ng-if="$ctrl.settingsMenu.organizationIdentityProviders.perm"\n        >\n          <a class="execute" ui-sref="{{$ctrl.settingsMenu.organizationIdentityProviders.goTo}}">Authentication</a>\n        </li>\n        <li\n          class="iterable-item"\n          ng-class="{\'aui-nav-selected\': $ctrl.$state.includes(\'organization.settings.ng-console\')}"\n          ng-if="$ctrl.settingsMenu.consoleSettings.perm"\n        >\n          <a class="execute" ui-sref="{{$ctrl.settingsMenu.consoleSettings.goTo}}">Settings</a>\n        </li>\n      </ul>\n\n      <div\n        class="aui-nav-heading"\n        ng-if="$ctrl.settingsMenu.users.perm\n                 || $ctrl.settingsMenu.roles.perm"\n      >\n        <strong>User Management</strong>\n      </div>\n      <ul class="aui-nav">\n        <li\n          class="iterable-item"\n          ng-class="{\'aui-nav-selected\': $ctrl.$state.includes(\'organization.settings.ng-users\') || $ctrl.$state.includes(\'organization.settings.ng-user\') || $ctrl.$state.includes(\'organization.settings.ng-newuser\') }"\n          ng-if="$ctrl.settingsMenu.users.perm"\n        >\n          <a class="execute" ui-sref="{{$ctrl.settingsMenu.users.goTo}}">Users</a>\n        </li>\n        <li\n          class="iterable-item"\n          ng-class="{\'aui-nav-selected\': $ctrl.$state.includes(\'organization.settings.ng-roles\') || $ctrl.$state.includes(\'organization.settings.ng-rolenew\') || $ctrl.$state.includes(\'organization.settings.ng-roleedit\') || $ctrl.$state.includes(\'organization.settings.ng-rolemembers\') }"\n          ng-if="$ctrl.settingsMenu.roles.perm"\n        >\n          <a class="execute" ui-sref="{{$ctrl.settingsMenu.roles.goTo}}">Roles</a>\n        </li>\n      </ul>\n\n      <div\n        class="aui-nav-heading"\n        ng-if="$ctrl.settingsMenu.tags.perm || $ctrl.settingsMenu.tenants.perm || $ctrl.settingsMenu.policies.perm"\n      >\n        <strong>Gateway</strong>\n      </div>\n      <ul class="aui-nav">\n        <li\n          class="iterable-item"\n          ng-class="{\'aui-nav-selected\': $ctrl.$state.includes(\'organization.settings.ng-tags\') }"\n          ng-if="$ctrl.settingsMenu.tags.perm"\n        >\n          <a class="execute" ui-sref="{{$ctrl.settingsMenu.tags.goTo}}">Sharding tags</a>\n        </li>\n        <li\n          class="iterable-item"\n          ng-class="{\'aui-nav-selected\': $ctrl.$state.includes(\'organization.settings.ng-tenants\') }"\n          ng-if="$ctrl.settingsMenu.tenants.perm"\n        >\n          <a class="execute" ui-sref="{{$ctrl.settingsMenu.tenants.goTo}}">Tenants</a>\n        </li>\n        <li\n          class="iterable-item"\n          ng-class="{\'aui-nav-selected\': $ctrl.$state.includes(\'organization.settings.ng-policies\') }"\n          ng-if="$ctrl.settingsMenu.policies.perm"\n        >\n          <a class="execute" ui-sref="{{$ctrl.settingsMenu.policies.goTo}}">Policies</a>\n        </li>\n      </ul>\n\n      <div class="aui-nav-heading" ng-if="$ctrl.settingsMenu.notificationTemplates.perm">\n        <strong>Notifications</strong>\n      </div>\n      <ul class="aui-nav">\n        <li\n          class="iterable-item"\n          ng-class="{\'aui-nav-selected\': $ctrl.$state.includes(\'organization.settings.ng-notificationTemplates\') || $ctrl.$state.includes(\'organization.settings.ng-notificationTemplate\') }"\n          ng-if="$ctrl.settingsMenu.notificationTemplates.perm"\n        >\n          <a class="execute" ui-sref="{{$ctrl.settingsMenu.notificationTemplates.goTo}}">Templates</a>\n        </li>\n      </ul>\n\n      <div class="aui-nav-heading" ng-if="$ctrl.settingsMenu.audit.perm">\n        <strong>Audit</strong>\n      </div>\n      <ul class="aui-nav">\n        <li\n          class="iterable-item"\n          ng-class="{\'aui-nav-selected\': $ctrl.$state.includes(\'organization.settings.ng-audit\')}"\n          ng-if="$ctrl.settingsMenu.audit.perm"\n        >\n          <a class="execute" ui-sref="{{$ctrl.settingsMenu.audit.goTo}}">Audit</a>\n        </li>\n      </ul>\n\n      <div class="aui-nav-heading" ng-if="$ctrl.settingsMenu.cockpit.perm"><strong>Cockpit</strong></div>\n      <ul class="aui-nav">\n        <li\n          class="iterable-item"\n          ng-class="{\'aui-nav-selected\': $ctrl.$state.includes(\'organization.settings.ng-cockpit\')}"\n          ng-if="$ctrl.settingsMenu.cockpit.perm"\n        >\n          <a class="execute" ui-sref="{{$ctrl.settingsMenu.cockpit.goTo}}">Discover cockpit</a>\n        </li>\n      </ul>\n    </div>\n    <div flex layout="column" ui-view></div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-sub-content">\n  <div class="gv-forms" layout="column">\n    <form name="$ctrl.formApiLogging" ng-submit="$ctrl.save()" novalidate>\n      <h1>API logging</h1>\n      <div class="gv-form">\n        <md-input-container class="md-block" flex-gt-xs>\n          <md-checkbox\n            ng-model="$ctrl.settings.logging.audit.enabled"\n            aria-label="Audit on API Logging"\n            ng-disabled="$ctrl.isReadonlySetting(\'logging.audit.enabled\')"\n          >\n            Enable audit on API Logging consultation\n            <md-tooltip ng-if="$ctrl.isReadonlySetting(\'logging.audit.enabled\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n          </md-checkbox>\n        </md-input-container>\n        <md-input-container class="md-block" flex-gt-xs>\n          <md-checkbox\n            ng-model="$ctrl.settings.logging.user.displayed"\n            aria-label="End user on API Logging"\n            ng-disabled="$ctrl.isReadonlySetting(\'logging.user.displayed\')"\n          >\n            Display end user on API Logging (in case of OAuth2/JWT plan)\n            <md-tooltip ng-if="$ctrl.isReadonlySetting(\'logging.user.displayed\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n          </md-checkbox>\n        </md-input-container>\n        <md-input-container class="md-block" flex-gt-xs>\n          <md-checkbox\n            ng-model="$ctrl.settings.logging.audit.trail.enabled"\n            aria-label="Generate API Logging audit trail"\n            ng-disabled="$ctrl.isReadonlySetting(\'logging.audit.trail.enabled\')"\n          >\n            Generate API Logging audit events (API_LOGGING_ENABLED, API_LOGGING_DISABLED, API_LOGGING_UPDATED)\n            <md-tooltip ng-if="$ctrl.isReadonlySetting(\'logging.audit.trail.enabled\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n          </md-checkbox>\n        </md-input-container>\n        <div class="gv-form-content" layout="column">\n          <md-input-container class="md-block" flex-gt-xs>\n            <label>Maximum duration (in milliseconds) when a logging mode is activated (0 means no max duration)</label>\n            <input\n              type="number"\n              min="0"\n              ng-model="$ctrl.settings.logging.maxDurationMillis"\n              ng-disabled="$ctrl.isReadonlySetting(\'logging.default.max.duration\')"\n            />\n            <md-tooltip ng-if="$ctrl.isReadonlySetting(\'logging.default.max.duration\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n          </md-input-container>\n        </div>\n      </div>\n      <div class="md-actions gravitee-api-save-button" layout="row">\n        <md-button\n          class="md-raised"\n          type="submit"\n          permission\n          permission-only="[\'environment-settings-c\', \'environment-settings-u\']"\n          ng-disabled="$ctrl.formApiLogging.$pristine || $ctrl.formApiLogging.$invalid"\n        >\n          Save\n        </md-button>\n      </div>\n    </form>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms" layout="column">\n  <h1>Groups</h1>\n\n  <div class="gv-form">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <md-table-container ng-if="$ctrl.groups.length > 0">\n        <table md-table ng-init="orderGrp = \'name\'" class="gv-table-dense">\n          <thead md-head md-order="orderGrp">\n            <tr md-row>\n              <th md-column width="30%" md-order-by="name">Name</th>\n              <th md-column width="30%" style="text-align: center">Associated to new API</th>\n              <th md-column width="30%" style="text-align: center">Associated to new application</th>\n              <th md-column width="10%"></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="group in $ctrl.groups | orderBy: orderGrp">\n              <td md-cell>\n                <a ng-click="$ctrl.selectGroupUrl(group)"> {{group.name}} </a>\n                <span ng-if="group.primary_owner" flex class="badge" style="background-color: #039be5">Primary Owner</span>\n              </td>\n              <td md-cell style="text-align: center">\n                <ng-md-icon ng-if="$ctrl.hasEvent(group, \'API_CREATE\')" icon="done"></ng-md-icon>\n              </td>\n              <td md-cell style="text-align: center">\n                <ng-md-icon ng-if="$ctrl.hasEvent(group, \'APPLICATION_CREATE\')" icon="done"></ng-md-icon>\n              </td>\n              <td md-cell ng-click="$event.stopPropagation()" layout="row" style="padding: 10px 0">\n                <span ng-if="group.manageable && !group.primary_owner">\n                  <md-tooltip md-direction="top">Delete</md-tooltip>\n                  <ng-md-icon\n                    icon="delete"\n                    ng-click="$ctrl.removeGroup($event, group.id, group.name)"\n                    aria-label="delete-group"\n                  ></ng-md-icon>\n                </span>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <gravitee-empty-state\n        ng-if="$ctrl.groups.length == 0"\n        icon="dashboard"\n        model="GROUPS"\n        message="There is no group to manage"\n      ></gravitee-empty-state>\n      <div ng-style="{\'text-align\': $ctrl.groups.length == 0 ? \'center\' : \'none\' }">\n        <md-button\n          permission\n          permission-only="[\'environment-group-c\']"\n          ng-class="{\'md-fab-bottom-right md-fab-scrollable\': $ctrl.groups.length > 0, \'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"\n          class="md-fab"\n          aria-label="Add"\n          ng-click="$ctrl.create()"\n        >\n          <ng-md-icon icon="add"></ng-md-icon>\n        </md-button>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms" layout="column">\n  <div class="gv-forms-header">\n    <h1 ng-if="$ctrl.updateMode">{{$ctrl.group.name}}</h1>\n    <h1 ng-if="!$ctrl.updateMode">Create a group</h1>\n    <a ui-sref="management.settings.groups.list">Back to groups</a>\n  </div>\n\n  <form name="formGroup" class="gv-form" ng-submit="$ctrl.update()">\n    <h2>General</h2>\n    <div class="gv-form-content" layout="column">\n      <div layout-gt-sm="row">\n        <md-input-container class="md-block" flex-gt-sm>\n          <label>Name</label>\n          <input ng-model="$ctrl.group.name" type="text" required name="name" maxlength="50" />\n          <div class="hint" ng-if="$ctrl.formGroup.name.$valid || $ctrl.formGroup.name.$pristine">Group Name</div>\n          <div ng-messages="$ctrl.formGroup.name.$error">\n            <div ng-message="required">Group name is required.</div>\n            <div ng-message="md-maxlength">The group name has to be less than 50 characters long.</div>\n          </div>\n        </md-input-container>\n      </div>\n    </div>\n\n    <h2>Roles & Members</h2>\n    <div class="gv-form-content" layout="column">\n      <div layout="row" ng-if="$ctrl.updateMode">\n        <div layout="row" flex="50">\n          <b style="margin: 26px 10px 26px 0">Default API Role</b>\n          <md-select\n            placeholder="Default API Role"\n            class="gv-input-number"\n            ng-model="$ctrl.selectedApiRole"\n            aria-label="Default API Role"\n            ng-disabled="!$ctrl.canChangeDefaultApiRole()"\n          >\n            <md-option ng-value="role.name" ng-repeat="role in $ctrl.apiRoles" ng-disabled="role.system">{{role.name}} </md-option>\n          </md-select>\n        </div>\n        <div layout="row" flex="50">\n          <b style="margin: 26px 10px 26px 0">Default Application Role</b>\n          <md-select\n            placeholder="Default Application Role"\n            ng-model="$ctrl.selectedApplicationRole"\n            class="gv-input-number"\n            aria-label="Default Application Role"\n            ng-disabled="!$ctrl.canChangeDefaultApplicationRole()"\n          >\n            <md-option ng-value="role.name" ng-repeat="role in $ctrl.applicationRoles" ng-disabled="role.system">{{role.name}} </md-option>\n          </md-select>\n        </div>\n      </div>\n\n      <div permission permission-only="\'environment-group-u\'">\n        <div layout="column">\n          <md-input-container class="gv-input-number">\n            <label>Max members (default unlimited)</label>\n            <input ng-model="$ctrl.group.max_invitation" type="number" min="0" max="99999" />\n          </md-input-container>\n          <md-checkbox ng-model="$ctrl.group.system_invitation" aria-label="Allows system invitation" class="md-align-top-left" flex>\n            Allows invitation via user search\n          </md-checkbox>\n          <md-checkbox ng-model="$ctrl.group.email_invitation" aria-label="Allows email invitation" class="md-align-top-left" flex>\n            Allows email invitation\n          </md-checkbox>\n          <md-checkbox\n            ng-model="$ctrl.group.lock_api_role"\n            ng-true-value="false"\n            ng-false-value="true"\n            aria-label="Change default API role"\n            class="md-align-top-left"\n            flex\n          >\n            Allows the group admin to change the API role\n          </md-checkbox>\n          <md-checkbox\n            ng-model="$ctrl.group.lock_application_role"\n            ng-true-value="false"\n            ng-false-value="true"\n            aria-label="Change default Application role"\n            class="md-align-top-left"\n            flex\n          >\n            Allows the group admin to change the application role\n          </md-checkbox>\n          <md-checkbox\n            ng-model="$ctrl.group.disable_membership_notifications"\n            ng-true-value="false"\n            ng-false-value="true"\n            aria-label="Enables notifications when members are added to this group"\n            class="md-align-top-left"\n            flex\n          >\n            Enables notifications when members are added to this group\n          </md-checkbox>\n        </div>\n      </div>\n    </div>\n\n    <h2>Associations</h2>\n    <div class="gv-form-content" layout="column">\n      <div layout="column" style="margin-bottom: 10px">\n        <md-checkbox\n          ng-model="$ctrl.apiByDefault"\n          ng-click="$event.stopPropagation()"\n          aria-label="Associate to every new API"\n          class="md-primary md-align-top-left"\n          flex\n        >\n          Associate automatically to every new API\n        </md-checkbox>\n        <md-checkbox\n          ng-model="$ctrl.applicationByDefault"\n          aria-label="Associate to every new application"\n          class="md-primary md-align-top-left"\n          flex\n        >\n          Associate automatically to every new application\n        </md-checkbox>\n      </div>\n      <div class="md-actions gravitee-api-save-button" layout="row" ng-if="$ctrl.updateMode">\n        <md-button aria-label="Associate to existing APIs" ng-click="$ctrl.associateToApis()" class="md-actions md-raised md-primary">\n          Associate to existing APIs\n        </md-button>\n\n        <md-button\n          aria-label="Associate to existing applications"\n          ng-click="$ctrl.associateToApplications()"\n          class="md-actions md-raised md-primary"\n        >\n          Associate to existing applications\n        </md-button>\n      </div>\n    </div>\n\n    <h2>Actions</h2>\n    <div class="gv-form-content" layout="column">\n      <div class="md-actions gravitee-api-save-button" layout="row" ng-if="$ctrl.canSave()">\n        <md-button\n          ng-if="$ctrl.updateMode"\n          class="md-raised md-primary"\n          type="submit"\n          ng-disabled="formGroup.$invalid || formGroup.$pristine"\n          permission\n          permission-only="[\'environment-group-u\']"\n        >\n          Update\n        </md-button>\n\n        <md-button\n          ng-if="!$ctrl.updateMode"\n          class="md-raised md-primary"\n          type="submit"\n          ng-disabled="formGroup.$invalid || formGroup.$pristine"\n          permission\n          permission-only="[\'environment-group-c\']"\n        >\n          Create\n        </md-button>\n\n        <md-button class="md-raised" type="button" ng-click="$ctrl.reset()" ng-disabled="formGroup.$invalid || formGroup.$pristine">\n          Reset\n        </md-button>\n      </div>\n    </div>\n  </form>\n\n  <div class="gv-form" ng-if="$ctrl.updateMode">\n    <h2>Dependents</h2>\n    <div class="gv-form-content" layout="column">\n      <md-tabs md-dynamic-height>\n        <md-tab md-on-select="currentTab=\'users\'">\n          <md-tab-label>Members</md-tab-label>\n          <md-tab-body>\n            <div style="margin: 16px 0 8px">\n              You can manage all members of this group.\n              <span permission permission-except="\'environment-group-u\'" ng-if="$ctrl.group.max_invitation">\n                Limited to {{$ctrl.group.max_invitation}} members.</span\n              >\n              <div\n                ng-if="$ctrl.hasGroupAdmin() && !$ctrl.group.system_invitation && !$ctrl.group.email_invitation"\n                style="font-weight: bold"\n              >\n                Enable email invitation and/or user search to allow the group administrator to add users.\n              </div>\n            </div>\n            <md-table-container ng-if="$ctrl.membersLoaded" ng-cloak>\n              <table md-table ng-init="orderGrp = \'displayName\'">\n                <thead md-head md-order="orderGrp">\n                  <tr md-row>\n                    <th md-column width="22%" md-order-by="displayName">Name</th>\n                    <th md-column width="22%">Group Admin</th>\n                    <th md-column width="22%">API Role</th>\n                    <th md-column width="22%">Application Role</th>\n                    <th md-column width="12%"></th>\n                  </tr>\n                </thead>\n                <tbody md-body>\n                  <tr style="height: 30px" ng-if="$ctrl.members.length === 0">\n                    <td md-cell style="text-align: center" colspan="5">None.</td>\n                  </tr>\n                  <tr md-row ng-repeat="member in $ctrl.members | orderBy: orderGrp">\n                    <td md-cell>{{member.displayName}}</td>\n                    <td md-cell>\n                      <md-checkbox\n                        ng-model="member.roles[\'GROUP\']"\n                        ng-true-value="\'ADMIN\'"\n                        ng-false-value="\'\'"\n                        ng-change="$ctrl.updateRole(member)"\n                        aria-label="Administrator of this group"\n                      >\n                      </md-checkbox>\n                    </td>\n                    <td md-cell>\n                      <md-select\n                        ng-model="member.roles[\'API\']"\n                        aria-label="API Role"\n                        ng-change="$ctrl.updateRole(member)"\n                        ng-disabled="!$ctrl.canChangeDefaultApiRole()"\n                      >\n                        <md-option ng-value="role.name" ng-repeat="role in $ctrl.apiRoles" ng-disabled="$ctrl.isApiRoleDisabled(role)"\n                          >{{role.name}}</md-option\n                        >\n                      </md-select>\n                    </td>\n                    <td md-cell>\n                      <md-select\n                        ng-model="member.roles[\'APPLICATION\']"\n                        aria-label="Application Role"\n                        ng-change="$ctrl.updateRole(member)"\n                        ng-disabled="!$ctrl.canChangeDefaultApplicationRole()"\n                      >\n                        <md-option ng-value="role.name" ng-repeat="role in $ctrl.applicationRoles" ng-disabled="role.system"\n                          >{{role.name}}</md-option\n                        >\n                      </md-select>\n                    </td>\n                    <td md-cell ng-click="$event.stopPropagation()">\n                      <div layout="row" layout-align="end center">\n                        <span ng-if="$ctrl.group.manageable">\n                          <md-tooltip md-direction="top">delete</md-tooltip>\n                          <ng-md-icon icon="delete" ng-click="$ctrl.removeUser($event, member)" aria-label="delete-user"></ng-md-icon>\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <div ng-if="$ctrl.invitations.length > 0">\n                <hr />\n                <h3 style="color: red">Pending invitations</h3>\n                <table md-table ng-init="orderInvitation = \'email\'">\n                  <thead md-head md-order="orderInvitation">\n                    <tr md-row>\n                      <th md-column md-order-by="email">Email</th>\n                      <th md-column>API Role</th>\n                      <th md-column>Application Role</th>\n                      <th md-column md-order-by="created_at">Invitation date</th>\n                      <th md-column></th>\n                    </tr>\n                  </thead>\n                  <tbody md-body>\n                    <tr md-row ng-repeat="invitation in $ctrl.invitations | orderBy: orderInvitation">\n                      <td md-cell>{{invitation.email}}</td>\n                      <td md-cell>\n                        <md-select\n                          ng-model="invitation.api_role"\n                          aria-label="API Role"\n                          ng-change="$ctrl.updateInvitation(invitation)"\n                          ng-disabled="!$ctrl.canChangeDefaultApiRole()"\n                        >\n                          <md-option ng-value="role.name" ng-repeat="role in $ctrl.apiRoles" ng-disabled="$ctrl.isApiRoleDisabled(role)"\n                            >{{role.name}}</md-option\n                          >\n                        </md-select>\n                      </td>\n                      <td md-cell>\n                        <md-select\n                          ng-model="invitation.application_role"\n                          aria-label="Application Role"\n                          ng-change="$ctrl.updateInvitation(invitation)"\n                          ng-disabled="!$ctrl.canChangeDefaultApplicationRole()"\n                        >\n                          <md-option ng-value="role.name" ng-repeat="role in $ctrl.applicationRoles" ng-disabled="role.system"\n                            >{{role.name}}</md-option\n                          >\n                        </md-select>\n                      </td>\n                      <td md-cell>{{invitation.created_at | date}}</td>\n                      <td md-cell ng-click="$event.stopPropagation()">\n                        <div layout="row" layout-align="end center">\n                          <span ng-if="$ctrl.group.manageable">\n                            <md-tooltip md-direction="top">delete</md-tooltip>\n                            <ng-md-icon\n                              icon="delete"\n                              ng-click="$ctrl.removeInvitation($event, invitation)"\n                              aria-label="delete-user"\n                            ></ng-md-icon>\n                          </span>\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </md-table-container>\n            <gravitee-empty-state message="Loading members..." icon="person" ng-if="!$ctrl.membersLoaded"></gravitee-empty-state>\n            <md-table-pagination\n              ng-if="$ctrl.membersPage.page.size > 0"\n              md-limit="$ctrl.membersPage.page.per_page"\n              md-page="$ctrl.membersPage.page.current"\n              md-total="{{$ctrl.membersPage.page.total_elements}}"\n              md-on-paginate="$ctrl.onPaginate"\n            >\n            </md-table-pagination>\n          </md-tab-body>\n        </md-tab>\n        <md-tab md-on-select="currentTab=\'apis\'; $ctrl.loadGroupApis();">\n          <md-tab-label>APIs</md-tab-label>\n          <md-tab-body>\n            <div style="margin: 16px 0 8px">Here is the list of all APIs of this group.</div>\n            <md-table-container>\n              <table md-table>\n                <thead md-head>\n                  <tr md-row>\n                    <th md-column>Name</th>\n                    <th md-column>Version</th>\n                    <th md-column>Visibility</th>\n                  </tr>\n                </thead>\n                <tbody md-body>\n                  <tr style="height: 30px" ng-if="groupApis.length === 0">\n                    <td md-cell style="text-align: center" colspan="3">None.</td>\n                  </tr>\n                  <tr ng-repeat="api in groupApis" md-row>\n                    <td md-cell>{{api.name}}</td>\n                    <td md-cell>{{api.version}}</td>\n                    <td md-cell>\n                      <ng-md-icon icon="{{api.visibility===\'PUBLIC\' ? \'public\' : \'lock\'}}" size="20" style="fill: #cdcdcd">\n                        <md-tooltip>{{api.visibility}}</md-tooltip>\n                      </ng-md-icon>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </md-table-container>\n          </md-tab-body>\n        </md-tab>\n        <md-tab md-on-select="currentTab=\'applications\'; $ctrl.loadGroupApplications();">\n          <md-tab-label>Applications</md-tab-label>\n          <md-tab-body>\n            <div style="margin: 16px 0 8px">Here is the list of all applications of this group.</div>\n            <md-table-container>\n              <table md-table>\n                <thead md-head>\n                  <tr md-row>\n                    <th md-column>Name</th>\n                    <th md-column>Type</th>\n                  </tr>\n                </thead>\n                <tbody md-body>\n                  <tr style="height: 30px" ng-if="groupApplications.length === 0">\n                    <td md-cell style="text-align: center" colspan="2">None.</td>\n                  </tr>\n                  <tr ng-repeat="application in groupApplications" md-row>\n                    <td md-cell>{{application.name}}</td>\n                    <td md-cell>{{application.type}}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </md-table-container>\n          </md-tab-body>\n        </md-tab>\n      </md-tabs>\n    </div>\n  </div>\n</div>\n\n<md-fab-speed-dial\n  ng-if="$ctrl.canAddMembers() || ($ctrl.group.system_invitation && $ctrl.group.email_invitation)"\n  md-direction="left"\n  md-open="false"\n  class="md-scale md-fab-bottom-right md-fab-scrollable"\n  ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"\n>\n  <md-fab-trigger>\n    <md-button aria-label="menu" class="md-fab md-success">\n      <md-tooltip md-direction="top" md-visible="false">Add member</md-tooltip>\n      <ng-md-icon icon="add"></ng-md-icon>\n    </md-button>\n  </md-fab-trigger>\n\n  <md-fab-actions>\n    <md-button\n      ng-if="$ctrl.isSuperAdmin() || $ctrl.group.system_invitation"\n      class="md-fab md-success md-mini"\n      ng-click="$ctrl.showAddMemberModal()"\n      aria-label="Add member"\n    >\n      <md-tooltip md-direction="top">Add member</md-tooltip>\n      <ng-md-icon icon="people"></ng-md-icon>\n    </md-button>\n    <md-button\n      ng-if="$ctrl.isSuperAdmin() || $ctrl.group.email_invitation"\n      class="md-fab md-success md-mini"\n      ng-click="$ctrl.showInviteMemberModal()"\n      aria-label="Invite member"\n    >\n      <md-tooltip md-direction="topmd-fab-bottom-right">Invite member</md-tooltip>\n      <ng-md-icon icon="email"></ng-md-icon>\n    </md-button>\n  </md-fab-actions>\n</md-fab-speed-dial>\n\n<md-button\n  ng-if="!$ctrl.isSuperAdmin() && !($ctrl.group.system_invitation && $ctrl.group.email_invitation) && ($ctrl.group.system_invitation || $ctrl.group.email_invitation)"\n  ng-click="$ctrl.group.system_invitation?$ctrl.showAddMemberModal(): $ctrl.showInviteMemberModal()"\n  aria-label="Add member"\n  class="md-fab md-fab-bottom-right md-fab-scrollable"\n  ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"\n>\n  <md-tooltip md-direction="top" md-visible="false">Add member</md-tooltip>\n  <ng-md-icon icon="add"></ng-md-icon>\n</md-button>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Add member" layout-padding flex="30">\n  <md-dialog-content class="searchMembers">\n    <h4>Add members to {{$ctrl.group.name}}</h4>\n    <div layout="row" layout-align="space-between center">\n      <span>Choose an API role</span>\n      <md-select\n        ng-model="$ctrl.defaultApiRole"\n        aria-label="API Role"\n        class="md-no-underline"\n        ng-disabled="!$ctrl.canChangeDefaultApiRole()"\n      >\n        <md-option ng-repeat="role in $ctrl.apiRoles" ng-value="role.name" ng-disabled="$ctrl.isApiRoleDisabled(role)">\n          {{role.name}}\n        </md-option>\n      </md-select>\n    </div>\n    <div layout="row" layout-align="space-between center">\n      <span>Choose an Application role</span>\n      <md-select\n        ng-model="$ctrl.defaultApplicationRole"\n        aria-label="Application Role"\n        class="md-no-underline"\n        ng-disabled="!$ctrl.canChangeDefaultApplicationRole()"\n      >\n        <md-option ng-repeat="role in $ctrl.applicationRoles" ng-value="role.name" ng-disabled="role.system"> {{role.name}} </md-option>\n      </md-select>\n    </div>\n    <div ng-if="!$ctrl.defaultApiRole && !$ctrl.defaultApplicationRole" style="margin: 0 0 8px 0; text-align: right">\n      <em style="color: red">Select at least one role</em>\n    </div>\n    <form name="formMember" ng-submit="$event.preventDefault()">\n      <gv-user-autocomplete users-selected="$ctrl.usersSelected" disabled="$ctrl.hasPrimaryOwner()"></gv-user-autocomplete>\n      <em ng-if="$ctrl.hasPrimaryOwner()">No more members can be added because only one user can be set as an API Primary Owner.</em>\n    </form>\n  </md-dialog-content>\n\n  <md-dialog-actions layout="row">\n    <md-button ng-click="$ctrl.hide()"> Cancel </md-button>\n    <md-button\n      type="submit"\n      class="md-raised md-primary"\n      ng-click="$ctrl.addMembers()"\n      ng-disabled="formMember.$invalid || $ctrl.invalid()"\n    >\n      Add\n    </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Add member" layout-padding flex="30">\n  <md-dialog-content class="searchMembers">\n    <h4>Transfer API Primary Ownership for {{$ctrl.group.name}}</h4>\n    <p>User <code>{{$ctrl.primaryOwner.displayName}}</code> has role <code>API Primary Owner</code>.</p>\n    <p ng-if="!$ctrl.isPromotion()">You need to transfer this role before going further.</p>\n    <p ng-if="$ctrl.isPromotion()">\n      If you go further, <code>{{$ctrl.primaryOwner.displayName}}</code> will be demoted to the role <code>API Owner</code>.\n    </p>\n    <form name="formMember" ng-submit="$event.preventDefault()" ng-if="!$ctrl.isPromotion()">\n      <gv-user-autocomplete\n        users-selected="$ctrl.usersSelected"\n        place-holder="\'Search group members...\'"\n        user-filter-fn="$ctrl.userFilterFn"\n      >\n      </gv-user-autocomplete>\n    </form>\n  </md-dialog-content>\n\n  <md-dialog-actions layout="row">\n    <md-button ng-click="$ctrl.hide()"> Cancel</md-button>\n    <md-button\n      type="submit"\n      ng-class="{ \'md-raised\': true, \'md-primary\': !$ctrl.isRemoval(), \'md-warn\': $ctrl.isRemoval() }"\n      ng-click="$ctrl.addMembers()"\n      ng-disabled="$ctrl.isInvalid()"\n    >\n      {{ $ctrl.isRemoval() ? \'Transfer And Remove\' : \'Transfer\' }}\n    </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Invite member" flex="30">\n  <form name="formInvitation" ng-submit="$ctrl.save()" novalidate>\n    <md-dialog-content layout-padding>\n      <h4>Invite members to group <b>{{$ctrl.group.name}}</b></h4>\n      <div layout="row" layout-align="space-between center">\n        <span>Choose an API role</span>\n        <md-select\n          ng-model="$ctrl.group.api_role"\n          aria-label="API Role"\n          class="md-no-underline"\n          ng-disabled="!$ctrl.canChangeDefaultApiRole()"\n        >\n          <md-option ng-repeat="role in $ctrl.apiRoles" ng-value="role.name" ng-disabled="$ctrl.isApiRoleDisabled(role)">\n            {{role.name}}\n          </md-option>\n        </md-select>\n      </div>\n      <div layout="row" layout-align="space-between center">\n        <span>Choose an Application role</span>\n        <md-select\n          ng-model="$ctrl.group.application_role"\n          aria-label="Application Role"\n          class="md-no-underline"\n          ng-disabled="!$ctrl.canChangeDefaultApplicationRole()"\n        >\n          <md-option ng-repeat="role in $ctrl.applicationRoles" ng-value="role.name" ng-disabled="role.system"> {{role.name}} </md-option>\n        </md-select>\n      </div>\n      <div layout="column">\n        <md-input-container>\n          <label>Email</label>\n          <input ng-model="$ctrl.email" type="email" required md-autofocus />\n        </md-input-container>\n      </div>\n    </md-dialog-content>\n\n    <md-dialog-actions layout="row">\n      <md-button ng-click="$ctrl.hide()"> Cancel </md-button>\n      <md-button type="submit" class="md-raised md-primary" ng-disabled="formInvitation.$invalid"> Save </md-button>\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <h1>Dictionaries</h1>\n  <div class="gv-form">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <md-table-container ng-if="$ctrl.dictionaries.length > 0">\n        <table md-table class="gv-table-dense">\n          <thead md-head>\n            <tr md-row>\n              <th md-column>ID</th>\n              <th md-column>Name</th>\n              <th md-column>Description</th>\n              <th md-column>Type</th>\n              <th md-column>Number of properties</th>\n              <th md-column>Last updated at</th>\n              <th md-column>Last deployment at</th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="dictionary in $ctrl.dictionaries | orderBy: name">\n              <td md-cell>\n                <a ui-sref="management.settings.dictionaries.dictionary({dictionaryId: dictionary.id})"> {{dictionary.id}} </a>\n              </td>\n              <td md-cell>{{dictionary.name}}</td>\n              <td md-cell>{{dictionary.description}}</td>\n              <td md-cell>\n                {{dictionary.type}}\n                <span\n                  permission\n                  permission-only="[\'environment-dictionary-u\']"\n                  ng-if="dictionary.type === \'DYNAMIC\' && dictionary.state === \'STARTED\'"\n                  style="color: #429f46"\n                >\n                  - Started</span\n                >\n                <span\n                  permission\n                  permission-only="[\'environment-dictionary-u\']"\n                  ng-if="dictionary.type === \'DYNAMIC\' && dictionary.state !== \'STARTED\'"\n                  style="color: red"\n                >\n                  - Stopped</span\n                >\n              </td>\n              <td md-cell>{{dictionary.properties}}</td>\n              <td md-cell>{{dictionary.updated_at | date:\'MMM d, y h:mm:ss a\'}}</td>\n              <td md-cell>{{(dictionary.deployed_at | date:\'MMM d, y h:mm:ss a\') || \'-\'}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <gravitee-empty-state\n        ng-if="$ctrl.dictionaries.length === 0"\n        icon="assignment"\n        model="Dictionary"\n        message="Dictionaries will appear here"\n        sub-message="Start creating a dictionary"\n        create-mode="true"\n      ></gravitee-empty-state>\n    </div>\n  </div>\n  <md-button\n    permission\n    permission-only="\'environment-dictionary-c\'"\n    aria-label="Add dictionary"\n    class="md-fab md-fab-bottom-right md-fab-scrollable"\n    ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"\n    ui-sref="management.settings.dictionaries.new"\n  >\n    <md-tooltip md-direction="top" md-visible="false">Add a new dictionary</md-tooltip>\n    <ng-md-icon icon="add"></ng-md-icon>\n  </md-button>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms" layout="column">\n  <div class="gv-forms-header">\n    <h1 ng-if="$ctrl.updateMode">{{$ctrl.dictionary.name}}</h1>\n    <h1 ng-if="!$ctrl.updateMode">Create a new dictionary</h1>\n    <a ui-sref="management.settings.dictionaries.list">Back to dictionaries</a>\n  </div>\n  <form name="$ctrl.formDictionary" ng-submit="$ctrl.update()" novalidate>\n    <div class="gv-form">\n      <h2>General</h2>\n      <div class="gv-form-content" layout="column">\n        <div layout-gt-sm="row">\n          <md-input-container class="md-block" flex-gt-sm>\n            <label>Name</label>\n            <input ng-model="$ctrl.dictionary.name" type="text" required name="name" maxlength="50" />\n            <div class="hint" ng-if="$ctrl.formDictionary.name.$valid || $ctrl.formDictionary.name.$pristine">Dictionary Name</div>\n            <div ng-messages="$ctrl.formDictionary.name.$error">\n              <div ng-message="required">dictionary name is required.</div>\n              <div ng-message="md-maxlength">The name has to be less than 50 characters long.</div>\n            </div>\n          </md-input-container>\n        </div>\n\n        <div layout-gt-sm="row">\n          <md-input-container class="md-block" flex-gt-sm>\n            <label>Description</label>\n            <input ng-model="$ctrl.dictionary.description" type="text" name="description" />\n            <div class="hint" ng-if="$ctrl.formDictionary.description.$valid || $ctrl.formDictionary.description.$pristine">\n              Provide a description of the dictionary\n            </div>\n          </md-input-container>\n        </div>\n\n        <div layout-gt-sm="row">\n          <md-input-container class="md-block" flex-gt-sm>\n            <label>Type</label>\n            <md-select ng-model="$ctrl.dictionary.type" placeholder="Type" required ng-required="true" ng-disabled="$ctrl.dictionary.id">\n              <md-option ng-repeat="type in $ctrl.types" ng-value="type.id">{{type.name}}</md-option>\n            </md-select>\n            <div class="hint" ng-if="$ctrl.formDictionary.type.$valid || $ctrl.formDictionary.type.$pristine">\n              Set the type of the dictionary\n            </div>\n          </md-input-container>\n        </div>\n\n        <div layout-gt-sm="row" ng-if="$ctrl.dictionary.deployed_at">\n          <md-input-container class="md-block" flex-gt-sm>\n            <label>Last deployment at</label>\n            <input\n              value="{{$ctrl.dictionary.deployed_at | date:\'yyyy-MM-dd hh:mm:ss.sss\'}}"\n              type="text"\n              name="lastDeploymentAt"\n              ng-disabled="true"\n            />\n          </md-input-container>\n        </div>\n\n        <div\n          layout-gt-sm="row"\n          ng-if="$ctrl.updateMode && $ctrl.dictionary.type === \'DYNAMIC\'"\n          permission\n          permission-only="[\'environment-dictionary-u\']"\n        >\n          <label>Lifecycle</label>\n          <md-input-container class="md-block" flex-gt-sm>\n            <md-button class="md-raised" type="button" ng-click="$ctrl.start()" ng-disabled="$ctrl.dictionary.state === \'STARTED\'">\n              Start\n            </md-button>\n\n            <md-button class="md-raised md-warn" type="button" ng-click="$ctrl.stop()" ng-disabled="$ctrl.dictionary.state === \'STOPPED\'">\n              Stop\n            </md-button>\n          </md-input-container>\n        </div>\n      </div>\n    </div>\n\n    <div\n      class="gv-form"\n      ng-if="$ctrl.dictionary.type === \'DYNAMIC\'"\n      permission\n      permission-only="[\'environment-dictionary-c\', \'environment-dictionary-u\', \'environment-dictionary-d\']"\n    >\n      <h2>Trigger</h2>\n      <div class="gv-form-content" layout="column">\n        <div layout="row" layout-sm="column">\n          <md-input-container class="md-block" flex-gt-xs>\n            <label>Interval</label>\n            <input required ng-model="$ctrl.dictionary.trigger.rate" md-autofocus type="number" min="1" ng-required="true" />\n          </md-input-container>\n\n          <div flex="5" hide-xs hide-sm>\n            \x3c!-- Spacer //--\x3e\n          </div>\n\n          <md-input-container class="md-block" flex-gt-xs>\n            <label>Time Unit</label>\n            <md-select ng-model="$ctrl.dictionary.trigger.unit" placeholder="Time unit" required ng-required="true">\n              <md-option ng-repeat="timeUnit in $ctrl.timeUnits" ng-value="timeUnit.id">{{timeUnit.name}}</md-option>\n            </md-select>\n          </md-input-container>\n        </div>\n      </div>\n    </div>\n    <div\n      class="gv-form"\n      ng-if="$ctrl.dictionary.type === \'DYNAMIC\'"\n      permission\n      permission-only="[\'environment-dictionary-c\', \'environment-dictionary-u\', \'environment-dictionary-d\']"\n    >\n      <h2>Provider</h2>\n      <div class="gv-form-content" layout="column">\n        <md-input-container class="md-block" flex-gt-xs>\n          <label>Type</label>\n          <md-select ng-model="$ctrl.dictionary.provider.type" placeholder="Type" required ng-required="true">\n            <md-option ng-repeat="provider in $ctrl.providers" ng-value="provider.id">{{provider.name}}</md-option>\n          </md-select>\n        </md-input-container>\n\n        <br />\n\n        <div ng-if="$ctrl.dictionary.provider">\n          <h6>Configuration</h6>\n\n          <div ng-if="$ctrl.dictionary.provider.type == \'HTTP\'" layout="column" layout-sm="column">\n            <md-input-container class="md-block" flex-gt-sm>\n              <label>HTTP Service URL</label>\n              <input ng-model="$ctrl.dictionary.provider.configuration.url" type="url" ng-required="true" />\n            </md-input-container>\n\n            <md-checkbox ng-model="$ctrl.dictionary.provider.configuration.useSystemProxy" aria-label="Use system proxy"\n              >Use system proxy</md-checkbox\n            >\n\n            <md-input-container class="md-block" flex-gt-sm>\n              <label>HTTP Method</label>\n              <md-select ng-model="$ctrl.dictionary.provider.configuration.method" placeholder="HTTP Methods" required ng-required="true">\n                <md-option ng-value="method" ng-repeat="method in $ctrl.getHttpMethods()">{{method}}</md-option>\n              </md-select>\n            </md-input-container>\n\n            <md-input-container class="md-block" flex-gt-sm>\n              <label style="transform: translate3d(0, 6px, 0) scale(0.75) !important"> Request body </label>\n\n              <textarea\n                ui-codemirror="{ onLoad : $ctrl.codemirrorLoaded }"\n                ui-codemirror-opts="$ctrl.requestBodyOptions"\n                ng-model="$ctrl.dictionary.provider.configuration.body"\n                rows="5"\n              ></textarea>\n            </md-input-container>\n\n            <div layout="column" layout-sm="column" style="margin-bottom: 15px">\n              <h5 style="color: grey">\n                <span>Headers</span>\n                <ng-md-icon icon="add_circle_outline" style="fill: #b1bdc5" aria-label="Add HTTP header" ng-click="$ctrl.addHTTPHeader()"\n                  >Add headers</ng-md-icon\n                >\n              </h5>\n              <div\n                layout="row"\n                layout-sm="column"\n                layout-align="center center"\n                ng-repeat="header in $ctrl.dictionary.provider.configuration.headers"\n              >\n                <ng-md-icon\n                  icon="remove_circle_outline"\n                  style="fill: #b1bdc5"\n                  aria-label="Delete header"\n                  ng-click="$ctrl.removeHTTPHeader($index)"\n                ></ng-md-icon>\n\n                <div flex="5" hide-xs hide-sm>\n                  \x3c!-- Spacer //--\x3e\n                </div>\n\n                <md-input-container flex-gt-sm>\n                  <input aria-label="Header name" ng-model="header.name" type="text" placeholder="Header name" ng-required="true" />\n                </md-input-container>\n\n                <div flex="5" hide-xs hide-sm>\n                  \x3c!-- Spacer //--\x3e\n                </div>\n\n                <md-input-container flex-gt-sm>\n                  <input aria-label="Header value" ng-model="header.value" type="text" placeholder="Header value" ng-required="true" />\n                </md-input-container>\n              </div>\n            </div>\n\n            <md-input-container class="md-block" flex-gt-sm>\n              <label style="transform: translate3d(0, 6px, 0) scale(0.75) !important"> Transformation (JOLT Specification) </label>\n\n              <textarea\n                ui-codemirror="{ onLoad : $ctrl.codemirrorLoaded }"\n                ui-codemirror-opts="$ctrl.joltSpecificationOptions"\n                ng-model="$ctrl.dictionary.provider.configuration.specification"\n                ng-required="true"\n                rows="5"\n              ></textarea>\n            </md-input-container>\n          </div>\n\n          <br />\n        </div>\n      </div>\n    </div>\n\n    <div class="md-actions gravitee-api-save-button" layout="row">\n      <md-button\n        ng-if="$ctrl.updateMode"\n        class="md-raised md-primary"\n        type="submit"\n        ng-disabled="$ctrl.formDictionary.$invalid || $ctrl.formDictionary.$pristine"\n        permission\n        permission-only="[\'environment-dictionary-u\']"\n      >\n        Update\n      </md-button>\n      <md-button\n        ng-if="!$ctrl.updateMode"\n        class="md-raised md-primary"\n        type="submit"\n        ng-disabled="$ctrl.formDictionary.$invalid || $ctrl.formDictionary.$pristine"\n        permission\n        permission-only="[\'environment-dictionary-c\']"\n      >\n        Create\n      </md-button>\n\n      <md-button\n        class="md-raised md-primary"\n        ng-if="$ctrl.updateMode && $ctrl.dictionary.type === \'MANUAL\'"\n        permission\n        permission-only="[\'environment-dictionary-u\']"\n        ng-click="$ctrl.deploy()"\n      >\n        <ng-md-icon icon="backup" style="fill: white"></ng-md-icon>\n        Deploy\n      </md-button>\n\n      <md-button\n        class="md-raised"\n        type="button"\n        ng-click="$ctrl.reset()"\n        permission\n        permission-only="[\'environment-dictionary-u\']"\n        ng-disabled="$ctrl.formDictionary.$invalid || $ctrl.formDictionary.$pristine"\n      >\n        Reset\n      </md-button>\n\n      <md-button\n        ng-if="$ctrl.updateMode"\n        class="md-raised md-warn float-right"\n        type="button"\n        ng-click="$ctrl.delete()"\n        permission\n        permission-only="[\'environment-dictionary-d\']"\n      >\n        Delete\n      </md-button>\n    </div>\n  </form>\n\n  <div class="gv-form" ng-if="$ctrl.updateMode">\n    <h2>Properties</h2>\n    <div class="gv-form-content" layout="column">\n      <form name="formProperties" ng-submit="$ctrl.saveProperties()" novalidate>\n        <md-table-container ng-if="$ctrl.hasProperties()">\n          <table md-table ng-init="reverse = false">\n            <thead md-head md-order="name">\n              <tr md-row>\n                <th md-column ng-if="$ctrl.dictionary.type === \'MANUAL\'">\n                  <md-checkbox\n                    aria-label="Select all"\n                    ng-model="$ctrl.selectAll"\n                    ng-change="$ctrl.toggleSelectAll($ctrl.selectAll)"\n                  ></md-checkbox>\n                </th>\n                <th md-column md-order-by="name" ng-click="reverse = !reverse">Key</th>\n                <th md-column>Value</th>\n                <th md-column md-column width="80px" nowrap ng-if="$ctrl.dictionary.type === \'MANUAL\'"></th>\n              </tr>\n            </thead>\n            <tbody md-body>\n              <tr md-row ng-repeat="entry in $ctrl.getPropertiesPage(reverse)">\n                <td md-cell ng-if="$ctrl.dictionary.type === \'MANUAL\'">\n                  <md-checkbox\n                    aria-label="Select {{entry.key}}"\n                    ng-model="$ctrl.selectedProperties[entry.key]"\n                    ng-change="$ctrl.checkSelectAll()"\n                  ></md-checkbox>\n                </td>\n                <td md-cell>{{::entry.key}}</td>\n                <td md-cell ng-click="$ctrl.editProperty($event, entry.key, entry.value)" ng-class="{\'gravitee-placeholder\': entry.value}">\n                  {{entry.value || \'Set value\'}}\n                </td>\n                <td md-cell ng-if="$ctrl.dictionary.type === \'MANUAL\'">\n                  <ng-md-icon\n                    permission\n                    permission-only="[\'environment-dictionary-u\']"\n                    ng-click="$ctrl.deleteProperty(entry.key)"\n                    icon="delete"\n                  ></ng-md-icon>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </md-table-container>\n        <md-table-pagination\n          ng-if="$ctrl.hasProperties()"\n          md-limit="$ctrl.query.limit"\n          md-limit-options="[10, 25, 50, 75, 100]"\n          md-page="$ctrl.query.page"\n          md-total="{{$ctrl.query.total}}"\n          md-on-limit="$ctrl.searchEvents"\n          md-on-paginate="$ctrl.searchEvents"\n          md-page-select\n        ></md-table-pagination>\n\n        <gravitee-empty-state\n          ng-if="!$ctrl.hasProperties()"\n          icon="assignment"\n          model="Property"\n          message="Properties will appear here"\n          sub-message="{{$ctrl.dictionary.type === \'DYNAMIC\' ? \'Properties will be updated automatically\' : \'Start creating property\'}}"\n          create-mode="!$ctrl.updateMode"\n        ></gravitee-empty-state>\n\n        <div class="md-actions gravitee-api-save-button" layout="row" ng-if="$ctrl.dictionary.type === \'MANUAL\'">\n          <md-button class="md-raised md-primary" type="submit" permission permission-only="[\'environment-dictionary-u\']">\n            Save properties\n          </md-button>\n          <md-button\n            class="md-raised md-warn float-right"\n            type="button"\n            ng-click="$ctrl.deleteSelectedProperties()"\n            permission\n            permission-only="[\'environment-dictionary-u\']"\n            ng-disabled="!$ctrl.hasSelectedProperties()"\n          >\n            Delete\n          </md-button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n\n<md-button\n  ng-if="$ctrl.dictionary.type === \'MANUAL\' && $ctrl.dictionary.id"\n  permission\n  permission-only="\'environment-dictionary-u\'"\n  aria-label="Create property"\n  class="md-fab md-fab-bottom-right"\n  ng-click="$ctrl.addProperty()"\n>\n  <md-tooltip md-direction="top" md-visible="false">Create property</md-tooltip>\n  <ng-md-icon icon="add"></ng-md-icon>\n</md-button>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="New property">\n  <form name="formDictionaryProperty" ng-submit="dialogDictionaryAddPropertyCtrl.save()" novalidate>\n    <md-dialog-content layout-padding>\n      <h4>New property</h4>\n      <md-input-container>\n        <label>Name</label>\n        <input ng-model="property.name" id="key" required />\n      </md-input-container>\n      <md-input-container>\n        <label>Value</label>\n        <input ng-model="property.value" id="value" required />\n      </md-input-container>\n    </md-dialog-content>\n\n    <md-dialog-actions layout="row">\n      <md-button ng-click="dialogDictionaryAddPropertyCtrl.hide()"> Cancel </md-button>\n      <md-button type="submit" class="md-raised md-primary" ng-disabled="formDictionaryProperty.$invalid"> Add </md-button>\n    </md-dialog-actions>\n  </form>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div ng-class="{\'gv-sub-content\': $ctrl.target === \'ORGANIZATION\' }">\n  <div class="gv-forms gv-forms-fluid" layout="column">\n    <h1>Authentication</h1>\n    <div class="gv-form">\n      <h2></h2>\n      <div class="gv-form-content" layout="column" ng-if="$ctrl.target === \'ENVIRONMENT\'">\n        <h3>Configuration</h3>\n        <md-input-container class="gv-input-container-dense">\n          <md-checkbox\n            aria-label="Force login"\n            ng-change="$ctrl.saveForceLogin()"\n            ng-model="$ctrl.settings.authentication.forceLogin.enabled"\n            ng-disabled="$ctrl.isReadonlySetting(\'portal.authentication.forceLogin.enabled\')"\n          >\n            Force authentication to access portal\n            <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.authentication.forceLogin.enabled\')"\n              >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n            >\n          </md-checkbox>\n        </md-input-container>\n        <md-input-container class="gv-input-container-dense">\n          <md-checkbox\n            aria-label="Show login form"\n            ng-change="$ctrl.saveShowLoginForm()"\n            ng-model="$ctrl.settings.authentication.localLogin.enabled"\n            ng-disabled="$ctrl.isReadonlySetting(\'portal.authentication.localLogin.enabled\') || !$ctrl.hasActivatedIdp()"\n          >\n            Show login form on portal\n            <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.authentication.localLogin.enabled\')"\n              >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n            >\n          </md-checkbox>\n        </md-input-container>\n\n        <md-table-container ng-if="$ctrl.hasEnabledIdp">\n          <table class="gv-table-dense" md-table>\n            <thead md-head>\n              <tr md-row>\n                <th md-column nowrap width="1%"></th>\n                <th md-column>ID</th>\n                <th md-column>Name</th>\n                <th md-column>Description</th>\n                <th md-column>Activated</th>\n              </tr>\n            </thead>\n            <tbody md-body>\n              <tr md-row ng-repeat="identityProvider in $ctrl.identityProviders | orderBy: name" ng-if="identityProvider.enabled">\n                <td md-cell ng-switch="identityProvider.type">\n                  <md-icon md-svg-icon="assets/logo_{{identityProvider.type | lowercase}}-idp.svg" style="fill: black"></md-icon>\n                </td>\n                <td md-cell>{{identityProvider.id}}</td>\n                <td md-cell>{{identityProvider.name}}</td>\n                <td md-cell>{{identityProvider.description}}</td>\n                <td md-cell>\n                  <ng-md-icon\n                    icon="done"\n                    ng-if="$ctrl.activatedIdps[identityProvider.id]"\n                    permission\n                    permission-except="\'environment-identity_provider_activation-u\'"\n                  ></ng-md-icon>\n                  <md-input-container\n                    class="gv-input-container-dense"\n                    permission\n                    permission-only="\'environment-identity_provider_activation-u\'"\n                  >\n                    <md-checkbox\n                      aria-label="Activated for portal"\n                      ng-disabled="!identityProvider.enabled"\n                      ng-change="$ctrl.toggleActivatedIdp(identityProvider.id)"\n                      ng-model="$ctrl.activatedIdps[identityProvider.id]"\n                    >\n                    </md-checkbox>\n                  </md-input-container>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </md-table-container>\n\n        <gravitee-empty-state\n          create-mode="true"\n          icon="perm_identity"\n          message="Identity providers will appear here"\n          model="Identity Provider"\n          ng-if="!$ctrl.hasEnabledIdp"\n          sub-message="Create or enable identity providers in the organization settings"\n        ></gravitee-empty-state>\n      </div>\n\n      <div class="gv-form-content" layout="column" ng-if="$ctrl.target === \'ORGANIZATION\'">\n        <h3>Configuration</h3>\n        <md-input-container class="gv-input-container-dense">\n          <md-checkbox\n            aria-label="Show login form"\n            ng-change="$ctrl.saveShowLoginForm()"\n            ng-model="$ctrl.settings.authentication.localLogin.enabled"\n            ng-disabled="$ctrl.isReadonlySetting(\'console.authentication.localLogin.enabled\') || !$ctrl.hasActivatedIdp()"\n          >\n            Show login form on management console\n            <md-tooltip ng-if="$ctrl.isReadonlySetting(\'console.authentication.localLogin.enabled\')"\n              >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n            >\n          </md-checkbox>\n        </md-input-container>\n\n        <md-table-container ng-if="$ctrl.identityProviders.length > 0">\n          <table class="gv-table-dense" md-table>\n            <thead md-head>\n              <tr md-row>\n                <th md-column nowrap width="1%"></th>\n                <th md-column>ID</th>\n                <th md-column>Name</th>\n                <th md-column>Description</th>\n                <th md-column>Available for portal</th>\n                <th md-column>Activated</th>\n                <th md-column>Sync</th>\n                <th md-column>Last updated at</th>\n                <th md-column nowrap width="48px"></th>\n              </tr>\n            </thead>\n            <tbody md-body>\n              <tr md-row ng-repeat="identityProvider in $ctrl.identityProviders | orderBy: name">\n                <td md-cell ng-switch="identityProvider.type">\n                  <md-icon md-svg-icon="assets/logo_{{identityProvider.type | lowercase}}-idp.svg" style="fill: black"></md-icon>\n                </td>\n                <td md-cell>\n                  <a ui-sref="organization.settings.ajs-identityproviders.identityprovider({id: identityProvider.id})"\n                    >{{identityProvider.id}}</a\n                  >\n                </td>\n                <td md-cell>{{identityProvider.name}}</td>\n                <td md-cell>{{identityProvider.description}}</td>\n                <td md-cell>\n                  <ng-md-icon icon="done" ng-if="identityProvider.enabled"></ng-md-icon>\n                </td>\n                <td md-cell style="text-align: center">\n                  <ng-md-icon\n                    icon="done"\n                    ng-if="$ctrl.activatedIdps[identityProvider.id]"\n                    permission\n                    permission-except="\'organization-identity_provider_activation-u\'"\n                  ></ng-md-icon>\n                  <md-input-container\n                    class="gv-input-container-dense"\n                    permission\n                    permission-only="\'organization-identity_provider_activation-u\'"\n                  >\n                    <md-checkbox\n                      aria-label="Activated for console"\n                      ng-change="$ctrl.toggleActivatedIdp(identityProvider.id)"\n                      ng-model="$ctrl.activatedIdps[identityProvider.id]"\n                    >\n                    </md-checkbox>\n                  </md-input-container>\n                </td>\n                <td md-cell>\n                  <ng-md-icon icon="done" ng-if="identityProvider.sync"></ng-md-icon>\n                </td>\n                <td md-cell>{{identityProvider.updated_at | date:\'MMM d, y h:mm:ss a\'}}</td>\n                <td md-cell nowrap width="40">\n                  <ng-md-icon\n                    icon="delete"\n                    ng-click="$ctrl.delete(identityProvider)"\n                    permission\n                    permission-only="\'organization-identity_provider-d\'"\n                  >\n                    <md-tooltip md-direction="top" md-visible="false">Delete</md-tooltip>\n                  </ng-md-icon>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </md-table-container>\n\n        <gravitee-empty-state\n          create-mode="true"\n          icon="perm_identity"\n          message="Identity providers will appear here"\n          model="Identity Provider"\n          ng-if="$ctrl.identityProviders.length === 0"\n          sub-message="Start creating an identity provider"\n        ></gravitee-empty-state>\n      </div>\n    </div>\n  </div>\n\n  <md-fab-speed-dial\n    class="md-scale"\n    ng-if="$ctrl.target === \'ORGANIZATION\'"\n    md-direction="{{$ctrl.identityProviders.length > 0 ? \'left\' : \'down\'}}"\n    md-open="false"\n    ng-class="{\'md-fab-bottom-right md-fab-scrollable\' : $ctrl.identityProviders.length > 0, \'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"\n    permission\n    permission-only="\'organization-identity_provider-c\'"\n  >\n    <md-fab-trigger>\n      <md-button aria-label="menu" class="md-fab md-success">\n        <md-tooltip md-direction="top" md-visible="false" ng-if="$ctrl.identityProviders.length > 0">New identity provider</md-tooltip>\n        <ng-md-icon icon="add"></ng-md-icon>\n      </md-button>\n    </md-fab-trigger>\n\n    <md-fab-actions>\n      <md-button class="md-fab md-raised md-mini" ng-click="$ctrl.create(provider.type)" ng-repeat="provider in $ctrl.availableProviders">\n        <md-tooltip md-direction="{{$ctrl.availableProviders.length > 0 ? \'top\' : \'right\'}}">{{provider.name}}</md-tooltip>\n        <md-icon md-svg-icon="assets/logo_{{provider.type | lowercase}}-idp.svg" style="fill: black"></md-icon>\n      </md-button>\n    </md-fab-actions>\n  </md-fab-speed-dial>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-content class="gravitee-no-sidenav-container login-container" gv-theme-element="portal.login" flex>\n  <div class="login-page">\n    <div class="form">\n      <div class="gravitee-no-sidenav-header" layout="column">\n        <label class="title">Sign In</label>\n        <label class="subtitle">to continue to the APIM Console</label>\n      </div>\n\n      <form\n        name="formUser"\n        class="form-content"\n        ng-submit="$ctrl.login()"\n        layout="column"\n        ng-if="!$ctrl.localLoginDisabled || $ctrl.providers.length == 0"\n      >\n        <div layout="row">\n          <md-input-container class="md-icon-float md-block" flex>\n            <label>Username</label>\n            <input ng-model="$ctrl.user.username" type="text" placeholder="" required autofocus />\n          </md-input-container>\n        </div>\n\n        <div layout="row">\n          <md-input-container class="md-icon-float md-block" flex>\n            <label>Password</label>\n            <input ng-model="$ctrl.user.password" placeholder="" type="password" required />\n          </md-input-container>\n        </div>\n\n        <button type="submit" class="btn btn-block btn-signin" ng-disabled="canBeDisabled && (formUser.$invalid || formUser.$pristine)">\n          <md-icon md-svg-icon="assets/logo_sign-in.svg" style="fill: #fff"></md-icon>\n          <span>Sign in</span>\n        </button>\n\n        <p class="text-center text-muted" ng-if="$ctrl.userCreationEnabled">\n          <small>Don\'t have an account yet? <a ui-sref="registration">Sign up</a></small>\n        </p>\n      </form>\n\n      <div class="form-content">\n        <button\n          class="btn btn-block btn-{{provider.type | lowercase}}"\n          ng-style="{{ $ctrl.getProviderStyle(provider) }}"\n          data-ng-repeat="provider in $ctrl.identityProviders"\n          ng-click="$ctrl.authenticate(provider.id)"\n        >\n          <md-icon\n            md-svg-icon="assets/logo_{{provider.type | lowercase}}-idp.svg"\n            ng-style="{\'fill\': $ctrl.getProviderColor(provider)}"\n          ></md-icon>\n          <span>{{provider.name}}</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</md-content>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-content class="gravitee-no-sidenav-container" flex>\n  <div class="login-page">\n    <div class="form">\n      <div class="gravitee-no-sidenav-header" layout="column">\n        <label>Sign Up</label>\n      </div>\n      <form name="formRegistration" ng-submit="$ctrl.register()" layout="column">\n        <md-input-container class="md-icon-float">\n          <label>First name</label>\n          <input ng-model="$ctrl.user.firstname" type="text" required autofocus />\n        </md-input-container>\n\n        <md-input-container class="md-icon-float">\n          <label>Last name</label>\n          <input ng-model="$ctrl.user.lastname" type="text" required />\n        </md-input-container>\n\n        <md-input-container class="md-icon-float">\n          <label>Email</label>\n          <input ng-model="$ctrl.user.email" type="email" required />\n        </md-input-container>\n\n        <md-input-container class="md-icon-float" ng-if="$ctrl.fields && $ctrl.fields.length > 0" ng-repeat="field in $ctrl.fields">\n          <label>{{field.label}}</label>\n          <input\n            ng-if="!field.values || field.values.length == 0"\n            ng-model="$ctrl.user.customFields[field.key]"\n            type="text"\n            ng-required="field.required"\n          />\n          <md-select\n            style="padding-bottom: 2em"\n            ng-if="field.values && field.values.length > 0"\n            ng-model="$ctrl.user.customFields[field.key]"\n            ng-required="field.required"\n          >\n            <md-option ng-value="value" ng-repeat="value in field.values">{{ value }}</md-option>\n          </md-select>\n        </md-input-container>\n\n        <md-button\n          type="submit"\n          class="md-raised md-primary"\n          ng-disabled="formRegistration.$invalid || formRegistration.$pristine || isLoading"\n        >\n          Sign up\n        </md-button>\n\n        <br />\n\n        <p class="text-center text-muted">\n          <small>I have already an account! <a ui-sref="login">Sign in</a></small>\n        </p>\n      </form>\n    </div>\n  </div>\n</md-content>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-content class="gravitee-no-sidenav-container" flex>\n  <div class="login-page">\n    <div class="form">\n      <div class="gravitee-no-sidenav-header" layout="column">\n        <label>Confirm your registration</label>\n      </div>\n\n      <label style="color: red" ng-show="error">{{error}}</label>\n      <form name="formConfirm" ng-show="!error" ng-submit="confirmRegistration()" layout="column">\n        <md-input-container class="md-icon-float">\n          <label>First name</label>\n          \x3c!-- duplicate line with ng-if condition in order to enable focus according regitrationMode --\x3e\n          <input ng-model="user.firstname" ng-disabled="registrationMode" type="text" required ng-if="registrationMode" />\n          <input ng-model="user.firstname" ng-disabled="registrationMode" type="text" required autofocus ng-if="!registrationMode" />\n        </md-input-container>\n\n        <md-input-container class="md-icon-float">\n          <label>Last name</label>\n          <input ng-model="user.lastname" ng-disabled="registrationMode" type="text" required />\n        </md-input-container>\n\n        <md-input-container class="md-icon-float">\n          <label>Email</label>\n          <input ng-model="user.email" type="email" disabled required />\n        </md-input-container>\n\n        <md-input-container class="md-icon-float" ng-class="{\'md-input-invalid\': isInvalidPassword()}">\n          <label>Password</label>\n          \x3c!-- duplicate line with ng-if condition in order to enable focus according regitrationMode --\x3e\n          <input ng-if="registrationMode" ng-model="user.password" type="password" required autofocus />\n          <input ng-if="!registrationMode" ng-model="user.password" type="password" required />\n        </md-input-container>\n\n        <md-input-container class="md-icon-float" ng-class="{\'md-input-invalid\': isInvalidPassword()}">\n          <label>Confirm password</label>\n          <input ng-model="confirmPassword" type="password" required />\n        </md-input-container>\n\n        <label style="color: red !important" ng-if="isInvalidPassword()">The confirm password is different!</label>\n\n        <md-button\n          type="submit"\n          class="md-raised md-primary"\n          ng-disabled="formConfirm.$invalid || formConfirm.$pristine || isLoading || isInvalidPassword() || error"\n        >\n          Confirm registration\n        </md-button>\n\n        <a ui-sref="login" class="text-right">Back to login</a>\n      </form>\n    </div>\n  </div>\n</md-content>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-content class="gravitee-no-sidenav-container" flex>\n  <div class="login-page">\n    <div class="form">\n      <div class="gravitee-no-sidenav-header" layout="column">\n        <label>Reset password</label>\n      </div>\n\n      <label style="color: red" ng-show="error">{{error}}</label>\n      <form name="formConfirm" ng-show="!error" ng-submit="changePassword()" layout="column">\n        <md-input-container class="md-icon-float">\n          <label>First name</label>\n          <input ng-model="user.firstname" type="text" ng-disabled="true" required />\n        </md-input-container>\n\n        <md-input-container class="md-icon-float">\n          <label>Last name</label>\n          <input ng-model="user.lastname" type="text" ng-disabled="true" required />\n        </md-input-container>\n\n        <md-input-container class="md-icon-float">\n          <label>Email</label>\n          <input ng-model="user.email" type="email" ng-disabled="true" required />\n        </md-input-container>\n\n        <md-input-container class="md-icon-float" ng-class="{\'md-input-invalid\': isInvalidPassword()}">\n          <label>Password</label>\n          <input ng-model="user.password" type="password" ng-required="true" autofocus />\n        </md-input-container>\n\n        <md-input-container class="md-icon-float" ng-class="{\'md-input-invalid\': isInvalidPassword()}">\n          <label>Confirm password</label>\n          <input ng-model="confirmPassword" type="password" ng-required="true" />\n          <div class="hint"><i>Passwords must follow the rules in place.</i></div>\n        </md-input-container>\n\n        <label style="color: red !important" ng-if="isInvalidPassword()">The confirm password is different!</label>\n\n        <md-button\n          type="submit"\n          class="md-raised md-primary"\n          ng-disabled="formConfirm.$invalid || formConfirm.$pristine || isLoading || isInvalidPassword() || error"\n          style="margin-top: 50px"\n        >\n          Confirm change password\n        </md-button>\n\n        <a ui-sref="login" class="text-right">Back to login</a>\n      </form>\n    </div>\n  </div>\n</md-content>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-content class="gravitee-no-sidenav-container" flex>\n  <div class="newsletter-subscription-page">\n    <gv-newsletter-subscription ng-attr-email="{{user.email}}"></gv-newsletter-subscription>\n  </div>\n</md-content>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-sub-content">\n  <md-tabs md-selected="$ctrl.selectedIndex" md-center-tabs md-dynamic-height>\n    <md-tab ui-sref="management.dashboard.home">\n      <md-tab-label><ng-md-icon icon="home" style="fill: var(--gv-theme-color-darker)"></ng-md-icon> Home</md-tab-label>\n      <md-tab-body></md-tab-body>\n    </md-tab>\n    <md-tab ui-sref="management.dashboard.apis-status" ng-if="$ctrl.canViewApiStatus">\n      <md-tab-label><ng-md-icon icon="favorite" style="fill: var(--gv-theme-color-darker)"></ng-md-icon> APIs Status</md-tab-label>\n      <md-tab-body></md-tab-body>\n    </md-tab>\n    <md-tab ui-sref="management.dashboard.analytics" ng-if="$ctrl.canViewAnalytics">\n      <md-tab-label><ng-md-icon icon="insert_chart" style="fill: var(--gv-theme-color-darker)"></ng-md-icon> Analytics</md-tab-label>\n      <md-tab-body></md-tab-body>\n    </md-tab>\n    <md-tab ng-if="$ctrl.canViewAlerts" ui-sref="management.dashboard.alerts">\n      <md-tab-label><ng-md-icon icon="alarm" style="fill: var(--gv-theme-color-darker)"></ng-md-icon> Alerts</md-tab-label>\n      <md-tab-body></md-tab-body>\n    </md-tab>\n  </md-tabs>\n  <ui-view></ui-view>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <div layout="row">\n    <h1 flex>Home board</h1>\n    <md-input-container class="md-block">\n      <gv-quick-time-range on-timeframe-change="$ctrl.refresh(timeframe)"></gv-quick-time-range>\n    </md-input-container>\n    <md-button class="md-primary" ng-click="$ctrl.refresh()">\n      <ng-md-icon icon="refresh" size="20"></ng-md-icon>\n      Refresh\n    </md-button>\n  </div>\n\n  <div>\n    <gv-dashboard model="$ctrl.dashboard" custom-timeframe="$ctrl.customTimeframe" access-logs="false" update-mode="false"></gv-dashboard>\n  </div>\n\n  <div class="gv-form" permission permission-only="[\'api-event-r\', \'environment-platform-r\']">\n    <h2>API Events</h2>\n    <div class="gv-form-content" layout="column">\n      <div ng-if="$ctrl.events.content.length > 0">\n        <md-table-container>\n          <table md-table>\n            <thead md-head>\n              <tr md-row>\n                <th md-column></th>\n                <th md-column>Date</th>\n                <th md-column>Label</th>\n                <th md-column>Type</th>\n                <th md-column>API</th>\n              </tr>\n            </thead>\n            <tbody md-body>\n              <tr md-row ng-repeat="event in $ctrl.events.content" style="height: 25px">\n                <td md-cell>\n                  <span class="badge" ng-if="event.properties.deployment_number"># {{event.properties.deployment_number}}</span>\n                </td>\n                <td md-cell>{{event.updated_at | humanDatetimeFilter }}</td>\n                <td md-cell>{{event.properties.deployment_label}}</td>\n                <td md-cell>{{$ctrl.getEventLabel(event.type)}}</td>\n                <td md-cell>\n                  <a\n                    ui-sref="management.apis.detail.analytics.overview({ apiId: event.properties.api_id, from: $ctrl.$state.params.from, to: $ctrl.$state.params.to} )"\n                  >\n                    {{event.properties.api_name}} <small>({{event.properties.api_version}})</small>\n                  </a>\n                </td>\n              </tr>\n              <tr ng-if="$ctrl.events.content.length === 0">\n                <td md-cell colspan="2">No event</td>\n              </tr>\n            </tbody>\n          </table>\n        </md-table-container>\n        <md-table-pagination\n          md-limit="$ctrl.query.limit"\n          md-limit-options="[10, 25, 50, 75, 100]"\n          md-page="$ctrl.query.page"\n          md-total="{{$ctrl.events.totalElements}}"\n          md-on-limit="$ctrl.searchEvents"\n          md-on-paginate="$ctrl.searchEvents"\n          md-page-select\n        ></md-table-pagination>\n      </div>\n      <div ng-if="eventsFetchData" layout="column" layout-align="center center" flex>\n        <md-progress-circular md-mode="indeterminate"></md-progress-circular>\n      </div>\n      <div\n        ng-if="!eventsFetchData && $ctrl.events.content.length == 0"\n        class="events-no-result"\n        layout="column"\n        layout-align="center center"\n        flex\n      >\n        No Data to display here\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-sub-content">\n  <div class="gv-forms gv-forms-fluid" layout="column">\n    <div layout="row">\n      <h1 flex>APIs Status</h1>\n      <div class="gv-apis-healthcheck_control" ng-if="$ctrl.apis.length > 0">\n        <md-input-container class="md-block">\n          <md-switch class="" ng-model="$ctrl.viewAllApis" ng-change="$ctrl.updateDisplayedApis()">View all APIs</md-switch>\n        </md-input-container>\n        <md-input-container class="md-block">\n          <gv-quick-time-range on-timeframe-change="$ctrl.timeframeChange(timeframe)"></gv-quick-time-range>\n        </md-input-container>\n        <md-button class="md-primary" ng-click="$ctrl.refresh()">\n          <ng-md-icon icon="refresh"></ng-md-icon>\n          Refresh data\n        </md-button>\n      </div>\n    </div>\n    <div layout="column" ng-if="$ctrl.displayedApis.length > 0">\n      <div\n        class="gv-apis-healthcheck_current-status"\n        layout="row"\n        layout-align="center center"\n        ng-if="$ctrl.startedAPIsWithHC.length > 0"\n        ng-style="{\n        \'background-color\':\n          $ctrl.apisInError && $ctrl.apisInError > 0 ? $ctrl.RED_COLOR :\n          $ctrl.apisInWarning && $ctrl.apisInWarning > 0 ? $ctrl.ORANGE_COLOR :\n          $ctrl.GREEN_COLOR\n          }"\n      >\n        <span ng-if="(!$ctrl.apisInError || $ctrl.apisInError === 0) && (!$ctrl.apisInWarning || $ctrl.apisInWarning === 0)">\n          All APIs operational\n        </span>\n        <span ng-if="($ctrl.apisInError && $ctrl.apisInError > 0)">\n          {{$ctrl.apisInError == 1 ? \'1 API is in error\' : $ctrl.apisInError + \' APIs are in error\'}}\n        </span>\n        <span ng-if="(!$ctrl.apisInError || $ctrl.apisInError === 0) && ($ctrl.apisInWarning && $ctrl.apisInWarning > 0)">\n          {{$ctrl.apisInWarning == 1 ? \'1 API is in warning\' : $ctrl.apisInWarning + \' APIs are in warning\'}}\n        </span>\n        <span> &nbsp;in the {{$ctrl.currentTimeframe.title.toLowerCase()}}. </span>\n      </div>\n      <div class="gv-apis-healthcheck_list">\n        <md-card\n          ng-repeat="api in $ctrl.displayedApis"\n          ng-class="{\n          \'apiError\': $ctrl.isInError(api),\n          \'apiWarn\': $ctrl.isInWarning(api)\n          }"\n        >\n          <md-card-header>\n            <md-card-avatar>\n              <gravitee-identity-picture\n                class="md-user-avatar"\n                image-id="\'hc_\' + api.id"\n                image-url=""\n                image-name="$ctrl.getPictureDisplayName(api)"\n                image-width="40"\n              ></gravitee-identity-picture>\n            </md-card-avatar>\n            <md-card-header-text>\n              <span class="md-title" title="{{api.name}} {{api.version}}">{{api.name}} <small>({{api.version}})</small></span>\n              <a ui-sref="management.apis.detail.proxy.healthCheckDashboard.visualize({apiId: api.id})">View detail</a>\n            </md-card-header-text>\n            <md-card-avatar ng-if="$ctrl.isInError(api) || $ctrl.isInWarning(api)">\n              <ng-md-icon icon="error" size="40px"></ng-md-icon>\n            </md-card-avatar>\n          </md-card-header>\n\n          <md-card-content ng-if="$ctrl.hasHealthcheck(api) && !$ctrl.isStopped(api) && api.availability >= 0">\n            <gv-chart-gauge ng-attr-series="{{api.uptimeSeries}}" max="100"></gv-chart-gauge>\n            <div>\n              <gravitee-chart options="api.chartData" type="areaspline" height="100"></gravitee-chart>\n            </div>\n          </md-card-content>\n\n          <md-card-content ng-if="!$ctrl.hasHealthcheck(api) || $ctrl.isStopped(api) || api.availability === -1">\n            <div class="noData" ng-if="$ctrl.isStopped(api)">API is stopped</div>\n            <div class="noData" ng-if="!$ctrl.hasHealthcheck(api)">Health-check has not been configured</div>\n            <div class="noData" ng-if="api.availability === -1">No data to display</div>\n          </md-card-content>\n        </md-card>\n      </div>\n    </div>\n\n    <gravitee-empty-state\n      ng-if="$ctrl.displayedApis.length === 0"\n      icon="grid_off"\n      model="API"\n      message="There is no API to monitor"\n    ></gravitee-empty-state>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-sub-content">\n  <div class="gv-forms gv-forms-fluid" layout="column">\n    <div layout="row">\n      <h1 flex>Platform Overview</h1>\n      <div layout="row" ng-if="$ctrl.dashboards.length">\n        <label style="padding: 27px">Select a dashboard</label>\n        <md-input-container>\n          <md-select ng-model="$ctrl.dashboard" ng-change="$ctrl.onDashboardChanged($ctrl.dashboard.id)" aria-label="Dashboard selection">\n            <md-option ng-repeat="dashboard in $ctrl.dashboards" ng-value="dashboard"> {{dashboard.name}} </md-option>\n          </md-select>\n        </md-input-container>\n      </div>\n    </div>\n\n    <div class="gv-form">\n      <gv-dashboard\n        model="$ctrl.dashboard"\n        on-timeframe-change="$ctrl.onTimeframeChange(timeframe)"\n        on-view-log-click="$ctrl.viewLogs()"\n        access-logs="true"\n      ></gv-dashboard>\n    </div>\n\n    <div class="gv-form" ng-if="$ctrl.events.content.length > 0">\n      <h2>API Events</h2>\n      <div class="gv-form-content" layout="column">\n        <md-list>\n          <md-list-item class="eventType" ng-class="{eventTypeSelected: selection}" ng-repeat="eventType in $ctrl.eventTypes">\n            <a ng-click="selection= !selection; $ctrl.selectEvent(eventType)">\n              <span><strong>{{$ctrl.getEventLabel(eventType.toLowerCase())}}</strong></span>\n            </a>\n          </md-list-item>\n        </md-list>\n        <div>\n          <md-table-container>\n            <table md-table>\n              <thead md-head>\n                <tr md-row>\n                  <th md-column></th>\n                  <th md-column>Date</th>\n                  <th md-column>Label</th>\n                  <th md-column>Type</th>\n                  <th md-column>API</th>\n                </tr>\n              </thead>\n              <tbody md-body>\n                <tr md-row ng-repeat="event in $ctrl.events.content" style="height: 25px">\n                  <td md-cell>\n                    <span class="badge" ng-if="event.properties.deployment_number"># {{event.properties.deployment_number}}</span>\n                  </td>\n                  <td md-cell>{{event.updated_at | humanDatetimeFilter }}</td>\n                  <td md-cell>{{event.properties.deployment_label}}</td>\n                  <td md-cell>{{$ctrl.getEventLabel(event.type)}}</td>\n                  <td md-cell>\n                    <a\n                      ui-sref="management.apis.detail.analytics.overview({ apiId: event.properties.api_id, from: $ctrl.$state.params.from, to: $ctrl.$state.params.to} )"\n                    >\n                      {{event.properties.api_name}} <small>({{event.properties.api_version}})</small>\n                    </a>\n                  </td>\n                </tr>\n                <tr ng-if="$ctrl.events.content.length === 0">\n                  <td md-cell colspan="2">No event</td>\n                </tr>\n              </tbody>\n            </table>\n          </md-table-container>\n          <md-table-pagination\n            md-limit="$ctrl.query.limit"\n            md-limit-options="[10, 25, 50, 75, 100]"\n            md-page="$ctrl.query.page"\n            md-total="{{$ctrl.events.totalElements}}"\n            md-on-limit="$ctrl.searchEvents"\n            md-on-paginate="$ctrl.searchEvents"\n            md-page-select\n          ></md-table-pagination>\n        </div>\n        <div ng-if="eventsFetchData" layout="column" layout-align="center center" flex>\n          <md-progress-circular md-mode="indeterminate"></md-progress-circular>\n        </div>\n        <div ng-if="!eventsFetchData && $ctrl.events.content.length == 0" layout="column" layout-align="center center" flex>\n          <p><ng-md-icon icon="block" style="fill: grey"></ng-md-icon></p>\n          <p>No data</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gv-alert-dashboard has-configured-alerts="$ctrl.hasConfiguredAlerts" has-alerting-plugin="$ctrl.hasAlertingPlugin"></gv-alert-dashboard>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-sub-content">\n  <form name="supportTicketCtrl.formTicket" ng-submit="supportTicketCtrl.create()" novalidate>\n    <div class="gv-forms" layout="column">\n      <div class="gv-forms-header">\n        <h1>Support ticket creation</h1>\n        <a ui-sref="management.support.tickets">See tickets history</a>\n      </div>\n      <h5 ng-if="!supportTicketCtrl.userHasAnEmail" style="color: red; margin-left: 10px">\n        <ng-md-icon icon="warning" class="gv-warning"></ng-md-icon>\n        <span>You can not submit a ticket because you do not have an email configured on your account</span>\n      </h5>\n\n      <div class="gv-form">\n        <h2></h2>\n        <div class="gv-form-content" layout="column" style="background-color: #fafafa">\n          <md-input-container ng-if="!supportTicketCtrl.stateParams.apiId">\n            <label>Select an API</label>\n            <md-select ng-model="supportTicketCtrl.ticket.api" ng-disabled="!supportTicketCtrl.userHasAnEmail">\n              <md-option ng-repeat="api in supportTicketCtrl.apis" ng-value="api.id">{{api.name}} ({{api.version}})</md-option>\n            </md-select>\n          </md-input-container>\n          <md-input-container>\n            <label>Select an application</label>\n            <md-select ng-model="supportTicketCtrl.ticket.application" ng-disabled="!supportTicketCtrl.userHasAnEmail">\n              <md-option ng-repeat="application in supportTicketCtrl.applications" ng-value="application.id"\n                >{{application.name}} ({{application.owner.displayName}})</md-option\n              >\n            </md-select>\n          </md-input-container>\n          <md-input-container>\n            <label>Subject</label>\n            <input ng-model="supportTicketCtrl.ticket.subject" ng-required="true" ng-disabled="!supportTicketCtrl.userHasAnEmail" />\n          </md-input-container>\n          <md-input-container>\n            <label>Content</label>\n            <textarea\n              ng-model="supportTicketCtrl.ticket.content"\n              ng-required="true"\n              rows="10"\n              ng-disabled="!supportTicketCtrl.userHasAnEmail"\n            ></textarea>\n          </md-input-container>\n          <md-input-container>\n            <md-checkbox\n              ng-model="supportTicketCtrl.ticket.copyToSender"\n              ng-disabled="!supportTicketCtrl.userHasAnEmail"\n              aria-label="cb-copy-to-sender"\n            >\n              <span>Receive a copy of the email</span>\n            </md-checkbox>\n          </md-input-container>\n\n          <div class="md-actions" layout="row">\n            <md-button\n              type="submit"\n              class="md-raised md-primary"\n              ng-disabled="supportTicketCtrl.formTicket.$pristine || supportTicketCtrl.formTicket.$invalid || !supportTicketCtrl.userHasAnEmail"\n              aria-label="create-ticket"\n              >Create</md-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-sub-content">\n  <div class="gv-forms" layout="column">\n    <div class="gv-forms-header">\n      <h1>Tickets history</h1>\n      <a ui-sref="management.support.create">Back to ticket creation</a>\n    </div>\n\n    <div class="gv-form">\n      <md-table-container layout-padding>\n        <table\n          md-table\n          class="gravitee-analytics-top-hits-table gv-table-dense"\n          multiple\n          md-row-select="ticketsListCtrl.widget.chart.selectable"\n          data-ng-model="ticketsListCtrl.selected"\n        >\n          <thead md-head md-order="ticketsListCtrl.query.order">\n            <tr md-row>\n              <th md-column width="1%" md-order-by="created_at" nowrap>Date</th>\n              <th md-column width="1%" md-order-by="api" nowrap>Api</th>\n              <th md-column width="1%" md-order-by="application" nowrap>Application</th>\n              <th md-column width="1%" md-order-by="subject" nowrap>Subject</th>\n              <th md-column width="1%"></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr\n              ng-if="ticketsListCtrl.tickets.content.length > 0"\n              md-row\n              ng-repeat="ticket in ticketsListCtrl.tickets.content | limitTo: ticketsListCtrl.query.size"\n              md-auto-select\n              md-select="ticket"\n              md-select-id="key"\n            >\n              <td md-cell nowrap>{{ticket.created_at | date:\'yyyy-MM-dd HH:mm:ss.sss\'}}</td>\n              <td md-cell nowrap>{{ticket.api}}</td>\n              <td md-cell nowrap>{{ticket.application}}</td>\n              <td md-cell nowrap>{{ticket.subject}}</td>\n              <td md-cell nowrap>\n                <ng-md-icon\n                  ui-sref="management.support.ticket({\n              ticketId: ticket.id,\n              page: ticketsListCtrl.query.page,\n              order: ticketsListCtrl.query.order,\n              size: ticketsListCtrl.query.size\n              })"\n                  icon="remove_red_eye"\n                >\n                </ng-md-icon>\n              </td>\n            </tr>\n            <tr ng-if="ticketsListCtrl.tickets.totalElements === 0">\n              <td md-cell colspan="9" style="text-align: center">No ticket</td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <md-table-pagination\n        md-limit="ticketsListCtrl.query.size"\n        md-limit-options="[5, 10, 15, 20, 30, 50, 100]"\n        md-page="ticketsListCtrl.query.page"\n        md-total="{{ticketsListCtrl.tickets.totalElements}}"\n        md-on-paginate="ticketsListCtrl.onPaginate"\n      >\n      </md-table-pagination>\n    </div>\n  </div>\n</div>\n'},,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Add top API" flex="50">\n  <md-dialog-content layout-padding>\n    <h4>Add top API</h4>\n    <form>\n      <md-autocomplete\n        md-selected-item="$ctrl.selectedApi"\n        md-search-text="$ctrl.searchText"\n        md-items="api in $ctrl.apis | filter:$ctrl.searchText"\n        md-item-text="api.name"\n        placeholder="Search APIs ..."\n        md-autofocus="true"\n      >\n        <md-item-template>\n          <md-list-item class="md-2-line" style="height: 50px; min-height: 50px">\n            <gravitee-identity-picture\n              image-id="api.id"\n              image-url="api.picture_url"\n              image-name="api.name + \'  \' + api.version"\n              image-width="40"\n              class="md-avatar"\n            ></gravitee-identity-picture>\n            <div class="md-list-item-text">\n              <h3>{{api.name}}</h3>\n              <p>{{item.description}}</p>\n            </div>\n          </md-list-item>\n        </md-item-template>\n        <md-not-found> No APIs matching "{{$ctrl.searchText}}" were found. </md-not-found>\n      </md-autocomplete>\n    </form>\n  </md-dialog-content>\n\n  <md-dialog-actions layout="row">\n    <md-button ng-click="$ctrl.hide()"> Cancel </md-button>\n    <md-button type="submit" class="md-raised md-primary" ng-click="$ctrl.addApi()"> Add </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Delete top API \'{{topApi}}\'">\n  <md-dialog-content layout-padding>\n    <p>Are you sure you want to delete the top API \'{{topApi.name}}\' version \'{{topApi.version}}\'?</p>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="cancel()" md-auto-focus> Cancel </md-button>\n    <md-button ng-click="ok()" class="md-raised md-warn"> Delete top API </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <h1>Top APIs</h1>\n  <div class="gv-form">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <md-table-container>\n        <table md-table class="gv-table-dense">\n          <thead md-head>\n            <tr md-row>\n              <th md-column width="1%" nowrap>Name</th>\n              <th md-column width="1%" nowrap>Version</th>\n              <th md-column>Description</th>\n              <th md-column width="96px" nowrap></th>\n              <th md-column width="48px" nowrap></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="topApi in $ctrl.topApis | orderBy:\'order\'">\n              <td md-cell width="1%" nowrap>\n                <gravitee-identity-picture\n                  image-id="topApi.api"\n                  image-url="::topApi.picture_url"\n                  image-name="topApi.name + \'  \' + topApi.version"\n                  image-width="40"\n                ></gravitee-identity-picture>\n                {{::topApi.name}}\n              </td>\n              <td md-cell width="1%" nowrap>{{::topApi.version}}</td>\n              <td md-cell>{{::topApi.description}}</td>\n              <td md-cell width="96px" style="text-align: center" nowrap>\n                <ng-md-icon\n                  permission\n                  permission-only="\'environment-top_apis-u\'"\n                  ng-if="!$first"\n                  icon="arrow_upwards"\n                  ng-click="$ctrl.upward(topApi.order)"\n                ></ng-md-icon>\n                <ng-md-icon\n                  permission\n                  permission-only="\'environment-top_apis-u\'"\n                  ng-if="!$last"\n                  icon="arrow_downward"\n                  ng-click="$ctrl.downward(topApi.order)"\n                ></ng-md-icon>\n              </td>\n              <td md-cell width="48px">\n                <ng-md-icon\n                  permission\n                  permission-only="\'environment-top_apis-d\'"\n                  icon="delete"\n                  ng-click="$ctrl.delete(topApi)"\n                  style="height: 24px; font-size: 24px"\n                ></ng-md-icon>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n    </div>\n  </div>\n</div>\n\n<md-button\n  permission\n  permission-only="\'environment-top_apis-c\'"\n  aria-label="Add top API"\n  class="md-fab md-fab-bottom-right md-fab-scrollable"\n  ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"\n  ng-click="$ctrl.showAddTopAPIModal()"\n>\n  <md-tooltip md-direction="top" md-visible="false">Add a </md-tooltip>\n  <ng-md-icon icon="add"></ng-md-icon>\n</md-button>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<form name="$ctrl.formSettings" class="gv-forms" layout="column" ng-submit="$ctrl.save()">\n  <h1>Settings</h1>\n  <blockquote>\n    <p style="font-size: 12px">\n      <ng-md-icon icon="info" style="fill: grey"></ng-md-icon>\n      Depending on your architecture, this configuration may be overridden by a local configuration file. See documentation for more\n      information.\n    </p>\n  </blockquote>\n  <div class="gv-form">\n    <h2>Company</h2>\n    <div class="gv-form-content" layout="column">\n      <md-input-container class="md-block" flex-gt-xs>\n        <label>Company name</label>\n        <input ng-model="$ctrl.settings.company.name" ng-disabled="$ctrl.isReadonlySetting(\'company.name\')" />\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'company.name\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n      </md-input-container>\n    </div>\n  </div>\n\n  <div class="gv-form">\n    <h2>Console</h2>\n    <div class="gv-form-content" layout="column">\n      <h3>Security plans type available</h3>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.plan.security.keyless.enabled"\n          aria-label="keyless"\n          ng-disabled="$ctrl.isReadonlySetting(\'plan.security.keyless.enabled\')"\n        >\n          Keyless plans\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'plan.security.keyless.enabled\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-checkbox>\n      </md-input-container>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.plan.security.apikey.enabled"\n          ng-change="$ctrl.toggleApiKeyPlan()"\n          aria-label="apikey"\n          ng-disabled="$ctrl.isReadonlySetting(\'plan.security.apikey.enabled\')"\n        >\n          Api-key plans\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'plan.security.apikey.enabled\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-checkbox>\n      </md-input-container>\n      <md-input-container class="gv-input-container-dense portal-component__sub-input">\n        <md-checkbox\n          ng-disabled="!$ctrl.settings.plan.security.apikey.enabled || $ctrl.isReadonlySetting(\'plan.security.apikey.allowCustom.enabled\')"\n          ng-model="$ctrl.settings.plan.security.customApiKey.enabled"\n          aria-label="apikeyCustom"\n        >\n          Allow custom API key\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'plan.security.apikey.allowCustom.enabled\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-checkbox>\n      </md-input-container>\n      <md-input-container class="gv-input-container-dense portal-component__sub-input">\n        <md-checkbox\n          ng-disabled="!$ctrl.settings.plan.security.apikey.enabled || $ctrl.isReadonlySetting(\'plan.security.apikey.sharedApiKey.enabled\')"\n          ng-model="$ctrl.settings.plan.security.sharedApiKey.enabled"\n          aria-label="sharedApiKey"\n        >\n          Allow to share API key on an application\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'plan.security.sharedApiKey.enabled\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-checkbox>\n      </md-input-container>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.plan.security.oauth2.enabled"\n          aria-label="oauth2"\n          ng-disabled="$ctrl.isReadonlySetting(\'plan.security.oauth2.enabled\')"\n        >\n          Oauth2 plans\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'plan.security.oauth2.enabled\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-checkbox>\n      </md-input-container>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.plan.security.jwt.enabled"\n          aria-label="jwt"\n          ng-disabled="$ctrl.isReadonlySetting(\'plan.security.jwt.enabled\')"\n        >\n          JWT plans\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'plan.security.jwt.enabled\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-checkbox>\n      </md-input-container>\n\n      <h3>API labels dictionary</h3>\n      <md-input-container class="md-block">\n        <label>Labels <small>(Used by API Management to suggest labels for API\'s details)</small></label>\n        <md-chips\n          ng-model="$ctrl.settings.api.labelsDictionary"\n          placeholder="Enter a label"\n          md-add-on-blur="true"\n          readonly="$ctrl.isReadonlySetting(\'api.labelsDictionary\')"\n          ng-click="$ctrl.formSettings.$setDirty()"\n        >\n        </md-chips>\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'api.labelsDictionary\')">Configuration provided by the system</md-tooltip>\n      </md-input-container>\n\n      <h3>Dashboard</h3>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.dashboards.apiStatus.enabled"\n          aria-label="Display API status panel"\n          ng-disabled="$ctrl.isReadonlySetting(\'console.dashboards.apiStatus.enabled\')"\n        >\n          Display API STATUS panel\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'console.dashboards.apiStatus.enabled\')"\n            >Configuration provided by the system</md-tooltip\n          >\n        </md-checkbox>\n      </md-input-container>\n\n      <h3>API Primary Owner mode</h3>\n      <md-input-container class="md-block">\n        <md-radio-group ng-model="$ctrl.settings.api.primaryOwnerMode">\n          <md-radio-button ng-value="\'HYBRID\'" aria-label="Hybrid"\n            >HYBRID: an API primary owner can be either a user or a group (Default)</md-radio-button\n          >\n          <md-radio-button ng-value="\'USER\'" aria-label="User">USER: an API primary owner can only be a user</md-radio-button>\n          <md-radio-button ng-value="\'GROUP\'" aria-label="Group">GROUP: an API primary owner can only be a group</md-radio-button>\n        </md-radio-group>\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'api.primaryOwnerMode\')">Configuration provided by the system</md-tooltip>\n      </md-input-container>\n    </div>\n  </div>\n\n  <div class="gv-form">\n    <h2>Portal</h2>\n    <div class="gv-form-content" layout="column">\n      <h3>General</h3>\n      <div class="gv-form-content" layout="column">\n        <md-input-container class="md-block" flex-gt-xs>\n          <label\n            >Api-key Header\n            <small>(Used by portal to display the CURL command, change the YAML configuration to impact the gateway)</small>\n          </label>\n          <input ng-model="$ctrl.settings.portal.apikeyHeader" ng-disabled="$ctrl.isReadonlySetting(\'portal.apikey.header\')" />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.apikey.header\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-input-container>\n        <md-input-container class="md-block" flex-gt-xs>\n          <label>Portal URL</label>\n          <input type="text" ng-model="$ctrl.settings.portal.url" ng-disabled="$ctrl.isReadonlySetting(\'portal.url\')" />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.url\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-input-container>\n\n        <md-switch\n          aria-label="Override homepage title"\n          ng-disabled="$ctrl.isReadonlySetting(\'portal.homepageTitle\')"\n          ng-model="$ctrl.overrideHomepageTitle"\n          ng-change="$ctrl.toggleOverrideHomepageTitle()"\n        >\n          Override homepage title\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.homepageTitle\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-switch>\n        <md-input-container class="md-block" flex-gt-xs ng-if="$ctrl.overrideHomepageTitle">\n          <label>Portal homepage title</label>\n          <input type="text" ng-model="$ctrl.settings.portal.homepageTitle" ng-disabled="$ctrl.isReadonlySetting(\'portal.homepageTitle\')" />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.homepageTitle\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-input-container>\n      </div>\n\n      <h3>Options</h3>\n      <div class="gv-form-content" layout="column">\n        <md-input-container class="gv-input-container-dense">\n          <md-checkbox\n            ng-model="$ctrl.settings.portal.apis.tilesMode.enabled"\n            aria-label="Tiles Mode"\n            ng-disabled="$ctrl.isReadonlySetting(\'portal.apis.tilesMode.enabled\')"\n          >\n            Use Tiles Mode for apis by default (if not overridden by user)\n            <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.apis.tilesMode.enabled\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n          </md-checkbox>\n        </md-input-container>\n        <md-input-container class="gv-input-container-dense">\n          <md-checkbox\n            ng-model="$ctrl.settings.portal.support.enabled"\n            aria-label="Support"\n            ng-disabled="$ctrl.isReadonlySetting(\'portal.support.enabled\')"\n          >\n            Activate Support\n            <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.support.enabled\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n          </md-checkbox>\n        </md-input-container>\n        <md-input-container class="gv-input-container-dense">\n          <md-checkbox\n            ng-model="$ctrl.settings.portal.rating.enabled"\n            aria-label="Rating"\n            ng-disabled="$ctrl.isReadonlySetting(\'portal.rating.enabled\')"\n          >\n            Activate Rating\n            <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.rating.enabled\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n          </md-checkbox>\n        </md-input-container>\n        <md-input-container class="gv-input-container-dense">\n          <md-checkbox\n            ng-model="$ctrl.settings.portal.rating.comment.mandatory"\n            ng-disabled="$ctrl.isReadonlySetting(\'portal.rating.comment.mandatory\')"\n            aria-label="Rating comment mandatory"\n          >\n            Force user to fill comment before to save a rating\n            <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.rating.comment.mandatory\')"\n              >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n            >\n          </md-checkbox>\n        </md-input-container>\n        <md-input-container class="gv-input-container-dense">\n          <md-checkbox\n            ng-model="$ctrl.settings.portal.userCreation.enabled"\n            aria-label="Allow user creation"\n            ng-disabled="$ctrl.isReadonlySetting(\'portal.userCreation.enabled\')"\n          >\n            Allow User Registration\n            <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.userCreation.enabled\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n          </md-checkbox>\n        </md-input-container>\n        <md-input-container class="gv-input-container-dense portal-component__sub-input">\n          <md-checkbox\n            ng-model="$ctrl.settings.portal.userCreation.automaticValidation.enabled"\n            ng-disabled="!$ctrl.settings.portal.userCreation.enabled || $ctrl.isReadonlySetting(\'portal.userCreation.automaticValidation.enabled\')"\n            aria-label="Enable auto validation of creation"\n          >\n            Enable automatic validation of registration requests.\n            <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.userCreation.automaticValidation.enabled\')"\n              >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n            >\n          </md-checkbox>\n        </md-input-container>\n        <md-input-container class="gv-input-container-dense">\n          <md-checkbox\n            ng-model="$ctrl.settings.portal.analytics.enabled"\n            aria-label="Add Google Analytics"\n            ng-disabled="$ctrl.isReadonlySetting(\'portal.analytics.enabled\')"\n          >\n            Add Google Analytics\n            <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.analytics.enabled\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n          </md-checkbox>\n        </md-input-container>\n        <md-input-container class="md-block" flex-gt-xs>\n          <label>Google Analytics TrackingId</label>\n          <input\n            ng-model="$ctrl.settings.portal.analytics.trackingId"\n            ng-disabled="$ctrl.isReadonlySetting(\'portal.analytics.trackingId\')"\n          />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.analytics.trackingId\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-input-container>\n        <md-input-container class="gv-input-container-dense">\n          <md-checkbox\n            ng-model="$ctrl.settings.portal.uploadMedia.enabled"\n            ng-disabled="$ctrl.isReadonlySetting(\'portal.uploadMedia.enabled\')"\n            aria-label="Allow upload media"\n          >\n            Allow Upload Images\n            <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.uploadMedia.enabled\')">Configuration provided by the system</md-tooltip>\n          </md-checkbox>\n        </md-input-container>\n        <md-input-container class="md-block" flex-gt-xs>\n          <label>Max size upload file (bytes)</label>\n          <input\n            type="number"\n            min="0"\n            ng-model="$ctrl.settings.portal.uploadMedia.maxSizeInOctet"\n            ng-disabled="$ctrl.isReadonlySetting(\'portal.uploadMedia.maxSizeInOctet\')"\n          />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.uploadMedia.maxSizeInOctet\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-input-container>\n      </div>\n\n      <h3>OpenAPI viewers</h3>\n      <div class="gv-form-content" layout="column">\n        <table md-table class="gv-table-dense" style="width: auto">\n          <tr>\n            <td>\n              <md-switch\n                ng-model="$ctrl.settings.openAPIDocViewer.openAPIDocType.swagger.enabled"\n                aria-label="swagger"\n                ng-disabled="!$ctrl.settings.openAPIDocViewer.openAPIDocType.redoc.enabled || $ctrl.isReadonlySetting(\'open.api.doc.type.swagger.enabled\')"\n                ng-change="$ctrl.toggleDocType()"\n              >\n                Swagger-UI\n                <md-tooltip ng-if="$ctrl.isReadonlySetting(\'open.api.doc.type.swagger.enabled\')"\n                  >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n                >\n              </md-switch>\n            </td>\n            <td>\n              <md-radio-group ng-model="$ctrl.settings.openAPIDocViewer.openAPIDocType.defaultType">\n                <md-radio-button\n                  value="Swagger"\n                  class="md-primary"\n                  ng-disabled="!$ctrl.settings.openAPIDocViewer.openAPIDocType.swagger.enabled || $ctrl.isReadonlySetting(\'open.api.doc.type.default\')"\n                  style="margin-bottom: 0px"\n                  >Set as default\n                </md-radio-button>\n                <md-tooltip ng-if="$ctrl.isReadonlySetting(\'open.api.doc.type.default\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n              </md-radio-group>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <md-switch\n                ng-model="$ctrl.settings.openAPIDocViewer.openAPIDocType.redoc.enabled"\n                aria-label="swagger"\n                ng-disabled="!$ctrl.settings.openAPIDocViewer.openAPIDocType.swagger.enabled || $ctrl.isReadonlySetting(\'open.api.doc.type.redoc.enabled\')"\n                ng-change="$ctrl.toggleDocType()"\n              >\n                Redoc\n                <md-tooltip ng-if="$ctrl.isReadonlySetting(\'open.api.doc.type.redoc.enabled\')"\n                  >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n                >\n              </md-switch>\n            </td>\n            <td>\n              <md-radio-group ng-model="$ctrl.settings.openAPIDocViewer.openAPIDocType.defaultType">\n                <md-radio-button\n                  value="Redoc"\n                  class="md-primary"\n                  ng-disabled="!$ctrl.settings.openAPIDocViewer.openAPIDocType.redoc.enabled  || $ctrl.isReadonlySetting(\'open.api.doc.type.default\')"\n                  style="margin-bottom: 0px"\n                  >Set as default\n                </md-radio-button>\n                <md-tooltip ng-if="$ctrl.isReadonlySetting(\'open.api.doc.type.default\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n              </md-radio-group>\n            </td>\n          </tr>\n        </table>\n      </div>\n\n      <h3>Schedulers</h3>\n      <div class="gv-form-content" layout="column">\n        <md-input-container class="md-block" flex-gt-xs>\n          <label>Tasks (in seconds)</label>\n          <input\n            type="number"\n            min="0"\n            ng-model="$ctrl.settings.scheduler.tasks"\n            ng-disabled="$ctrl.isReadonlySetting(\'portal.scheduler.tasks\')"\n          />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.scheduler.tasks\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-input-container>\n        <md-input-container class="md-block" flex-gt-xs>\n          <label>Notifications (in seconds)</label>\n          <input\n            type="number"\n            min="0"\n            ng-model="$ctrl.settings.scheduler.notifications"\n            ng-disabled="$ctrl.isReadonlySetting(\'portal.scheduler.notifications\')"\n          />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.scheduler.notifications\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-input-container>\n      </div>\n\n      <h3>Documentation</h3>\n      <div class="gv-form-content" layout="column">\n        <md-input-container class="md-block" flex-gt-xs>\n          <label>Documentation URL</label>\n          <input ng-model="$ctrl.settings.documentation.url" ng-disabled="$ctrl.isReadonlySetting(\'documentation.url\')" />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'documentation.url\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-input-container>\n      </div>\n    </div>\n  </div>\n\n  <div class="gv-form">\n    <h2>CORS</h2>\n    <div class="gv-form-content" layout="column">\n      <md-input-container class="md-block">\n        <label>Allow-Origin</label>\n        <md-chips\n          ng-model="$ctrl.settings.cors.allowOrigin"\n          placeholder="*, https://mydomain.com, (http|https).*.mydomain.com, ..."\n          md-on-add="$ctrl.controlAllowOrigin($chip, $index)"\n          md-add-on-blur="true"\n          readonly="$ctrl.isReadonlySetting(\'http.api.portal.cors.allow-origin\')"\n        >\n          <md-chip-template>\n            <strong>{{$chip}}</strong>\n          </md-chip-template>\n        </md-chips>\n        <div class="hint">\n          The origin parameter specifies a URI that may access the resource. Scheme, domain and port are part of the\n          <i>same-origin</i> definition.<br />\n          If you choose to enable \'*\' it means that is allows all requests, regardless of origin. Regular Expressions are also supported.\n        </div>\n        <div ng-if="!$ctrl.isRegexValid()" style="color: red">Regex is invalid</div>\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'http.api.portal.cors.allow-origin\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n      </md-input-container>\n      <md-input-container class="md-block" flex-gt-sm>\n        <label>Access-Control-Allow-Methods</label>\n        <md-select\n          ng-model="$ctrl.settings.cors.allowMethods"\n          md-on-close="clearSearchTerm()"\n          data-md-container-class="selectdemoSelectHeader"\n          multiple\n          ng-disabled="$ctrl.isReadonlySetting(\'http.api.portal.cors.allow-methods\')"\n        >\n          <md-select-header class="demo-select-header">\n            <input\n              ng-model="searchTerm"\n              type="search"\n              placeholder="Search for allowed HTTP method."\n              class="demo-header-searchbox md-text"\n            />\n          </md-select-header>\n          <md-optgroup label="HTTPMethods">\n            <md-option\n              ng-value="method"\n              ng-repeat="method in $ctrl.methods |\n              filter:searchTerm"\n              >{{method}}\n            </md-option>\n          </md-optgroup>\n        </md-select>\n        <div class="hint">\n          Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request.\n        </div>\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'http.api.portal.cors.allow-methods\')"\n          >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n        >\n      </md-input-container>\n      <md-input-container class="md-block">\n        <label>Allow-Headers</label>\n        <md-chips\n          ng-model="$ctrl.settings.cors.allowHeaders"\n          md-autocomplete-snap\n          md-add-on-blur="true"\n          md-require-match="false"\n          readonly="$ctrl.isReadonlySetting(\'http.api.portal.cors.allow-headers\')"\n        >\n          <md-autocomplete\n            md-search-text="searchHeaders"\n            md-items="item in $ctrl.querySearchHeaders(searchHeaders)"\n            md-item-text="item"\n            placeholder="Content-Type, ..."\n          >\n            <span md-highlight-text="searchHeaders">{{item}}</span>\n          </md-autocomplete>\n          <md-chip-template>\n            <span>\n              <strong>{{$chip}}</strong>\n            </span>\n          </md-chip-template>\n          <span class="ipsum">\n            Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request.\n          </span>\n        </md-chips>\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'http.api.portal.cors.allow-headers\')"\n          >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n        >\n      </md-input-container>\n      <md-input-container class="md-block">\n        <label>Exposed-Headers</label>\n        <md-chips\n          ng-model="$ctrl.settings.cors.exposedHeaders"\n          md-autocomplete-snap\n          md-add-on-blur="true"\n          md-require-match="false"\n          readonly="$ctrl.isReadonlySetting(\'http.api.portal.cors.exposed-headers\')"\n        >\n          <md-autocomplete\n            md-search-text="searchHeaders"\n            md-items="item in $ctrl.querySearchHeaders(searchHeaders)"\n            md-item-text="item"\n            placeholder="Content-Type, ..."\n          >\n            <span md-highlight-text="searchHeaders">{{item}}</span>\n          </md-autocomplete>\n          <md-chip-template>\n            <span>\n              <strong>{{$chip}}</strong>\n            </span>\n          </md-chip-template>\n          <span class="ipsum">\n            Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request.\n          </span>\n        </md-chips>\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'http.api.portal.cors.exposed-headers\')"\n          >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n        >\n      </md-input-container>\n      <md-input-container class="md-block" flex-gt-xs>\n        <label>Max age (seconds) <small>How long the response from a pre-flight request can be cached by clients</small></label>\n        <input\n          type="number"\n          min="0"\n          ng-model="$ctrl.settings.cors.maxAge"\n          ng-disabled="$ctrl.isReadonlySetting(\'http.api.portal.cors.max-age\')"\n        />\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'http.api.portal.cors.max-age\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n      </md-input-container>\n    </div>\n  </div>\n\n  <div class="gv-form">\n    <h2>SMTP</h2>\n    <div class="gv-form-content" layout="column">\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.email.enabled"\n          aria-label="Email enabled"\n          ng-disabled="$ctrl.isReadonlySetting(\'email.enabled\')"\n        >\n          Enable Emailing\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'email.enabled\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-checkbox>\n      </md-input-container>\n      <md-input-container class="md-block" flex-gt-xs>\n        <label>Host</label>\n        <input\n          type="text"\n          ng-model="$ctrl.settings.email.host"\n          ng-disabled="!$ctrl.settings.email.enabled || $ctrl.isReadonlySetting(\'email.host\')"\n        />\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'email.host\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n      </md-input-container>\n      <md-input-container class="md-block" flex-gt-xs>\n        <label>Port</label>\n        <input\n          type="number"\n          min="0"\n          ng-model="$ctrl.settings.email.port"\n          ng-disabled="!$ctrl.settings.email.enabled || $ctrl.isReadonlySetting(\'email.port\')"\n        />\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'email.port\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n      </md-input-container>\n      <md-input-container class="md-block" flex-gt-xs>\n        <label>Username</label>\n        <input\n          type="text"\n          ng-model="$ctrl.settings.email.username"\n          ng-disabled="!$ctrl.settings.email.enabled || $ctrl.isReadonlySetting(\'email.username\')"\n        />\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'email.username\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n      </md-input-container>\n      <md-input-container class="md-block" flex-gt-xs>\n        <label>Password</label>\n        <input\n          type="password"\n          ng-model="$ctrl.settings.email.password"\n          ng-disabled="!$ctrl.settings.email.enabled || $ctrl.isReadonlySetting(\'email.password\')"\n        />\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'email.password\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n      </md-input-container>\n      <md-input-container class="md-block" flex-gt-xs>\n        <label>Protocol</label>\n        <input\n          type="text"\n          ng-model="$ctrl.settings.email.protocol"\n          ng-disabled="!$ctrl.settings.email.enabled || $ctrl.isReadonlySetting(\'email.protocol\')"\n        />\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'email.protocol\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n      </md-input-container>\n      <md-input-container class="md-block" flex-gt-xs>\n        <label>Subject</label>\n        <input\n          type="text"\n          ng-model="$ctrl.settings.email.subject"\n          ng-disabled="!$ctrl.settings.email.enabled || $ctrl.isReadonlySetting(\'email.subject\')"\n        />\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'email.subject\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n      </md-input-container>\n      <md-input-container class="md-block" flex-gt-xs>\n        <label>From</label>\n        <input\n          type="email"\n          ng-model="$ctrl.settings.email.from"\n          ng-disabled="!$ctrl.settings.email.enabled || $ctrl.isReadonlySetting(\'email.from\')"\n        />\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'email.from\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n      </md-input-container>\n\n      <h3>Mail properties</h3>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.email.properties.auth"\n          aria-label="Alerting enabled"\n          ng-disabled="!$ctrl.settings.email.enabled || $ctrl.isReadonlySetting(\'email.properties.auth\')"\n        >\n          Enable Auth\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'email.properties.auth\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-checkbox>\n      </md-input-container>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.email.properties.startTlsEnable"\n          aria-label="Alerting enabled"\n          ng-disabled="!$ctrl.settings.email.enabled || $ctrl.isReadonlySetting(\'email.properties.starttls.enable\')"\n        >\n          Enable Start TLS\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'email.properties.starttls.enable\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-checkbox>\n      </md-input-container>\n      <md-input-container class="gv-input-container-dense">\n        <label>SSL Trust</label>\n        <input\n          type="text"\n          ng-model="$ctrl.settings.email.properties.sslTrust"\n          ng-disabled="!$ctrl.settings.email.enabled || $ctrl.isReadonlySetting(\'email.properties.ssl.trust\')"\n        />\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'email.properties.ssl.trust\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n      </md-input-container>\n    </div>\n  </div>\n\n  <md-card-actions>\n    <md-button\n      type="submit"\n      class="md-raised md-primary"\n      ng-disabled="$ctrl.formSettings.$invalid || $ctrl.formSettings.$pristine"\n      permission\n      permission-only="[\'environment-settings-c\', \'environment-settings-u\', \'environment-settings-d\']"\n      >Save\n    </md-button>\n    <md-button\n      type="button"\n      class="md-raised"\n      ng-click="$ctrl.reset()"\n      ng-disabled="$ctrl.formSettings.$invalid || $ctrl.formSettings.$pristine"\n      permission\n      permission-only="[\'environment-settings-c\', \'environment-settings-u\', \'environment-settings-d\']"\n      >Reset\n    </md-button>\n  </md-card-actions>\n</form>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-sub-content">\n  <form name="$ctrl.formMsg" ng-submit="$ctrl.send()" novalidate>\n    <div class="gv-forms" layout="column">\n      <h1>Message</h1>\n\n      <div class="gv-form">\n        <h2></h2>\n        <div class="gv-form-content" layout="column">\n          <div layout="row" layout-align="space-around start">\n            <div layout="column" flex="50">\n              <label>Choose the channel you want to use</label>\n              <md-radio-group ng-model="$ctrl.channel">\n                <md-radio-button ng-repeat="chan in $ctrl.channels" value="{{chan.id}}"> {{chan.name}} </md-radio-button>\n              </md-radio-group>\n            </div>\n            <div layout="column" flex="50" ng-if="$ctrl.channel !== \'HTTP\'">\n              <label>Choose the recipients</label>\n              <md-select ng-model="$ctrl.recipientValues" ng-required="true" multiple>\n                <md-option ng-repeat="r in $ctrl.recipients" ng-value="r.name">{{r.displayName}}</md-option>\n              </md-select>\n            </div>\n\n            <div layout="column" flex="50" ng-if="$ctrl.channel === \'HTTP\'">\n              <datalist id="http-headers">\n                <option ng-repeat="h in $ctrl.defaultHttpHeaders" value="{{h}}"></option>\n              </datalist>\n\n              <label>Add HTTP headers</label>\n              <md-table-container>\n                <table md-table>\n                  <thead md-head>\n                    <tr md-row>\n                      <th md-column>Name</th>\n                      <th md-column>Value</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody md-body>\n                    <tr md-row ng-repeat="header in $ctrl.httpHeaders track by $index">\n                      <td md-cell><input list="http-headers" type="text" ng-model="header.key" /></td>\n                      <td md-cell><input type="text" ng-model="header.value" /></td>\n                      <td md-cell><ng-md-icon icon="delete" ng-click="$ctrl.deleteHttpHeader($index)"></ng-md-icon></td>\n                    </tr>\n                  </tbody>\n                  <tfoot>\n                    <tr>\n                      <td colspan="3" md-cell ng-click="$ctrl.newHttpHeader($event)"><a>Add a new header</a></td>\n                    </tr>\n                  </tfoot>\n                </table>\n              </md-table-container>\n            </div>\n          </div>\n          <md-input-container ng-if="$ctrl.channel !== \'HTTP\'">\n            <label>Title</label>\n            <input ng-model="$ctrl.title" ng-required="true" />\n          </md-input-container>\n          <div layout="row">\n            <md-input-container ng-if="$ctrl.channel === \'HTTP\'" flex>\n              <label>URL</label>\n              <input ng-model="$ctrl.url" ng-required="true" />\n            </md-input-container>\n            <md-input-container ng-if="$ctrl.channel === \'HTTP\'">\n              <md-checkbox ng-model="$ctrl.useSystemProxy" aria-label="Use system proxy">Use system proxy</md-checkbox>\n            </md-input-container>\n          </div>\n          <md-input-container>\n            <label>Text</label>\n            <textarea ng-model="$ctrl.text" ng-required="true" rows="5" tabindex="2"> </textarea>\n          </md-input-container>\n\n          <div class="md-actions" layout="row">\n            <md-button\n              type="submit"\n              class="md-raised md-primary"\n              ng-disabled="$ctrl.formMsg.$pristine || $ctrl.formMsg.$invalid"\n              aria-label="send-message"\n              >Send</md-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms" layout="column">\n  <h1>API Portal Information</h1>\n  <div class="gv-form">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <h3>Add extra information</h3>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.portal.apis.apiHeaderShowTags.enabled"\n          aria-label="Show Tags"\n          ng-disabled="$ctrl.isReadonlySetting(\'portal.apis.apiheader.showtags.enabled\')"\n          ng-change="$ctrl.saveShowTags()"\n        >\n          Show tags list in the API header\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.apis.apiheader.showtags.enabled\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-checkbox>\n      </md-input-container>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.portal.apis.apiHeaderShowCategories.enabled"\n          aria-label="Show Categories"\n          ng-disabled="$ctrl.isReadonlySetting(\'portal.apis.apiheader.showcategories.enabled\')"\n          ng-change="$ctrl.saveShowCategories()"\n        >\n          Show categories list in the API header\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.apis.apiheader.showcategories.enabled\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-checkbox>\n      </md-input-container>\n\n      <h3>Configure the information list</h3>\n      <md-table-container>\n        <table md-table class="gv-table-dense">\n          <thead md-head>\n            <tr md-row>\n              <th width="1%" nowrap md-column>Name</th>\n              <th md-column>Value</th>\n              <th md-column width="76px" nowrap></th>\n              <th md-column width="48px" nowrap></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="header in $ctrl.apiPortalHeaders">\n              <td md-cell width="1%" nowrap><a ng-click="$ctrl.updateHeader(header)">{{header.name}}</a></td>\n              <td md-cell><code>{{header.value}}</code></td>\n              <td md-cell width="76px" nowrap layout="row" layout-align="center center">\n                <div permission permission-only="\'environment-api_header-u\'">\n                  <ng-md-icon ng-if="!$first" icon="arrow_upwards" ng-click="$ctrl.upward(header)"></ng-md-icon>\n                  <ng-md-icon ng-if="!$last" icon="arrow_downward" ng-click="$ctrl.downward(header)"></ng-md-icon>\n                </div>\n              </td>\n              <td md-cell width="48px" nowrap>\n                <ng-md-icon permission permission-only="\'environment-api_header-d\'" icon="delete" ng-click="$ctrl.deleteHeader(header)">\n                  <md-tooltip md-direction="top" md-visible="false">Delete</md-tooltip>\n                </ng-md-icon>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <h3>API Page list options</h3>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.portal.apis.promotedApiMode.enabled"\n          aria-label="Display promotion banner"\n          ng-disabled="$ctrl.isReadonlySetting(\'portal.apis.promotedApiMode.enabled\')"\n          ng-change="$ctrl.savePromotedApiMode()"\n        >\n          Display promotion banner\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'portal.apis.promotedApiMode.enabled\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-checkbox>\n      </md-input-container>\n    </div>\n  </div>\n</div>\n\n<md-button\n  permission\n  permission-only="\'environment-api_header-c\'"\n  aria-label="Add"\n  class="md-fab md-fab-bottom-right md-fab-scrollable"\n  ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"\n  ng-click="$ctrl.createHeader()"\n>\n  <md-tooltip md-direction="top" md-visible="false">Add a new header</md-tooltip>\n  <ng-md-icon icon="add"></ng-md-icon>\n</md-button>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-sub-content">\n  <div class="gv-forms gv-forms-fluid" layout="column">\n    <div class="gv-form">\n      <h1>Alerts</h1>\n      <div class="gv-form-content" layout="column">\n        <md-table-container ng-if="$ctrl.alerts.length > 0">\n          <table md-table class="gv-table-dense">\n            <thead md-head>\n              <tr md-row>\n                <th md-column width="1%" nowrap></th>\n                <th md-column>Name</th>\n                <th md-column>Description</th>\n                <th md-column>Last 5m / 1h / 1d / 1M</th>\n                <th md-column>Last alert</th>\n                <th md-column>Last message</th>\n                <th ng-if="$ctrl.hasPermissionForCurrentScope(\'alert-u\')" width="48px" nowrap></th>\n                <th ng-if="$ctrl.hasPermissionForCurrentScope(\'alert-d\')" width="48px" nowrap></th>\n              </tr>\n            </thead>\n            <tbody md-body>\n              <tr md-row ng-repeat="alert in $ctrl.alerts" style="height: 25px">\n                <td md-cell>\n                  <span\n                    class="badge gravitee-policy-method-badge-info ng-binding ng-scope"\n                    ng-style="{\'background-color\': $ctrl.getSeverityColor(alert)}"\n                  >\n                    {{alert.severity}}\n                  </span>\n                </td>\n                <td md-cell>\n                  <a ng-style="alert.enabled?\'\':{\'font-style\': \'italic\', \'color\': \'grey\'}" ng-click="$ctrl.goTo(\'alert\', alert.id)">\n                    <span ng-if="alert.template">[Template] </span>\n                    {{alert.name}}\n                  </a>\n                </td>\n                <td md-cell>{{alert.description}}</td>\n                <td md-cell>\n                  <span ng-if="!alert.template">\n                    {{ alert.counters[\'5m\'] }} / {{ alert.counters[\'1h\'] }} / {{ alert.counters[\'1d\'] }} / {{ alert.counters[\'1M\'] }}\n                    <md-tooltip>\n                      {{ alert.counters[\'5m\'] }} during the last 5 minutes / {{ alert.counters[\'1h\'] }} during the last 1 hour / {{\n                      alert.counters[\'1d\'] }} during the last 1 day / {{ alert.counters[\'1M\'] }} during the last 1 month\n                    </md-tooltip>\n                  </span>\n                  <span ng-if="alert.template">-</span>\n                </td>\n                <td md-cell>\n                  <span ng-if="alert.last_alert_at"\n                    >{{ alert.last_alert_at | humanDatetimeFilter }}\n                    <md-tooltip>{{ alert.last_alert_at | date:\'medium\' }}</md-tooltip>\n                  </span>\n                  <span ng-if="alert.last_alert_at === undefined">-</span>\n                </td>\n                <td md-cell>\n                  <span ng-if="alert.last_alert_message">{{alert.last_alert_message}}</span>\n                  <span ng-if="alert.last_alert_message === undefined">-</span>\n                </td>\n                <td md-cell width="48px">\n                  <ng-md-icon\n                    ng-if="$ctrl.hasPermissionForCurrentScope(\'alert-u\') && !alert.enabled && !alert.template"\n                    icon="not_interested"\n                    ng-click="$ctrl.toggleEnable(alert)"\n                    style="font-size: 24px; height: 24px"\n                  >\n                    <md-tooltip md-direction="top" md-visible="false">Enable this alert</md-tooltip>\n                  </ng-md-icon>\n                  <ng-md-icon\n                    ng-if="$ctrl.hasPermissionForCurrentScope(\'alert-u\') && alert.enabled && !alert.template"\n                    icon="done"\n                    ng-click="$ctrl.toggleEnable(alert)"\n                    style="font-size: 24px; height: 24px"\n                  >\n                    <md-tooltip md-direction="top" md-visible="false">Disable this alert</md-tooltip>\n                  </ng-md-icon>\n                  <ng-md-icon ng-if="alert.template" icon="content_copy" style="font-size: 24px; height: 24px">\n                    <md-tooltip md-direction="top" md-visible="false">Alert template</md-tooltip>\n                  </ng-md-icon>\n                </td>\n                <td md-cell ng-if="$ctrl.hasPermissionForCurrentScope(\'alert-d\')">\n                  <ng-md-icon icon="delete" ng-click="$ctrl.delete(alert)"></ng-md-icon>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </md-table-container>\n        <gravitee-empty-state\n          ng-if="$ctrl.alerts.length === 0"\n          icon="insert_chart"\n          model="Alert"\n          message="Alerts will appear here"\n          sub-message="Start creating an alert"\n          create-mode="true"\n        ></gravitee-empty-state>\n      </div>\n    </div>\n  </div>\n  <div ng-if="$ctrl.alerts.length == 0" ng-style="{\'text-align\': \'center\'  }">\n    <md-button\n      ng-if="$ctrl.hasPermissionForCurrentScope(\'alert-c\')"\n      class="md-fab"\n      aria-label="create-alert"\n      ng-click="$ctrl.goTo(\'alertnew\')"\n    >\n      <ng-md-icon icon="add" style="fill: #fff"></ng-md-icon>\n    </md-button>\n  </div>\n</div>\n<div ng-if="$ctrl.alerts.length > 0">\n  <md-button\n    ng-if="$ctrl.hasPermissionForCurrentScope(\'alert-c\')"\n    class="md-fab md-fab-bottom-right"\n    aria-label="create-alert"\n    ng-click="$ctrl.goTo(\'alertnew\')"\n  >\n    <ng-md-icon icon="add" style="fill: #fff"></ng-md-icon>\n  </md-button>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-sub-content">\n  <div class="gv-alerts-alert gv-forms gv-forms-fluid" layout="column">\n    <div class="gv-forms" layout="column">\n      <div class="gv-forms-header">\n        <h1 ng-if="$ctrl.updateMode">[{{ $ctrl.titlePrefix }}] {{$ctrl.alert.name}}</h1>\n        <h1 ng-if="!$ctrl.updateMode">[{{ $ctrl.titlePrefix }}] Create a new alert</h1>\n        <a ng-click="$ctrl.backToAlerts()">Back to alerts</a>\n      </div>\n\n      <div class="gv-page-draft-banner" ng-if="$ctrl.status.available_plugins === 0">\n        <ng-md-icon icon="warning" class="gv-warning"></ng-md-icon>\n        No alert plugin is installed. Please install a plugin before being able to define alert rules.\n        <br />\n      </div>\n\n      <form name="$ctrl.formAlert" ng-submit="$ctrl.save($ctrl.alert)" novalidate>\n        <md-tabs md-dynamic-height="$ctrl.resize" md-selected="$ctrl.selectedTab" md-stretch-tabs="always">\n          <md-tab md-on-select="$ctrl.currentTab=$ctrl.selectTab(0)">\n            <md-tab-label>Alert</md-tab-label>\n            <md-tab-body>\n              <div class="gv-form">\n                <h3>General</h3>\n                <div class="gv-form-content" layout="column">\n                  <div layout-gt-sm="row">\n                    <md-input-container class="md-block" flex="70">\n                      <label>Name</label>\n                      <input\n                        ng-model="$ctrl.alert.name"\n                        name="name"\n                        minlength="3"\n                        md-maxlength="50"\n                        required\n                        autofocus\n                        ng-disabled="$ctrl.isReadonly()"\n                        aria-label="Alert name"\n                      />\n                      <div class="hint" ng-if="$ctrl.formAlert.name.$valid || $ctrl.formAlert.name.$pristine">Alert name.</div>\n                      <div ng-messages="$ctrl.formAlert.name.$error">\n                        <div ng-message="required">Name is required.</div>\n                        <div ng-message="minlength">Name has to be more than 3 characters long.</div>\n                        <div ng-message="md-maxlength">Name has to be less than 50 characters long.</div>\n                      </div>\n                    </md-input-container>\n\n                    <md-input-container\n                      class="md-block"\n                      flex="30"\n                      ng-if="$ctrl.alert.template === undefined || $ctrl.alert.template === false"\n                    >\n                      <md-checkbox\n                        ng-model="$ctrl.alert.enabled"\n                        aria-label="Enable this alert trigger"\n                        class="md-primary md-align-top-left"\n                        flex\n                        ng-disabled="$ctrl.isReadonly()"\n                      >\n                        Enable this alert\n                      </md-checkbox>\n                    </md-input-container>\n                  </div>\n\n                  <div layout-gt-sm="row">\n                    <md-input-container class="md-block" flex="70">\n                      <label>Rule</label>\n                      <md-select ng-model="$ctrl.alert.type" required ng-disabled="$ctrl.updateMode" ng-change="$ctrl.onRuleChange()">\n                        <md-optgroup label="{{group}}" ng-repeat="group in $ctrl.groups">\n                          <md-option ng-value="rule.source + \'@\' + rule.type" ng-repeat="rule in $ctrl.rules | filter: {category: group}"\n                            >{{rule.description}}\n                          </md-option>\n                        </md-optgroup>\n                      </md-select>\n                    </md-input-container>\n\n                    <md-input-container class="md-block" flex="30">\n                      <label>Severity</label>\n                      <md-select ng-model="$ctrl.alert.severity" required ng-disabled="$ctrl.isReadonly()">\n                        <md-option ng-value="severity" ng-repeat="severity in $ctrl.severities"> {{severity | lowercase}} </md-option>\n                      </md-select>\n                    </md-input-container>\n                  </div>\n\n                  <div layout-gt-sm="row">\n                    <md-input-container class="md-block" flex-gt-sm>\n                      <label>Description</label>\n                      <input\n                        ng-model="$ctrl.alert.description"\n                        name="name"\n                        md-maxlength="256"\n                        aria-label="Alert description"\n                        ng-disabled="$ctrl.isReadonly()"\n                      />\n                      <div ng-messages="$ctrl.formAlert.name.$error">\n                        <div ng-message="md-maxlength">Description has to be less than 256 characters long.</div>\n                      </div>\n                    </md-input-container>\n                  </div>\n                </div>\n              </div>\n\n              <div ng-if="($ctrl.template && !$ctrl.updateMode) || $ctrl.alert.template">\n                <h2>Template</h2>\n                <div class="gv-form-content" layout="column">\n                  <div layout-gt-sm="row">\n                    <md-input-container class="md-block" flex="50" ng-if="$ctrl.alert.reference_type === 2 && !$ctrl.updateMode">\n                      <md-checkbox\n                        ng-model="$ctrl.alert.template"\n                        ng-disabled="$ctrl.updateMode"\n                        aria-label="Define as template"\n                        class="md-primary md-align-top-left"\n                        flex\n                      >\n                        Define as template\n                      </md-checkbox>\n                    </md-input-container>\n\n                    <md-input-container clas="md-block" flex="50">\n                      <md-checkbox\n                        ng-model="$ctrl.apiByDefault"\n                        ng-click="$event.stopPropagation()"\n                        aria-label="Associate to every new API"\n                        class="md-primary md-align-top-left"\n                        flex\n                      >\n                        Automatically create this alert for every new API\n                      </md-checkbox>\n                    </md-input-container>\n                  </div>\n\n                  <div class="md-actions gravitee-api-save-button" layout="row" ng-if="$ctrl.updateMode">\n                    <md-button\n                      aria-label="Associate to existing APIs"\n                      ng-click="$ctrl.associateToApis()"\n                      class="md-actions md-raised md-primary"\n                    >\n                      Associate the alert to existing APIs\n                    </md-button>\n                  </div>\n                </div>\n              </div>\n\n              <gv-alert-trigger-timeframe alert="$ctrl.alert" form="$ctrl.formAlert"></gv-alert-trigger-timeframe>\n\n              <div>\n                <div class="gv-forms-header">\n                  <h3>Condition</h3>\n                  <div class="ipsum">Field metrics and condition for the rule</div>\n                </div>\n\n                <div class="gv-form-content" layout="column">\n                  <div class="gv-alerts-alert_trigger-msg" ng-if="$ctrl.alert.type == null">\n                    Select a rule before setting the condition.\n                  </div>\n\n                  <gv-alert-trigger-missing-data\n                    ng-if="$ctrl.alert.type.endsWith(\'@MISSING_DATA\')"\n                    alert="$ctrl.alert"\n                  ></gv-alert-trigger-missing-data>\n\n                  <gv-alert-trigger-metrics-simple-condition\n                    ng-if="$ctrl.alert.type === \'REQUEST@METRICS_SIMPLE_CONDITION\'"\n                    alert="$ctrl.alert"\n                  ></gv-alert-trigger-metrics-simple-condition>\n\n                  <gv-alert-trigger-metrics-simple-condition\n                    ng-if="$ctrl.alert.type === \'NODE_HEARTBEAT@METRICS_SIMPLE_CONDITION\'"\n                    alert="$ctrl.alert"\n                  ></gv-alert-trigger-metrics-simple-condition>\n\n                  <gv-alert-trigger-metrics-aggregation\n                    ng-if="$ctrl.alert.type === \'REQUEST@METRICS_AGGREGATION\'"\n                    alert="$ctrl.alert"\n                  ></gv-alert-trigger-metrics-aggregation>\n\n                  <gv-alert-trigger-metrics-aggregation\n                    ng-if="$ctrl.alert.type === \'NODE_HEARTBEAT@METRICS_AGGREGATION\'"\n                    alert="$ctrl.alert"\n                  ></gv-alert-trigger-metrics-aggregation>\n\n                  <gv-alert-trigger-metrics-rate\n                    ng-if="$ctrl.alert.type === \'REQUEST@METRICS_RATE\'"\n                    alert="$ctrl.alert"\n                  ></gv-alert-trigger-metrics-rate>\n\n                  <gv-alert-trigger-metrics-rate\n                    ng-if="$ctrl.alert.type === \'NODE_HEARTBEAT@METRICS_RATE\'"\n                    alert="$ctrl.alert"\n                  ></gv-alert-trigger-metrics-rate>\n\n                  <gv-alert-trigger-api-health-check-status-changed\n                    ng-if="$ctrl.alert.type === \'ENDPOINT_HEALTH_CHECK@API_HC_ENDPOINT_STATUS_CHANGED\'"\n                    alert="$ctrl.alert"\n                  ></gv-alert-trigger-api-health-check-status-changed>\n\n                  <gv-alert-trigger-node-lifecycle-changed\n                    ng-if="$ctrl.alert.type === \'NODE_LIFECYCLE@NODE_LIFECYCLE_CHANGED\'"\n                    alert="$ctrl.alert"\n                  ></gv-alert-trigger-node-lifecycle-changed>\n\n                  <gv-alert-trigger-node-healthcheck\n                    ng-if="$ctrl.alert.type === \'NODE_HEALTHCHECK@NODE_HEALTHCHECK\'"\n                    alert="$ctrl.alert"\n                  ></gv-alert-trigger-node-healthcheck>\n\n                  <gv-alert-trigger-application-quota\n                    ng-if="$ctrl.alert.type === \'REQUEST@APPLICATION_QUOTA\'"\n                    alert="$ctrl.alert"\n                  ></gv-alert-trigger-application-quota>\n                </div>\n              </div>\n\n              \x3c!-- Additional filters --\x3e\n              <gv-alert-trigger-filters\n                alert="$ctrl.alert"\n                form="$ctrl.formAlert"\n                is-readonly="$ctrl.isReadonly()"\n              ></gv-alert-trigger-filters>\n            </md-tab-body>\n          </md-tab>\n\n          <md-tab md-on-select="$ctrl.currentTab=$ctrl.selectTab(1)">\n            <md-tab-label>Notifications</md-tab-label>\n            <md-tab-body>\n              \x3c!-- Dampening --\x3e\n              <gv-alert-trigger-dampening dampening="$ctrl.alert.dampening" is-readonly="$ctrl.isReadonly()"></gv-alert-trigger-dampening>\n\n              <gv-alert-notifications alert="$ctrl.alert" is-readonly="$ctrl.isReadonly()"></gv-alert-notifications>\n            </md-tab-body>\n          </md-tab>\n\n          <md-tab md-on-select="$ctrl.currentTab=$ctrl.selectTab(2)" ng-disabled="!$ctrl.updateMode || $ctrl.alert.template">\n            <md-tab-label>History</md-tab-label>\n            <md-tab-body>\n              <gv-alert-history alert="$ctrl.alert"></gv-alert-history>\n            </md-tab-body>\n          </md-tab>\n        </md-tabs>\n\n        \x3c!-- Form actions --\x3e\n        <div class="md-actions gravitee-api-save-button" layout="row">\n          <md-button\n            ng-if="$ctrl.hasPermissionForCurrentScope(\'alert-u\') && $ctrl.updateMode"\n            class="md-raised md-primary"\n            type="submit"\n            ng-disabled="$ctrl.status.available_plugins === 0 || $ctrl.formAlert.$invalid || $ctrl.formAlert.$pristine"\n          >\n            Update\n          </md-button>\n          <md-button\n            ng-if="$ctrl.hasPermissionForCurrentScope(\'alert-c\') && !$ctrl.updateMode"\n            class="md-raised md-primary"\n            type="submit"\n            ng-disabled="$ctrl.status.available_plugins === 0 || $ctrl.formAlert.$invalid || $ctrl.formAlert.$pristine"\n          >\n            Create\n          </md-button>\n\n          <md-button\n            ng-if="$ctrl.hasPermissionForCurrentScope(\'alert-d\')"\n            class="md-raised"\n            type="button"\n            ng-click="$ctrl.reset()"\n            ng-disabled="$ctrl.status.available_plugins === 0 || $ctrl.formAlert.$invalid || $ctrl.formAlert.$pristine"\n          >\n            Reset\n          </md-button>\n          <md-button\n            class="md-raised md-warn float-right"\n            ng-if="$ctrl.hasPermissionForCurrentScope(\'alert-d\') && $ctrl.updateMode"\n            ng-disabled="$ctrl.status.available_plugins === 0"\n            type="button"\n            ng-click="$ctrl.delete()"\n          >\n            Delete\n          </md-button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<a\n  style="margin-top: 5px; margin-bottom: 5px"\n  ng-click="$ctrl.addNotification()"\n  style="font-style: italic"\n  ng-if="!$ctrl.parent.isReadonly()"\n  >> Add a notification</a\n>\n\n<gv-alert-notification\n  ng-repeat="notification in $ctrl.alert.notifications"\n  notification="notification"\n  on-notification-remove="$ctrl.removeNotification($index)"\n  is-readonly="$ctrl.parent.isReadonly()"\n>\n</gv-alert-notification>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-form">\n  <h2 layout="row">\n    Notification\n    <ng-md-icon\n      icon="cancel"\n      style="top: 5px; margin-right: 10px; fill: grey"\n      size="20px"\n      ng-click="$ctrl.remove()"\n      ng-if="!$ctrl.isReadonly"\n    ></ng-md-icon>\n  </h2>\n  <div class="gv-form-content" layout="column">\n    <md-input-container class="md-block" flex-gt-xs>\n      <label>Channel</label>\n      <md-select\n        ng-model="$ctrl.notification.type"\n        placeholder="Channel"\n        required\n        ng-change="$ctrl.onNotifierChange()"\n        ng-disabled="$ctrl.isReadonly"\n      >\n        <md-option ng-repeat="type in $ctrl.parent.parent.notifiers" ng-value="type.id">{{type.name}}</md-option>\n      </md-select>\n    </md-input-container>\n\n    <form\n      style="width: 100%"\n      name="notificationConfigurationForm"\n      sf-schema="$ctrl.notifierJsonSchema"\n      sf-form="$ctrl.notifierJsonSchemaForm"\n      sf-model="$ctrl.notification.configuration"\n      sf-options="{ validateOnRender: true, formDefaults: { startEmpty: true } }"\n      novalidate\n    ></form>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div class="gv-form">\n  <div class="gv-forms-header">\n    <h2>History</h2>\n    <div class="ipsum">History of events for this alert</div>\n    <md-button class="md-raised" ng-click="$ctrl.search()"> Refresh </md-button>\n  </div>\n\n  <div class="gv-form-content" layout="column">\n    <md-table-container>\n      <table md-table>\n        <thead md-head>\n          <tr md-row>\n            <th md-column>Date</th>\n            <th md-column>Message</th>\n          </tr>\n        </thead>\n        <tbody md-body>\n          <tr md-row ng-repeat="event in $ctrl.events.content" style="height: 25px">\n            <td md-cell>\n              <span\n                >{{event.created_at | humanDatetimeFilter }}\n                <md-tooltip>{{ event.created_at | date:\'medium\' }}</md-tooltip>\n              </span>\n            </td>\n            <td md-cell>{{event.message}}</td>\n          </tr>\n          <tr ng-if="$ctrl.events.content.length === 0">\n            <td md-cell colspan="2">No event</td>\n          </tr>\n        </tbody>\n      </table>\n    </md-table-container>\n    <md-table-pagination\n      md-limit="$ctrl.query.limit"\n      md-limit-options="[10, 25, 50, 75, 100]"\n      md-page="$ctrl.query.page"\n      md-total="{{$ctrl.events.totalElements}}"\n      md-on-limit="$ctrl.search"\n      md-on-paginate="$ctrl.search"\n      md-page-select\n    ></md-table-pagination>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div class="gv-form">\n  <div class="gv-forms-header">\n    <h2>Dampening</h2>\n    <div class="ipsum">Allows you to limit the number of notifications if the trigger is fired multiple times for the same condition</div>\n  </div>\n\n  <div class="gv-form-content" layout="column">\n    <md-input-container class="md-block">\n      <label>Mode</label>\n      <md-select ng-model="$ctrl.dampening.mode" required ng-change="$ctrl.onModeChange()" ng-disabled="$ctrl.parent.isReadonly()">\n        <md-option ng-value="mode.type" ng-repeat="mode in $ctrl.modes"> {{::mode.description}} </md-option>\n      </md-select>\n      <div class="hint">Select the most appropriate dampening mode for this alert.</div>\n    </md-input-container>\n\n    <div layout="column" ng-switch="$ctrl.dampening.mode">\n      \x3c!-- STRICT_COUNT --\x3e\n      <div ng-switch-when="STRICT_COUNT">\n        <md-input-container class="md-block" flex-gt-sm flex="30">\n          <label>Number of true evaluations</label>\n          <input\n            ng-model="$ctrl.dampening.trueEvaluations"\n            required\n            type="number"\n            min="1"\n            max="100"\n            name="dampening.trueevaluations"\n            aria-label="dampening true evaluations"\n            ng-disabled="$ctrl.parent.isReadonly()"\n          />\n          <div class="hint">The number of consecutive true evaluations.</div>\n          <div ng-messages="$ctrl.parent.formAlert[\'dampening.trueevaluations\'].$error">\n            <div ng-message="required">Number of true evaluations is required.</div>\n            <div ng-message="min">Number of true evaluations must be higher or equals to 1.</div>\n          </div>\n        </md-input-container>\n      </div>\n\n      \x3c!-- RELAXED_COUNT --\x3e\n      <div ng-switch-when="RELAXED_COUNT" layout="row">\n        <md-input-container class="md-block" flex-gt-sm flex="30">\n          <label>Number of true evaluations</label>\n          <input\n            ng-model="$ctrl.dampening.trueEvaluations"\n            required\n            type="number"\n            min="1"\n            max="100"\n            name="dampening.trueevaluations"\n            aria-label="dampening true evaluations"\n            ng-disabled="$ctrl.parent.isReadonly()"\n          />\n          <div class="hint">The number of true evaluations.</div>\n          <div ng-messages="$ctrl.parent.formAlert[\'dampening.trueevaluations\'].$error">\n            <div ng-message="required">Number of true evaluations is required.</div>\n            <div ng-message="min">Number of true evaluations must be higher or equals to 1.</div>\n          </div>\n        </md-input-container>\n\n        <span flex="10" style="display: grid; align-items: center" align="center"> of </span>\n\n        <md-input-container class="md-block" flex-gt-sm flex="30">\n          <label>Number of total evaluations</label>\n          <input\n            ng-model="$ctrl.dampening.totalEvaluations"\n            required\n            type="number"\n            min="{{$ctrl.dampening.trueEvaluations}}"\n            max="100"\n            name="dampening.totalevaluations"\n            aria-label="dampening total evaluations"\n            ng-disabled="$ctrl.parent.isReadonly()"\n          />\n          <div class="hint">The number of total evaluations.</div>\n          <div ng-messages="$ctrl.parent.formAlert[\'dampening.totalevaluations\'].$error">\n            <div ng-message="required">Number of total evaluations is required.</div>\n            <div ng-message="min">Number of total evaluations must be higher than the number of true evaluations.</div>\n          </div>\n        </md-input-container>\n      </div>\n\n      \x3c!-- STRICT_TIME --\x3e\n      <div ng-switch-when="STRICT_TIME" layout="row">\n        <md-input-container class="md-block" flex-gt-sm flex="10">\n          <label>Duration</label>\n          <input\n            ng-model="$ctrl.dampening.duration"\n            required\n            type="number"\n            min="1"\n            max="100"\n            name="dampening.duration"\n            aria-label="dampening duration"\n            ng-disabled="$ctrl.parent.isReadonly()"\n          />\n          <div ng-messages="$ctrl.parent.formAlert[\'dampening.duration\'].$error">\n            <div ng-message="required">Number of true evaluations is required.</div>\n            <div ng-message="min">Number of true evaluations must be higher or equals to 1.</div>\n          </div>\n        </md-input-container>\n\n        <md-input-container class="md-block" flex-gt-sm flex="15">\n          <label>TimeUnit</label>\n          <md-select ng-model="$ctrl.dampening.timeUnit" required ng-disabled="$ctrl.parent.isReadonly()">\n            <md-option ng-value="unit.key" ng-repeat="unit in $ctrl.timeUnits"> {{::unit.name}} </md-option>\n          </md-select>\n        </md-input-container>\n      </div>\n\n      \x3c!-- RELAXED_TIME --\x3e\n      <div ng-switch-when="RELAXED_TIME" layout="row">\n        <md-input-container class="md-block" flex-gt-sm flex="30">\n          <label>Number of true evaluations</label>\n          <input\n            ng-model="$ctrl.dampening.trueEvaluations"\n            required\n            type="number"\n            min="1"\n            max="100"\n            name="dampening.trueevaluations"\n            aria-label="dampening true evaluations"\n            ng-disabled="$ctrl.parent.isReadonly()"\n          />\n          <div class="hint">The number of true evaluations.</div>\n          <div ng-messages="$ctrl.parent.formAlert[\'dampening.trueevaluations\'].$error">\n            <div ng-message="required">Number of true evaluations is required.</div>\n            <div ng-message="min">Number of true evaluations must be higher or equals to 1.</div>\n          </div>\n        </md-input-container>\n\n        <span flex="10" style="display: grid; align-items: center" align="center"> for </span>\n\n        <md-input-container class="md-block" flex-gt-sm flex="10">\n          <label>Duration</label>\n          <input\n            ng-model="$ctrl.dampening.duration"\n            required\n            type="number"\n            min="1"\n            max="100"\n            name="dampening.duration"\n            aria-label="dampening duration"\n            ng-disabled="$ctrl.parent.isReadonly()"\n          />\n          <div ng-messages="$ctrl.parent.formAlert[\'dampening.duration\'].$error">\n            <div ng-message="required">Number of true evaluations is required.</div>\n            <div ng-message="min">Number of true evaluations must be higher or equals to 1.</div>\n          </div>\n        </md-input-container>\n\n        <md-input-container class="md-block" flex-gt-sm flex="15">\n          <label>TimeUnit</label>\n          <md-select ng-model="$ctrl.dampening.timeUnit" required ng-disabled="$ctrl.parent.isReadonly()">\n            <md-option ng-value="unit.key" ng-repeat="unit in $ctrl.timeUnits"> {{::unit.name}} </md-option>\n          </md-select>\n        </md-input-container>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\x3c!--\n<div class="gv-forms-header">\n  <h3>Duration</h3>\n  <div class="ipsum">Accumulate events during a given time-window</div>\n</div>\n--\x3e\n\n<div layout="row">\n  <span flex="15" style="display: grid; align-items: center" align="center">{{$ctrl.label ? $ctrl.label :\'For\'}}</span>\n\n  <md-input-container class="md-block" flex-gt-sm flex="10">\n    <label>Duration</label>\n    <input\n      ng-model="$ctrl.condition.duration"\n      required\n      type="number"\n      min="1"\n      name="window-duration"\n      aria-label="trigger time-window duration"\n      ng-disabled="$ctrl.isReadonly"\n    />\n    <div ng-messages="$ctrl.formAlert[\'window-duration\'].$error">\n      <div ng-message="required">Duration is required.</div>\n      <div ng-message="min">Duration must be higher than 0.</div>\n    </div>\n  </md-input-container>\n\n  <md-input-container class="md-block" flex-gt-sm flex="15">\n    <label>TimeUnit</label>\n    <md-select ng-model="$ctrl.condition.timeUnit" required ng-disabled="$ctrl.isReadonly">\n      <md-option ng-value="unit.key" ng-repeat="unit in $ctrl.timeUnits"> {{::unit.name}} </md-option>\n    </md-select>\n  </md-input-container>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms-header">\n  <h3>Filters</h3>\n  <div class="ipsum">Filters to apply condition only on a subset of events</div>\n</div>\n\n<div class="gv-form-content" layout="column">\n  <div style="margin-bottom: 5px" ng-if="$ctrl.alert.filters === undefined || $ctrl.alert.filters.length === 0">\n    <span style="font-style: italic">Filters allow you to apply conditions only on a subset of events.</span>\n    <br />\n  </div>\n\n  <a style="margin-bottom: 5px" ng-click="$ctrl.addFilter()" style="font-style: italic" ng-if="!$ctrl.isReadonly">> Add a filter</a>\n\n  <gv-alert-trigger-filter\n    alert="$ctrl.alert"\n    ng-repeat="condition in $ctrl.alert.filters"\n    condition="condition"\n    on-filter-remove="$ctrl.removeFilter($index)"\n    is-readonly="$ctrl.isReadonly"\n  >\n    ></gv-alert-trigger-filter\n  >\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div class="gv-form-content" layout="row" style="margin-bottom: 3px">\n  <div flex="5" layout="row" layout-align="center center" style="border-right: 1px solid lightgrey; margin-right: 10px">\n    <ng-md-icon icon="close" style="fill: grey" size="20px" ng-click="$ctrl.deleteFilter()" ng-if="!$ctrl.isReadonly"></ng-md-icon>\n  </div>\n  <gv-alert-trigger-condition\n    condition="$ctrl.condition"\n    metrics="$ctrl.metrics"\n    label="false"\n    flex\n    is-readonly="$ctrl.isReadonly"\n  ></gv-alert-trigger-condition>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div layout-gt-sm="row">\n  <span ng-if="$ctrl.label === undefined || $ctrl.label === true" flex="15" style="display: grid; align-items: center" align="center"\n    >When</span\n  >\n\n  <md-input-container class="md-block" flex-gt-sm flex="15">\n    <label>Metrics</label>\n    <md-select ng-model="$ctrl.condition.property" required ng-change="$ctrl.onMetricsChange(true)" ng-disabled="$ctrl.isReadonly">\n      <md-option ng-value="type.key" ng-repeat="type in $ctrl.metrics"> {{::type.name}} </md-option>\n    </md-select>\n  </md-input-container>\n\n  <span flex="5">&nbsp;</span>\n\n  <md-input-container class="md-block" flex-gt-sm flex="15">\n    <label>Type</label>\n    <md-select ng-model="$ctrl.condition.type" required ng-change="$ctrl.onConditionChange()" ng-disabled="$ctrl.isReadonly">\n      <md-option ng-value="type" ng-repeat="type in $ctrl.conditions"> {{::type | lowercase}} </md-option>\n    </md-select>\n  </md-input-container>\n\n  <div ng-if="$ctrl.operators.length > 1" layout="row">\n    <span flex="5">&nbsp;</span>\n\n    <md-input-container class="md-block" flex-gt-sm>\n      <label>Operator</label>\n      <md-select ng-model="$ctrl.condition.operator" required ng-disabled="$ctrl.isReadonly">\n        <md-option ng-value="operator.key" ng-repeat="operator in $ctrl.operators"> {{::operator.name}} </md-option>\n      </md-select>\n    </md-input-container>\n  </div>\n\n  <span flex="5">&nbsp;</span>\n\n  <div ng-if="$ctrl.condition.operator && $ctrl.condition.type" ng-switch="$ctrl.condition.type" flex>\n    <gv-alert-trigger-condition-threshold\n      ng-switch-when="THRESHOLD"\n      condition="$ctrl.condition"\n      is-readonly="$ctrl.isReadonly"\n    ></gv-alert-trigger-condition-threshold>\n    <gv-alert-trigger-condition-threshold-range\n      ng-switch-when="THRESHOLD_RANGE"\n      condition="$ctrl.condition"\n      is-readonly="$ctrl.isReadonly"\n    ></gv-alert-trigger-condition-threshold-range>\n    <gv-alert-trigger-condition-string\n      ng-switch-when="STRING"\n      metrics="$ctrl.metrics"\n      condition="$ctrl.condition"\n      is-readonly="$ctrl.isReadonly"\n    ></gv-alert-trigger-condition-string>\n    <gv-alert-trigger-condition-compare\n      ng-switch-when="COMPARE"\n      metrics="$ctrl.metrics"\n      condition="$ctrl.condition"\n      is-readonly="$ctrl.isReadonly"\n    ></gv-alert-trigger-condition-compare>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<md-input-container class="md-block" flex="30">\n  <label>Threshold</label>\n  <input\n    ng-model="$ctrl.condition.threshold"\n    required\n    type="number"\n    min="1"\n    name="threshold"\n    aria-label="trigger threshold"\n    ng-disabled="$ctrl.isReadonly"\n  />\n  \x3c!--\n  <div class="hint">\n    The threshold value to compare to.\n  </div>\n  --\x3e\n  <div ng-messages="$ctrl.formAlert.threshold.$error">\n    <div ng-message="required">Threshold is required.</div>\n    <div ng-message="min">Threshold must be higher than 0.</div>\n  </div>\n</md-input-container>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div layout="row">\n  <md-input-container>\n    <label>Low threshold</label>\n    <input\n      ng-model="$ctrl.condition.thresholdLow"\n      required\n      type="number"\n      min="1"\n      name="thresholdLow"\n      aria-label="trigger threshold low"\n      ng-disabled="$ctrl.isReadonly"\n    />\n    \x3c!--\n    <div class="hint">\n      The low threshold value.\n    </div>\n    --\x3e\n    <div ng-messages="$ctrl.formAlert.thresholdLow.$error">\n      <div ng-message="required">Threshold is required.</div>\n      <div ng-message="min">Threshold must be higher than 0.</div>\n    </div>\n  </md-input-container>\n\n  <span flex="10" style="display: grid; align-items: center" align="center"> and </span>\n\n  <md-input-container>\n    <label>High threshold</label>\n    <input\n      ng-model="$ctrl.condition.thresholdHigh"\n      required\n      type="number"\n      min="{{$ctrl.condition.thresholdLow}}"\n      name="thresholdHigh"\n      aria-label="trigger threshold high"\n      ng-disabled="$ctrl.isReadonly"\n    />\n    \x3c!--\n    <div class="hint">\n      The high threshold value.\n    </div>\n    --\x3e\n    <div ng-messages="$ctrl.formAlert.thresholdHigh.$error">\n      <div ng-message="required">Threshold is required.</div>\n      <div ng-message="min">Threshold must be higher than 0.</div>\n    </div>\n  </md-input-container>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<md-input-container class="md-block" ng-if="!$ctrl.displaySelect()">\n  <label>Pattern</label>\n  <input\n    ng-model="$ctrl.condition.pattern"\n    required\n    type="text"\n    name="condition-string-value"\n    aria-label="string value condition"\n    ng-disabled="$ctrl.isReadonly"\n  />\n  \x3c!--\n  <div class="hint">\n    The pattern value to compare to.\n  </div>\n  --\x3e\n  <div ng-messages="$ctrl.formAlert[\'condition-string-value\'].$error">\n    <div ng-message="required">Pattern is required.</div>\n  </div>\n</md-input-container>\n\n<md-input-container class="md-block" ng-if="$ctrl.displaySelect()">\n  <label>Value</label>\n  <md-select ng-model="$ctrl.condition.pattern" required ng-disabled="$ctrl.isReadonly">\n    <md-option ng-value="type.key" ng-repeat="type in $ctrl.values"> {{::type.value}} </md-option>\n  </md-select>\n  \x3c!--\n  <div class="hint">\n    Select the value to compare to.\n  </div>\n  --\x3e\n</md-input-container>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div layout="row">\n  <md-input-container class="md-block" flex-gt-sm flex="30">\n    <label>Multiplier</label>\n    <input\n      ng-model="$ctrl.condition.multiplier"\n      required\n      type="number"\n      min="1"\n      name="condition-compare-multiplier"\n      aria-label="compare multiplier"\n      ng-disabled="$ctrl.isReadonly"\n    />\n    <div ng-messages="$ctrl.formAlert[\'condition-compare-multiplier\'].$error">\n      <div ng-message="required">Multiplier is required.</div>\n      <div ng-message="min">Multiplier must be higher than 0.</div>\n    </div>\n  </md-input-container>\n\n  <md-input-container class="md-block" flex-gt-sm flex="30">\n    <label>Property</label>\n    <md-select\n      ng-model="$ctrl.condition.property2"\n      required\n      name="condition-compare-property"\n      aria-label="compare property"\n      ng-disabled="$ctrl.isReadonly"\n    >\n      <md-option ng-value="type.key" ng-repeat="type in $ctrl.metrics"> {{::type.name}} </md-option>\n    </md-select>\n    <div ng-messages="$ctrl.formAlert[\'condition-compare-property\'].$error">\n      <div ng-message="required">Property is required.</div>\n    </div>\n  </md-input-container>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gv-alert-trigger-condition\n  condition="$ctrl.alert.conditions[0]"\n  metrics="$ctrl.metrics"\n  is-readonly="$ctrl.parent.isReadonly()"\n></gv-alert-trigger-condition>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div layout-gt-sm="row">\n  <span flex="15" style="display: grid; align-items: center" align="center">Calculate</span>\n\n  <md-input-container class="md-block" flex-gt-sm flex="20">\n    <label>Function</label>\n    <md-select ng-model="$ctrl.alert.conditions[0].function" required ng-disabled="$ctrl.parent.isReadonly()">\n      <md-option ng-value="type.key" ng-repeat="type in $ctrl.functions"> {{::type.name}} </md-option>\n    </md-select>\n  </md-input-container>\n\n  <span flex="5" style="display: grid; align-items: center" align="center" ng-if="$ctrl.alert.conditions[0].function !== \'count\'">on</span>\n\n  <md-input-container class="md-block" flex-gt-sm flex="20" ng-if="$ctrl.alert.conditions[0].function !== \'count\'">\n    <label>Metric</label>\n    <md-select ng-model="$ctrl.alert.conditions[0].property" required ng-disabled="$ctrl.parent.isReadonly()">\n      <md-option ng-value="type.key" ng-repeat="type in $ctrl.metrics"> {{::type.name}} </md-option>\n    </md-select>\n  </md-input-container>\n</div>\n\n<div layout-gt-sm="row">\n  <span flex="15" style="display: grid; align-items: center" align="center">If result is</span>\n\n  <md-input-container class="md-block" flex-gt-sm flex="20">\n    <label>Operator</label>\n    <md-select ng-model="$ctrl.alert.conditions[0].operator" required ng-disabled="$ctrl.parent.isReadonly()">\n      <md-option ng-value="type.key" ng-repeat="type in $ctrl.operators"> {{::type.name}} </md-option>\n    </md-select>\n  </md-input-container>\n\n  <span flex="5">&nbsp;</span>\n\n  <md-input-container class="md-block" flex-gt-sm flex="15">\n    <label>Threshold</label>\n    <input\n      ng-model="$ctrl.alert.conditions[0].threshold"\n      required\n      type="number"\n      min="1"\n      name="threshold"\n      aria-label="trigger threshold"\n      ng-disabled="$ctrl.parent.isReadonly()"\n    />\n    <div ng-messages="$ctrl.parent.formAlert.threshold.$error">\n      <div ng-message="required">Threshold is required.</div>\n      <div ng-message="min">Threshold must be higher than 0.</div>\n    </div>\n  </md-input-container>\n</div>\n\n<gv-alert-trigger-window condition="$ctrl.alert.conditions[0]" is-readonly="$ctrl.parent.isReadonly()"></gv-alert-trigger-window>\n\n\x3c!-- Additional projections --\x3e\n<gv-alert-trigger-projections\n  condition="$ctrl.alert.conditions[0]"\n  alert="$ctrl.alert"\n  is-readonly="$ctrl.parent.isReadonly()"\n></gv-alert-trigger-projections>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gv-alert-trigger-window\n  label="\'No event for\'"\n  condition="$ctrl.alert.conditions[0]"\n  is-readonly="$ctrl.parent.isReadonly()"\n></gv-alert-trigger-window>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gv-alert-trigger-condition\n  condition="$ctrl.alert.conditions[0].comparison"\n  metrics="$ctrl.metrics"\n  is-readonly="$ctrl.parent.isReadonly()"\n></gv-alert-trigger-condition>\n\n<div layout-gt-sm="row">\n  <span flex="15" style="display: grid; align-items: center" align="center">If rate is</span>\n\n  <md-input-container class="md-block" flex-gt-sm flex="20">\n    <label>Operator</label>\n    <md-select ng-model="$ctrl.alert.conditions[0].operator" required ng-disabled="$ctrl.parent.isReadonly()">\n      <md-option ng-value="type.key" ng-repeat="type in $ctrl.operators"> {{::type.name}} </md-option>\n    </md-select>\n  </md-input-container>\n\n  <span flex="5">&nbsp;</span>\n\n  <md-input-container class="md-block" flex-gt-sm flex="15">\n    <label>Threshold (%)</label>\n    <input\n      ng-model="$ctrl.alert.conditions[0].threshold"\n      required\n      type="number"\n      min="1"\n      max="99"\n      name="threshold"\n      aria-label="trigger threshold"\n      ng-disabled="$ctrl.parent.isReadonly()"\n    />\n    <div ng-messages="$ctrl.parent.formAlert.threshold.$error">\n      <div ng-message="required">Threshold is required.</div>\n      <div ng-message="min">Threshold must be higher than 0.</div>\n      <div ng-message="max">Threshold must be lower than 100.</div>\n    </div>\n  </md-input-container>\n</div>\n\n<gv-alert-trigger-window condition="$ctrl.alert.conditions[0]" is-readonly="$ctrl.parent.isReadonly()"></gv-alert-trigger-window>\n\n\x3c!-- Additional projections --\x3e\n<gv-alert-trigger-projections\n  condition="$ctrl.alert.conditions[0]"\n  alert="$ctrl.alert"\n  is-readonly="$ctrl.parent.isReadonly()"\n></gv-alert-trigger-projections>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<span style="font-style: italic">This rule does not require any configuration.</span>\n<span style="font-style: italic"\n  >However, it is possible to define an aggregation to receive an alert per api endpoint instead of an unique alert in case multiple\n  endpoints are concerned</span\n>\n\n\x3c!-- Additional projections --\x3e\n<gv-alert-trigger-projections\n  condition="$ctrl.alert.conditions[0]"\n  alert="$ctrl.alert"\n  is-readonly="$ctrl.parent.isReadonly()"\n></gv-alert-trigger-projections>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<span style="font-style: italic">This rule does not require any configuration.</span>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<span style="font-style: italic">This rule does not require any configuration.</span>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div layout-gt-sm="row">\n  <span ng-if="$ctrl.label === undefined || $ctrl.label === true" flex="15" style="display: grid; align-items: center" align="center"\n    >When quota reaches\n  </span>\n\n  <md-input-container class="md-block" flex="5">\n    <input\n      ng-model="$ctrl.threshold"\n      required\n      type="number"\n      min="1"\n      max="100"\n      name="threshold"\n      aria-label="trigger threshold"\n      ng-change="$ctrl.calculateMultiplier()"\n      ng-disabled="$ctrl.parent.isReadonly()"\n    />\n    <div ng-messages="$ctrl.parent.formAlert.threshold.$error">\n      <div ng-message="required">Threshold is required.</div>\n      <div ng-message="min">Threshold must be higher than 0.</div>\n      <div ng-message="max">Threshold must be lower than 100.</div>\n    </div>\n  </md-input-container>\n\n  <span\n    ng-if="$ctrl.label === undefined || $ctrl.label === true"\n    flex\n    style="margin-left: 10px; display: grid; align-items: center; text-align: left"\n    align="center"\n  >\n    % of the limit fixed by the API\'s plan.</span\n  >\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms-header">\n  <h3>Aggregation</h3>\n  <div class="ipsum">Projection to apply to the condition</div>\n</div>\n\n<div class="gv-form-content" layout="column">\n  <div style="margin-bottom: 5px" ng-if="$ctrl.condition.projections === undefined || $ctrl.condition.projections.length === 0">\n    <span style="font-style: italic">Aggregation allow you to group results based on a property</span>\n    <br />\n  </div>\n\n  <a\n    style="margin-bottom: 5px"\n    ng-if="!$ctrl.isReadonly && ($ctrl.condition.projections === undefined || $ctrl.condition.projections.length < 1)"\n    ng-click="$ctrl.addProjection()"\n    style="font-style: italic"\n    >> Set a projection</a\n  >\n\n  <gv-alert-trigger-projection\n    alert="$ctrl.alert"\n    ng-repeat="projection in $ctrl.condition.projections"\n    projection="projection"\n    on-projection-remove="$ctrl.removeProjection($index)"\n    is-readonly="$ctrl.isReadonly"\n  >\n    ></gv-alert-trigger-projection\n  >\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div class="gv-form-content" layout="row" style="margin-bottom: 3px">\n  <div\n    flex="5"\n    layout="row"\n    layout-align="center center"\n    style="border-right: 1px solid lightgrey; margin-right: 10px"\n    ng-if="!$ctrl.isReadonly"\n  >\n    <ng-md-icon icon="close" style="fill: grey" size="20px" ng-click="$ctrl.deleteProjection()"></ng-md-icon>\n  </div>\n\n  <div layout-gt-sm="row" flex="30">\n    <md-input-container class="md-block" flex-gt-sm flex="50">\n      <label>Property</label>\n      <md-select ng-model="$ctrl.projection.property" required ng-disabled="$ctrl.isReadonly">\n        <md-option ng-value="type.key" ng-repeat="type in $ctrl.metrics"> {{::type.name}} </md-option>\n      </md-select>\n    </md-input-container>\n  </div>\n</div>\n'},,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms-header">\n  <h3>Timeframe</h3>\n  <div class="ipsum">Timeframe when notifications should be sent</div>\n</div>\n\n<div class="gv-form-content" layout="column">\n  <div ng-repeat="period in $ctrl.alert.notificationPeriods" layout-gt-sm="row">\n    <div flex="90">\n      Every <code>{{$ctrl.getDayNames(period)}}</code>\n      <span ng-if="$ctrl.isRange(period)"\n        >from <code>{{$ctrl.formatPeriod(period.beginHour)}}</code> to <code>{{$ctrl.formatPeriod(period.endHour)}}</code>\n        [<code>{{period.zoneId}}</code>]\n      </span>\n      <span ng-if="$ctrl.isTime(period)">\n        at <code>{{$ctrl.formatPeriod(period.beginHour)}}</code>\n        [<code>{{period.zoneId}}</code>]\n      </span>\n    </div>\n    <gv-button icon="general:rename" ng-click="$ctrl.edit($index)" small outlined primary>Edit</gv-button>\n    <gv-button icon="general:trash" ng-click="$ctrl.remove($index)" small outlined danger>Remove</gv-button>\n  </div>\n\n  <div ng-if="$ctrl.alert.notificationPeriods.length === 0">No timeframe defined, it will send all the time.</div>\n\n  <gv-expandable\n    ng-open="open"\n    ng-on-gv-row-expandable:toggle="$ctrl.onToggleForm($event)"\n    class="gv-trigger-timeframe_form"\n    title="Add a timeframe"\n  >\n    <div slot="summary">Add a timeframe</div>\n    <div slot="details" ng-form name="timeframe" class="gv-trigger-timeframe_form-details">\n      <div layout-gt-sm="row" layout-align="space-between center">\n        <md-input-container flex="65">\n          <label>Days</label>\n          <md-select ng-required="open" ng-model="timeframe.days" multiple>\n            <md-option ng-repeat="day in $ctrl.days" ng-value="day"> {{day}} </md-option>\n          </md-select>\n        </md-input-container>\n\n        <gv-switch\n          ng-model="timeframe.businessDays"\n          gv-model\n          flex="30"\n          aria-label="Business day"\n          label="Business day"\n          description="Set any day except weekend"\n        >\n        </gv-switch>\n      </div>\n      <div layout-gt-sm="row" layout-align="space-between center">\n        <div flex="65">\n          <gv-date-picker label="Time range" time strict range gv-model ng-model="timeframe.range"></gv-date-picker>\n        </div>\n        <gv-switch\n          ng-model="timeframe.officeHours"\n          gv-model\n          flex="30"\n          aria-label="Office hours"\n          label="Office hours"\n          ng-attr-description="{{$ctrl.getOfficeHoursDescription()}}"\n        >\n        </gv-switch>\n      </div>\n      <div layout-gt-sm="row" layout-align="end end">\n        <gv-button icon="code:plus" outlined ng-click="$ctrl.add(timeframe)" small ng-disabled="timeframe.$invalid">Add </gv-button>\n      </div>\n    </div>\n  </gv-expandable>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<svg viewBox="0 0 36 36" class="circular-chart" ng-class="$ctrl.qualityMetricCssClass">\n  <path\n    class="circle-bg"\n    d="M18 2.0845\n            a 15.9155 15.9155 0 0 1 0 31.831\n            a 15.9155 15.9155 0 0 1 0 -31.831"\n  />\n  <path\n    class="circle"\n    stroke-dasharray="{{$ctrl.percentageCircle}}, 100"\n    d="M18 2.0845\n            a 15.9155 15.9155 0 0 1 0 31.831\n            a 15.9155 15.9155 0 0 1 0 -31.831"\n  />\n  <text x="18" y="21.80" class="percentage">{{$ctrl.getScore()}}%</text>\n</svg>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms" layout="column">\n  <h1>Analytics</h1>\n  <h2>Dashboards</h2>\n  <div class="gv-form" ng-repeat="(type, dashboards) in $ctrl.dashboardsByType">\n    <h3>{{type}}</h3>\n    <div class="gv-form-content" layout="column">\n      <md-table-container ng-if="dashboards.length > 0">\n        <table md-table class="gv-table-dense">\n          <thead md-head>\n            <tr md-row>\n              <th md-column class="column-with-logo">Name</th>\n              <th permission permission-only="\'environment-dashboard-u\'" width="64px" nowrap></th>\n              <th permission permission-only="\'environment-dashboard-u\'" width="48px" nowrap></th>\n              <th permission permission-only="\'environment-dashboard-u\'" width="48px" nowrap></th>\n              <th permission permission-only="\'environment-dashboard-d\'" width="48px" nowrap></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="dashboard in dashboards">\n              <td md-cell permission permission-only="\'environment-dashboard-u\'">\n                <a\n                  ng-style="dashboard.enabled?\'\':{\'font-style\': \'italic\', \'color\': \'grey\'}"\n                  ui-sref="management.settings.analytics.dashboard({type: type, dashboardId: dashboard.id})"\n                  >{{dashboard.name}}</a\n                >\n              </td>\n              <td md-cell permission permission-except="\'environment-dashboard-u\'">\n                <span ng-style="dashboard.enabled?\'\':{\'font-style\': \'italic\', \'color\': \'grey\'}">{{dashboard.name}}</span>\n              </td>\n              <td md-cell width="48px">\n                <ng-md-icon\n                  ng-if="!dashboard.enabled"\n                  icon="not_interested"\n                  ng-click="$ctrl.toggleEnable(dashboard)"\n                  style="font-size: 24px; height: 24px"\n                  permission\n                  permission-only="\'environment-dashboard-u\'"\n                >\n                  <md-tooltip md-direction="top" md-visible="false">Enable this dashboard</md-tooltip>\n                </ng-md-icon>\n                <ng-md-icon\n                  ng-if="dashboard.enabled"\n                  icon="done"\n                  ng-click="$ctrl.toggleEnable(dashboard)"\n                  style="font-size: 24px; height: 24px"\n                  permission\n                  permission-only="\'environment-dashboard-u\'"\n                >\n                  <md-tooltip md-direction="top" md-visible="false">Disable this dashboard</md-tooltip>\n                </ng-md-icon>\n              </td>\n              <td md-cell permission permission-only="\'environment-dashboard-u\'" width="76px" nowrap>\n                <ng-md-icon ng-if="!$first" icon="arrow_upwards" ng-click="$ctrl.upward(dashboard)">\n                  <md-tooltip md-direction="top" md-visible="false">Move upward</md-tooltip>\n                </ng-md-icon>\n                <span ng-if="$first" style="padding-right: 28px"></span>\n                <ng-md-icon ng-if="!$last" icon="arrow_downward" ng-click="$ctrl.downward(dashboard)">\n                  <md-tooltip md-direction="top" md-visible="false">Move downward</md-tooltip>\n                </ng-md-icon>\n              </td>\n              <td md-cell permission permission-only="\'environment-dashboard-d\'">\n                <ng-md-icon icon="delete" ng-click="$ctrl.delete(dashboard)"></ng-md-icon>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n      <gravitee-empty-state\n        ng-if="dashboards.length === 0"\n        icon="insert_chart"\n        model="Dashboard"\n        message="Dashboards will appear here"\n        sub-message="Start creating a dashboard"\n        create-mode="true"\n      ></gravitee-empty-state>\n      <div class="md-actions gravitee-api-save-button" layout="row">\n        <md-button\n          permission\n          permission-only="\'environment-dashboard-c\'"\n          aria-label="Add {{type}} dashboard"\n          ui-sref="management.settings.analytics.dashboardnew({type: type})"\n          class="md-raised md-primary"\n        >\n          Add a new {{type}} dashboard\n        </md-button>\n      </div>\n    </div>\n  </div>\n  <h2>Settings</h2>\n  <div class="gv-form">\n    <form name="$ctrl.formSettings" class="gv-form-content" layout="column" ng-submit="$ctrl.save()">\n      <md-input-container class="md-block" flex-gt-sm>\n        <label>HTTP Client Timeout</label>\n        <input\n          type="number"\n          min="0"\n          ng-model="$ctrl.settings.analytics.clientTimeout"\n          ng-disabled="$ctrl.isReadonlySetting(\'analytics.client.timeout\')"\n        />\n        <md-tooltip ng-if="$ctrl.isReadonlySetting(\'analytics.client.timeout\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n      </md-input-container>\n\n      <md-card-actions>\n        <md-button\n          type="submit"\n          class="md-raised md-primary"\n          ng-disabled="$ctrl.formSettings.$invalid || $ctrl.formSettings.$pristine"\n          permission\n          permission-only="[\'environment-settings-c\', \'environment-settings-u\', \'environment-settings-d\']"\n          >Save</md-button\n        >\n        <md-button\n          type="button"\n          class="md-raised"\n          ng-click="$ctrl.reset()"\n          ng-disabled="$ctrl.formSettings.$invalid || $ctrl.formSettings.$pristine"\n          permission\n          permission-only="[\'environment-settings-c\', \'environment-settings-u\', \'environment-settings-d\']"\n          >Reset</md-button\n        >\n      </md-card-actions>\n    </form>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <h1>Client Registration</h1>\n\n  <div class="gv-form">\n    <h2>Configuration</h2>\n    <div class="gv-form-content" layout="column">\n      <h6>Enable Dynamic Client Registration</h6>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.application.registration.enabled"\n          aria-label="Client registration"\n          ng-change="$ctrl.saveClientRegistration()"\n          ng-disabled="$ctrl.isReadonlySetting(\'application.registration.enabled\')"\n        >\n          Client registration for applications (OpenID Connect - Dynamic Client Registration)\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'application.registration.enabled\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-checkbox>\n      </md-input-container>\n\n      <h6>Allowed application types</h6>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.application.types.simple.enabled"\n          aria-label="Allow or deny simple application type"\n          ng-change="$ctrl.saveApplicationType(\'simple\')"\n          ng-disabled="$ctrl.isReadonlySetting(\'application.types.simple.enabled\')"\n        >\n          Simple (A hands-free application. Using this type, you will be able to define the client_id by your own)\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'application.types.simple.enabled\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-checkbox>\n      </md-input-container>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.application.types.browser.enabled"\n          aria-label="Allow or deny browser application type"\n          ng-change="$ctrl.saveApplicationType(\'browser\')"\n          ng-disabled="$ctrl.isReadonlySetting(\'application.types.browser.enabled\')"\n        >\n          Browser (Angular, React, ...)\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'application.types.browser.enabled\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-checkbox>\n      </md-input-container>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.application.types.web.enabled"\n          aria-label="Allow or deny web application type"\n          ng-change="$ctrl.saveApplicationType(\'web\')"\n          ng-disabled="$ctrl.isReadonlySetting(\'application.types.web.enabled\')"\n        >\n          Web (Java, .Net, ...)\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'application.types.web.enabled\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-checkbox>\n      </md-input-container>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.application.types.native.enabled"\n          aria-label="Allow or deny native application type"\n          ng-change="$ctrl.saveApplicationType(\'native\')"\n          ng-disabled="$ctrl.isReadonlySetting(\'application.types.native.enabled\')"\n        >\n          Native (iOS, Android, ...)\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'application.types.native.enabled\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-checkbox>\n      </md-input-container>\n      <md-input-container class="gv-input-container-dense">\n        <md-checkbox\n          ng-model="$ctrl.settings.application.types.backend_to_backend.enabled"\n          aria-label="Allow or deny machine to machine application type"\n          ng-change="$ctrl.saveApplicationType(\'backend_to_backend\')"\n          ng-disabled="$ctrl.isReadonlySetting(\'application.types.backend_to_backend.enabled\')"\n        >\n          Backend-to-Backend\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'application.types.backend_to_backend.enabled\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-checkbox>\n      </md-input-container>\n    </div>\n  </div>\n\n  <div class="gv-form">\n    <h2>Providers</h2>\n    <div class="gv-form-content" layout="column">\n      <md-table-container ng-if="$ctrl.clientRegistrationProviders.length > 0">\n        <table md-table class="gv-table-dense">\n          <thead md-head>\n            <tr md-row>\n              <th md-column>Name</th>\n              <th md-column>Description</th>\n              <th md-column>Last updated at</th>\n              <th md-column width="48px" nowrap></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="clientRegistrationProvider in $ctrl.clientRegistrationProviders | orderBy: name">\n              <td md-cell>\n                <a ng-click="$ctrl.select(clientRegistrationProvider)">{{clientRegistrationProvider.name}}</a>\n              </td>\n              <td md-cell>{{clientRegistrationProvider.description}}</td>\n              <td md-cell>{{clientRegistrationProvider.updated_at | date:\'MMM d, y h:mm:ss a\'}}</td>\n              <td md-cell width="40" nowrap>\n                <ng-md-icon\n                  permission\n                  permission-only="\'environment-client_registration_provider-d\'"\n                  icon="delete"\n                  ng-click="$ctrl.delete(clientRegistrationProvider)"\n                >\n                  <md-tooltip md-direction="top" md-visible="false">Delete</md-tooltip>\n                </ng-md-icon>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n\n      <gravitee-empty-state\n        ng-if="$ctrl.clientRegistrationProviders.length === 0"\n        icon="perm_identity"\n        model="Client Registration Provider"\n        message="Client Registration providers will appear here"\n        sub-message="Start creating a client registration provider"\n        create-mode="true"\n      ></gravitee-empty-state>\n\n      <div style="text-align: center">\n        <md-button\n          permission\n          permission-only="\'environment-client_registration_provider-c\'"\n          ng-if="$ctrl.clientRegistrationProviders.length === 0"\n          aria-label="Add client registration provider"\n          class="md-fab"\n          ng-click="$ctrl.create()"\n        >\n          <md-tooltip md-direction="top" md-visible="false">New client registration provider</md-tooltip>\n          <ng-md-icon icon="add"></ng-md-icon>\n        </md-button>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms" layout="column">\n  <div layout="row" layout-align="start end" class="gv-forms-header">\n    <h1 ng-if="$ctrl.updateMode">{{$ctrl.clientRegistrationProvider.name}}</h1>\n    <h1 ng-if="!$ctrl.updateMode">Create a new client registration provider</h1>\n    <a ui-sref="management.settings.clientregistrationproviders.list">Back to client registration providers</a>\n  </div>\n\n  <form name="formClientRegistrationProvider" ng-submit="$ctrl.update()" novalidate>\n    <div class="gv-form">\n      <h2>General</h2>\n      <div class="gv-form-content" layout="column">\n        <div layout-gt-sm="row">\n          <md-input-container class="md-block" flex-gt-sm>\n            <label>Name</label>\n            <input\n              ng-model="$ctrl.clientRegistrationProvider.name"\n              type="text"\n              name="name"\n              minlength="3"\n              md-maxlength="50"\n              required\n              autofocus\n            />\n            <div class="hint" ng-if="formClientRegistrationProvider.name.$valid || formClientRegistrationProvider.name.$pristine">\n              Client registration provider name.\n            </div>\n            <div ng-messages="formClientRegistrationProvider.name.$error">\n              <div ng-message="required">Name is required.</div>\n              <div ng-message="minlength">Name has to be more than 3 characters long.</div>\n              <div ng-message="md-maxlength">Name has to be less than 50 characters long.</div>\n            </div>\n          </md-input-container>\n        </div>\n\n        <div layout-gt-sm="row">\n          <md-input-container class="md-block" flex-gt-sm>\n            <label>Description</label>\n            <input ng-model="$ctrl.clientRegistrationProvider.description" type="text" name="description" />\n            <div\n              class="hint"\n              ng-if="formClientRegistrationProvider.description.$valid || formClientRegistrationProvider.description.$pristine"\n            >\n              Provide a description to the client registration provider\n            </div>\n          </md-input-container>\n        </div>\n      </div>\n    </div>\n\n    <div class="gv-form">\n      <h2>Configuration</h2>\n      <div class="gv-form-content" layout="column">\n        <h6>OpenID Connect - Dynamic Client Registration</h6>\n\n        <md-input-container class="md-block" flex-gt-xs>\n          <label>OpenID Connect Discovery Endpoint</label>\n          <input ng-model="$ctrl.clientRegistrationProvider.discovery_endpoint" type="url" required />\n        </md-input-container>\n\n        <md-input-container class="md-block">\n          <label>Initial Access Token Provider</label>\n          <md-select ng-model="$ctrl.clientRegistrationProvider.initial_access_token_type" required>\n            <md-option ng-value="initialAccessTokenType.value" ng-repeat="initialAccessTokenType in $ctrl.initialAccessTokenTypes">\n              {{::initialAccessTokenType.name}}\n            </md-option>\n          </md-select>\n          <div class="hint">Define the way the initial access token must be provided.</div>\n        </md-input-container>\n\n        <div ng-if="$ctrl.clientRegistrationProvider.initial_access_token_type === \'CLIENT_CREDENTIALS\'">\n          <md-input-container class="md-block" flex-gt-xs>\n            <label>Client ID</label>\n            <input ng-model="$ctrl.clientRegistrationProvider.client_id" type="text" required />\n          </md-input-container>\n\n          <md-input-container class="md-block" flex-gt-xs>\n            <label>Client Secret</label>\n            <input ng-model="$ctrl.clientRegistrationProvider.client_secret" type="text" required />\n          </md-input-container>\n\n          <md-input-container class="md-block" flex-gt-xs>\n            <label>Scopes</label>\n            <md-chips ng-model="$ctrl.clientRegistrationProvider.scopes" md-add-on-blur="true" placeholder="Add a scope"></md-chips>\n            <div class="hint">Press Enter after writing your scope to save it.</div>\n          </md-input-container>\n\n          <md-input-container class="md-block" flex-gt-xs>\n            <label>Client Template (software_id)</label>\n            <input ng-model="$ctrl.clientRegistrationProvider.software_id" type="text" />\n          </md-input-container>\n        </div>\n\n        <div ng-if="$ctrl.clientRegistrationProvider.initial_access_token_type === \'INITIAL_ACCESS_TOKEN\'">\n          <md-input-container class="md-block" flex-gt-xs>\n            <label>Initial Access Token</label>\n            <input ng-model="$ctrl.clientRegistrationProvider.initial_access_token" type="text" required />\n          </md-input-container>\n        </div>\n\n        <h6>Renew client_secret (outside DCR specification)</h6>\n        <md-input-container class="gv-input-container-dense">\n          <md-checkbox ng-model="$ctrl.clientRegistrationProvider.renew_client_secret_support" aria-label="Renew client secret support">\n            Enable renew client_secret support\n          </md-checkbox>\n        </md-input-container>\n\n        <div layout="row">\n          <md-input-container class="md-block">\n            <label>HTTP Method</label>\n            <md-select\n              ng-model="$ctrl.clientRegistrationProvider.renew_client_secret_method"\n              ng-required="$ctrl.clientRegistrationProvider.renew_client_secret_support"\n            >\n              <md-option ng-value="method" ng-repeat="method in $ctrl.renewClientSecretMethods"> {{::method}} </md-option>\n            </md-select>\n            <div class="hint">Define the HTTP method to call the renew secret endpoint</div>\n          </md-input-container>\n\n          <md-input-container class="md-block" flex-gt-xs>\n            <label>Endpoint</label>\n            <input\n              ng-model="$ctrl.clientRegistrationProvider.renew_client_secret_endpoint"\n              type="url"\n              ng-required="$ctrl.clientRegistrationProvider.renew_client_secret_support"\n            />\n            <div class="hint">\n              Provide an URL to reach the renew client secret endpoint, for example:\n              http://authorization_server/oidc/dcr/{#client_id}/renew_secret\n            </div>\n          </md-input-container>\n        </div>\n      </div>\n    </div>\n\n    <div class="md-actions gravitee-api-save-button" layout="row">\n      <md-button\n        ng-if="$ctrl.updateMode"\n        class="md-raised md-primary"\n        type="submit"\n        ng-disabled="formClientRegistrationProvider.$invalid || formClientRegistrationProvider.$pristine"\n        permission\n        permission-only="[\'environment-client_registration_provider-u\']"\n      >\n        Update\n      </md-button>\n      <md-button\n        ng-if="!$ctrl.updateMode"\n        class="md-raised md-primary"\n        type="submit"\n        ng-disabled="formClientRegistrationProvider.$invalid || formClientRegistrationProvider.$pristine"\n        permission\n        permission-only="[\'environment-client_registration_provider-c\']"\n      >\n        Create\n      </md-button>\n\n      <md-button\n        class="md-raised"\n        type="button"\n        ng-click="$ctrl.reset()"\n        permission\n        permission-only="[\'environment-client_registration_provider-u\']"\n        ng-disabled="formClientRegistrationProvider.$invalid || formClientRegistrationProvider.$pristine"\n      >\n        Reset\n      </md-button>\n    </div>\n  </form>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <div class="gv-forms-header">\n    <h1 ng-if="!$ctrl.editMode">New dashboard [{{$ctrl.dashboard.reference_type}}]</h1>\n    <h1 ng-if="$ctrl.editMode">{{::$ctrl.dashboard.name}} [{{$ctrl.dashboard.reference_type}}]</h1>\n    <a ui-sref="management.settings.analytics.list">Back to dashboards</a>\n  </div>\n\n  <form name="$ctrl.formDashboard" ng-submit="$ctrl.save()" novalidate>\n    <div class="gv-form">\n      <h2>Details</h2>\n      <div class="gv-form-content" layout="column">\n        <div layout="row" layout-align="end center">\n          <md-input-container flex>\n            <label>Dashboard name</label>\n            <input ng-model="$ctrl.dashboard.name" required />\n          </md-input-container>\n\n          <md-input-container>\n            <md-checkbox ng-model="$ctrl.dashboard.enabled">Enabled dashboard</md-checkbox>\n          </md-input-container>\n        </div>\n\n        <div layout="row" layout-align="end center">\n          <md-input-container flex>\n            <label>Query filter</label>\n            <input type="text" ng-model="$ctrl.dashboard.query_filter" />\n          </md-input-container>\n\n          <ng-md-icon\n            icon="info"\n            style="fill: #b1bdc5"\n            aria-label="Query filter info"\n            ng-click="$ctrl.showQueryFilterInformation()"\n          ></ng-md-icon>\n\n          <md-input-container ng-if="$ctrl.displayPreview()">\n            <md-button type="button" ng-if="$ctrl.updateMode" class="md-raised md-primary" ng-click="$ctrl.tooglePreview()">\n              <ng-md-icon icon="play_arrow" style="fill: white"></ng-md-icon>Enable preview\n            </md-button>\n            <md-button type="button" ng-if="!$ctrl.updateMode" class="md-raised md-warn" ng-click="$ctrl.tooglePreview()">\n              <ng-md-icon icon="stop" style="fill: white"></ng-md-icon>Disable preview\n            </md-button>\n          </md-input-container>\n        </div>\n\n        <gv-dashboard model="$ctrl.dashboard" update-mode="$ctrl.updateMode"></gv-dashboard>\n\n        <md-card-actions layout="row" ng-if="$ctrl.updateMode">\n          <md-button\n            type="submit"\n            class="md-raised md-primary"\n            permission\n            permission-only="[\'environment-dashboard-c\', \'environment-dashboard-u\']"\n            ng-disabled="$ctrl.formDashboard.$invalid || $ctrl.formDashboard.$pristine"\n          >\n            Save\n          </md-button>\n          <md-button\n            type="button"\n            class="md-raised"\n            permission\n            permission-only="[\'environment-dashboard-c\', \'environment-dashboard-u\']"\n            ng-click="$ctrl.reset()"\n            ng-disabled="$ctrl.formDashboard.$pristine"\n          >\n            Reset\n          </md-button>\n        </md-card-actions>\n      </div>\n    </div>\n  </form>\n</div>\n\n<md-button\n  permission\n  permission-only="[\'environment-dashboard-c\', \'environment-dashboard-u\']"\n  ng-if="$ctrl.updateMode"\n  aria-label="Add widget"\n  class="md-fab md-fab-bottom-right md-fab-scrollable"\n  ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"\n  ng-click="$ctrl.addWidget()"\n>\n  <md-tooltip md-direction="top" md-visible="false">Add a new widget</md-tooltip>\n  <ng-md-icon icon="add"></ng-md-icon>\n</md-button>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Query filter">\n  <md-dialog-content layout-padding>\n    <h4>How to write a query filter</h4>\n    <p>\n      Example 1: Get error calls in tenant europe<br />\n      <code>tenant:europe AND status:[500 TO 599]</code>\n    </p>\n    <br />\n    <p>\n      Example 2: Get hits geo-localized in France<br />\n      <code>geoip.country_iso_code:FR</code>\n    </p>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button class="md-primary" ng-click="ctrl.cancel()"> Close </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="newsletter-box" ng-if="$ctrl.displayNewsletterSubscription">\n  <div class="newsletter-title-box">\n    <div class="newsletter-title">Join the community</div>\n    <a ng-click="$ctrl.close()" title="Maybe later, thanks !"\n      ><ng-md-icon icon="close" style="fill: rgba(0, 0, 0, 0.54)" size="20"></ng-md-icon\n    ></a>\n  </div>\n  <p>Subscribe to get product updates in your inbox</p>\n  <form id="newsletter-form" class="newsletter-form" ng-submit="$ctrl.subscribe()">\n    <input ng-model="$ctrl.email" ng-required="$ctrl.error" name="email" type="email" class="gv-input" placeholder="Email Address" />\n    <button type="submit" class="gv-button">Subscribe</button>\n  </form>\n  <span class="message"\n    >We won’t send you spam, unsubscribe at any time.\n    <a ng-click="$ctrl.unsubscribe()" title="No thanks, don\'t ask me anymore.">No thanks, don\'t ask me anymore.</a></span\n  >\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-autocomplete\n  md-selected-item="selectedItem"\n  md-search-text="$ctrl.searchText"\n  md-selected-item-change="$ctrl.selectUser(user)"\n  md-items="user in $ctrl.searchUser($ctrl.searchText)"\n  md-item-text="user.displayName"\n  md-min-length="$ctrl.minLength"\n  md-delay="500"\n  placeholder="{{ $ctrl.placeHolder }}"\n  md-autofocus="$ctrl.autofocus"\n  md-menu-class="gv-user-autocomplete-menu"\n  ng-disabled="$ctrl.disabled"\n>\n  <md-item-template>\n    <md-list-item>\n      <gravitee-identity-picture\n        image-id="\'auto-\'+$index"\n        image-url="$ctrl.getUserAvatar(user.id)"\n        image-name="user.displayName"\n        image-width="32"\n        image-border-radius="true"\n        class="md-avatar"\n      ></gravitee-identity-picture>\n      <div class="md-list-item-text contact-item" layout="column">\n        <h3>{{user.displayName}}</h3>\n        <p>{{user.email}}</p>\n      </div>\n    </md-list-item>\n  </md-item-template>\n  <md-not-found> No user matching "{{$ctrl.searchText}}" were found, or users already selected. </md-not-found>\n</md-autocomplete>\n\n<md-list class="fixedRows" ng-if="!$ctrl.singleUser" ng-show="$ctrl.usersSelected.length > 0">\n  <md-subheader class="md-no-sticky">Selected users</md-subheader>\n  <md-list-item ng-repeat="(index, user) in $ctrl.usersSelected">\n    <gravitee-identity-picture\n      image-id="\'selected-\'+index"\n      image-url="$ctrl.getUserAvatar(user.id)"\n      image-name="user.displayName"\n      image-width="40"\n      image-border-radius="true"\n      class="md-avatar"\n    ></gravitee-identity-picture>\n    <div class="md-list-item-text contact-item">\n      <h3>{{user.displayName}}</h3>\n    </div>\n  </md-list-item>\n</md-list>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div class="application-subscribe gv-forms" layout="column">\n  <application-header application="$ctrl.application" hide-subscribe-link="true"></application-header>\n  <div class="layout-padding application-subscribe__content">\n    <div class="application-subscribe__content__api-selector-container">\n      <md-autocomplete\n        class="application-subscribe__content__api-selector-container__selector"\n        md-input-id="new-view-apis-autocomplete-id"\n        md-search-text="searchText"\n        md-selected-item-change="$ctrl.onSelectAPI(api)"\n        md-items="api in $ctrl.searchApiByName(searchText)"\n        md-item-text="api.name"\n        placeholder="Search and select an API to subscribe | name:\'My api *\' | ownerName:admin"\n        md-autofocus="false"\n        md-min-length="3"\n        md-no-cache="true"\n        md-menu-class="autocomplete-custom-template"\n      >\n        <md-item-template>\n          <md-list-item class="md-2-line contact-item">\n            <div class="md-list-item-text" style="margin: 15px 0">\n              <h3>{{api.name}} <small>{{api.version}}</small></h3>\n            </div>\n          </md-list-item>\n        </md-item-template>\n        <md-not-found> No API matching "{{searchText}}" were found. </md-not-found>\n      </md-autocomplete>\n    </div>\n    <div class="gv-forms application-subscribe__content__subscribed-api">\n      <div class="gv-form">\n        <div class="gv-form-content">\n          <gravitee-empty-state\n            ng-if="$ctrl.subscribedAPIs.length === 0 && !$ctrl.selectedAPI"\n            icon="dashboard"\n            model="API"\n            message="No API selected for your application"\n          ></gravitee-empty-state>\n\n          <div layout="row" layout-wrap class="inset" ng-if="$ctrl.subscribedAPIs.length > 0">\n            <md-table-container style="width: 100%; min-height: 100px; text-align: center">\n              <table md-table>\n                <thead md-head md-order="order" ng-init="order = \'name\'">\n                  <tr md-row>\n                    <th md-column width="1%" md-order-by="name" selected><span>Name</span></th>\n                    <th md-column width="1%">Plans</th>\n                    <th md-column width="1%"></th>\n                  </tr>\n                </thead>\n                <tbody md-body>\n                  <tr md-row ng-repeat="api in $ctrl.subscribedAPIs | orderBy: order track by api.id">\n                    <td md-cell nowrap>\n                      <gravitee-identity-picture\n                        image-id="api.id"\n                        image-url="::api.picture_url"\n                        image-name="api.name + \'  \' + api.version"\n                        image-width="40"\n                      ></gravitee-identity-picture>\n                      {{api.name}}\n                    </td>\n                    <td md-cell>{{api.plans}}</td>\n                    <td md-cell>\n                      <md-button class="md-icon-button" aria-label="Edit Plans" ng-click="$ctrl.onSelectAPI(api);">\n                        <ng-md-icon icon="settings"></ng-md-icon>\n                        <md-tooltip md-direction="left">Edit Plans</md-tooltip>\n                      </md-button>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </md-table-container>\n          </div>\n\n          <div\n            ng-if="$ctrl.selectedAPI"\n            layout="column"\n            flex\n            layout-align="center"\n            class="layout-padding"\n            style="overflow: auto; align-items: center"\n          >\n            <div style="width: 100%">\n              <div flex layout="row">\n                <h4>Choose the plan that suits your business</h4>\n                <span flex></span>\n                <md-button class="md-icon-button" aria-label="Finish">\n                  <ng-md-icon icon="close" ng-click="$ctrl.selectedAPI = null; $ctrl.filterAPI = \'\';"></ng-md-icon>\n                  <md-tooltip>Close the API</md-tooltip>\n                </md-button>\n              </div>\n              <md-divider></md-divider>\n              <div layout="row" layout-align="center" class="layout-padding" flex layout-wrap>\n                <api-plan\n                  ng-repeat="plan in $ctrl.plans"\n                  plan="plan"\n                  subscribable="true"\n                  unsubscribable="true"\n                  on-subscribe="$ctrl.onSubscribe($ctrl.selectedAPI, plan)"\n                  on-unsubscribe="$ctrl.onUnsubscribe($ctrl.selectedAPI, plan)"\n                ></api-plan>\n                <h3 ng-if="$ctrl.selectedAPI && !$ctrl.canAccessSelectedApiPlans">\n                  You don\'t have sufficient privileges to access plans of this API\n                </h3>\n                <h3 ng-if="$ctrl.plans.length === 0 && $ctrl.canAccessSelectedApiPlans">\n                  There is no published plan for this API that you can subscribe with this type of application\n                </h3>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<form name="$ctrl.formQuality" class="gv-forms" layout="column" ng-submit="$ctrl.save()">\n  <h1>API Quality</h1>\n  <div class="gv-form" layout="column">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <div>\n        <md-checkbox\n          ng-model="$ctrl.settings.apiReview.enabled"\n          aria-label="API reviews"\n          ng-disabled="$ctrl.isReadonlySetting(\'api.review.enabled\')"\n        >\n          Enable API review\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'api.review.enabled\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-checkbox>\n        <md-checkbox\n          ng-model="$ctrl.settings.apiQualityMetrics.enabled"\n          aria-label="Rating"\n          ng-disabled="$ctrl.isReadonlySetting(\'api.quality.metrics.enabled\')"\n        >\n          Enable API Quality Metrics\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'api.quality.metrics.enabled\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-checkbox>\n      </div>\n      <h4>General</h4>\n      <div layout="row" layout-wrap="">\n        <md-input-container class="md-block" flex="50" flex-gt-xs="100" flex-gt-sm="50">\n          <label>Description weight</label>\n          <input\n            type="number"\n            min="0"\n            max="99999"\n            ng-model="$ctrl.settings.apiQualityMetrics.descriptionWeight"\n            ng-disabled="$ctrl.isReadonlySetting(\'api.quality.metrics.description.weight\')"\n          />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'api.quality.metrics.description.weight\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-input-container>\n        <md-input-container class="md-block" flex="50" flex-gt-xs="100" flex-gt-sm="50">\n          <label>Description minimum length</label>\n          <input\n            type="number"\n            min="0"\n            max="99999"\n            ng-model="$ctrl.settings.apiQualityMetrics.descriptionMinLength"\n            ng-disabled="$ctrl.isReadonlySetting(\'api.quality.metrics.description.min.length\')"\n          />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'api.quality.metrics.description.min.length\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-input-container>\n        <md-input-container class="md-block" flex="50" flex-gt-xs="100" flex-gt-sm="50">\n          <label>Logo weight</label>\n          <input\n            type="number"\n            min="0"\n            max="99999"\n            ng-model="$ctrl.settings.apiQualityMetrics.logoWeight"\n            ng-disabled="$ctrl.isReadonlySetting(\'api.quality.metrics.logo.weight\')"\n          />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'api.quality.metrics.logo.weight\')">{{$ctrl.providedConfigurationMessage}}</md-tooltip>\n        </md-input-container>\n        <md-input-container class="md-block" flex="50" flex-gt-xs="100" flex-gt-sm="50">\n          <label>Categories weight</label>\n          <input\n            type="number"\n            min="0"\n            max="99999"\n            ng-model="$ctrl.settings.apiQualityMetrics.categoriesWeight"\n            ng-disabled="$ctrl.isReadonlySetting(\'api.quality.metrics.categories.weight\')"\n          />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'api.quality.metrics.categories.weight\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-input-container>\n        <md-input-container class="md-block" flex="50" flex-gt-xs="100" flex-gt-sm="50">\n          <label>Labels weight</label>\n          <input\n            type="number"\n            min="0"\n            max="99999"\n            ng-model="$ctrl.settings.apiQualityMetrics.labelsWeight"\n            ng-disabled="$ctrl.isReadonlySetting(\'api.quality.metrics.labels.weight\')"\n          />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'api.quality.metrics.labels.weight\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-input-container>\n      </div>\n      <h4>Documentation</h4>\n      <div layout="row" layout-wrap="">\n        <md-input-container class="md-block" flex="50" flex-gt-xs="100" flex-gt-sm="50">\n          <label>Functional documentation weight</label>\n          <input\n            type="number"\n            min="0"\n            max="99999"\n            ng-model="$ctrl.settings.apiQualityMetrics.functionalDocumentationWeight"\n            ng-disabled="$ctrl.isReadonlySetting(\'api.quality.metrics.functional.documentation.weight\')"\n          />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'api.quality.metrics.functional.documentation.weight\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-input-container>\n        <md-input-container class="md-block" flex="50" flex-gt-xs="100" flex-gt-sm="50">\n          <label>Technical documentation weight</label>\n          <input\n            type="number"\n            min="0"\n            max="99999"\n            ng-model="$ctrl.settings.apiQualityMetrics.technicalDocumentationWeight"\n            ng-disabled="$ctrl.isReadonlySetting(\'api.quality.metrics.technical.documentation.weight\')"\n          />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'api.quality.metrics.technical.documentation.weight\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-input-container>\n      </div>\n      <h4>Endpoint</h4>\n      <div layout="row" layout-wrap="">\n        <md-input-container class="md-block" flex="50" flex-gt-xs="100" flex-gt-sm="50">\n          <label>Healthcheck weight</label>\n          <input\n            type="number"\n            min="0"\n            max="99999"\n            ng-model="$ctrl.settings.apiQualityMetrics.healthcheckWeight"\n            ng-disabled="$ctrl.isReadonlySetting(\'api.quality.metrics.healthcheck.weight\')"\n          />\n          <md-tooltip ng-if="$ctrl.isReadonlySetting(\'api.quality.metrics.healthcheck.weight\')"\n            >{{$ctrl.providedConfigurationMessage}}</md-tooltip\n          >\n        </md-input-container>\n      </div>\n\n      <md-card-actions>\n        <md-button\n          type="submit"\n          class="md-raised md-primary"\n          ng-disabled="$ctrl.formQuality.$invalid || $ctrl.formQuality.$pristine"\n          permission\n          permission-only="[\'environment-settings-c\', \'environment-settings-u\', \'environment-settings-d\']"\n          >Save</md-button\n        >\n        <md-button\n          type="button"\n          class="md-raised"\n          ng-click="$ctrl.reset()"\n          ng-disabled="$ctrl.formQuality.$invalid || $ctrl.formQuality.$pristine"\n          permission\n          permission-only="[\'environment-settings-c\', \'environment-settings-u\', \'environment-settings-d\']"\n          >Reset</md-button\n        >\n      </md-card-actions>\n    </div>\n  </div>\n</form>\n<div class="gv-forms" ng-if="$ctrl.qualityRules && $ctrl.qualityRules.length">\n  <div class="gv-form">\n    <div class="gv-form-content">\n      <div class="gv-forms-header" layout="column">\n        <h2>Manual rules</h2>\n\n        <div class="gv-form-content" layout="column">\n          <md-table-container>\n            <table md-table>\n              <thead md-head>\n                <tr md-row>\n                  <th md-column>Quality rule</th>\n                  <th md-column>Weight</th>\n                  <th permission permission-only="\'environment-quality_rule-u\'" width="64px" nowrap></th>\n                  <th permission permission-only="\'environment-quality_rule-d\'" width="64px" nowrap></th>\n                </tr>\n              </thead>\n              <tbody md-body>\n                <tr md-row ng-repeat="qualityRule in $ctrl.qualityRules">\n                  <td md-cell>{{qualityRule.name}}</td>\n                  <td md-cell>{{qualityRule.weight}}</td>\n                  <td md-cell permission permission-only="\'environment-quality_rule-u\'">\n                    <ng-md-icon\n                      icon="edit"\n                      ui-sref="management.settings.apiQuality.qualityRule({qualityRuleId: qualityRule.id})"\n                    ></ng-md-icon>\n                  </td>\n                  <td md-cell permission permission-only="\'environment-quality_rule-d\'">\n                    <ng-md-icon icon="delete" ng-click="$ctrl.delete(qualityRule)"></ng-md-icon>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </md-table-container>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<md-button\n  permission\n  permission-only="\'environment-quality_rule-c\'"\n  aria-label="Add quality rule"\n  class="md-fab md-fab-bottom-right md-fab-scrollable"\n  ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"\n  ui-sref="management.settings.apiQuality.qualityRulenew"\n>\n  <md-tooltip md-direction="top" md-visible="false">Add a new quality rule</md-tooltip>\n  <ng-md-icon icon="add"></ng-md-icon>\n</md-button>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Delete quality rule \'{{$ctrl.qualityRule.name}}\'">\n  <md-dialog-content layout-padding>\n    <p>Are you sure you want to delete the quality rule "{{$ctrl.qualityRule.name}}" ?</p>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="$ctrl.cancel()" md-auto-focus> Cancel </md-button>\n    <md-button ng-click="$ctrl.ok()" class="md-raised md-warn"> Delete </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms" layout="column">\n  <div class="gv-forms-header">\n    <h1>{{$ctrl.createMode ? \'New\' : \'Edit\'}} quality rule</h1>\n    <a ui-sref="management.settings.apiQuality.list">Back to quality rules</a>\n  </div>\n  <form name="$ctrl.qualityRuleForm" ng-submit="$ctrl.save()">\n    <div class="gv-form">\n      <h2>General</h2>\n      <div class="gv-form-content" layout="column">\n        <div layout="row">\n          <div layout="column" flex>\n            <div layout-gt-sm="row">\n              <md-input-container class="md-block" flex-gt-sm>\n                <label>Name</label>\n                <input ng-model="$ctrl.qualityRule.name" type="text" required name="name" maxlength="64" />\n                <div class="hint" ng-if="$ctrl.qualityRuleForm.name.$valid || $ctrl.qualityRuleForm.name.$pristine">Quality rule name</div>\n                <div ng-messages="$ctrl.qualityRuleForm.name.$error">\n                  <div ng-message="required">Quality rule name is required.</div>\n                  <div ng-message="md-maxlength">The name has to be less than 64 characters long.</div>\n                </div>\n              </md-input-container>\n            </div>\n\n            <div layout-gt-sm="row">\n              <md-input-container class="md-block" flex-gt-sm>\n                <label>Description</label>\n                <input ng-model="$ctrl.qualityRule.description" type="text" required name="description" maxlength="256" />\n                <div class="hint" ng-if="$ctrl.qualityRuleForm.description.$valid || $ctrl.qualityRuleForm.description.$pristine">\n                  Quality rule description\n                </div>\n                <div ng-messages="$ctrl.qualityRuleForm.description.$error">\n                  <div ng-message="required">Quality rule description is required.</div>\n                  <div ng-message="md-maxlength">The description has to be less than 256 characters long.</div>\n                </div>\n              </md-input-container>\n            </div>\n\n            <md-input-container class="md-block" flex="50" flex-gt-xs="100" flex-gt-sm="50">\n              <label>Weight</label>\n              <input type="number" min="0" max="99999" ng-model="$ctrl.qualityRule.weight" />\n            </md-input-container>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div layout="row">\n      <md-button\n        ng-disabled="$ctrl.qualityRuleForm.$invalid || $ctrl.qualityRuleForm.$pristine && !$ctrl.formChanged"\n        type="submit"\n        permission\n        permission-only="[\'environment-quality_rule-c\', \'environment-quality_rule-u\']"\n        class="md-raised md-primary"\n      >\n        Save\n      </md-button>\n    </div>\n  </form>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="theme-component">\n  <form name="themeForm" class="gv-forms" layout="column" ng-submit="$ctrl.save()">\n    <div class="theme-component-actions" ng-class="{\'theme-component-container-fullscreen\': onFullscreen()}">\n      <h1 class="theme-component-title">Theme</h1>\n      <div class="theme-component-actions-primary">\n        <md-button\n          class="md-flat"\n          ng-if="hasPreview()"\n          ng-class="{\'md-primary\': isDetached}"\n          aria-label="Switch fullscreen"\n          type="button"\n          ng-click="$ctrl.open()"\n        >\n          <ng-md-icon ng-if="!isDetached" icon="fullscreen"></ng-md-icon>\n          <span ng-if="!isDetached">Fullscreen</span>\n          <ng-md-icon ng-if="isDetached" icon="fullscreen_exit"></ng-md-icon>\n          <span ng-if="isDetached">Exit</span>\n        </md-button>\n\n        <md-button class="md-flat" type="button" ng-click="$ctrl.reset()" ng-disabled="themeForm.$pristine">\n          <ng-md-icon icon="replay"></ng-md-icon>\n          Reset\n        </md-button>\n\n        <md-button\n          class="md-primary"\n          type="button"\n          ng-click="$ctrl.update()"\n          ng-disabled="themeForm.$invalid || themeForm.$pristine"\n          permission\n          permission-only="\'environment-theme-u\'"\n        >\n          <ng-md-icon ng-if="themeForm.$dirty" icon="sync_disabled"></ng-md-icon>\n          <ng-md-icon ng-if="!themeForm.$dirty" icon="sync"></ng-md-icon>\n          Save\n        </md-button>\n        <md-switch\n          aria-label="Enabled"\n          ng-model="theme.enabled"\n          ng-change="$ctrl.update()"\n          permission\n          permission-only="\'environment-theme-u\'"\n        >\n          ENABLED\n        </md-switch>\n      </div>\n\n      <md-button\n        class="md-raised"\n        type="button"\n        ngf-select="$ctrl.importTheme($file,$invalidFiles)"\n        ngf-pattern="\'application/json\'"\n        ngf-accept="\'application/json\'"\n        ngf-max-size="{{maxSize}}"\n        permission\n        permission-only="[\'environment-theme-u\']"\n      >\n        Import\n      </md-button>\n      <md-button class="md-raised" type="button" ng-click="$ctrl.exportTheme()"> Export </md-button>\n      <md-button\n        class="md-raised md-warn"\n        type="button"\n        ng-click="$ctrl.restoreDefaultTheme()"\n        permission\n        permission-only="[\'environment-theme-u\']"\n      >\n        Restore default theme\n      </md-button>\n    </div>\n\n    <div class="theme-component-container" ng-class="{\'theme-component-container-fullscreen\': onFullscreen()}">\n      <div class="gv-form">\n        <div class="gv-form-content">\n          <v-accordion class="vAccordion--default" control="accordion" id="accordion" multiple>\n            <v-pane id="image">\n              <v-pane-header>Images</v-pane-header>\n              <v-pane-content>\n                <div>\n                  <label class="theme-component-label">Logo</label>\n                  <gravitee-image\n                    image-id="\'theme-logo\'"\n                    image="theme.logo"\n                    image-url="$ctrl.getLogoUrl()"\n                    image-form="themeForm"\n                    success-event-name="themePictureChangeSuccess"\n                    no-default-image="true"\n                    ng-model="theme.logo"\n                    change-label="Change"\n                    checkered-background="true"\n                  >\n                  </gravitee-image>\n                </div>\n\n                <div>\n                  <label class="theme-component-label">Optional logo</label>\n                  <gravitee-image\n                    image-id="\'theme-optionalLogo\'"\n                    image="theme.optionalLogo"\n                    image-default="theme.logo"\n                    image-url="$ctrl.themeOptionalLogoURL"\n                    image-form="themeForm"\n                    success-event-name="themePictureChangeSuccess"\n                    no-default-image="true"\n                    ng-model="theme.optionalLogo"\n                    can-delete="true"\n                    change-label="Change"\n                    delete-label="Use default logo"\n                    checkered-background="true"\n                  >\n                  </gravitee-image>\n                </div>\n\n                <div>\n                  <label class="theme-component-label">Favicon</label>\n                  <gravitee-image\n                    image-id="\'theme-favicon\'"\n                    accept="image/png, image/x-icon"\n                    image="theme.favicon"\n                    image-url="$ctrl.getFaviconUrl()"\n                    image-form="themeForm"\n                    success-event-name="themePictureChangeSuccess"\n                    no-default-image="true"\n                    ng-model="theme.favicon"\n                    change-label="Change"\n                    checkered-background="true"\n                  >\n                  </gravitee-image>\n                </div>\n              </v-pane-content>\n            </v-pane>\n            <v-pane>\n              <v-pane-header>Homepage</v-pane-header>\n              <v-pane-content>\n                <div>\n                  <label class="theme-component-label">Homepage background image</label>\n                  <gravitee-image\n                    image-id="\'theme-backgroundImage\'"\n                    image="theme.backgroundImage"\n                    image-url="$ctrl.themeBackgroundURL"\n                    image-form="themeForm"\n                    success-event-name="themePictureChangeSuccess"\n                    no-default-image="true"\n                    ng-model="theme.backgroundImage"\n                    can-delete="true"\n                    change-label="Change"\n                    checkered-background="true"\n                  >\n                  </gravitee-image>\n                </div>\n\n                <label class="theme-component-label">Colors</label>\n                <div class="theme-component-colors">\n                  <div class="theme-component-colors">\n                    <div\n                      ng-repeat="property in getGlobalHomepageColorVariables()"\n                      title="{{property.description}}: {{property.value}}"\n                      type="text"\n                      class="theme-component-color-picker"\n                      ng-change="$ctrl.onDataChanged()"\n                      md-color-picker\n                      ng-model="property.value"\n                      default="{{property.default}}"\n                      md-color-history="true"\n                      md-color-clear-button="false"\n                    ></div>\n                  </div>\n                </div>\n\n                <div\n                  layout="row"\n                  ng-repeat="property in getGlobalHomepageVariables()"\n                  ng-if="(property.type.toLowerCase() === \'length\' || property.type.toLowerCase()=== \'string\') && !property.name.endsWith(\'--ff\')"\n                >\n                  <md-input-container class="md-block" flex>\n                    <label>{{property.description}}</label>\n                    <input\n                      ng-model="property.value"\n                      type="text"\n                      placeholder="{{$ctrl.getPlaceholder(property)}}"\n                      aria-label="{{property.description}}"\n                      ng-change="$ctrl.onDataChanged()"\n                    />\n                  </md-input-container>\n                </div>\n              </v-pane-content>\n            </v-pane>\n            <v-pane>\n              <v-pane-header>Colors</v-pane-header>\n              <v-pane-content>\n                <label class="theme-component-label">Primary</label>\n                <div class="theme-component-colors">\n                  <div class="theme-component-colors">\n                    <div\n                      ng-repeat="property in getGlobalPrimaryColorVariables()"\n                      title="{{property.description}}: {{property.value}}"\n                      type="text"\n                      class="theme-component-color-picker"\n                      ng-change="$ctrl.onDataChanged()"\n                      md-color-picker\n                      ng-model="property.value"\n                      default="{{property.default}}"\n                      md-color-history="true"\n                      md-color-clear-button="false"\n                    ></div>\n                  </div>\n                </div>\n                <hr />\n                <label class="theme-component-label">Neutral</label>\n                <div class="theme-component-colors">\n                  <div class="theme-component-colors">\n                    <div\n                      ng-repeat="property in getGlobalNeutralColorVariables()"\n                      type="text"\n                      title="{{property.description}}: {{property.value}}"\n                      class="theme-component-color-picker"\n                      ng-change="$ctrl.onDataChanged()"\n                      md-color-picker\n                      default="{{property.default}}"\n                      ng-model="property.value"\n                      md-color-history="true"\n                      md-color-clear-button="false"\n                    ></div>\n                  </div>\n                </div>\n                <label class="theme-component-label">Fonts</label>\n                <div class="theme-component-colors">\n                  <div class="theme-component-colors">\n                    <div\n                      ng-repeat="property in getGlobalColorVariables()"\n                      type="text"\n                      title="{{property.description}}: {{property.value}}"\n                      class="theme-component-color-picker"\n                      ng-change="$ctrl.onDataChanged()"\n                      md-color-picker\n                      default="{{property.default}}"\n                      ng-model="property.value"\n                      md-color-history="true"\n                      md-color-clear-button="false"\n                    ></div>\n                  </div>\n                </div>\n              </v-pane-content>\n            </v-pane>\n            <v-pane>\n              <v-pane-header>Fonts</v-pane-header>\n              <v-pane-content>\n                <div layout="column" class="theme-component-text">\n                  <div layout="row" ng-repeat="property in getGlobalFontFamilyVariables()">\n                    <md-input-container class="md-block" flex>\n                      <label>Family</label>\n                      <md-select ng-model="property.value" ng-change="$ctrl.onDataChanged()">\n                        <md-option ng-value="property.default" ng-selected="{{property.default === property.value}}">\n                          {{property.default}}\n                        </md-option>\n                        <md-option ng-repeat="font in fonts" ng-value="font" ng-selected="{{font === property.value}}">\n                          {{font}}\n                        </md-option>\n                      </md-select>\n                    </md-input-container>\n                  </div>\n\n                  <div layout="row" ng-repeat="property in getGlobalFontSizeVariables()">\n                    <md-input-container class="md-block" flex>\n                      <input\n                        ng-model="property.value"\n                        type="text"\n                        placeholder="{{property.description}}"\n                        aria-label="{{property.description}}"\n                        ng-change="$ctrl.onDataChanged()"\n                      />\n                    </md-input-container>\n                  </div>\n                </div>\n              </v-pane-content>\n            </v-pane>\n            <v-pane ng-repeat="component in getComponents()" id="{{ ::component.name }}">\n              <v-pane-header>{{ $ctrl.getDisplayName(component.name) }}</v-pane-header>\n              <v-pane-content>\n                <label class="theme-component-label" ng-if="$ctrl.hasColors(component)">Colors</label>\n                <div class="theme-component-colors">\n                  <div class="theme-component-colors">\n                    <div\n                      ng-repeat="property in component.css"\n                      ng-if="property.type.toLowerCase() === \'color\'"\n                      title="{{$ctrl.getColorTitle(property)}}"\n                      class="theme-component-color-picker"\n                      ng-change="$ctrl.onDataChanged()"\n                      md-color-picker\n                      ng-model="property.value"\n                      md-color-history="true"\n                      md-color-clear-button="false"\n                    ></div>\n                  </div>\n                </div>\n\n                <div layout="column" class="theme-component-text">\n                  <div layout="row" ng-repeat="property in component.css" ng-if="property.name.endsWith(\'--ff\')">\n                    <md-input-container class="md-block" flex>\n                      <label>Family</label>\n                      <md-select ng-model="property.value" ng-change="$ctrl.onDataChanged()">\n                        <md-option ng-value="property.default" ng-selected="{{property.default === property.value}}">\n                          {{property.default}}\n                        </md-option>\n                        <md-option ng-repeat="font in fonts" ng-value="font" ng-selected="{{font === property.value}}">\n                          {{font}}\n                        </md-option>\n                      </md-select>\n                    </md-input-container>\n                  </div>\n                  <div\n                    layout="row"\n                    ng-repeat="property in component.css"\n                    ng-if="(property.type.toLowerCase() === \'length\' || property.type.toLowerCase()=== \'string\') && !property.name.endsWith(\'--ff\')"\n                  >\n                    <md-input-container class="md-block" flex>\n                      <label>{{property.description}}</label>\n                      <input\n                        ng-model="property.value"\n                        type="text"\n                        placeholder="{{$ctrl.getPlaceholder(property)}}"\n                        aria-label="{{property.description}}"\n                        ng-change="$ctrl.onDataChanged()"\n                      />\n                    </md-input-container>\n                  </div>\n                </div>\n              </v-pane-content>\n            </v-pane>\n          </v-accordion>\n        </div>\n      </div>\n\n      <iframe id="preview" name="{{previewName}}" ng-if="hasPreview() && !isDetached" ng-src="{{trustSrc(href)}}" frameborder="0"></iframe>\n    </div>\n  </form>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-forms gv-forms-fluid" layout="column">\n  <h1>User Fields</h1>\n  <div class="gv-form">\n    <h2></h2>\n    <div class="gv-form-content" layout="column">\n      <md-table-container>\n        <table md-table class="gv-table-dense" ng-init="customField = \'key\'">\n          <thead md-head md-order="customField">\n            <tr md-row>\n              <th md-column md-order-by="key">Key</th>\n              <th md-column md-order-by="label">Label</th>\n              <th md-column md-order-by="required">Required</th>\n              <th md-column>Values</th>\n              <th md-column width="64px" nowrap ng-if="$ctrl.canDelete"></th>\n            </tr>\n          </thead>\n          <tbody md-body>\n            <tr md-row ng-repeat="field in $ctrl.fields | orderBy: customField">\n              <td md-cell>\n                <a ng-if="$ctrl.canUpdate" ng-click="$ctrl.updateField(field)">{{field.key}}</a>\n                <span ng-if="!$ctrl.canUpdate">{{field.key}}</span>\n              </td>\n              <td md-cell>{{field.label}}</td>\n              <td md-cell><md-checkbox ng-checked="field.required" disabled /></td>\n              <td md-cell>\n                <div style="line-height: 20px" ng-repeat="value in field.values">{{value}}</div>\n              </td>\n              <td md-cell ng-if="$ctrl.canDelete">\n                <div layout="row" layout-align="end end">\n                  <ng-md-icon\n                    icon="delete"\n                    ng-click="$ctrl.deleteField(field)"\n                    style="font-size: 24px; height: 24px"\n                    ng-if="$ctrl.fieldDeletable(field)"\n                  >\n                    <md-tooltip md-direction="top" md-visible="false">Delete User Field</md-tooltip>\n                  </ng-md-icon>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </md-table-container>\n    </div>\n  </div>\n</div>\n\n<md-button\n  ng-if="$ctrl.canCreate"\n  aria-label="Add User Field"\n  class="md-fab md-fab-bottom-right md-fab-scrollable"\n  ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"\n  ng-click="$ctrl.newField()"\n>\n  <md-tooltip md-direction="top" md-visible="false">Add a new user field</md-tooltip>\n  <ng-md-icon icon="add"></ng-md-icon>\n</md-button>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-dialog aria-label="Delete Custom User Field \'{{$ctrl.field.key}}\'">\n  <md-dialog-content layout-padding>\n    <p>Are you sure you want to delete the Custom User Field \'{{$ctrl.field.label}}\'?</p>\n  </md-dialog-content>\n  <md-dialog-actions layout="row">\n    <md-button ng-click="$ctrl.cancel()"> Cancel </md-button>\n    <md-button ng-click="$ctrl.delete()" class="md-raised md-warn"> Delete Custom User Field </md-button>\n  </md-dialog-actions>\n</md-dialog>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<md-input-container class="md-block" style="margin: 0">\n  <label>{{$ctrl.label}}</label>\n  <input\n    ng-model="$ctrl.value"\n    ng-model-options="{ debounce: 200 }"\n    ng-change="$ctrl.valueChange()"\n    name="inputControl"\n    ng-minlength="8"\n    ng-maxlength="64"\n    ng-pattern="/^[^#%@/;=?|^~, \\\\]*$/"\n    style="width: 90%"\n  />\n  <ng-md-icon\n    ng-show="$ctrl.formReference.inputControl.$valid && $ctrl.isApiKeyValid()"\n    icon="check"\n    style="fill: green; width: 10%"\n  ></ng-md-icon>\n  <ng-md-icon\n    ng-show="$ctrl.formReference.inputControl.$valid && $ctrl.isApiKeyInvalid()"\n    icon="close"\n    style="fill: red; width: 10%"\n  ></ng-md-icon>\n  <div ng-messages="$ctrl.formReference.inputControl.$error">\n    <div ng-message="minlength">API key has to be empty or more than 8 characters long.</div>\n    <div ng-message="maxlength">API key has to be 64 characters long maximum.</div>\n    <div ng-message="pattern">The API key contains illegal characters.</div>\n  </div>\n</md-input-container>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-sub-content">\n  <div class="gv-forms" layout="column">\n    <div class="gv-forms-header">\n      <h1>Ticket detail</h1>\n      <a ui-sref="management.support.tickets($ctrl.backStateParams)">Back to tickets</a>\n    </div>\n\n    <hr />\n    <div class="gv-form-content" layout="column" style="background-color: #fafafa">\n      <div ng-if="$ctrl.ticket.api" layout="row" flex layout-padding layout-align="left">\n        <label layout="column" flex="15">Api</label>\n        <p>{{$ctrl.ticket.api}}</p>\n      </div>\n      <div ng-if="$ctrl.ticket.application" layout="row" flex layout-padding layout-align="left">\n        <label layout="column" flex="15">Application</label>\n        <span>{{$ctrl.ticket.application}}</span>\n      </div>\n      <div layout="row" flex layout-padding layout-align="left">\n        <label layout="column" flex="15">Subject</label>\n        <span>{{$ctrl.ticket.subject}}</span>\n      </div>\n      <div layout="row" flex layout-padding layout-align="left">\n        <label layout="column" flex="15">Date</label>\n        <span>{{$ctrl.ticket.created_at | date: \'medium\' }}</span>\n      </div>\n      <div layout="row" flex layout-padding layout-align="left">\n        <label layout="column" flex="15">Content</label>\n        <div style="white-space: pre-wrap">{{$ctrl.ticket.content}}</div>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-sub-content" ng-if="!$ctrl.hasAlertingPlugin">\n  <gravitee-empty-state\n    icon="alarm_off"\n    message="No alert plugin is installed."\n    sub-message="Please install a plugin before being able to define alert rules."\n  ></gravitee-empty-state>\n</div>\n\n<div class="gv-sub-content" ng-if="$ctrl.hasAlertingPlugin && !$ctrl.hasConfiguredAlerts">\n  <gravitee-empty-state\n    icon="add_alarm"\n    model="Alert"\n    message="No alert configured"\n    sub-message="Start creating an alert"\n    create-mode="true"\n  >\n    <md-button\n      permission\n      permission-only="[\'api-alert-c\', \'application-alert-c\', \'environment-alert-c\']"\n      class="md-fab"\n      aria-label="create-alert"\n      ng-click="$ctrl.goToAlertCreation()"\n    >\n      <ng-md-icon icon="add" style="fill: #fff"></ng-md-icon>\n    </md-button>\n  </gravitee-empty-state>\n</div>\n\n<div class="gv-sub-content" ng-if="$ctrl.hasAlertingPlugin">\n  <div class="gv-forms gv-forms-fluid" layout="column">\n    <div layout="row">\n      <h1 flex>Alerts board</h1>\n      <md-input-container class="md-block">\n        <gv-quick-time-range on-timeframe-change="$ctrl.refresh(timeframe)"></gv-quick-time-range>\n      </md-input-container>\n      <md-button class="md-primary" ng-click="$ctrl.refresh()">\n        <ng-md-icon icon="refresh" size="20"></ng-md-icon>\n        Refresh\n      </md-button>\n    </div>\n\n    <div ng-if="$ctrl.hasConfiguredAlerts && $ctrl.alerts.length === 0">\n      <gravitee-empty-state icon="alarm_on" message="No alert event"></gravitee-empty-state>\n    </div>\n\n    <div layout="column" ng-show="$ctrl.alerts.length > 0">\n      <div>\n        <h2>All alert events in {{$ctrl.timeframe.title | lowercase}}</h2>\n        <div style="height: 250px">\n          <gv-chart-bar ng-prop-series="$ctrl.series" ng-attr-options="{{$ctrl.options}}"></gv-chart-bar>\n        </div>\n      </div>\n      <div>\n        <div>\n          <div class="gv-alerts_list">\n            <md-card\n              ng-repeat="alert in $ctrl.alerts"\n              ng-class="{\n                        \'alert-critical\': $ctrl.isAlertCritical(alert),\n                        \'alert-warning\': $ctrl.isAlertWarning(alert),\n                        \'alert-info\': $ctrl.isAlertInfo(alert)\n                        }"\n            >\n              <md-card-header>\n                <md-card-header-text>\n                  <span class="md-title" title="{{alert.name}}">{{alert.name}}</span>\n                  <md-tooltip md-direction="top">{{alert.name}}</md-tooltip>\n                  <a ui-sref="{{$ctrl.getContextualInformationFromReferenceType().uiRef}}">View history</a>\n                </md-card-header-text>\n              </md-card-header>\n\n              <md-card-content>\n                <div>\n                  <h1>{{alert.events_count}}</h1>\n                </div>\n              </md-card-content>\n            </md-card>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h1>{{$ctrl.count}}</h1>\n'},,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gv-sub-content">\n  <gravitee-empty-state icon="directions_walk" model="Moved" message="This page has been moved" create-mode="true">\n    <a ui-sref="{{$ctrl.goTo}}" permission permission-only="$ctrl.permissions" class="text-right">\n      Go to <ng-md-icon icon="{{$ctrl.destinationIcon}}" style="fill: #cdcccc"></ng-md-icon>{{$ctrl.destinationName}}\n    </a>\n  </gravitee-empty-state>\n</div>\n'},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/actions-trcl.html",'<div class="btn-group schema-form-actions {{form.htmlClass}}" ng-transclude=""></div>'),e.put("directives/decorators/bootstrap/actions.html",'<div class="btn-group schema-form-actions {{form.htmlClass}}"><input ng-repeat-start="item in form.items" type="submit" class="btn {{ item.style || \'btn-default\' }} {{form.fieldHtmlClass}}" value="{{item.title}}" ng-if="item.type === \'submit\'"> <button ng-repeat-end="" class="btn {{ item.style || \'btn-default\' }} {{form.fieldHtmlClass}}" type="button" ng-disabled="form.readonly" ng-if="item.type !== \'submit\'" ng-click="buttonClick($event,item)"><span ng-if="item.icon" class="{{item.icon}}"></span>{{item.title}}</button></div>'),e.put("directives/decorators/bootstrap/array.html",'<div sf-array="form" class="schema-form-array {{form.htmlClass}}" ng-model="$$value$$" ng-model-options="form.ngModelOptions"><label class="control-label" ng-show="showTitle()">{{ form.title }}</label><ol class="list-group" ng-model="modelArray" ui-sortable=""><li class="list-group-item {{form.fieldHtmlClass}}" ng-repeat="item in modelArray track by $index"><button ng-hide="form.readonly || form.remove === null" ng-click="deleteFromArray($index)" style="position: relative; z-index: 20;" type="button" class="close pull-right"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button><sf-decorator ng-init="arrayIndex = $index" form="copyWithIndex($index)"></sf-decorator></li></ol><div class="clearfix" style="padding: 15px;"><button ng-hide="form.readonly || form.add === null" ng-click="appendToArray()" type="button" class="btn {{ form.style.add || \'btn-default\' }} pull-right"><i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}}</button></div><div class="help-block" ng-show="(hasError() && errorMessage(schemaError())) || form.description" ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div></div>'),e.put("directives/decorators/bootstrap/checkbox.html",'<div class="checkbox schema-form-checkbox {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="{{form.labelHtmlClass}}"><input type="checkbox" sf-changed="form" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" class="{{form.fieldHtmlClass}}" name="{{form.key.slice(-1)[0]}}"> <span ng-bind-html="form.title"></span></label><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/checkboxes.html",'<div sf-array="form" ng-model="$$value$$" class="form-group schema-form-checkboxes {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="checkbox" ng-repeat="val in titleMapValues track by $index"><label><input type="checkbox" ng-disabled="form.readonly" sf-changed="form" class="{{form.fieldHtmlClass}}" ng-model="titleMapValues[$index]" name="{{form.key.slice(-1)[0]}}"> <span ng-bind-html="form.titleMap[$index].name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/default.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label> <input ng-if="!form.fieldAddonLeft && !form.fieldAddonRight" ng-show="form.key" type="{{form.type}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"><div ng-if="form.fieldAddonLeft || form.fieldAddonRight" ng-class="{\'input-group\': (form.fieldAddonLeft || form.fieldAddonRight)}"><span ng-if="form.fieldAddonLeft" class="input-group-addon" ng-bind-html="form.fieldAddonLeft"></span> <input ng-show="form.key" type="{{form.type}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"> <span ng-if="form.fieldAddonRight" class="input-group-addon" ng-bind-html="form.fieldAddonRight"></span></div><span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-ok\': hasSuccess(), \'glyphicon-remove\': hasError() }" aria-hidden="true"></span> <span ng-if="hasError() || hasSuccess()" id="{{form.key.slice(-1)[0] + \'Status\'}}" class="sr-only">{{ hasSuccess() ? \'(success)\' : \'(error)\' }}</span><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/fieldset-trcl.html",'<fieldset ng-disabled="form.readonly" class="schema-form-fieldset {{form.htmlClass}}"><legend ng-class="{\'sr-only\': !showTitle() }">{{ form.title }}</legend><div class="help-block" ng-show="form.description" ng-bind-html="form.description"></div><div ng-transclude=""></div></fieldset>'),e.put("directives/decorators/bootstrap/fieldset.html",'<fieldset ng-disabled="form.readonly" class="schema-form-fieldset {{form.htmlClass}}"><legend ng-class="{\'sr-only\': !showTitle() }">{{ form.title }}</legend><div class="help-block" ng-show="form.description" ng-bind-html="form.description"></div><sf-decorator ng-repeat="item in form.items" form="item"></sf-decorator></fieldset>'),e.put("directives/decorators/bootstrap/help.html",'<div class="helpvalue schema-form-helpvalue {{form.htmlClass}}" ng-bind-html="form.helpvalue"></div>'),e.put("directives/decorators/bootstrap/radio-buttons.html",'<div class="form-group schema-form-radiobuttons {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><div><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label></div><div class="btn-group"><label class="btn {{ (item.value === $$value$$) ? form.style.selected || \'btn-default\' : form.style.unselected || \'btn-default\'; }}" ng-class="{ active: item.value === $$value$$ }" ng-repeat="item in form.titleMap"><input type="radio" class="{{form.fieldHtmlClass}}" sf-changed="form" style="display: none;" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" ng-value="item.value" name="{{form.key.join(\'.\')}}"> <span ng-bind-html="item.name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/radios-inline.html",'<div class="form-group schema-form-radios-inline {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div><label class="radio-inline" ng-repeat="item in form.titleMap"><input type="radio" class="{{form.fieldHtmlClass}}" sf-changed="form" ng-disabled="form.readonly" ng-model="$$value$$" ng-value="item.value" name="{{form.key.join(\'.\')}}"> <span ng-bind-html="item.name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/radios.html",'<div class="form-group schema-form-radios {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="radio" ng-repeat="item in form.titleMap"><label><input type="radio" class="{{form.fieldHtmlClass}}" sf-changed="form" ng-disabled="form.readonly" ng-model="$$value$$" ng-value="item.value" name="{{form.key.join(\'.\')}}"> <span ng-bind-html="item.name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/section.html",'<div class="schema-form-section {{form.htmlClass}}"><sf-decorator ng-repeat="item in form.items" form="item"></sf-decorator></div>'),e.put("directives/decorators/bootstrap/select.html",'<div class="form-group {{form.htmlClass}} schema-form-select" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><select ng-model="$$value$$" ng-model-options="form.ngModelOptions" ng-disabled="form.readonly" sf-changed="form" class="form-control {{form.fieldHtmlClass}}" schema-validate="form" ng-options="item.value as item.name group by item.group for item in form.titleMap" name="{{form.key.slice(-1)[0]}}"></select><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/submit.html",'<div class="form-group schema-form-submit {{form.htmlClass}}"><input type="submit" class="btn {{ form.style || \'btn-primary\' }} {{form.fieldHtmlClass}}" value="{{form.title}}" ng-disabled="form.readonly" ng-if="form.type === \'submit\'"> <button class="btn {{ form.style || \'btn-default\' }}" type="button" ng-click="buttonClick($event,form)" ng-disabled="form.readonly" ng-if="form.type !== \'submit\'"><span ng-if="form.icon" class="{{form.icon}}"></span> {{form.title}}</button></div>'),e.put("directives/decorators/bootstrap/tabarray.html",'<div sf-array="form" ng-init="selected = { tab: 0 }" class="clearfix schema-form-tabarray schema-form-tabarray-{{form.tabType || \'left\'}} {{form.htmlClass}}"><div ng-if="!form.tabType || form.tabType !== \'right\'" ng-class="{\'col-xs-3\': !form.tabType || form.tabType === \'left\'}"><ul class="nav nav-tabs" ng-class="{ \'tabs-left\': !form.tabType || form.tabType === \'left\'}"><li ng-repeat="item in modelArray track by $index" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"><a href="#">{{interp(form.title,{\'$index\':$index, value: item}) || $index}}</a></li><li ng-hide="form.readonly" ng-click="$event.preventDefault() || (selected.tab = appendToArray().length - 1)"><a href="#"><i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}}</a></li></ul></div><div ng-class="{\'col-xs-9\': !form.tabType || form.tabType === \'left\' || form.tabType === \'right\'}"><div class="tab-content {{form.fieldHtmlClass}}"><div class="tab-pane clearfix" ng-repeat="item in modelArray track by $index" ng-show="selected.tab === $index" ng-class="{active: selected.tab === $index}"><sf-decorator ng-init="arrayIndex = $index" form="copyWithIndex($index)"></sf-decorator><button ng-hide="form.readonly" ng-click="selected.tab = deleteFromArray($index).length - 1" type="button" class="btn {{ form.style.remove || \'btn-default\' }} pull-right"><i class="glyphicon glyphicon-trash"></i> {{ form.remove || \'Remove\'}}</button></div></div></div><div ng-if="form.tabType === \'right\'" class="col-xs-3"><ul class="nav nav-tabs tabs-right"><li ng-repeat="item in modelArray track by $index" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"><a href="#">{{interp(form.title,{\'$index\':$index, value: item}) || $index}}</a></li><li ng-hide="form.readonly" ng-click="$event.preventDefault() || appendToArray()"><a href="#"><i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}}</a></li></ul></div></div>'),e.put("directives/decorators/bootstrap/tabs.html",'<div ng-init="selected = { tab: 0 }" class="schema-form-tabs {{form.htmlClass}}"><ul class="nav nav-tabs"><li ng-repeat="tab in form.tabs" ng-disabled="form.readonly" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"><a href="#">{{ tab.title }}</a></li></ul><div class="tab-content {{form.fieldHtmlClass}}"><div class="tab-pane" ng-disabled="form.readonly" ng-repeat="tab in form.tabs" ng-show="selected.tab === $index" ng-class="{active: selected.tab === $index}"><bootstrap-decorator ng-repeat="item in tab.items" form="item"></bootstrap-decorator></div></div></div>'),e.put("directives/decorators/bootstrap/textarea.html",'<div class="form-group has-feedback {{form.htmlClass}} schema-form-textarea" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="{{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label> <textarea ng-if="!form.fieldAddonLeft && !form.fieldAddonRight" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" sf-changed="form" placeholder="{{form.placeholder}}" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" name="{{form.key.slice(-1)[0]}}"></textarea><div ng-if="form.fieldAddonLeft || form.fieldAddonRight" ng-class="{\'input-group\': (form.fieldAddonLeft || form.fieldAddonRight)}"><span ng-if="form.fieldAddonLeft" class="input-group-addon" ng-bind-html="form.fieldAddonLeft"></span> <textarea class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" sf-changed="form" placeholder="{{form.placeholder}}" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" name="{{form.key.slice(-1)[0]}}"></textarea> <span ng-if="form.fieldAddonRight" class="input-group-addon" ng-bind-html="form.fieldAddonRight"></span></div><span class="help-block" sf-message="form.description"></span></div>')}]),angular.module("schemaForm").config(["schemaFormDecoratorsProvider",function(e){const t="directives/decorators/bootstrap/";e.defineDecorator("bootstrapDecorator",{textarea:{template:t+"textarea.html",replace:!1},fieldset:{template:t+"fieldset.html",replace:!1},array:{template:t+"array.html",replace:!1},tabarray:{template:t+"tabarray.html",replace:!1},tabs:{template:t+"tabs.html",replace:!1},section:{template:t+"section.html",replace:!1},conditional:{template:t+"section.html",replace:!1},actions:{template:t+"actions.html",replace:!1},select:{template:t+"select.html",replace:!1},checkbox:{template:t+"checkbox.html",replace:!1},checkboxes:{template:t+"checkboxes.html",replace:!1},number:{template:t+"default.html",replace:!1},password:{template:t+"default.html",replace:!1},submit:{template:t+"submit.html",replace:!1},button:{template:t+"submit.html",replace:!1},radios:{template:t+"radios.html",replace:!1},"radios-inline":{template:t+"radios-inline.html",replace:!1},radiobuttons:{template:t+"radio-buttons.html",replace:!1},help:{template:t+"help.html",replace:!1},default:{template:t+"default.html",replace:!1}},[]),e.createDirectives({textarea:t+"textarea.html",select:t+"select.html",checkbox:t+"checkbox.html",checkboxes:t+"checkboxes.html",number:t+"default.html",submit:t+"submit.html",button:t+"submit.html",text:t+"default.html",date:t+"default.html",password:t+"default.html",datepicker:t+"datepicker.html",input:t+"default.html",radios:t+"radios.html","radios-inline":t+"radios-inline.html",radiobuttons:t+"radio-buttons.html"})}]).directive("sfFieldset",()=>({transclude:!0,scope:!0,templateUrl:"directives/decorators/bootstrap/fieldset-trcl.html",link(e,t,n){e.title=e.$eval(n.title)}}))},function(e,t){angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/codemirror/codemirror.html",'<div class="form-group" ng-class="{\'has-error\': hasError()}" ng-init="codemirrorOptions = {foo: \'bar\'}">\n  <label class="control-label" ng-show="showTitle()">{{form.title}}</label>\n  <div ng-if="form.codemirrorButtons" class="cm-buttons">\n    <span class="btn-group" ng-repeat="buttonGroup in form.codemirrorButtons">\n      <button ng-repeat="button in buttonGroup" ng-click="evalInScope(button.onClick)" type="button" class="btn btn-sm btn-default" id="btnBold" title="{{ button.title }}">\n        <span ng-if="button.icon" class="glyphicon" ng-class="\'glyphicon-\' + button.icon"></span>\n        <span ng-if="button.label" ng-bind-html="button.label"></span>\n      </button>\n    </span>\n  </div>\n  <div codemirror-buttons ui-codemirror ui-codemirror-opts="getCodemirrorOptions()" ng-style="form.style" ng-model="$$value$$" schema-validate="form"></div>\n  <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span>\n</div>\n')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider",function(e,t){t.addMapping("bootstrapDecorator","codemirror","directives/decorators/bootstrap/codemirror/codemirror.html"),t.createDirective("codemirror","directives/decorators/bootstrap/codemirror/codemirror.html")}]).directive("codemirrorButtons",()=>({controller:["$scope",function(e){e.getCodemirrorOptions=function(){const t=angular.copy(e.form.codemirrorOptions);return t.onLoad=function(t){e.cm=t},t}}]}))},function(e,t,n){"use strict";function i(e,t){return{restrict:"EA",require:"?ngModel",compile:function(){if(angular.isUndefined(window.CodeMirror))throw new Error("ui-codemirror needs CodeMirror to work... (o rly?)");return n}};function n(n,i,a,o){const s=angular.extend({value:i.text()},t.codemirror||{},n.$eval(a.uiCodemirror),n.$eval(a.uiCodemirrorOpts)),r=function(e,t){let n;"TEXTAREA"===e[0].tagName?n=window.CodeMirror.fromTextArea(e[0],t):(e.html(""),n=new window.CodeMirror(t=>{e.append(t)},t));return n}(i,s);!function(e,t,n){if(!t)return;const i=Object.keys(window.CodeMirror.defaults);n.$watch(t,(function(t,n){angular.isObject(t)&&i.forEach(i=>{if(t.hasOwnProperty(i)){if(n&&t[i]===n[i])return;e.setOption(i,t[i])}})}),!0)}(r,a.uiCodemirror||a.uiCodemirrorOpts,n),function(e,t,n){if(!t)return;t.$formatters.push(e=>{if(angular.isUndefined(e)||null===e)return"";if(angular.isObject(e)||angular.isArray(e))throw new Error("ui-codemirror cannot use an object or an array as a model");return e}),t.$render=function(){const n=t.$viewValue||"";e.setValue(n)},e.on("change",e=>{const i=e.getValue();i!==t.$viewValue&&n.$evalAsync(()=>{t.$setViewValue(i)})})}(r,o,n),function(t,n,i){if(!n)return;i.$watch(n,(n,i)=>{n!==i&&e(()=>{t.refresh()})})}(r,a.uiRefresh,n),n.$on("CodeMirror",(e,t)=>{if(!angular.isFunction(t))throw new Error("the CodeMirror event requires a callback function");t(r)}),angular.isFunction(s.onLoad)&&s.onLoad(r)}}angular.module("ui.codemirror",[]).constant("uiCodemirrorConfig",{}).directive("uiCodemirror",i),i.$inject=["$timeout","uiCodemirrorConfig"]},,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h2 mat-dialog-title class="confirm-dialog__title">{{ title }}</h2>\n\n<mat-dialog-content *ngIf="content" class="confirm-dialog__content">\n  <p [innerHTML]="content"></p>\n</mat-dialog-content>\n\n<mat-dialog-actions align="end" class="confirm-dialog__actions">\n  <button class="confirm-dialog__cancel-button" mat-button [mat-dialog-close]="false">\n    {{ cancelButton }}\n  </button>\n  <button\n    class="confirm-dialog__confirm-button"\n    color="warn"\n    mat-button\n    [mat-dialog-close]="true"\n    cdkFocusInitial\n    data-testid="confirm-dialog"\n  >\n    {{ confirmButton }}\n  </button>\n</mat-dialog-actions>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="settings-general" #container>\n  <form\n    *ngIf="!isLoading"\n    class="settings-general__form"\n    [formGroup]="formSettings"\n    (ngSubmit)="onSubmit()"\n    autocomplete="off"\n    gioFormFocusInvalid\n  >\n    <h1>Settings</h1>\n    <gio-banner-info>\n      Depending on your architecture, this configuration may be overridden by a local configuration file. See documentation for more\n      information.\n    </gio-banner-info>\n\n    <mat-card class="settings-general__form__card" formGroupName="management">\n      <h2 gioTableOfContents>Management</h2>\n\n      <mat-card-content>\n        <mat-form-field\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'management.title\')"\n          appearance="fill"\n          class="settings-general__form__card__form-field"\n        >\n          <mat-icon *ngIf="isReadonlySetting(\'management.title\')" class="settings-general__form__card__form-field__icon" matPrefix\n            >lock</mat-icon\n          >\n          <mat-label>Title</mat-label>\n          <input matInput formControlName="title" />\n        </mat-form-field>\n\n        <mat-form-field\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'management.url\')"\n          appearance="fill"\n          class="settings-general__form__card__form-field"\n        >\n          <mat-icon *ngIf="isReadonlySetting(\'management.url\')" class="settings-general__form__card__form-field__icon" matPrefix\n            >lock</mat-icon\n          >\n          <mat-label>Management URL</mat-label>\n          <input matInput formControlName="url" />\n        </mat-form-field>\n\n        <mat-divider></mat-divider>\n\n        <gio-form-slide-toggle\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'console.support.enabled\')"\n          appearance="fill"\n          class="settings-general__form__card__form-field"\n          formGroupName="support"\n        >\n          <mat-icon *ngIf="isReadonlySetting(\'console.support.enabled\')" gioFormPrefix>lock</mat-icon>\n          <gio-form-label>Activate Support</gio-form-label>\n          <mat-slide-toggle gioFormSlideToggle formControlName="enabled" aria-label="Activate Support" name="support"></mat-slide-toggle>\n        </gio-form-slide-toggle>\n\n        <mat-divider></mat-divider>\n\n        <gio-form-slide-toggle\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'console.pathBasedApiCreation.enabled\')"\n          appearance="fill"\n          class="settings-general__form__card__form-field"\n          formGroupName="pathBasedApiCreation"\n        >\n          <mat-icon *ngIf="isReadonlySetting(\'console.pathBasedApiCreation.enabled\')" gioFormPrefix>lock</mat-icon>\n          <gio-form-label>Enable path based API creation</gio-form-label>\n          <mat-slide-toggle\n            gioFormSlideToggle\n            formControlName="enabled"\n            aria-label="Enable path based API creation"\n            name="pathBasedApiCreation"\n          ></mat-slide-toggle>\n        </gio-form-slide-toggle>\n\n        <mat-divider></mat-divider>\n\n        <gio-form-slide-toggle\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'console.userCreation.enabled\')"\n          appearance="fill"\n          class="settings-general__form__card__form-field"\n          formGroupName="userCreation"\n        >\n          <mat-icon *ngIf="isReadonlySetting(\'console.userCreation.enabled\')" gioFormPrefix>lock</mat-icon>\n          <gio-form-label>Allow User Registration</gio-form-label>\n          <mat-slide-toggle\n            #managementUserCreationSlideToggle\n            gioFormSlideToggle\n            formControlName="enabled"\n            aria-label="Allow user creation"\n            name="userCreation"\n          ></mat-slide-toggle>\n        </gio-form-slide-toggle>\n\n        <ng-container *ngIf="managementUserCreationSlideToggle.checked">\n          <mat-divider></mat-divider>\n\n          <gio-form-slide-toggle\n            [matTooltip]="providedConfigurationMessage"\n            [matTooltipDisabled]="!isReadonlySetting(\'console.userCreation.automaticValidation.enabled\')"\n            appearance="fill"\n            class="settings-general__form__card__form-field"\n            formGroupName="automaticValidation"\n          >\n            <mat-icon *ngIf="isReadonlySetting(\'console.userCreation.automaticValidation.enabled\')" gioFormPrefix>lock</mat-icon>\n            <gio-form-label>Enable automatic validation of registration requests</gio-form-label>\n            <mat-slide-toggle\n              gioFormSlideToggle\n              formControlName="enabled"\n              aria-label="Enable auto validation of creation"\n              name="automaticValidation"\n            ></mat-slide-toggle>\n          </gio-form-slide-toggle>\n        </ng-container>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card class="settings-general__form__card" formGroupName="theme">\n      <h2 gioTableOfContents>Theme</h2>\n      <mat-card-content>\n        <mat-form-field\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'theme.name\')"\n          appearance="fill"\n          class="settings-general__form__card__form-field"\n        >\n          <mat-icon *ngIf="isReadonlySetting(\'theme.name\')" class="settings-general__form__card__form-field__icon" matPrefix>lock</mat-icon>\n          <mat-label>Name</mat-label>\n          <input matInput formControlName="name" />\n        </mat-form-field>\n\n        <mat-form-field\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'theme.logo\')"\n          appearance="fill"\n          class="settings-general__form__card__form-field"\n        >\n          <mat-icon *ngIf="isReadonlySetting(\'theme.logo\')" class="settings-general__form__card__form-field__icon" matPrefix>lock</mat-icon>\n          <mat-label>Logo</mat-label>\n          <input matInput formControlName="logo" />\n        </mat-form-field>\n\n        <mat-form-field\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'theme.loader\')"\n          appearance="fill"\n          class="settings-general__form__card__form-field"\n        >\n          <mat-icon *ngIf="isReadonlySetting(\'theme.loader\')" class="settings-general__form__card__form-field__icon" matPrefix\n            >lock</mat-icon\n          >\n          <mat-label>Loader</mat-label>\n          <input matInput formControlName="loader" />\n        </mat-form-field>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card class="settings-general__form__card" formGroupName="scheduler">\n      <h2 gioTableOfContents>Schedulers</h2>\n      <mat-card-content>\n        <mat-form-field\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'scheduler.tasks\')"\n          appearance="fill"\n          class="settings-general__form__card__form-field"\n        >\n          <mat-icon *ngIf="isReadonlySetting(\'scheduler.tasks\')" class="settings-general__form__card__form-field__icon" matPrefix\n            >lock</mat-icon\n          >\n          <mat-label>Tasks (in seconds)</mat-label>\n          <input matInput formControlName="tasks" type="number" min="0" />\n        </mat-form-field>\n\n        <mat-form-field\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'scheduler.notifications\')"\n          appearance="fill"\n          class="settings-general__form__card__form-field"\n        >\n          <mat-icon *ngIf="isReadonlySetting(\'scheduler.notifications\')" class="settings-general__form__card__form-field__icon" matPrefix\n            >lock</mat-icon\n          >\n          <mat-label>Notifications (in seconds)</mat-label>\n          <input #schedulerNotificationsInput matInput formControlName="notifications" type="number" min="0" />\n        </mat-form-field>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card class="settings-general__form__card" formGroupName="alert">\n      <h2 gioTableOfContents>Alerting</h2>\n      <mat-card-content>\n        <gio-form-slide-toggle\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'alert.enabled\')"\n          appearance="fill"\n          class="settings-general__form__card__form-field"\n        >\n          <mat-icon *ngIf="isReadonlySetting(\'alert.enabled\')" class="settings-general__form__card__form-field__icon" gioFormPrefix\n            >lock</mat-icon\n          >\n          <gio-form-label>Enable Alerting</gio-form-label>\n          <mat-slide-toggle gioFormSlideToggle formControlName="enabled" aria-label="Alerting enabled " name="alert"></mat-slide-toggle>\n        </gio-form-slide-toggle>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card class="settings-general__form__card" formGroupName="cors">\n      <h2 gioTableOfContents>CORS</h2>\n      <mat-card-content>\n        <div class="settings-general__form__card__label">Allow-Origin</div>\n        <p>\n          The origin parameter specifies a URI that may access the resource. Scheme, domain and port are part of the\n          <em>same-origin</em> definition. <br />\n          If you choose to enable \'*\' it means that is allows all requests, regardless of origin.\n        </p>\n        <mat-form-field\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'http.api.management.cors.allow-origin\')"\n          class="settings-general__form__card__form-field"\n          appearance="fill"\n        >\n          <mat-icon\n            *ngIf="isReadonlySetting(\'http.api.management.cors.allow-origin\')"\n            class="settings-general__form__card__form-field__icon"\n            matPrefix\n            >lock</mat-icon\n          >\n          <mat-label>Allow-Origin</mat-label>\n          <gio-form-tags-input\n            formControlName="allowOrigin"\n            placeholder="*, https://mydomain.com, (http|https).*.mydomain.com, ..."\n            [tagValidationHook]="confirmAllowAllOrigins()"\n          >\n          </gio-form-tags-input>\n\n          <mat-error *ngIf="formSettings.get(\'cors.allowOrigin\')?.errors?.allowOrigin">{{\n            formSettings.get(\'cors.allowOrigin\')?.errors?.allowOrigin\n          }}</mat-error>\n          <mat-hint>Regular Expressions are also supported</mat-hint>\n        </mat-form-field>\n\n        <div class="settings-general__form__card__label">Access-Control-Allow-Methods</div>\n        <p>Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request.</p>\n        <mat-form-field\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'http.api.management.cors.allow-methods\')"\n          class="settings-general__form__card__form-field"\n          appearance="fill"\n        >\n          <mat-icon\n            *ngIf="isReadonlySetting(\'http.api.management.cors.allow-methods\')"\n            class="settings-general__form__card__form-field__icon"\n            matPrefix\n            >lock</mat-icon\n          >\n          <mat-label>Access-Control-Allow-Methods</mat-label>\n          <mat-select formControlName="allowMethods" multiple>\n            <mat-option *ngFor="let method of httpMethods" [value]="method">{{ method }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <div class="settings-general__form__card__label">Allow-Headers</div>\n        <p>Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request.</p>\n        <mat-form-field\n          *ngIf="formSettings.get(\'cors.allowHeaders\'); let allowHeadersFormControl"\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'http.api.management.cors.allow-headers\')"\n          class="settings-general__form__card__form-field"\n          appearance="fill"\n        >\n          <mat-icon\n            *ngIf="isReadonlySetting(\'http.api.management.cors.allow-headers\')"\n            class="settings-general__form__card__form-field__icon"\n            matPrefix\n            >lock</mat-icon\n          >\n          <mat-label>Allow-Headers</mat-label>\n\n          <gio-form-tags-input\n            aria-label="Allow-Headers selection"\n            formControlName="allowHeaders"\n            placeholder="Content-Type, ..."\n            [addOnBlur]="false"\n            [autocompleteOptions]="defaultHttpHeaders"\n          >\n          </gio-form-tags-input>\n        </mat-form-field>\n\n        <div class="settings-general__form__card__label">Exposed-Headers</div>\n        <p>Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request.</p>\n        <mat-form-field\n          *ngIf="formSettings.get(\'cors.exposedHeaders\'); let exposedHeadersFormControl"\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'http.api.management.cors.exposed-headers\')"\n          class="settings-general__form__card__form-field"\n          appearance="fill"\n        >\n          <mat-icon\n            *ngIf="isReadonlySetting(\'http.api.management.cors.exposed-headers\')"\n            class="settings-general__form__card__form-field__icon"\n            matPrefix\n            >lock</mat-icon\n          >\n          <mat-label>Exposed-Headers</mat-label>\n\n          <gio-form-tags-input\n            aria-label="Exposed-Headers selection"\n            formControlName="exposedHeaders"\n            placeholder="Content-Type, ..."\n            [addOnBlur]="false"\n            [autocompleteOptions]="defaultHttpHeaders"\n          >\n          </gio-form-tags-input>\n        </mat-form-field>\n\n        <div class="settings-general__form__card__label">Max age</div>\n        <p>How long the response from a pre-flight request can be cached by clients</p>\n        <mat-form-field\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'http.api.management.cors.max-age\')"\n          appearance="fill"\n          class="settings-general__form__card__form-field"\n        >\n          <mat-icon\n            *ngIf="isReadonlySetting(\'http.api.management.cors.max-age\')"\n            class="settings-general__form__card__form-field__icon"\n            matPrefix\n            >lock</mat-icon\n          >\n          <mat-label>Max age</mat-label>\n          <input #maxAgeInput matInput formControlName="maxAge" type="number" min="0" />\n          <mat-hint>(seconds)</mat-hint>\n        </mat-form-field>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card class="settings-general__form__card" formGroupName="email">\n      <h2 gioTableOfContents>SMTP</h2>\n      <mat-card-content>\n        <gio-form-slide-toggle\n          [matTooltip]="providedConfigurationMessage"\n          [matTooltipDisabled]="!isReadonlySetting(\'email.enabled\')"\n          appearance="fill"\n          class="settings-general__form__card__form-field"\n        >\n          <mat-icon *ngIf="isReadonlySetting(\'email.enabled\')" class="settings-general__form__card__form-field__icon" gioFormPrefix\n            >lock</mat-icon\n          >\n          <gio-form-label>Enable Emailing</gio-form-label>\n          <mat-slide-toggle\n            #emailEnabledSlideToggle\n            gioFormSlideToggle\n            formControlName="enabled"\n            aria-label="Email enabled"\n            name="emailEnabled"\n          ></mat-slide-toggle>\n        </gio-form-slide-toggle>\n\n        <ng-container *ngIf="emailEnabledSlideToggle.checked">\n          <mat-divider></mat-divider>\n\n          <mat-form-field\n            [matTooltip]="providedConfigurationMessage"\n            [matTooltipDisabled]="!isReadonlySetting(\'email.host\')"\n            appearance="fill"\n            class="settings-general__form__card__form-field margin-top"\n          >\n            <mat-icon *ngIf="isReadonlySetting(\'email.host\')" class="settings-general__form__card__form-field__icon" matPrefix\n              >lock</mat-icon\n            >\n            <mat-label>Host</mat-label>\n            <input matInput formControlName="host" />\n          </mat-form-field>\n\n          <mat-form-field\n            [matTooltip]="providedConfigurationMessage"\n            [matTooltipDisabled]="!isReadonlySetting(\'email.port\')"\n            appearance="fill"\n            class="settings-general__form__card__form-field"\n          >\n            <mat-icon *ngIf="isReadonlySetting(\'email.port\')" class="settings-general__form__card__form-field__icon" matPrefix\n              >lock</mat-icon\n            >\n            <mat-label>Port</mat-label>\n            <input matInput formControlName="port" type="number" min="0" />\n          </mat-form-field>\n\n          <mat-form-field\n            [matTooltip]="providedConfigurationMessage"\n            [matTooltipDisabled]="!isReadonlySetting(\'email.username\')"\n            appearance="fill"\n            class="settings-general__form__card__form-field"\n          >\n            <mat-icon *ngIf="isReadonlySetting(\'email.username\')" class="settings-general__form__card__form-field__icon" matPrefix\n              >lock</mat-icon\n            >\n            <mat-label>Username</mat-label>\n            <input matInput formControlName="username" />\n          </mat-form-field>\n\n          <mat-form-field\n            [matTooltip]="providedConfigurationMessage"\n            [matTooltipDisabled]="!isReadonlySetting(\'email.password\')"\n            appearance="fill"\n            class="settings-general__form__card__form-field"\n          >\n            <mat-icon *ngIf="isReadonlySetting(\'email.password\')" class="settings-general__form__card__form-field__icon" matPrefix\n              >lock</mat-icon\n            >\n            <mat-label>Password</mat-label>\n            <input matInput formControlName="password" type="password" />\n          </mat-form-field>\n\n          <mat-form-field\n            [matTooltip]="providedConfigurationMessage"\n            [matTooltipDisabled]="!isReadonlySetting(\'email.protocol\')"\n            appearance="fill"\n            class="settings-general__form__card__form-field"\n          >\n            <mat-icon *ngIf="isReadonlySetting(\'email.protocol\')" class="settings-general__form__card__form-field__icon" matPrefix\n              >lock</mat-icon\n            >\n            <mat-label>Protocol</mat-label>\n            <input matInput formControlName="protocol" />\n          </mat-form-field>\n\n          <mat-form-field\n            [matTooltip]="providedConfigurationMessage"\n            [matTooltipDisabled]="!isReadonlySetting(\'email.subject\')"\n            appearance="fill"\n            class="settings-general__form__card__form-field"\n          >\n            <mat-icon *ngIf="isReadonlySetting(\'email.subject\')" class="settings-general__form__card__form-field__icon" matPrefix\n              >lock</mat-icon\n            >\n            <mat-label>Subject</mat-label>\n            <input matInput formControlName="subject" />\n          </mat-form-field>\n\n          <mat-form-field\n            [matTooltip]="providedConfigurationMessage"\n            [matTooltipDisabled]="!isReadonlySetting(\'email.from\')"\n            appearance="fill"\n            class="settings-general__form__card__form-field"\n          >\n            <mat-icon *ngIf="isReadonlySetting(\'email.from\')" class="settings-general__form__card__form-field__icon" matPrefix\n              >lock</mat-icon\n            >\n            <mat-label>From</mat-label>\n            <input matInput formControlName="from" type="email" />\n          </mat-form-field>\n\n          <h3 class="settings-general__form__card__h3">Mail properties</h3>\n          <ng-container formGroupName="properties">\n            <gio-form-slide-toggle\n              [matTooltip]="providedConfigurationMessage"\n              [matTooltipDisabled]="!isReadonlySetting(\'email.properties.auth\')"\n              appearance="fill"\n              class="settings-general__form__card__form-field"\n            >\n              <mat-icon\n                *ngIf="isReadonlySetting(\'email.properties.auth\')"\n                class="settings-general__form__card__form-field__icon"\n                gioFormPrefix\n                >lock</mat-icon\n              >\n              <gio-form-label>Enable Auth</gio-form-label>\n              <mat-slide-toggle\n                gioFormSlideToggle\n                formControlName="auth"\n                aria-label="Alerting enabled"\n                name="emailPropertiesAuth"\n              ></mat-slide-toggle>\n            </gio-form-slide-toggle>\n\n            <mat-divider></mat-divider>\n\n            <gio-form-slide-toggle\n              [matTooltip]="providedConfigurationMessage"\n              [matTooltipDisabled]="!isReadonlySetting(\'email.properties.startTlsEnable\')"\n              appearance="fill"\n              class="settings-general__form__card__form-field"\n            >\n              <mat-icon\n                *ngIf="isReadonlySetting(\'email.properties.startTlsEnable\')"\n                class="settings-general__form__card__form-field__icon"\n                gioFormPrefix\n                >lock</mat-icon\n              >\n              <gio-form-label>Enable Start TLS</gio-form-label>\n              <mat-slide-toggle\n                gioFormSlideToggle\n                formControlName="startTlsEnable"\n                aria-label="Start TLS enabled"\n                name="emailPropertiesStartTlsEnable"\n              ></mat-slide-toggle>\n            </gio-form-slide-toggle>\n\n            <mat-divider></mat-divider>\n\n            <mat-form-field\n              [matTooltip]="providedConfigurationMessage"\n              [matTooltipDisabled]="!isReadonlySetting(\'email.sslTrust\')"\n              appearance="fill"\n              class="settings-general__form__card__form-field margin-top"\n            >\n              <mat-icon *ngIf="isReadonlySetting(\'email.sslTrust\')" class="settings-general__form__card__form-field__icon" matPrefix\n                >lock</mat-icon\n              >\n              <mat-label>SSL Trust</mat-label>\n              <input #emailPropertiesSslTrustInput matInput formControlName="sslTrust" />\n            </mat-form-field>\n          </ng-container>\n        </ng-container>\n      </mat-card-content>\n    </mat-card>\n    <gio-save-bar [form]="formSettings" [formInitialValues]="formInitialValues"> </gio-save-bar>\n  </form>\n\n  <gio-table-of-contents\n    class="settings-general__toc"\n    [sectionNames]="{ \'\': \'Settings\' }"\n    scrollingContainer=".gio-main-page__content"\n  ></gio-table-of-contents>\n</div>\n'},,,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div class="title">\n  <h1>Users</h1>\n\n  <button (click)="onAddUserClick()" mat-raised-button color="primary" data-testid="add-user">\n    <mat-icon>person_add</mat-icon> Add user\n  </button>\n</div>\n\n<gio-table-wrapper [length]="nbTotalUsers" [filters]="filters" (filtersChange)="onFiltersChanged($event)">\n  <table mat-table [dataSource]="filteredTableData" class="users-table" id="usersTable" aria-label="User table">\n    \x3c!-- Position Column --\x3e\n    <ng-container matColumnDef="userPicture">\n      <th mat-header-cell *matHeaderCellDef id="userPicture" width="1%"></th>\n      <td mat-cell *matCellDef="let element">\n        <gio-avatar [src]="element.userPicture" [name]="element.displayName" size="32" [roundedBorder]="true"></gio-avatar>\n      </td>\n    </ng-container>\n\n    \x3c!-- Display name Column --\x3e\n    <ng-container matColumnDef="displayName">\n      <th mat-header-cell *matHeaderCellDef id="displayName">Display name</th>\n      <td mat-cell *matCellDef="let element" (click)="onDisplayNameClick(element.userId)">\n        <a>{{ element.displayName }}</a>\n        <span class="gio-badge" *ngIf="element.primary_owner">Primary Owner</span>\n        <span class="gio-badge-error" *ngIf="element.number_of_active_tokens > 0">\n          Active Token{{ element.number_of_active_tokens > 1 ? \'s\' : \'\' }}\n        </span>\n      </td>\n    </ng-container>\n\n    \x3c!-- Status Column --\x3e\n    <ng-container matColumnDef="status">\n      <th mat-header-cell *matHeaderCellDef id="status" width="15%">Status</th>\n      <td mat-cell *matCellDef="let element">\n        <span class="gio-badge" [ngClass]="element.badgeCSSClass">{{ element.status | titlecase }}</span>\n      </td>\n    </ng-container>\n\n    \x3c!-- Email Column --\x3e\n    <ng-container matColumnDef="email">\n      <th mat-header-cell *matHeaderCellDef id="email" width="15%">Email</th>\n      <td mat-cell *matCellDef="let element">{{ element.email }}</td>\n    </ng-container>\n\n    \x3c!-- Source Column --\x3e\n    <ng-container matColumnDef="source">\n      <th mat-header-cell *matHeaderCellDef id="source" width="15%">Source</th>\n      <td mat-cell *matCellDef="let element">{{ element.source }}</td>\n    </ng-container>\n\n    \x3c!-- Actions Column --\x3e\n    <ng-container matColumnDef="actions">\n      <th mat-header-cell *matHeaderCellDef id="actions" width="1%"></th>\n      <td mat-cell *matCellDef="let element">\n        <ng-container *gioPermission="{ anyOf: [\'organization-user-d\'] }">\n          <button\n            *ngIf="!element.primary_owner"\n            (click)="onDeleteUserClick(element)"\n            mat-icon-button\n            data-testid="delete-user"\n            aria-label="Button to delete user"\n            matTooltip="Delete user"\n          >\n            <mat-icon>delete</mat-icon>\n          </button>\n        </ng-container>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n    <tr mat-row *matRowDef="let row; columns: displayedColumns"></tr>\n\n    \x3c!-- Row shown when there is no data --\x3e\n    <tr class="mat-row" *matNoDataRow>\n      <td class="mat-cell" [attr.colspan]="displayedColumns.length">No user</td>\n    </tr>\n  </table>\n</gio-table-wrapper>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<form *ngIf="!isLoading" [formGroup]="userForm" (ngSubmit)="onSubmit()" gioFormFocusInvalid>\n  <h1><gio-go-back-button [ajsGo]="{ to: \'organization.settings.ng-users\' }"></gio-go-back-button>Pre-register a user</h1>\n  <h4>The new user will receive an email to finalize the creation by setting a password.</h4>\n\n  <mat-card class="org-settings-new-user__card">\n    <h2>User type</h2>\n\n    <gio-form-card-group class="org-settings-new-user__card__provider-type-group" formControlName="type">\n      <gio-form-card class="org-settings-new-user__card__user-type-group__button" value="EXTERNAL_USER">\n        <mat-icon class="org-settings-new-user__card__user-type-group__button__logo" matPrefix>perm_identity</mat-icon>\n        <p class="org-settings-new-user__card__user-type-group__button__label">User</p>\n      </gio-form-card>\n\n      <gio-form-card class="org-settings-new-user__card__user-type-group__button" value="SERVICE_ACCOUNT">\n        <mat-icon class="org-settings-new-user__card__user-type-group__button__logo" matPrefix>manage_accounts</mat-icon>\n        <p class="org-settings-new-user__card__user-type-group__button__label">Service Account</p>\n      </gio-form-card>\n    </gio-form-card-group>\n  </mat-card>\n\n  <mat-card class="org-settings-new-user__card">\n    <mat-card-content *ngIf="userForm.get(\'type\').value === UserType.EXTERNAL_USER">\n      <h2>User</h2>\n      <mat-form-field class="org-settings-new-user__card__form-field" appearance="fill">\n        <mat-label>First Name</mat-label>\n        <input matInput formControlName="firstName" required data-testid="firstName" />\n        <mat-error *ngIf="userForm.get(\'firstName\').errors?.required">This field is required.</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class="org-settings-new-user__card__form-field" appearance="fill">\n        <mat-label>Last Name</mat-label>\n        <input matInput formControlName="lastName" required data-testid="lastName" />\n        <mat-error *ngIf="userForm.get(\'lastName\').errors?.required">This field is required.</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class="org-settings-new-user__card__form-field" appearance="fill">\n        <mat-label>Email</mat-label>\n        <input matInput formControlName="email" type="email" required data-testid="email" />\n        <mat-error *ngIf="userForm.get(\'email\').errors?.required">This field is required.</mat-error>\n        <mat-error *ngIf="userForm.get(\'email\').errors?.email">This field should be a valid email.</mat-error>\n      </mat-form-field>\n\n      <ng-container *ngIf="identityProviders && identityProviders.length > 1">\n        <h2>Identity Provider</h2>\n\n        <mat-form-field class="org-settings-new-user__card__form-field" appearance="fill">\n          <mat-label>Name</mat-label>\n          <mat-select formControlName="source" required>\n            <mat-option *ngFor="let idp of identityProviders" [value]="idp.id"> {{ idp.name }}</mat-option>\n          </mat-select>\n\n          <mat-error *ngIf="userForm.get(\'email\').errors?.required">This field is required.</mat-error>\n          <mat-error *ngIf="userForm.get(\'email\').errors?.email">This field should be a valid email.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field\n          *ngIf="userForm.get(\'source\').value !== \'gravitee\'"\n          appearance="fill"\n          class="org-settings-new-user__card__form-field"\n        >\n          <mat-label>Identifier</mat-label>\n          <input matInput formControlName="sourceId" required />\n          <mat-error *ngIf="userForm.get(\'sourceId\').errors?.required">This field is required.</mat-error>\n        </mat-form-field>\n      </ng-container>\n    </mat-card-content>\n\n    <mat-card-content *ngIf="userForm.get(\'type\').value === UserType.SERVICE_ACCOUNT">\n      <h2>Service Account</h2>\n\n      <mat-form-field class="org-settings-new-user__card__form-field" appearance="fill">\n        <mat-label>Service Name</mat-label>\n        <input matInput formControlName="lastName" required data-testid="lastName" />\n        <mat-hint>Choose a meaningful name for your service account.</mat-hint>\n        <mat-error *ngIf="userForm.get(\'lastName\').errors?.required">This field is required.</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class="org-settings-new-user__card__form-field" appearance="fill">\n        <mat-label>Email</mat-label>\n        <input matInput formControlName="email" type="email" data-testid="email" />\n        <mat-error *ngIf="userForm.get(\'email\').errors?.email">This field should be a valid email.</mat-error>\n      </mat-form-field>\n    </mat-card-content>\n  </mat-card>\n\n  <gio-save-bar creationMode="true" [form]="userForm"> </gio-save-bar>\n</form>\n'},,,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h1>Authentication</h1>\n\n<h4>\n  By creating identity provider, you are providing capabilities to users to login into the portal / management-ui using external user\n  accounts from GitHub, Google, OpenID Connect server or Gravitee.io AM.\n</h4>\n\n<mat-card class="org-settings-identity-providers__config-card">\n  <h2>Configuration</h2>\n  <mat-slide-toggle\n    [checked]="consoleSettings?.authentication?.localLogin?.enabled"\n    [disabled]="isReadonlySetting(\'console.authentication.localLogin.enabled\') || !hasActivatedIdp()"\n    [matTooltip]="getLocalLoginTooltipMessage()"\n    [matTooltipDisabled]="getLocalLoginTooltipMessage() === null"\n    (change)="updateLocalLogin($event.checked)"\n    >Show login form on management console\n  </mat-slide-toggle>\n</mat-card>\n\n<mat-card class="org-settings-identity-providers__list-card">\n  <div class="org-settings-identity-providers__list-card__title">\n    <h2>Identity Providers</h2>\n\n    <button (click)="onAddIdpClicked()" mat-raised-button color="primary"><mat-icon>add</mat-icon>Add an identity provider</button>\n  </div>\n\n  <gio-table-wrapper [length]="tableUnpaginatedLength" (filtersChange)="onFiltersChanged($event)">\n    <table\n      mat-table\n      [dataSource]="filteredTableData"\n      class="org-settings-identity-providers__table"\n      id="identityProvidersTable"\n      aria-label="Identity Providers table"\n    >\n      \x3c!-- Logo Column --\x3e\n      <ng-container matColumnDef="logo">\n        <th mat-header-cell *matHeaderCellDef id="logo"></th>\n        <td mat-cell *matCellDef="let element">\n          <img class="org-settings-identity-providers__table__logo" [src]="element.logo" alt="Logo of {{ element.name }}" />\n        </td>\n      </ng-container>\n\n      \x3c!-- Id Column --\x3e\n      <ng-container matColumnDef="id">\n        <th mat-header-cell *matHeaderCellDef id="id">Id</th>\n        <td mat-cell *matCellDef="let element" (click)="onEditActionClicked(element)">\n          <a>{{ element.id }}</a>\n        </td>\n      </ng-container>\n\n      \x3c!-- Name Column --\x3e\n      <ng-container matColumnDef="name">\n        <th mat-header-cell *matHeaderCellDef id="name">Name</th>\n        <td mat-cell *matCellDef="let element">\n          {{ element.name }}\n        </td>\n      </ng-container>\n\n      \x3c!-- Description Column --\x3e\n      <ng-container matColumnDef="description">\n        <th mat-header-cell *matHeaderCellDef id="description">Description</th>\n        <td mat-cell *matCellDef="let element">{{ element.description }}</td>\n      </ng-container>\n\n      \x3c!-- Activated Column --\x3e\n      <ng-container matColumnDef="activated">\n        <th mat-header-cell *matHeaderCellDef id="activated">Status</th>\n        <td mat-cell *matCellDef="let element">\n          <span *ngIf="element.activated" class="gio-badge-success">Activated</span>\n          <span *ngIf="!element.activated" class="gio-badge-warning">Deactivated</span>\n        </td>\n      </ng-container>\n\n      \x3c!-- Sync Column --\x3e\n      <ng-container matColumnDef="sync">\n        <th mat-header-cell *matHeaderCellDef id="sync">\n          <div class="org-settings-identity-providers__table__centered-cell">Sync</div>\n        </th>\n        <td mat-cell *matCellDef="let element">\n          <div class="org-settings-identity-providers__table__centered-cell">\n            <mat-icon *ngIf="element.sync">check</mat-icon>\n          </div>\n        </td>\n      </ng-container>\n\n      \x3c!-- Available on the Portal Column --\x3e\n      <ng-container matColumnDef="availableOnPortal">\n        <th mat-header-cell *matHeaderCellDef id="availableOnPortal">\n          <div class="org-settings-identity-providers__table__centered-cell">Available on dev portal</div>\n        </th>\n        <td mat-cell *matCellDef="let element">\n          <div class="org-settings-identity-providers__table__centered-cell">\n            <mat-icon *ngIf="element.availableOnPortal">check</mat-icon>\n          </div>\n        </td>\n      </ng-container>\n\n      \x3c!-- Updated at Column --\x3e\n      <ng-container matColumnDef="updatedAt">\n        <th mat-header-cell *matHeaderCellDef id="updatedAt">Updated at</th>\n        <td mat-cell *matCellDef="let element">\n          {{ element.updatedAt | date: \'medium\' }}\n        </td>\n      </ng-container>\n\n      \x3c!-- Actions Column --\x3e\n      <ng-container matColumnDef="actions">\n        <th mat-header-cell *matHeaderCellDef id="actions"></th>\n        <td mat-cell *matCellDef="let element">\n          <div class="org-settings-identity-providers__table__centered-cell">\n            <ng-container *gioPermission="{ anyOf: [\'organization-identity_provider_activation-u\'] }">\n              <button\n                (click)="onActivationToggleActionClicked(element)"\n                mat-icon-button\n                aria-label="Switch to toggle an identity provider activation"\n                matTooltip="\n            {{ element.activated ? \'Deactivate identity provider\' : \'Activate identity provider\' }}\n            "\n              >\n                <mat-icon>{{ element.activated ? \'toggle_off\' : \'toggle_on\' }}</mat-icon>\n              </button>\n            </ng-container>\n            <button\n              (click)="onEditActionClicked(element)"\n              mat-icon-button\n              aria-label="Button to edit an identity provider"\n              matTooltip="Edit identity provider"\n            >\n              <mat-icon>edit</mat-icon>\n            </button>\n            <ng-container *gioPermission="{ anyOf: [\'organization-identity_provider-d\'] }">\n              <button\n                (click)="onDeleteActionClicked(element)"\n                mat-icon-button\n                aria-label="Button to delete an identity provider"\n                matTooltip="Delete identity provider"\n              >\n                <mat-icon>delete</mat-icon>\n              </button>\n            </ng-container>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n      <tr mat-row *matRowDef="let row; columns: displayedColumns"></tr>\n\n      \x3c!-- Row shown when there is no data --\x3e\n      <tr class="mat-row" *matNoDataRow>\n        <td class="mat-cell" [attr.colspan]="displayedColumns.length">No Identity Provider</td>\n      </tr>\n    </table>\n  </gio-table-wrapper>\n</mat-card>\n'},,,,,,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="identity-provider">\n  <form *ngIf="!isLoading" [formGroup]="identityProviderFormGroup" (ngSubmit)="onSubmit()" autocomplete="off" gioFormFocusInvalid>\n    <h1>\n      <gio-go-back-button [ajsGo]="{ to: \'organization.settings.ng-identityproviders\' }"></gio-go-back-button>\n      <ng-container *ngIf="mode === \'new\'">Create a new identity provider</ng-container>\n      <ng-container *ngIf="mode === \'edit\'">Update {{ identityProviderType | titlecase }} identity provider</ng-container>\n    </h1>\n\n    <mat-card *ngIf="mode === \'new\'" class="identity-provider__card">\n      <h2 gioTableOfContents>Provider type</h2>\n\n      <gio-form-card-group class="identity-provider__card__provider-type-group" formControlName="type">\n        <gio-form-card class="identity-provider__card__provider-type-group__button" value="GRAVITEEIO_AM">\n          <img\n            class="identity-provider__card__provider-type-group__button__logo"\n            [src]="\'assets/logo_graviteeio_am-idp.svg\'"\n            alt="ravitee.io AM Logo"\n          />\n          <p class="identity-provider__card__provider-type-group__button__label">Gravitee.io AM</p>\n        </gio-form-card>\n\n        <gio-form-card class="identity-provider__card__provider-type-group__button" value="OIDC">\n          <img\n            class="identity-provider__card__provider-type-group__button__logo"\n            [src]="\'assets/logo_oidc-idp.svg\'"\n            alt="OpenID Connect Logo"\n          />\n          <p class="identity-provider__card__provider-type-group__button__label">OpenID Connect</p>\n        </gio-form-card>\n\n        <gio-form-card class="identity-provider__card__provider-type-group__button" value="GOOGLE">\n          <img class="identity-provider__card__provider-type-group__button__logo" [src]="\'assets/logo_google-idp.svg\'" alt="Google Logo" />\n          <p class="identity-provider__card__provider-type-group__button__label">Google</p>\n        </gio-form-card>\n\n        <gio-form-card class="identity-provider__card__provider-type-group__button" value="GITHUB">\n          <img class="identity-provider__card__provider-type-group__button__logo" [src]="\'assets/logo_github-idp.svg\'" alt="Github Logo" />\n          <p class="identity-provider__card__provider-type-group__button__label">Github</p>\n        </gio-form-card>\n      </gio-form-card-group>\n    </mat-card>\n\n    <mat-card class="identity-provider__card">\n      <h2 gioTableOfContents>General</h2>\n\n      <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n        <mat-label>Name</mat-label>\n        <input matInput name="name" minlength="2" maxlength="50" formControlName="name" required />\n        <mat-hint>Identity provider name. The name will be used to define the authentication endpoint</mat-hint>\n\n        <mat-error *ngIf="this.identityProviderFormGroup.get(\'name\').hasError(\'required\')">Identity provider name is required.</mat-error>\n        <mat-error *ngIf="this.identityProviderFormGroup.get(\'name\').hasError(\'maxlength\')"\n          >The identity provider has to be less than 50 characters long.</mat-error\n        >\n        <mat-error *ngIf="this.identityProviderFormGroup.get(\'name\').hasError(\'minlength\')"\n          >The identity provider has to be more than 2 characters long.</mat-error\n        >\n      </mat-form-field>\n\n      <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n        <mat-label>Description</mat-label>\n        <input matInput name="description" formControlName="description" />\n        <mat-hint>Provide a description of the identity provider</mat-hint>\n      </mat-form-field>\n\n      \x3c!-- Note: Token exchange endpoint ?? --\x3e\n\n      <gio-form-slide-toggle class="identity-provider__card__form-field" appearance="fill">\n        <gio-form-label>Allow portal authentication to use this identity provider</gio-form-label>\n        <mat-slide-toggle\n          gioFormSlideToggle\n          aria-label="Allow identity provider for portal"\n          name="identityProviderEnabled"\n          formControlName="enabled"\n        ></mat-slide-toggle>\n      </gio-form-slide-toggle>\n\n      <gio-form-slide-toggle class="identity-provider__card__form-field" appearance="fill">\n        <gio-form-label>A public email is required to be able to authenticate</gio-form-label>\n        <mat-slide-toggle\n          gioFormSlideToggle\n          aria-label="A public email is required"\n          name="identityProviderEmailRequired"\n          formControlName="emailRequired"\n        ></mat-slide-toggle>\n      </gio-form-slide-toggle>\n\n      <div class="identity-provider__card__form-field radio-group">\n        <label class="mat-body-strong">Group and role mappings</label>\n        <div>Platform administrators still have the ability to override mappings</div>\n        <mat-radio-group\n          class="identity-provider__card__form-field__radio-group"\n          aria-label="Select an option"\n          formControlName="syncMappings"\n        >\n          <mat-radio-button class="identity-provider__card__form-field__radio-group__button" [value]="false"\n            >Computed only during first user authentication</mat-radio-button\n          >\n          <mat-radio-button class="identity-provider__card__form-field__radio-group__button" [value]="true"\n            >Computed during each user authentication</mat-radio-button\n          >\n        </mat-radio-group>\n      </div>\n    </mat-card>\n\n    <ng-container [ngSwitch]="identityProviderType">\n      <org-settings-identity-provider-oidc *ngSwitchCase="\'OIDC\'" #providerConfiguration></org-settings-identity-provider-oidc>\n      <org-settings-identity-provider-google *ngSwitchCase="\'GOOGLE\'" #providerConfiguration></org-settings-identity-provider-google>\n      <org-settings-identity-provider-github *ngSwitchCase="\'GITHUB\'" #providerConfiguration></org-settings-identity-provider-github>\n      <org-settings-identity-provider-graviteeio-am\n        *ngSwitchCase="\'GRAVITEEIO_AM\'"\n        #providerConfiguration\n      ></org-settings-identity-provider-graviteeio-am>\n    </ng-container>\n\n    <mat-card *ngIf="mode === \'edit\'" class="identity-provider__card" formArrayName="groupMappings">\n      <h2 gioTableOfContents>Groups Mapping</h2>\n      <mat-card\n        *ngFor="let groupMappingControl of this.identityProviderFormGroup.get(\'groupMappings\')?.controls; index as groupMappingIndex"\n        class="identity-provider__card__group-mapping"\n        [formGroupName]="groupMappingIndex"\n      >\n        <mat-form-field class="identity-provider__card__group-mapping__form-field" appearance="fill">\n          <mat-label>Condition</mat-label>\n          <input #groupMappingConditionInput matInput name="condition" formControlName="condition" required />\n          <mat-hint>The condition which should be validated to associate below groups at login time.</mat-hint>\n          <mat-error *ngIf="groupMappingControl.get(\'condition\').hasError(\'required\')">Condition is required.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class="identity-provider__card__group-mapping__form-field" appearance="fill">\n          <mat-label>Group</mat-label>\n          <mat-select formControlName="groups" multiple required>\n            <mat-option *ngFor="let group of groups$ | async" [value]="group.id">{{ group.name }}</mat-option>\n          </mat-select>\n          <mat-error *ngIf="groupMappingControl.get(\'groups\').hasError(\'required\')">At least one group is required.</mat-error>\n        </mat-form-field>\n\n        <mat-card-actions align="end">\n          <button mat-button type="button" (click)="removeGroupMappingFromIdentityProviderFormGroup(groupMappingIndex)">\n            <mat-icon>delete</mat-icon> Delete\n          </button>\n        </mat-card-actions>\n      </mat-card>\n\n      <mat-card-actions>\n        <button mat-button color="accent" type="button" (click)="addGroupMappingToIdentityProviderFormGroup()">\n          <mat-icon>add</mat-icon> Add group mapping\n        </button>\n      </mat-card-actions>\n    </mat-card>\n\n    <mat-card *ngIf="mode === \'edit\'" class="identity-provider__card" formArrayName="roleMappings">\n      <h2 gioTableOfContents>Roles Mapping</h2>\n      <mat-card\n        *ngFor="let roleMappingControl of this.identityProviderFormGroup.get(\'roleMappings\')?.controls; index as roleMappingIndex"\n        class="identity-provider__card__role-mapping"\n        [formGroupName]="roleMappingIndex"\n      >\n        <mat-form-field class="identity-provider__card__role-mapping__form-field" appearance="fill">\n          <mat-label>Condition</mat-label>\n          <input matInput name="condition" formControlName="condition" required />\n          <mat-hint>The condition which should be validated to associate below groups at login time.</mat-hint>\n          <mat-error *ngIf="roleMappingControl.get(\'condition\').hasError(\'required\')">Condition is required.</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class="identity-provider__card__role-mapping__form-field" appearance="fill">\n          <mat-label>Organization roles</mat-label>\n          <mat-select formControlName="organizations" multiple required>\n            <mat-option *ngFor="let role of organizationRoles$ | async" [value]="role.name">{{ role.name }}</mat-option>\n            <mat-error *ngIf="roleMappingControl.get(\'organizations\').hasError(\'required\')"\n              >At least one organization role is required.</mat-error\n            >\n          </mat-select>\n        </mat-form-field>\n\n        <table\n          mat-table\n          [dataSource]="environments$ | async"\n          class="identity-provider__card__role-mapping__table"\n          aria-label="Environment role selection"\n        >\n          \x3c!-- Name Column --\x3e\n          <ng-container matColumnDef="name">\n            <th mat-header-cell id="name" *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef="let environment">{{ environment.name }}</td>\n          </ng-container>\n\n          \x3c!-- Description Column --\x3e\n          <ng-container matColumnDef="description">\n            <th mat-header-cell id="description" *matHeaderCellDef>Description</th>\n            <td mat-cell *matCellDef="let environment">{{ environment.description }}</td>\n          </ng-container>\n\n          \x3c!-- Actions Column --\x3e\n          <ng-container matColumnDef="actions">\n            <th mat-header-cell id="actions" *matHeaderCellDef>Roles selected</th>\n            <td mat-cell *matCellDef="let environment" formGroupName="environments">\n              <mat-form-field appearance="fill">\n                <mat-label>Roles</mat-label>\n                <mat-select [formControlName]="environment.id" multiple required>\n                  <mat-option *ngFor="let role of environmentRoles$ | async" [value]="role.name">{{ role.name }}</mat-option>\n                </mat-select>\n                <mat-error *ngIf="roleMappingControl.get(\'environments\').get(environment.id).hasError(\'required\')"\n                  >At least one role is required.</mat-error\n                >\n              </mat-form-field>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef="environmentTableDisplayedColumns"></tr>\n          <tr mat-row *matRowDef="let row; columns: environmentTableDisplayedColumns"></tr>\n        </table>\n\n        <mat-card-actions align="end">\n          <button mat-button type="button" (click)="removeRoleMappingFromIdentityProviderFormGroup(roleMappingIndex)">\n            <mat-icon>delete</mat-icon> Delete\n          </button>\n        </mat-card-actions>\n      </mat-card>\n\n      <mat-card-actions>\n        <button mat-button color="accent" type="button" (click)="addRoleMappingToIdentityProviderFormGroup()">\n          <mat-icon>add</mat-icon> Add role mapping\n        </button>\n      </mat-card-actions>\n    </mat-card>\n\n    <gio-save-bar\n      [creationMode]="mode === \'new\'"\n      [form]="identityProviderFormGroup"\n      [formInitialValues]="initialIdentityProviderValue"\n      (resetClicked)="onFormReset()"\n    >\n    </gio-save-bar>\n  </form>\n\n  <gio-table-of-contents [sectionNames]="{ \'\': \'Identity provider\' }" scrollingContainer=".gio-main-page__content"></gio-table-of-contents>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="org-settings-notification-templates">\n  <div class="org-settings-notification-templates__content">\n    <h1>Templates</h1>\n\n    <mat-card *ngFor="let item of $any(notificationTemplatesByScope) | keyvalue" class="org-settings-notification-templates__content__card">\n      <h2 gioTableOfContents>{{ item.key }}</h2>\n      <mat-list class="org-settings-notification-templates__content__list">\n        <mat-list-item\n          class="org-settings-notification-templates__content__list__item"\n          *ngFor="let notificationTemplate of item.value"\n          (click)="onEditActionClicked(notificationTemplate)"\n        >\n          <mat-icon mat-list-icon>{{ notificationTemplate.icon }}</mat-icon>\n          <div mat-line>\n            <span>{{ notificationTemplate.name }}</span>\n            <span *ngIf="notificationTemplate.overridden" class="gio-badge">Custom</span>\n          </div>\n          <div mat-line>{{ notificationTemplate.description }}</div>\n        </mat-list-item>\n      </mat-list>\n    </mat-card>\n  </div>\n\n  <gio-table-of-contents\n    class="org-settings-notification-templates__toc"\n    [sectionNames]="{ \'\': \'Templates\' }"\n    scrollingContainer=".gio-main-page__content"\n  ></gio-table-of-contents>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="org-settings-cockpit">\n  <mat-card *ngIf="!isLoading" class="org-settings-cockpit__card">\n    <mat-icon class="org-settings-cockpit__card__icon">{{ icon }}</mat-icon>\n    <h2 class="org-settings-cockpit__card__title">{{ title }}</h2>\n    <div class="org-settings-cockpit__card__message" [innerHTML]="message"></div>\n  </mat-card>\n</div>\n'},,,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="org-settings-notification-template">\n  <form\n    *ngIf="!isLoading"\n    autocomplete="off"\n    class="org-settings-notification-template__form"\n    [formGroup]="notificationTemplatesForm"\n    (ngSubmit)="submitForm()"\n  >\n    <h1>\n      <gio-go-back-button [ajsGo]="{ to: \'organization.settings.ng-notificationTemplates\' }"></gio-go-back-button>\n      <span>{{ notificationTemplateName }}</span>\n    </h1>\n\n    <h4>\n      {{ notificationTemplates[0].description }}\n    </h4>\n    <p *ngIf="isTemplateToInclude">\n      To include this template in another template, use <code>&lt;#include "{{ notificationTemplates[0].name }}" /&gt;</code>\n    </p>\n\n    <mat-card\n      *ngFor="let notificationTemplate of notificationTemplates"\n      class="org-settings-notification-template__form__card"\n      [formGroupName]="notificationTemplate.type"\n    >\n      <div class="org-settings-notification-template__form__card__title">\n        <h2 gioTableOfContents>{{ notificationTemplate.type | titlecase }} Notification</h2>\n        <span *ngIf="notificationTemplate.enabled" class="gio-badge org-settings-notification-template__form__card__title__badge"\n          >Custom</span\n        >\n      </div>\n\n      <div class="org-settings-notification-template__form__card__fields">\n        <gio-form-slide-toggle appearance="fill">\n          <gio-form-label>Override default template</gio-form-label>\n          <mat-slide-toggle\n            gioFormSlideToggle\n            aria-label="Override default template"\n            formControlName="useCustomTemplate"\n          ></mat-slide-toggle>\n        </gio-form-slide-toggle>\n\n        <mat-form-field appearance="fill" *ngIf="!isTemplateToInclude">\n          <mat-label>Title of the notification</mat-label>\n          <input matInput formControlName="title" required />\n          <mat-error *ngIf="notificationTemplatesForm.get(notificationTemplate.type).get(\'title\').hasError(\'required\')"\n            >Title of the notification is required.</mat-error\n          >\n        </mat-form-field>\n\n        <mat-form-field appearance="fill">\n          <mat-label>Content</mat-label>\n          <textarea\n            matInput\n            formControlName="content"\n            class="org-settings-notification-template__form__card__fields__content-field"\n            required\n          >\n          </textarea>\n          <mat-error *ngIf="notificationTemplatesForm.get(notificationTemplate.type).get(\'content\').hasError(\'required\')"\n            >Content is required.</mat-error\n          >\n        </mat-form-field>\n      </div>\n    </mat-card>\n    <gio-save-bar [form]="notificationTemplatesForm" [formInitialValues]="formInitialValues"> </gio-save-bar>\n  </form>\n\n  <gio-table-of-contents\n    class="org-settings-notification-template__toc"\n    [sectionNames]="{ \'\': \'Templates\' }"\n    scrollingContainer=".gio-main-page__content"\n  ></gio-table-of-contents>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h2 mat-dialog-title>Add a group with roles</h2>\n\n<form *ngIf="groups$ | async as groups" autocomplete="off" [formGroup]="addGroupForm" (ngSubmit)="onSubmit()">\n  <mat-dialog-content>\n    <div *ngIf="groups.length !== 0; else allGroupAlreadyAdded" class="form">\n      <mat-form-field appearance="fill">\n        <mat-label>Group</mat-label>\n        <mat-select formControlName="groupId" aria-label="Groups selection" required>\n          <mat-option *ngFor="let group of groups" [value]="group.id">{{ group.name }}</mat-option>\n        </mat-select>\n        <mat-error *ngIf="addGroupForm.get(\'groupId\').hasError(\'required\')">Group is required.</mat-error>\n      </mat-form-field>\n\n      <div class="form__checkbox-field">\n        <mat-checkbox formControlName="isAdmin">Group admin role</mat-checkbox>\n      </div>\n\n      <mat-form-field appearance="fill">\n        <mat-label>API Role</mat-label>\n        <mat-select formControlName="apiRole" aria-label="API role">\n          <mat-option>-- None --</mat-option>\n          <mat-option *ngFor="let apiRole of apiRoles$ | async" [disabled]="apiRole.system" [value]="apiRole.name">{{\n            apiRole.name\n          }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field appearance="fill">\n        <mat-label>Application Role</mat-label>\n        <mat-select formControlName="applicationRole" aria-label="Application role">\n          <mat-option>-- None --</mat-option>\n          <mat-option\n            *ngFor="let applicationRole of applicationRoles$ | async"\n            [disabled]="applicationRole.system"\n            [value]="applicationRole.name"\n            >{{ applicationRole.name }}</mat-option\n          >\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div *ngIf="addGroupForm.dirty && addGroupForm.hasError(\'leastOneIsRequired\')" class="mat-caption error">\n      At least one role is mandatory\n    </div>\n    <ng-template #allGroupAlreadyAdded><gio-banner-warning>All groups are already added.</gio-banner-warning></ng-template>\n  </mat-dialog-content>\n\n  <mat-dialog-actions class="actions">\n    <button mat-button [mat-dialog-close]="false">Cancel</button>\n    <button *ngIf="groups.length !== 0" mat-button [disabled]="addGroupForm.invalid" color="primary" type="submit">Save</button>\n  </mat-dialog-actions>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h2 mat-dialog-title>Generate a token</h2>\n\n<form autocomplete="off" [formGroup]="tokenForm" (ngSubmit)="onSubmit()">\n  <mat-dialog-content>\n    <div *ngIf="!hasBeenGenerated" class="form">\n      <mat-form-field appearance="fill">\n        <mat-label>Name</mat-label>\n        <input matInput formControlName="name" required />\n        <mat-hint align="end">{{ tokenForm.get(\'name\').value?.length ?? 0 }}/64</mat-hint>\n        <mat-hint>What\'s this token for?</mat-hint>\n        <mat-error *ngIf="tokenForm.get(\'name\').hasError(\'maxlength\')">Name has to be less than 64 characters long.</mat-error>\n        <mat-error *ngIf="tokenForm.get(\'name\').hasError(\'minlength\')">Name has to be greater than 2 characters long.</mat-error>\n        <mat-error *ngIf="tokenForm.get(\'name\').hasError(\'required\')">Name is required.</mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class="content" *ngIf="hasBeenGenerated">\n      <gio-banner-info class="content__banner">\n        Make sure to copy your new personal access token now. You won’t be able to see it again.\n      </gio-banner-info>\n      <h4>Token</h4>\n      <div class="content__code__token" gioClipboardCopyWrapper [contentToCopy]="token.token" [alwaysVisible]="true">\n        <code>{{ token.token }}</code>\n      </div>\n      <h4>Usage</h4>\n      <div class="content__code" gioClipboardCopyWrapper [contentToCopy]="getExampleOfUse(token.token)" [alwaysVisible]="true">\n        <code>{{ getExampleOfUse(token.token) }}</code>\n      </div>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions class="actions">\n    <button mat-button [mat-dialog-close]="false">{{ hasBeenGenerated ? \'Close\' : \'Cancel\' }}</button>\n    <button mat-button color="primary" *ngIf="!hasBeenGenerated" [disabled]="tokenForm.invalid" type="submit">Generate</button>\n  </mat-dialog-actions>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div *ngIf="user" class="org-settings-user-detail">\n  <h1><gio-go-back-button [ajsGo]="{ to: \'organization.settings.ng-users\' }"></gio-go-back-button>User details</h1>\n\n  <mat-card class="org-settings-user-detail__card">\n    <div class="org-settings-user-detail__card__head">\n      <div class="org-settings-user-detail__card__head__left">\n        <gio-avatar\n          class="org-settings-user-detail__card__head__left__avatar"\n          [roundedBorder]="true"\n          [src]="user.avatarUrl"\n          [name]="user.displayName"\n          size="80"\n        ></gio-avatar>\n      </div>\n\n      <div class="org-settings-user-detail__card__head__middle">\n        <h2 gioTableOfContents gioTableOfContentsName="Profile" class="org-settings-user-detail__card__head__middle__name">\n          {{ user.displayName }}\n        </h2>\n\n        <h4\n          *ngIf="user.email"\n          class="org-settings-user-detail__card__head__middle__email"\n          gioClipboardCopyWrapper\n          [contentToCopy]="user.email"\n        >\n          <mat-icon [inline]="true">email</mat-icon> {{ user.email }}\n        </h4>\n\n        <span class="gio-badge" [ngClass]="user.badgeCSSClass">{{ user.status | titlecase }}</span>\n      </div>\n\n      <div class="org-settings-user-detail__card__head__right">\n        <ng-container *gioPermission="{ anyOf: [\'organization-user-u\'] }">\n          <div\n            *ngIf="user.status === \'ACTIVE\' && user.source === \'gravitee\' && !isServiceUser()"\n            class="org-settings-user-detail__card__head__left__btn"\n          >\n            <button (click)="onResetPassword()" mat-stroked-button aria-label="User reset password">Reset password</button>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n    <div>\n      <dl class="gio-description-list">\n        <dt>Source</dt>\n        <dd gioClipboardCopyWrapper [contentToCopy]="user.source">{{ user.source }}</dd>\n\n        <dt>Organization Role</dt>\n        <dd>{{ user.organizationRoles }}</dd>\n\n        <ng-container *ngFor="let customField of user.customFields | keyvalue">\n          \x3c!-- TODO: try to display custom field Label ? --\x3e\n          <dt>{{ customField.key }}</dt>\n          <dd gioClipboardCopyWrapper [contentToCopy]="customField.value">{{ customField.value | slice: 0:94 }}</dd>\n        </ng-container>\n\n        <dt>Last connection at</dt>\n        <dd>{{ user.lastConnectionAt | date: \'medium\' }}</dd>\n\n        <dt>Created at</dt>\n        <dd>{{ user.created_at | date: \'medium\' }}</dd>\n      </dl>\n    </div>\n\n    <ng-container *gioPermission="{ anyOf: [\'organization-user-u\'] }">\n      <ng-container *ngIf="user && user.status === \'PENDING\'">\n        <mat-divider></mat-divider>\n\n        <div class="org-settings-user-detail__card__registration-banner">\n          <div>Validation of the pending registration request</div>\n          <div>\n            <button (click)="onProcessRegistration(\'reject\')" mat-stroked-button aria-label="Reject user registration">Reject</button>\n            &nbsp;&nbsp;\n            <button\n              (click)="onProcessRegistration(\'accept\')"\n              class="org-settings-user-detail__card__registration-banner__accept-btn"\n              mat-flat-button\n              aria-label="Accept user registration"\n            >\n              <mat-icon>done</mat-icon> Accept\n            </button>\n          </div>\n        </div>\n      </ng-container>\n    </ng-container>\n  </mat-card>\n\n  <mat-card class="org-settings-user-detail__org-role-card">\n    <h2 gioTableOfContents>Organization</h2>\n\n    <mat-form-field *ngIf="organizationRolesControl" appearance="fill">\n      <mat-label>Roles</mat-label>\n      <mat-select [formControl]="organizationRolesControl" aria-label="Organization role" multiple>\n        <mat-option *ngFor="let role of organizationRoles$ | async" [value]="role.id">{{ role.name }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n  </mat-card>\n\n  <mat-card class="org-settings-user-detail__environments-card">\n    <h2 gioTableOfContents>Environments</h2>\n    <p>Here is the list of all environment this user can access.</p>\n\n    <gio-table-wrapper\n      *ngIf="environmentsTableDS && environmentsRolesFormGroup"\n      [length]="tablesUnpaginatedLength[\'environmentsTableDS\']"\n      (filtersChange)="onFiltersChanged(\'environmentsTableDS\', $event)"\n    >\n      <table\n        class="org-settings-user-detail__environments-card__table"\n        mat-table\n        [dataSource]="environmentsTableDS"\n        [formGroup]="environmentsRolesFormGroup"\n        aria-label="Environments table"\n      >\n        \x3c!-- Name Column --\x3e\n        <ng-container matColumnDef="name">\n          <th mat-header-cell *matHeaderCellDef id="name" width="33%">Name</th>\n          <td mat-cell *matCellDef="let environment">{{ environment.name }}</td>\n        </ng-container>\n\n        \x3c!-- Description Column --\x3e\n        <ng-container matColumnDef="description">\n          <th mat-header-cell *matHeaderCellDef id="description" width="33%">Description</th>\n          <td mat-cell *matCellDef="let environment">{{ environment.description }}</td>\n        </ng-container>\n\n        \x3c!-- Roles Column --\x3e\n        <ng-container matColumnDef="roles">\n          <th mat-header-cell *matHeaderCellDef id="roles" width="33%">Roles</th>\n          <td mat-cell *matCellDef="let environment">\n            <mat-form-field appearance="fill">\n              <mat-label>Environment roles</mat-label>\n              <mat-select\n                [id]="environment.id"\n                [formControlName]="environment.id"\n                [aria-label]="\'Environment roles for \' + environment.id"\n                multiple\n              >\n                <mat-option *ngFor="let role of environmentRoles$ | async" [value]="role.id">{{ role.name }}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef="environmentsTableDisplayedColumns"></tr>\n        <tr mat-row *matRowDef="let row; columns: environmentsTableDisplayedColumns"></tr>\n\n        <tr class="mat-row" *matNoDataRow>\n          <td class="mat-cell" [attr.colspan]="environmentsTableDisplayedColumns.length">No environment</td>\n        </tr>\n      </table>\n    </gio-table-wrapper>\n\n    <mat-card-footer *ngIf="!(environmentsTableDS && environmentsRolesFormGroup)">\n      <mat-progress-bar mode="indeterminate"></mat-progress-bar>\n    </mat-card-footer>\n  </mat-card>\n\n  <mat-card class="org-settings-user-detail__groups-card">\n    <div class="org-settings-user-detail__groups-card__header">\n      <h2 gioTableOfContents>Groups</h2>\n\n      <ng-container *ngIf="user.status === \'ACTIVE\'">\n        <button\n          *gioPermission="{ anyOf: [\'organization-user-c\'] }"\n          (click)="onAddGroupClicked()"\n          mat-raised-button\n          color="primary"\n          aria-label="Button to add a group"\n        >\n          <mat-icon>add</mat-icon>Add a group\n        </button>\n      </ng-container>\n    </div>\n\n    <p>You can manage all groups of this user.</p>\n\n    <gio-table-wrapper\n      *ngIf="groupsTableDS && groupsRolesFormGroup"\n      [length]="tablesUnpaginatedLength[\'groupsTableDS\']"\n      (filtersChange)="onFiltersChanged(\'groupsTableDS\', $event)"\n    >\n      <table\n        class="org-settings-user-detail__groups-card__table"\n        mat-table\n        [dataSource]="groupsTableDS"\n        [formGroup]="groupsRolesFormGroup"\n        matSort\n        aria-label="Groups table"\n      >\n        \x3c!-- Position Name --\x3e\n        <ng-container matColumnDef="name">\n          <th mat-header-cell *matHeaderCellDef id="name" mat-sort-header>Name</th>\n          <td mat-cell *matCellDef="let group">\n            {{ group.name }}\n\n            <div *ngIf="groupsRolesFormGroup.get(group.id).errors" class="mat-caption error">At least one role is mandatory</div>\n          </td>\n        </ng-container>\n\n        \x3c!-- Group Admin Column --\x3e\n        <ng-container matColumnDef="groupAdmin">\n          <th mat-header-cell *matHeaderCellDef id="groupAdmin" mat-sort-header>Group Admin</th>\n          <td mat-cell *matCellDef="let group" [formGroupName]="group.id">\n            <mat-checkbox formControlName="GROUP"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        \x3c!-- API Role Column --\x3e\n        <ng-container matColumnDef="apiRoles">\n          <th mat-header-cell *matHeaderCellDef id="apiRoles" mat-sort-header>API Role</th>\n          <td mat-cell *matCellDef="let group" [formGroupName]="group.id">\n            <mat-form-field appearance="fill">\n              <mat-label>API role</mat-label>\n              <mat-select [id]="group.id" [aria-label]="\'API roles for \' + group.id" formControlName="API">\n                <mat-option>-- None --</mat-option>\n                <mat-option *ngFor="let role of apiRoles$ | async" [disabled]="role.system" [value]="role.name">{{ role.name }}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </td>\n        </ng-container>\n\n        \x3c!-- Application Role Column --\x3e\n        <ng-container matColumnDef="applicationRole">\n          <th mat-header-cell *matHeaderCellDef id="applicationRole" mat-sort-header>Application Role</th>\n          <td mat-cell *matCellDef="let group" [formGroupName]="group.id">\n            <mat-form-field appearance="fill">\n              <mat-label>Application role</mat-label>\n              <mat-select [id]="group.id" [aria-label]="\'Application roles for \' + group.id" formControlName="APPLICATION">\n                <mat-option>-- None --</mat-option>\n                <mat-option *ngFor="let role of applicationRoles$ | async" [disabled]="role.system" [value]="role.name">{{\n                  role.name\n                }}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </td>\n        </ng-container>\n\n        \x3c!-- Delete Column --\x3e\n        <ng-container matColumnDef="delete">\n          <th mat-header-cell *matHeaderCellDef id="roles" width="5%">Delete</th>\n          <td mat-cell *matCellDef="let group">\n            <button\n              *gioPermission="{ anyOf: [\'organization-user-d\'] }"\n              (click)="onDeleteGroupClick(group)"\n              mat-icon-button\n              aria-label="Button to delete user group"\n              matTooltip="Delete"\n            >\n              <mat-icon>delete</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef="groupsTableDisplayedColumns"></tr>\n        <tr\n          mat-row\n          *matRowDef="let group; columns: groupsTableDisplayedColumns"\n          [class.error]="groupsRolesFormGroup.get(group.id).errors"\n        ></tr>\n\n        <tr class="mat-row" *matNoDataRow>\n          <td class="mat-cell" [attr.colspan]="groupsTableDisplayedColumns.length">No group</td>\n        </tr>\n      </table>\n    </gio-table-wrapper>\n\n    <mat-card-footer *ngIf="!(groupsTableDS && groupsRolesFormGroup)">\n      <mat-progress-bar mode="indeterminate"></mat-progress-bar>\n    </mat-card-footer>\n  </mat-card>\n\n  <mat-card class="org-settings-user-detail__apis-card">\n    <h2 gioTableOfContents>APIs</h2>\n    <p>Here is the list of all APIs of this user.</p>\n\n    <gio-table-wrapper\n      *ngIf="apisTableDS"\n      [length]="tablesUnpaginatedLength[\'apisTableDS\']"\n      (filtersChange)="onFiltersChanged(\'apisTableDS\', $event)"\n    >\n      <table mat-table [dataSource]="apisTableDS" matSort aria-label="APIs table">\n        \x3c!-- Name Column --\x3e\n        <ng-container matColumnDef="name">\n          <th mat-header-cell *matHeaderCellDef id="name" mat-sort-header>Name</th>\n          <td mat-cell *matCellDef="let api">\n            {{ api.name }}\n          </td>\n        </ng-container>\n\n        \x3c!-- Version Column --\x3e\n        <ng-container matColumnDef="version">\n          <th mat-header-cell *matHeaderCellDef id="version" mat-sort-header>Version</th>\n          <td mat-cell *matCellDef="let api">\n            {{ api.version }}\n          </td>\n        </ng-container>\n\n        \x3c!-- Visibility Column --\x3e\n        <ng-container matColumnDef="visibility">\n          <th mat-header-cell *matHeaderCellDef id="visibility" mat-sort-header>Visibility</th>\n          <td mat-cell *matCellDef="let api">\n            <span class="gio-badge">\n              <mat-icon class="gio-left">{{ api.visibility === \'PUBLIC\' ? \'public\' : \'lock\' }}</mat-icon> {{ api.visibility | titlecase }}\n            </span>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef="apisTableDisplayedColumns"></tr>\n        <tr mat-row *matRowDef="let row; columns: apisTableDisplayedColumns"></tr>\n\n        <tr class="mat-row" *matNoDataRow>\n          <td class="mat-cell" [attr.colspan]="apisTableDisplayedColumns.length">No API</td>\n        </tr>\n      </table>\n    </gio-table-wrapper>\n\n    <mat-card-footer *ngIf="!apisTableDS">\n      <mat-progress-bar mode="indeterminate"></mat-progress-bar>\n    </mat-card-footer>\n  </mat-card>\n\n  <mat-card class="org-settings-user-detail__applications-card">\n    <h2 gioTableOfContents>Applications</h2>\n    <p>Here is the list of all applications of this user.</p>\n\n    <gio-table-wrapper\n      *ngIf="applicationsTableDS"\n      [length]="tablesUnpaginatedLength[\'applicationsTableDS\']"\n      (filtersChange)="onFiltersChanged(\'applicationsTableDS\', $event)"\n    >\n      <table\n        class="org-settings-user-detail__applications-card__table"\n        mat-table\n        [dataSource]="applicationsTableDS"\n        aria-label="Applications table"\n      >\n        \x3c!-- Name Column --\x3e\n        <ng-container matColumnDef="name">\n          <th mat-header-cell *matHeaderCellDef id="name">Name</th>\n          <td mat-cell *matCellDef="let group">\n            {{ group.name }}\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef="applicationsTableDisplayedColumns"></tr>\n        <tr mat-row *matRowDef="let row; columns: applicationsTableDisplayedColumns"></tr>\n\n        <tr class="mat-row" *matNoDataRow>\n          <td class="mat-cell" [attr.colspan]="applicationsTableDisplayedColumns.length">No application</td>\n        </tr>\n      </table>\n    </gio-table-wrapper>\n\n    <mat-card-footer *ngIf="!applicationsTableDS">\n      <mat-progress-bar mode="indeterminate"></mat-progress-bar>\n    </mat-card-footer>\n  </mat-card>\n\n  <mat-card class="org-settings-user-detail__tokens__card">\n    <div class="org-settings-user-detail__tokens__card__headline">\n      <h2 gioTableOfContents>Tokens</h2>\n      <button *gioPermission="{ anyOf: [\'organization-user-u\'] }" (click)="onGenerateTokenClicked()" mat-raised-button color="primary">\n        <mat-icon>add</mat-icon>Generate a personal token\n      </button>\n    </div>\n\n    <gio-table-wrapper\n      *ngIf="tokensTableDS"\n      [length]="tablesUnpaginatedLength[\'tokensTableDS\']"\n      (filtersChange)="onFiltersChanged(\'tokensTableDS\', $event)"\n    >\n      <table class="org-settings-user-detail__tokens__card__table" mat-table [dataSource]="tokensTableDS" aria-label="Tokens table">\n        \x3c!-- Name Column --\x3e\n        <ng-container matColumnDef="name">\n          <th mat-header-cell *matHeaderCellDef id="name">Name</th>\n          <td mat-cell *matCellDef="let token">\n            {{ token.name }}\n          </td>\n        </ng-container>\n\n        \x3c!-- CreatedAt Column --\x3e\n        <ng-container matColumnDef="createdAt">\n          <th mat-header-cell *matHeaderCellDef id="createdAt">Created at</th>\n          <td mat-cell *matCellDef="let token">\n            {{ token.createdAt | date: \'medium\' }}\n          </td>\n        </ng-container>\n\n        \x3c!-- LastUseAt Column --\x3e\n        <ng-container matColumnDef="lastUseAt">\n          <th mat-header-cell *matHeaderCellDef id="lastUseAt">Last use</th>\n          <td mat-cell *matCellDef="let token">\n            {{ token.lastUseAt ? (token.lastUseAt | date: \'medium\') : \'never\' }}\n          </td>\n        </ng-container>\n\n        \x3c!-- Actions Column --\x3e\n        <ng-container matColumnDef="action">\n          <th mat-header-cell *matHeaderCellDef id="action" width="1%"></th>\n          <td mat-cell *matCellDef="let token">\n            <button\n              *gioPermission="{ anyOf: [\'organization-user-d\'] }"\n              (click)="onDeleteTokenClicked(token)"\n              mat-icon-button\n              aria-label="Button to delete a token"\n              matTooltip="Delete token"\n            >\n              <mat-icon>delete</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef="tokensTableDisplayedColumns"></tr>\n        <tr mat-row *matRowDef="let row; columns: tokensTableDisplayedColumns"></tr>\n\n        <tr class="mat-row" *matNoDataRow>\n          <td class="mat-cell" [attr.colspan]="tokensTableDisplayedColumns.length">No tokens</td>\n        </tr>\n      </table>\n    </gio-table-wrapper>\n  </mat-card>\n\n  <gio-save-bar\n    [creationMode]="false"\n    [opened]="openSaveBar"\n    [invalidState]="invalidStateSaveBar"\n    (submitted)="onSaveBarSubmit()"\n    (resetClicked)="onSaveBarReset()"\n  >\n  </gio-save-bar>\n</div>\n\n<gio-table-of-contents\n  class="toc"\n  [sectionNames]="{ \'\': \'User details\' }"\n  scrollingContainer=".gio-main-page__content"\n></gio-table-of-contents>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gio-policy-studio\n  *ngIf="!isLoading"\n  flowsTitle="Platform flows"\n  [canAdd]="true"\n  [hasPolicyFilter]="true"\n  [hasConditionalSteps]="true"\n  [sortable]="true"\n  [flowSchema]="platformFlowSchema"\n  [policies]="policies"\n  [definition]="definition"\n  (save)="onSave($event)"\n></gio-policy-studio>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h2 mat-dialog-title>{{ isUpdate ? \'Edit a tenant\' : \'Create a tenant\' }}</h2>\n\n<form autocomplete="off" [formGroup]="tenantForm" (ngSubmit)="onSubmit()">\n  <mat-dialog-content>\n    <div class="form">\n      <mat-form-field *ngIf="isUpdate" appearance="fill">\n        <mat-label>Id</mat-label>\n        <input matInput formControlName="id" data-testid="tenant-id" />\n      </mat-form-field>\n      <mat-form-field appearance="fill">\n        <mat-label>Name</mat-label>\n        <input matInput formControlName="name" required data-testid="tenant-name" />\n        <mat-hint align="end">{{ tenantForm.get(\'name\').value?.length ?? 0 }}/30</mat-hint>\n        <mat-error *ngIf="tenantForm.get(\'name\').hasError(\'maxlength\')">Name has to be less than 30 characters long.</mat-error>\n        <mat-error *ngIf="tenantForm.get(\'name\').hasError(\'minlength\')">Name has to be more than 2 characters long.</mat-error>\n        <mat-error *ngIf="tenantForm.get(\'name\').hasError(\'required\')">Name is required.</mat-error>\n      </mat-form-field>\n      <mat-form-field appearance="fill">\n        <mat-label>Description</mat-label>\n        <input matInput formControlName="description" data-testid="tenant-description" />\n        <mat-hint align="end">{{ tenantForm.get(\'description\').value?.length ?? 0 }}/160</mat-hint>\n        <mat-error *ngIf="tenantForm.get(\'description\').hasError(\'maxlength\')"\n          >Description has to be less than 160 characters long.</mat-error\n        >\n      </mat-form-field>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions class="actions">\n    <button mat-button [mat-dialog-close]="false">Cancel</button>\n    <button mat-button [disabled]="tenantForm.invalid" color="primary" type="submit" data-testid="save-tenant">Ok</button>\n  </mat-dialog-actions>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h1>Tenants</h1>\n\n<h4>\n  Copy/paste the tenant\'s id to the API gateway configuration file in order to resolve API endpoints according to the configured tenant.\n</h4>\n\n<div class="add-button-container" *gioPermission="{ anyOf: [\'organization-tenant-c\'] }">\n  <button (click)="onAddTenantClicked()" mat-raised-button color="primary" aria-label="Button to add a tenant" data-testid="add-tenant">\n    <mat-icon>add</mat-icon>Add a tenant\n  </button>\n</div>\n\n<gio-table-wrapper [length]="tenantsTableUnpaginatedLength" (filtersChange)="onFiltersChanged($event)">\n  <table mat-table [dataSource]="tenantsDataSource" class="tenants-table" id="tenantsTable" aria-label="Tenant table">\n    \x3c!-- Id Column --\x3e\n    <ng-container matColumnDef="id">\n      <th mat-header-cell *matHeaderCellDef id="id">Id</th>\n      <td mat-cell *matCellDef="let element">{{ element.id }}</td>\n    </ng-container>\n\n    \x3c!-- Name Column --\x3e\n    <ng-container matColumnDef="name">\n      <th mat-header-cell *matHeaderCellDef id="name">Name</th>\n      <td mat-cell *matCellDef="let element">{{ element.name }}</td>\n    </ng-container>\n\n    \x3c!-- Description Column --\x3e\n    <ng-container matColumnDef="description">\n      <th mat-header-cell *matHeaderCellDef id="description">Description</th>\n      <td mat-cell *matCellDef="let element">{{ element.description }}</td>\n    </ng-container>\n\n    \x3c!-- Actions Column --\x3e\n    <ng-container matColumnDef="actions">\n      <th mat-header-cell *matHeaderCellDef id="actions"></th>\n      <td mat-cell *matCellDef="let element">\n        <div class="centered-cell">\n          <ng-container *gioPermission="{ anyOf: [\'organization-tenant-u\'] }">\n            <button\n              (click)="onEditTenantClicked(element)"\n              mat-icon-button\n              aria-label="Button to edit a tenant"\n              matTooltip="Edit tenant"\n              data-testid="edit-tenant"\n            >\n              <mat-icon>edit</mat-icon>\n            </button>\n          </ng-container>\n          <ng-container *gioPermission="{ anyOf: [\'organization-tenant-d\'] }">\n            <button\n              (click)="onDeleteTenantClicked(element)"\n              mat-icon-button\n              aria-label="Button to delete a tenant"\n              matTooltip="Delete tenant"\n              data-testid="delete-tenant"\n            >\n              <mat-icon>delete</mat-icon>\n            </button>\n          </ng-container>\n        </div>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n    <tr mat-row *matRowDef="let row; columns: displayedColumns"></tr>\n\n    <tr class="mat-row" *matNoDataRow>\n      <td class="mat-cell" colspan="4">No tenant</td>\n    </tr>\n  </table>\n</gio-table-wrapper>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="org-settings-roles">\n  <div class="org-settings-roles__content">\n    <h1>Roles</h1>\n\n    <mat-card *ngFor="let item of rolesByScope" class="org-settings-roles__content__card">\n      <div class="org-settings-roles__content__headline">\n        <h2 gioTableOfContents>{{ item.scope }}</h2>\n        <button\n          *gioPermission="{ anyOf: [\'organization-role-c\'] }"\n          (click)="onAddARoleClicked(item.scopeId)"\n          mat-raised-button\n          color="primary"\n        >\n          <mat-icon>add</mat-icon>Add a role\n        </button>\n      </div>\n      <mat-list class="org-settings-roles__content__list">\n        <mat-list-item class="org-settings-roles__content__list__item" *ngFor="let role of item.roles">\n          <mat-icon mat-list-icon>{{ role.icon }}</mat-icon>\n          <div class="org-settings-roles__content__list__item__description" (click)="onEditRoleClicked(item.scopeId, role)">\n            <div mat-line>\n              <span>{{ role.name }}</span>\n              <span *ngIf="role.isSystem" class="gio-badge">System</span>\n              <span *ngIf="role.isDefault" class="gio-badge gio-badge-accent">Default</span>\n            </div>\n            <div mat-line>{{ role.description }}</div>\n          </div>\n          <div>\n            <ng-container *gioPermission="{ anyOf: [\'organization-role-d\'] }">\n              <button\n                *ngIf="role.canBeDeleted"\n                (click)="onDeleteRoleClicked(item.scopeId, role)"\n                mat-icon-button\n                aria-label="Button to delete a role"\n                matTooltip="Delete role"\n              >\n                <mat-icon>delete</mat-icon>\n              </button>\n            </ng-container>\n\n            <ng-container *gioPermission="{ anyOf: [\'organization-role-u\'] }">\n              <button\n                *ngIf="role.hasUserRoleManagement"\n                (click)="onMembersClicked(item.scopeId, role)"\n                mat-icon-button\n                aria-label="Button to see members with this role"\n                matTooltip="See members"\n              >\n                <mat-icon>people</mat-icon>\n              </button>\n            </ng-container>\n          </div>\n        </mat-list-item>\n      </mat-list>\n    </mat-card>\n  </div>\n\n  <gio-table-of-contents\n    class="org-settings-roles__toc"\n    [sectionNames]="{ \'\': \'Roles\' }"\n    scrollingContainer=".gio-main-page__content"\n  ></gio-table-of-contents>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h2 mat-dialog-title>{{ isUpdate ? \'Edit a tag\' : \'Create a tag\' }}</h2>\n\n<gio-banner-info>Sharding tag can be restricted to some groups to only allow users of these groups to deploy on this tag.</gio-banner-info>\n\n<form autocomplete="off" [formGroup]="tagForm" (ngSubmit)="onSubmit()">\n  <mat-dialog-content>\n    <div class="form">\n      <mat-form-field appearance="fill">\n        <mat-label>Name</mat-label>\n        <input matInput formControlName="name" required />\n        <mat-hint align="end">{{ tagForm.get(\'name\').value?.length ?? 0 }}/64</mat-hint>\n        <mat-error *ngIf="tagForm.get(\'name\').hasError(\'maxlength\')">Name has to be less than 64 characters long.</mat-error>\n        <mat-error *ngIf="tagForm.get(\'name\').hasError(\'minlength\')">Name has to be more than 2 characters long.</mat-error>\n        <mat-error *ngIf="tagForm.get(\'name\').hasError(\'required\')">Name is required.</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance="fill">\n        <mat-label>Description</mat-label>\n        <input matInput formControlName="description" />\n      </mat-form-field>\n\n      <mat-form-field appearance="fill">\n        <mat-label>Restricted groups</mat-label>\n        <mat-select formControlName="restrictedGroups" aria-label="Restricted groups selection" multiple>\n          <mat-option *ngFor="let group of groups$ | async" [value]="group.id">{{ group.name }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions class="actions">\n    <button mat-button [mat-dialog-close]="false">Cancel</button>\n    <button mat-button [disabled]="tagForm.invalid" color="primary" type="submit">Ok</button>\n  </mat-dialog-actions>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h2 mat-dialog-title>{{ isUpdate ? \'Edit an entrypoint mapping\' : \'Create an entrypoint mapping\' }}</h2>\n\n<gio-banner-info>\n  Add a mapping between an entry point url and a tag list. This mapping will be used on the portal to display different entry points\n  depending on API tags.\n</gio-banner-info>\n\n<form autocomplete="off" [formGroup]="mappingForm" (ngSubmit)="onSubmit()">\n  <mat-dialog-content>\n    <div class="form">\n      <mat-form-field appearance="fill">\n        <mat-label>Entrypoint url</mat-label>\n        <input matInput formControlName="value" type="url" placeholder="https://api.mycompany.com" required />\n        <mat-error *ngIf="mappingForm.get(\'value\').hasError(\'required\')">Entrypoint Url is required.</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance="fill">\n        <mat-label>Sharding tags</mat-label>\n        <mat-select formControlName="tags" aria-label="Sharding tags selection" multiple required>\n          <mat-option *ngFor="let tag of tags$ | async" [value]="tag.id"\n            >{{ tag.name }}{{ tag.description ? \' - \' + tag.description : \'\' }}</mat-option\n          >\n        </mat-select>\n        <mat-error *ngIf="mappingForm.get(\'tags\').hasError(\'required\')">At least one tag must be selected.</mat-error>\n      </mat-form-field>\n    </div>\n  </mat-dialog-content>\n\n  <mat-dialog-actions class="actions">\n    <button mat-button [mat-dialog-close]="false">Cancel</button>\n    <button mat-button [disabled]="mappingForm.invalid" color="primary" type="submit">Ok</button>\n  </mat-dialog-actions>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<form *ngIf="!isLoading" autocomplete="off" [formGroup]="defaultConfigForm" (ngSubmit)="submitForm()">\n  <h1>Sharding Tags</h1>\n\n  <h4>Copy/paste the sharding tag\'s id to the API gateway configuration file in order to manage API deployments.</h4>\n\n  <mat-card class="org-settings-tags__tags-card">\n    <div class="org-settings-tags__add-button-container" *gioPermission="{ anyOf: [\'organization-tag-c\'] }">\n      <h2>Tags</h2>\n      <button (click)="onAddTagClicked()" mat-raised-button color="primary" aria-label="Button to add a tag" type="button">\n        <mat-icon>add</mat-icon>Add a tag\n      </button>\n    </div>\n\n    <gio-table-wrapper [length]="tagsTableUnpaginatedLength" (filtersChange)="onTagsFiltersChanged($event)">\n      <table\n        mat-table\n        [dataSource]="filteredTagsTableDS"\n        matSort\n        matSortActive="name"\n        matSortDirection="asc"\n        class="tags-table"\n        id="tagsTable"\n        aria-label="Tags table"\n      >\n        \x3c!-- Id Column --\x3e\n        <ng-container matColumnDef="id">\n          <th mat-header-cell *matHeaderCellDef id="id" mat-sort-header>Id</th>\n          <td mat-cell *matCellDef="let tag">\n            <span gioClipboardCopyWrapper [contentToCopy]="tag.id">{{ tag.id }}</span>\n          </td>\n        </ng-container>\n\n        \x3c!-- Name Column --\x3e\n        <ng-container matColumnDef="name">\n          <th mat-header-cell *matHeaderCellDef id="name" mat-sort-header>Name</th>\n          <td mat-cell *matCellDef="let tag">{{ tag.name }}</td>\n        </ng-container>\n\n        \x3c!-- Description Column --\x3e\n        <ng-container matColumnDef="description">\n          <th mat-header-cell *matHeaderCellDef id="description" mat-sort-header>Description</th>\n          <td mat-cell *matCellDef="let tag">{{ tag.description }}</td>\n        </ng-container>\n\n        \x3c!-- Restricted groups Column --\x3e\n        <ng-container matColumnDef="restrictedGroupsName">\n          <th mat-header-cell *matHeaderCellDef id="restrictedGroupsName" mat-sort-header>Restricted groups</th>\n          <td mat-cell *matCellDef="let tag">{{ tag.restrictedGroupsName.join(\', \') }}</td>\n        </ng-container>\n\n        \x3c!-- Actions Column --\x3e\n        <ng-container matColumnDef="actions">\n          <th mat-header-cell *matHeaderCellDef id="actions"></th>\n          <td mat-cell *matCellDef="let tag">\n            <div class="centered-cell">\n              <ng-container *gioPermission="{ anyOf: [\'organization-tag-u\'] }">\n                <button\n                  (click)="onEditTagClicked(tag)"\n                  mat-icon-button\n                  type="button"\n                  aria-label="Button to edit a tag"\n                  matTooltip="Edit tag"\n                >\n                  <mat-icon>edit</mat-icon>\n                </button>\n              </ng-container>\n              <ng-container *gioPermission="{ anyOf: [\'organization-tag-d\'] }">\n                <button\n                  (click)="onDeleteTagClicked(tag)"\n                  mat-icon-button\n                  type="button"\n                  aria-label="Button to delete a tag"\n                  matTooltip="Delete tag"\n                >\n                  <mat-icon>delete</mat-icon>\n                </button>\n              </ng-container>\n            </div>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef="tagsTableDisplayedColumns"></tr>\n        <tr mat-row *matRowDef="let row; columns: tagsTableDisplayedColumns"></tr>\n\n        <tr class="mat-row" *matNoDataRow>\n          <td class="mat-cell" [attr.colspan]="tagsTableDisplayedColumns.length">No tag</td>\n        </tr>\n      </table>\n    </gio-table-wrapper>\n  </mat-card>\n\n  <mat-card class="org-settings-tags__entrypoints-card">\n    <div class="org-settings-tags__add-button-container">\n      <h2>Entrypoint mappings</h2>\n\n      <button\n        *gioPermission="{ anyOf: [\'organization-entrypoint-c\'] }"\n        (click)="onAddEntrypointClicked()"\n        mat-raised-button\n        color="primary"\n        type="button"\n        aria-label="Button to add a mapping"\n      >\n        <mat-icon>add</mat-icon>Add a mapping\n      </button>\n    </div>\n\n    <mat-form-field [matTooltip]="providedConfigurationMessage" [matTooltipDisabled]="!isReadonlySetting(\'entrypoint\')" appearance="fill">\n      <mat-icon *ngIf="isReadonlySetting(\'entrypoint\')" class="org-settings-tags__entrypoints-card__form-field__icon" matPrefix\n        >lock</mat-icon\n      >\n      <mat-label>Default entrypoint</mat-label>\n      <input #entrypointInput matInput formControlName="entrypoint" />\n      <gio-clipboard-copy-icon matSuffix [contentToCopy]="entrypointInput.value"></gio-clipboard-copy-icon>\n    </mat-form-field>\n\n    <gio-table-wrapper [length]="entrypointsTableUnpaginatedLength" (filtersChange)="onEntrypointsFiltersChanged($event)">\n      <table\n        mat-table\n        [dataSource]="filteredEntrypointsTableDS"\n        matSort\n        class="entrypoints-table"\n        id="entrypointsTable"\n        aria-label="Entrypoints table"\n      >\n        \x3c!-- Entrypoint Column --\x3e\n        <ng-container matColumnDef="entrypoint">\n          <th mat-header-cell *matHeaderCellDef id="entrypoint" mat-sort-header="url">Entrypoint</th>\n          <td mat-cell *matCellDef="let entrypoint">\n            <span gioClipboardCopyWrapper [contentToCopy]="entrypoint.url">{{ entrypoint.url }}</span>\n          </td>\n        </ng-container>\n\n        \x3c!-- Tags Column --\x3e\n        <ng-container matColumnDef="tags">\n          <th mat-header-cell *matHeaderCellDef id="tags" mat-sort-header="tags">Tags</th>\n          <td mat-cell *matCellDef="let entrypoint">{{ entrypoint.tagsName.join(\', \') }}</td>\n        </ng-container>\n\n        \x3c!-- Actions Column --\x3e\n        <ng-container matColumnDef="actions">\n          <th mat-header-cell *matHeaderCellDef id="actions"></th>\n          <td mat-cell *matCellDef="let entrypoint">\n            <div class="centered-cell">\n              <ng-container *gioPermission="{ anyOf: [\'organization-entrypoint-u\'] }">\n                <button\n                  (click)="onEditEntrypointClicked(entrypoint)"\n                  mat-icon-button\n                  type="button"\n                  aria-label="Button to edit a mapping"\n                  matTooltip="Edit mapping"\n                >\n                  <mat-icon>edit</mat-icon>\n                </button>\n              </ng-container>\n              <ng-container *gioPermission="{ anyOf: [\'organization-entrypoint-d\'] }">\n                <button\n                  (click)="onDeleteEntrypointClicked(entrypoint)"\n                  mat-icon-button\n                  type="button"\n                  aria-label="Button to delete a mapping"\n                  matTooltip="Delete mapping"\n                >\n                  <mat-icon>delete</mat-icon>\n                </button>\n              </ng-container>\n            </div>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef="entrypointsTableDisplayedColumns"></tr>\n        <tr mat-row *matRowDef="let row; columns: entrypointsTableDisplayedColumns"></tr>\n\n        <tr class="mat-row" *matNoDataRow>\n          <td class="mat-cell" [attr.colspan]="entrypointsTableDisplayedColumns.length">No entrypoint</td>\n        </tr>\n      </table>\n    </gio-table-wrapper>\n  </mat-card>\n\n  <gio-save-bar [creationMode]="false" [form]="defaultConfigForm" [formInitialValues]="initialDefaultConfigFormValues"> </gio-save-bar>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h2 mat-dialog-title>\n  <ng-container *ngIf="selectedUsers.length === 0">Select users</ng-container>\n  <ng-container *ngIf="selectedUsers.length > 0"\n    >{{ selectedUsers.length }} user{{ selectedUsers.length > 1 ? \'s\' : \'\' }} selected</ng-container\n  >\n</h2>\n\n<mat-dialog-content>\n  <div>\n    <mat-form-field class="gio-users-selector__search-autocomplete" appearance="fill">\n      <mat-icon matPrefix>search</mat-icon>\n      <mat-label>Search a user by name or email</mat-label>\n\n      <input matInput type="search" [matAutocomplete]="auto" [formControl]="userSearchTerm" />\n      <button *ngIf="this.userSearchTerm.value" matSuffix mat-icon-button aria-label="Clear" (click)="resetSearchTerm()">\n        <mat-icon>close</mat-icon>\n      </button>\n      <mat-autocomplete #auto="matAutocomplete" (optionSelected)="selectUser($event)">\n        <mat-option *ngFor="let option of users | async" [value]="option">\n          {{ option.displayName }}\n        </mat-option>\n        <mat-option *ngIf="(users | async)?.length === 0 && this.userSearchTerm.value?.length > 0" disabled\n          >No user matching the term or user already selected</mat-option\n        >\n      </mat-autocomplete>\n    </mat-form-field>\n  </div>\n  <div class="gio-users-selector__users">\n    <mat-list-item *ngFor="let selectedUser of selectedUsers">\n      <div class="gio-users-selector__users__user">\n        <gio-avatar\n          mat-list-icon\n          [src]="selectedUser.userPicture"\n          [name]="selectedUser.displayName"\n          size="32"\n          [roundedBorder]="true"\n        ></gio-avatar>\n        <div mat-line class="gio-users-selector__users__user__name">{{ selectedUser.displayName }}</div>\n        <button\n          (click)="onRemoveUserClicked(selectedUser)"\n          mat-icon-button\n          aria-label="Button to remove user from selection"\n          matTooltip="Remove user from selection"\n        >\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n    </mat-list-item>\n    <div *ngIf="selectedUsers.length === 0" class="gio-users-selector__users__no-user">\n      <mat-icon class="gio-users-selector__users__no-user__icon">group_add</mat-icon>\n      <div class="gio-users-selector__users__no-user__message">No selected user</div>\n    </div>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions align="end">\n  <button mat-button [mat-dialog-close]="[]">Cancel</button>\n  <button color="primary" mat-button [mat-dialog-close]="selectedUsers">Select</button>\n</mat-dialog-actions>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div *ngIf="filteredMemberships" class="org-settings-role-members">\n  <h1>\n    <gio-go-back-button [ajsGo]="{ to: \'organization.settings.ng-roles\' }"></gio-go-back-button>{{ roleScope | titlecase }} - {{ role }}\n  </h1>\n  <h4>List all the users having the role {{ role }} in the {{ roleScope }} scope.</h4>\n\n  <mat-card>\n    <div class="org-settings-role-members__add-button-container" *gioPermission="{ anyOf: [\'organization-role-u\'] }">\n      <h2>Members</h2>\n\n      <button (click)="onAddMemberClicked()" mat-raised-button color="primary" type="button" aria-label="Button to add a member">\n        <mat-icon>add</mat-icon>Add a member\n      </button>\n    </div>\n\n    <gio-table-wrapper [length]="membershipsTableUnpaginatedLength" (filtersChange)="onMembershipFiltersChanged($event)">\n      <table mat-table [dataSource]="filteredMemberships" class="memberships-table" id="membershipsTable" aria-label="Members table">\n        \x3c!-- Display Name Column --\x3e\n        <ng-container matColumnDef="displayName">\n          <th mat-header-cell *matHeaderCellDef id="displayName">Full Name</th>\n          <td mat-cell *matCellDef="let member">{{ member.displayName }}</td>\n        </ng-container>\n\n        \x3c!-- Actions Column --\x3e\n        <ng-container matColumnDef="actions">\n          <th mat-header-cell *matHeaderCellDef id="actions"></th>\n          <td mat-cell *matCellDef="let member">\n            <div class="centered-cell">\n              <ng-container *gioPermission="{ anyOf: [\'organization-role-u\'] }">\n                <button\n                  (click)="onDeleteMemberClicked(member)"\n                  mat-icon-button\n                  aria-label="Button to delete a member"\n                  matTooltip="Delete member"\n                >\n                  <mat-icon>delete</mat-icon>\n                </button>\n              </ng-container>\n            </div>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef="membershipsTableDisplayedColumns"></tr>\n        <tr mat-row *matRowDef="let row; columns: membershipsTableDisplayedColumns"></tr>\n\n        <tr class="mat-row" *matNoDataRow>\n          <td class="mat-cell" [attr.colspan]="membershipsTableDisplayedColumns.length">No member</td>\n        </tr>\n      </table>\n    </gio-table-wrapper>\n  </mat-card>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="org-settings-role">\n  <h1>\n    <gio-go-back-button [ajsGo]="{ to: \'organization.settings.ng-roles\' }"></gio-go-back-button>\n    {{ (isEditMode ? \'Update\' : \'Create\') + \' role in the \' + (roleScope | titlecase) + \' scope\' }}\n  </h1>\n  <h4>Manage CRUD (Create, Read, Update, Delete) permissions for this role {{ roleName }} in the {{ roleScope | titlecase }} scope.</h4>\n\n  <form *ngIf="!isLoading" autocomplete="off" [formGroup]="roleForm" (ngSubmit)="onSubmit()">\n    <gio-banner-info *ngIf="isReadOnly">System role are not editable</gio-banner-info>\n\n    <mat-card class="org-settings-role__role-card">\n      <mat-form-field appearance="fill">\n        <mat-label>Role name</mat-label>\n        <input class="org-settings-role__role-card__field__name" matInput formControlName="name" required />\n        <mat-hint>The name cannot be changed after it has been created.</mat-hint>\n        <mat-error *ngIf="roleForm.get(\'name\').hasError(\'required\')">Name is required.</mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance="fill">\n        <mat-label>Role description</mat-label>\n        <input matInput formControlName="description" />\n      </mat-form-field>\n\n      <gio-form-slide-toggle appearance="fill">\n        <gio-form-label>Default role</gio-form-label>\n        <mat-slide-toggle gioFormSlideToggle aria-label="Default role toggle" formControlName="default"></mat-slide-toggle>\n      </gio-form-slide-toggle>\n    </mat-card>\n\n    <mat-card class="org-settings-role__permissions-card" formGroupName="permissions">\n      <table\n        *ngIf="rolePermissionsTableDS"\n        mat-table\n        [dataSource]="rolePermissionsTableDS"\n        id="rolePermissionsTable"\n        aria-label="Role CRUD permissions table"\n      >\n        \x3c!-- Name Column --\x3e\n        <ng-container matColumnDef="permissionName">\n          <th mat-header-cell *matHeaderCellDef id="permissionName">Permission</th>\n          <td mat-cell *matCellDef="let permission">\n            <span>{{ permission.permissionName }}</span>\n\n            <div *ngIf="permission.isMovedToOrganizationScope" class="mat-caption permission-moved">\n              This permission has been moved to ORGANIZATION scope\n            </div>\n          </td>\n        </ng-container>\n\n        \x3c!-- Create Column --\x3e\n        <ng-container matColumnDef="create">\n          <th mat-header-cell *matHeaderCellDef id="create">\n            Create\n            <div>\n              <mat-checkbox\n                (change)="toggleAll(\'C\', $event)"\n                [disabled]="isReadOnly"\n                [checked]="selectAllCheckbox.C.state === \'checked\'"\n                [indeterminate]="selectAllCheckbox.C.state === \'indeterminate\'"\n                [aria-label]="selectAllCheckbox.C.label"\n              >\n              </mat-checkbox>\n            </div>\n          </th>\n          <td mat-cell *matCellDef="let permission" [formGroupName]="permission.permissionName">\n            <mat-checkbox formControlName="C"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        \x3c!-- Read Column --\x3e\n        <ng-container matColumnDef="read">\n          <th mat-header-cell *matHeaderCellDef id="read">\n            Read\n            <div>\n              <mat-checkbox\n                (change)="toggleAll(\'R\', $event)"\n                [disabled]="isReadOnly"\n                [checked]="selectAllCheckbox.R.state === \'checked\'"\n                [indeterminate]="selectAllCheckbox.R.state === \'indeterminate\'"\n                [aria-label]="selectAllCheckbox.R.label"\n              >\n              </mat-checkbox>\n            </div>\n          </th>\n          <td mat-cell *matCellDef="let permission" [formGroupName]="permission.permissionName">\n            <mat-checkbox formControlName="R"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        \x3c!-- Update Column --\x3e\n        <ng-container matColumnDef="update">\n          <th mat-header-cell *matHeaderCellDef id="update">\n            Update\n            <div>\n              <mat-checkbox\n                (change)="toggleAll(\'U\', $event)"\n                [disabled]="isReadOnly"\n                [checked]="selectAllCheckbox.U.state === \'checked\'"\n                [indeterminate]="selectAllCheckbox.U.state === \'indeterminate\'"\n                [aria-label]="selectAllCheckbox.U.label"\n              >\n              </mat-checkbox>\n            </div>\n          </th>\n          <td mat-cell *matCellDef="let permission" [formGroupName]="permission.permissionName">\n            <mat-checkbox formControlName="U"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        \x3c!-- Delete Column --\x3e\n        <ng-container matColumnDef="delete">\n          <th mat-header-cell *matHeaderCellDef id="delete">\n            Delete\n            <div>\n              <mat-checkbox\n                (change)="toggleAll(\'D\', $event)"\n                [disabled]="isReadOnly"\n                [checked]="selectAllCheckbox.D.state === \'checked\'"\n                [indeterminate]="selectAllCheckbox.D.state === \'indeterminate\'"\n                [aria-label]="selectAllCheckbox.D.label"\n              >\n              </mat-checkbox>\n            </div>\n          </th>\n          <td mat-cell *matCellDef="let permission" [formGroupName]="permission.permissionName">\n            <mat-checkbox formControlName="D"></mat-checkbox>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef="rolePermissionsTableDisplayedColumns"></tr>\n        <tr mat-row *matRowDef="let row; columns: rolePermissionsTableDisplayedColumns"></tr>\n\n        <tr class="mat-row" *matNoDataRow>\n          <td class="mat-cell" [attr.colspan]="rolePermissionsTableDisplayedColumns.length">No permission</td>\n        </tr>\n      </table>\n    </mat-card>\n\n    <gio-save-bar [creationMode]="!isEditMode" [form]="roleForm" [formInitialValues]="initialRoleFormValue"></gio-save-bar>\n  </form>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="application-subscriptions-list" ng-if="$ctrl.subscriptions.data.length > 0">\n  <h2>{{ $ctrl.listLabel }}</h2>\n  <div class="gv-form-content" layout="column">\n    <md-table-container>\n      <table md-table class="gv-table-dense">\n        <thead md-head>\n          <tr md-row>\n            <th md-column>API</th>\n            <th md-column>Plan</th>\n            <th md-column>Created at</th>\n            <th md-column>Processed at</th>\n            <th md-column>Start at</th>\n            <th md-column>End at</th>\n            <th md-column>Status</th>\n          </tr>\n        </thead>\n        <tbody md-body>\n          <tr md-row ng-repeat="subscription in $ctrl.subscriptions.data track by subscription.id">\n            <td md-cell>\n              <a ng-click="$ctrl.navigateToSubscription(subscription.id)">\n                {{ $ctrl.subscriptions.metadata[subscription.api].name }}\n              </a>\n            </td>\n            <td md-cell>{{ $ctrl.subscriptions.metadata[subscription.plan].name }}</td>\n            <td md-cell>{{ subscription.created_at | date: \'yyyy-MM-dd HH:mm:ss\' }}</td>\n            <td md-cell>{{ subscription.processed_at | date: \'yyyy-MM-dd HH:mm:ss\' }}</td>\n            <td md-cell>{{ subscription.starting_at || \'-\' | date: \'yyyy-MM-dd HH:mm:ss\' }}</td>\n            <td md-cell>{{ subscription.ending_at || \'-\' | date: \'yyyy-MM-dd HH:mm:ss\' }}</td>\n            <td md-cell class="status-cell">\n              <md-tooltip ng-if="subscription.reason" md-direction="left">{{ subscription.reason }}</md-tooltip>\n              {{ subscription.status }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </md-table-container>\n\n    <md-table-pagination\n      ng-if="$ctrl.subscriptions.data.length > 0"\n      md-limit="$ctrl.query.size"\n      md-limit-options="[10, 25, 50, 75, 100]"\n      md-page="$ctrl.query.page"\n      md-total="{{ $ctrl.subscriptions.page.total_elements }}"\n      md-on-paginate="$ctrl.onPaginate"\n      md-page-select\n    >\n    </md-table-pagination>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h2>{{ $ctrl.getTitle() }}</h2>\n<div id="api-keys" class="gv-form-content" layout="column">\n  <ng-banner ng-if="$ctrl.isSharedApiKey() && !$ctrl.areKeysEditable()">\n    This subscription uses a shared API key.<br />\n    You can renew or revoke the shared API key at the application level.\n  </ng-banner>\n  <md-table-container>\n    <table md-table>\n      <thead md-head>\n        <tr md-row>\n          <th md-column>Key</th>\n          <th md-column>Created at</th>\n          <th md-column>Revoked / Expire at</th>\n          <th md-column></th>\n        </tr>\n      </thead>\n      <tbody md-body>\n        <tr md-row ng-repeat="key in $ctrl.keys | orderBy:[\'-revoked_at\',\'-expire_at\',\'created_at\'] track by key.key ">\n          <td md-cell class="api-key-cell">\n            <ng-md-icon\n              icon="{{$ctrl.isValid(key)?\'done\':\'clear\'}}"\n              ng-class="$ctrl.isValid(key)? \'active-icon\' : \'revoked-icon\'"\n            ></ng-md-icon>\n            <code>{{key.key}}</code>\n            <span ng-if="$ctrl.isValid(key) && $ctrl.areKeysEditable()">\n              <md-tooltip md-direction="right">Copy to clipboard</md-tooltip>\n              <ng-md-icon\n                icon="content_copy"\n                ngclipboard\n                data-clipboard-text="{{key.key}}"\n                ngclipboard-success="$ctrl.onCopyApiKeySuccess(e);"\n                role="button"\n              ></ng-md-icon>\n            </span>\n          </td>\n          <td md-cell>{{key.created_at | date:\'yyyy-MM-dd HH:mm:ss\'}}</td>\n          <td md-cell>{{key.revoked_at || key.expire_at | date:\'yyyy-MM-dd HH:mm:ss\'}}</td>\n          <td md-cell>\n            <span ng-if="$ctrl.isValid(key) && $ctrl.areKeysEditable()">\n              <md-tooltip md-direction="left">Revoke</md-tooltip>\n              <ng-md-icon\n                class="revoke-icon"\n                permission\n                permission-only="\'application-subscription-u\'"\n                icon="not_interested"\n                ng-click="$ctrl.revokeApiKey(key)"\n              ></ng-md-icon>\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </md-table-container>\n\n  <div\n    class="md-actions gravitee-api-save-button"\n    layout="row"\n    permission\n    permission-only="\'application-subscription-u\'"\n    ng-if="$ctrl.areKeysEditable()"\n  >\n    <md-button class="md-raised md-primary" ng-click="$ctrl.renewApiKey()">\n      <ng-md-icon class="renew-icon" icon="autorenew"></ng-md-icon>\n      Renew API Key\n    </md-button>\n  </div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="org-settings-audit__title">\n  <h1>Audit</h1>\n</div>\n\n<mat-card class="org-settings-audit__filters" [formGroup]="filtersForm">\n  <mat-form-field class="org-settings-audit__filters__field" appearance="fill">\n    <mat-label>Event</mat-label>\n    <mat-select formControlName="event">\n      <mat-option></mat-option>\n      <mat-option *ngFor="let name of eventsName$ | async" [value]="name">{{ name }}</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field class="org-settings-audit__filters__field" appearance="fill">\n    <mat-label>Type</mat-label>\n    <mat-select formControlName="referenceType">\n      <mat-option></mat-option>\n      <mat-option value="ORGANIZATION">ORGANIZATION</mat-option>\n      <mat-option value="ENVIRONMENT">ENVIRONMENT</mat-option>\n      <mat-option value="APPLICATION">APPLICATION</mat-option>\n      <mat-option value="API">API</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <ng-container [ngSwitch]="filtersForm.get(\'referenceType\').value">\n    <mat-form-field *ngSwitchCase="\'ENVIRONMENT\'" class="org-settings-audit__filters__field" appearance="fill">\n      <mat-label>Environments</mat-label>\n      <mat-select formControlName="environmentId">\n        <mat-option></mat-option>\n        <mat-option *ngFor="let environment of environments$ | async" [value]="environment.id">{{ environment.name }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field *ngSwitchCase="\'APPLICATION\'" class="org-settings-audit__filters__field" appearance="fill">\n      <mat-label>Applications</mat-label>\n      <mat-select formControlName="applicationId">\n        <mat-option></mat-option>\n        <mat-optgroup\n          *ngFor="let environmentApplications of environmentsApplications$ | async | keyvalue"\n          [label]="environmentApplications.key"\n        >\n          <mat-option *ngFor="let application of environmentApplications.value" [value]="application.id">\n            {{ application.name }}\n          </mat-option>\n        </mat-optgroup>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field *ngSwitchCase="\'API\'" class="org-settings-audit__filters__field" appearance="fill">\n      <mat-label>APIs</mat-label>\n      <mat-select formControlName="apiId">\n        <mat-option></mat-option>\n        <mat-optgroup *ngFor="let environmentApis of environmentsApis$ | async | keyvalue" [label]="environmentApis.key">\n          <mat-option *ngFor="let api of environmentApis.value" [value]="api.id">\n            {{ api.name }}\n          </mat-option>\n        </mat-optgroup>\n      </mat-select>\n    </mat-form-field>\n  </ng-container>\n\n  <mat-form-field appearance="fill" class="org-settings-audit__filters__field right">\n    <mat-label>Enter a date range</mat-label>\n    <mat-date-range-input formGroupName="range" [rangePicker]="picker">\n      <input matStartDate formControlName="start" placeholder="Start date" />\n      <input matEndDate formControlName="end" placeholder="End date" />\n    </mat-date-range-input>\n    <mat-hint>MM/DD/YYYY – MM/DD/YYYY</mat-hint>\n    <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n    <mat-date-range-picker #picker></mat-date-range-picker>\n\n    <mat-error *ngIf="filtersForm.controls.range.controls.start.hasError(\'matStartDateInvalid\')">Invalid start date</mat-error>\n    <mat-error *ngIf="filtersForm.controls.range.controls.end.hasError(\'matEndDateInvalid\')">Invalid end date</mat-error>\n  </mat-form-field>\n</mat-card>\n\n<gio-table-wrapper\n  [disableSearchInput]="true"\n  [length]="nbTotalAudit"\n  [filters]="filtersStream.value.tableWrapper"\n  (filtersChange)="onFiltersChanged($event)"\n>\n  <table mat-table [dataSource]="filteredTableData" class="org-settings-audit__table" id="auditTable" aria-label="Audit table">\n    \x3c!-- Date Column --\x3e\n    <ng-container matColumnDef="date">\n      <th mat-header-cell *matHeaderCellDef id="date" width="1%">Date</th>\n      <td mat-cell *matCellDef="let element">{{ element.date | date: \'medium\' }}</td>\n    </ng-container>\n\n    \x3c!-- User Column --\x3e\n    <ng-container matColumnDef="user">\n      <th mat-header-cell *matHeaderCellDef id="user" width="15%">User</th>\n      <td mat-cell *matCellDef="let element">\n        {{ element.user }}\n      </td>\n    </ng-container>\n\n    \x3c!-- Type Column --\x3e\n    <ng-container matColumnDef="referenceType">\n      <th mat-header-cell *matHeaderCellDef id="referenceType" width="15%">Type</th>\n      <td mat-cell *matCellDef="let element">{{ element.referenceType }}</td>\n    </ng-container>\n\n    \x3c!-- Reference Column --\x3e\n    <ng-container matColumnDef="reference">\n      <th mat-header-cell *matHeaderCellDef id="reference" width="15%">Reference</th>\n      <td mat-cell *matCellDef="let element">{{ element.reference }}</td>\n    </ng-container>\n\n    \x3c!-- Event Column --\x3e\n    <ng-container matColumnDef="event">\n      <th mat-header-cell *matHeaderCellDef id="event" width="15%">Event</th>\n      <td mat-cell *matCellDef="let element">{{ element.event }}</td>\n    </ng-container>\n\n    \x3c!-- Targets Column --\x3e\n    <ng-container matColumnDef="targets">\n      <th mat-header-cell *matHeaderCellDef id="targets" width="15%">Target</th>\n      <td mat-cell *matCellDef="let element">\n        <div class="targets" *ngFor="let target of element.targets | keyvalue">\n          <div class="targets__target">{{ target.key }}:</div>\n          <div>{{ target.value }}</div>\n        </div>\n      </td>\n    </ng-container>\n\n    \x3c!-- Patch Column --\x3e\n    <ng-container matColumnDef="patch">\n      <th mat-header-cell *matHeaderCellDef id="patch" width="1%">Patch</th>\n      <td mat-cell *matCellDef="let element">\n        <div class="pre-wrapper">\n          <div>\n            <button\n              *ngIf="!element.displayPatch"\n              (click)="element.displayPatch = true"\n              mat-icon-button\n              aria-label="Button to show patch"\n              matTooltip="Show patch"\n            >\n              <mat-icon svgIcon="gio:eye-empty"></mat-icon>\n            </button>\n\n            <button\n              *ngIf="element.displayPatch"\n              (click)="element.displayPatch = false"\n              mat-icon-button\n              aria-label="Button to hide patch"\n              matTooltip="Hide patch"\n            >\n              <mat-icon svgIcon="gio:cancel"></mat-icon>\n            </button>\n          </div>\n          <div>\n            <pre *ngIf="element.displayPatch">{{ element.patch | json }}</pre>\n          </div>\n        </div>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n    <tr mat-row *matRowDef="let row; columns: displayedColumns"></tr>\n\n    \x3c!-- Row shown when there is no data --\x3e\n    <tr class="mat-row" *matNoDataRow>\n      <td class="mat-cell" [attr.colspan]="displayedColumns.length">No audit</td>\n    </tr>\n  </table>\n</gio-table-wrapper>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="org-settings-audit__title">\n  <h1>Audit</h1>\n</div>\n\n<mat-card class="org-settings-audit__filters" [formGroup]="filtersForm">\n  <mat-form-field class="org-settings-audit__filters__field" appearance="fill">\n    <mat-label>Event</mat-label>\n    <mat-select formControlName="event">\n      <mat-option></mat-option>\n      <mat-option *ngFor="let name of eventsName$ | async" [value]="name">{{ name }}</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field class="org-settings-audit__filters__field" appearance="fill">\n    <mat-label>Type</mat-label>\n    <mat-select formControlName="referenceType">\n      <mat-option></mat-option>\n      <mat-option value="APPLICATION">APPLICATION</mat-option>\n      <mat-option value="API">API</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <ng-container [ngSwitch]="filtersForm.get(\'referenceType\').value">\n    <mat-form-field *ngSwitchCase="\'APPLICATION\'" class="org-settings-audit__filters__field" appearance="fill">\n      <mat-label>Applications</mat-label>\n      <mat-select formControlName="applicationId">\n        <mat-option></mat-option>\n        <mat-option *ngFor="let application of applications$ | async" [value]="application.id">\n          {{ application.name }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field *ngSwitchCase="\'API\'" class="org-settings-audit__filters__field" appearance="fill">\n      <mat-label>APIs</mat-label>\n      <mat-select formControlName="apiId">\n        <mat-option></mat-option>\n        <mat-option *ngFor="let api of apis$ | async" [value]="api.id">\n          {{ api.name }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </ng-container>\n\n  <mat-form-field appearance="fill" class="org-settings-audit__filters__field right">\n    <mat-label>Enter a date range</mat-label>\n    <mat-date-range-input formGroupName="range" [rangePicker]="picker">\n      <input matStartDate formControlName="start" placeholder="Start date" />\n      <input matEndDate formControlName="end" placeholder="End date" />\n    </mat-date-range-input>\n    <mat-hint>MM/DD/YYYY – MM/DD/YYYY</mat-hint>\n    <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n    <mat-date-range-picker #picker></mat-date-range-picker>\n\n    <mat-error *ngIf="filtersForm.controls.range.controls.start.hasError(\'matStartDateInvalid\')">Invalid start date</mat-error>\n    <mat-error *ngIf="filtersForm.controls.range.controls.end.hasError(\'matEndDateInvalid\')">Invalid end date</mat-error>\n  </mat-form-field>\n</mat-card>\n\n<gio-table-wrapper\n  [disableSearchInput]="true"\n  [length]="nbTotalAudit"\n  [filters]="filtersStream.value.tableWrapper"\n  (filtersChange)="onFiltersChanged($event)"\n>\n  <table mat-table [dataSource]="filteredTableData" class="org-settings-audit__table" id="auditTable" aria-label="Audit table">\n    \x3c!-- Date Column --\x3e\n    <ng-container matColumnDef="date">\n      <th mat-header-cell *matHeaderCellDef id="date" width="1%">Date</th>\n      <td mat-cell *matCellDef="let element">{{ element.date | date: \'medium\' }}</td>\n    </ng-container>\n\n    \x3c!-- User Column --\x3e\n    <ng-container matColumnDef="user">\n      <th mat-header-cell *matHeaderCellDef id="user" width="15%">User</th>\n      <td mat-cell *matCellDef="let element">\n        {{ element.user }}\n      </td>\n    </ng-container>\n\n    \x3c!-- Type Column --\x3e\n    <ng-container matColumnDef="referenceType">\n      <th mat-header-cell *matHeaderCellDef id="referenceType" width="15%">Type</th>\n      <td mat-cell *matCellDef="let element">{{ element.referenceType }}</td>\n    </ng-container>\n\n    \x3c!-- Reference Column --\x3e\n    <ng-container matColumnDef="reference">\n      <th mat-header-cell *matHeaderCellDef id="reference" width="15%">Reference</th>\n      <td mat-cell *matCellDef="let element">{{ element.reference }}</td>\n    </ng-container>\n\n    \x3c!-- Event Column --\x3e\n    <ng-container matColumnDef="event">\n      <th mat-header-cell *matHeaderCellDef id="event" width="15%">Event</th>\n      <td mat-cell *matCellDef="let element">{{ element.event }}</td>\n    </ng-container>\n\n    \x3c!-- Targets Column --\x3e\n    <ng-container matColumnDef="targets">\n      <th mat-header-cell *matHeaderCellDef id="targets" width="15%">Target</th>\n      <td mat-cell *matCellDef="let element">\n        <div class="targets" *ngFor="let target of element.targets | keyvalue">\n          <div class="targets__target">{{ target.key }}:</div>\n          <div>{{ target.value }}</div>\n        </div>\n      </td>\n    </ng-container>\n\n    \x3c!-- Patch Column --\x3e\n    <ng-container matColumnDef="patch">\n      <th mat-header-cell *matHeaderCellDef id="patch" width="1%">Patch</th>\n      <td mat-cell *matCellDef="let element">\n        <div class="pre-wrapper">\n          <div>\n            <button\n              *ngIf="!element.displayPatch"\n              (click)="element.displayPatch = true"\n              mat-icon-button\n              aria-label="Button to show patch"\n              matTooltip="Show patch"\n            >\n              <mat-icon svgIcon="gio:eye-empty"></mat-icon>\n            </button>\n\n            <button\n              *ngIf="element.displayPatch"\n              (click)="element.displayPatch = false"\n              mat-icon-button\n              aria-label="Button to hide patch"\n              matTooltip="Hide patch"\n            >\n              <mat-icon svgIcon="gio:cancel"></mat-icon>\n            </button>\n          </div>\n          <div>\n            <pre *ngIf="element.displayPatch">{{ element.patch | json }}</pre>\n          </div>\n        </div>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n    <tr mat-row *matRowDef="let row; columns: displayedColumns"></tr>\n\n    \x3c!-- Row shown when there is no data --\x3e\n    <tr class="mat-row" *matNoDataRow>\n      <td class="mat-cell" [attr.colspan]="displayedColumns.length">No audit</td>\n    </tr>\n  </table>\n</gio-table-wrapper>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="title">\n  <div class="title__status">\n    <h1>Applications</h1>\n\n    <mat-radio-group\n      *gioRole="{ anyOf: [{ scope: \'ORGANIZATION\', name: \'ADMIN\' }] }"\n      class="status__radio-group"\n      aria-label="Select a status"\n      (change)="onStatusChange()"\n      [(ngModel)]="this.currentStatus"\n    >\n      <mat-radio-button class="status__radio-group__button" *ngFor="let status of statusFilters" [value]="status">\n        {{ status }}\n      </mat-radio-button>\n    </mat-radio-group>\n  </div>\n\n  <button\n    (click)="onAddApplicationClick()"\n    mat-raised-button\n    color="primary"\n    data-testid="add-application"\n    *gioPermission="{ anyOf: [\'environment-application-c\'] }"\n  >\n    <mat-icon>add</mat-icon> Add application\n  </button>\n</div>\n\n<gio-table-wrapper [length]="nbTotalApplications" [filters]="filters" (filtersChange)="onFiltersChanged($event)">\n  <table\n    mat-table\n    matSort\n    [dataSource]="filteredTableData"\n    [ngClass]="\'applications-table-\' + currentStatus.toLowerCase()"\n    id="applicationsTable"\n    aria-label="Application table"\n  >\n    \x3c!-- Picture Column --\x3e\n    <ng-container matColumnDef="applicationPicture">\n      <th mat-header-cell *matHeaderCellDef id="applicationPicture" width="1%"></th>\n      <td mat-cell *matCellDef="let element">\n        <gio-avatar [src]="element.applicationPicture" [name]="element.name" size="32" [roundedBorder]="true"></gio-avatar>\n      </td>\n    </ng-container>\n\n    \x3c!-- Display name Column --\x3e\n    <ng-container matColumnDef="name">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header id="name">Name</th>\n      <td mat-cell *matCellDef="let element" (click)="onEditActionClicked(element)">\n        <a>{{ element.name }}</a>\n      </td>\n    </ng-container>\n\n    \x3c!-- Type Column --\x3e\n    <ng-container matColumnDef="type">\n      <th mat-header-cell *matHeaderCellDef id="type" width="15%">Type</th>\n      <td mat-cell *matCellDef="let element">\n        {{ element.type | titlecase }}\n      </td>\n    </ng-container>\n\n    \x3c!-- Owner Column --\x3e\n    <ng-container matColumnDef="owner">\n      <th mat-header-cell *matHeaderCellDef id="owner" width="15%">Owner</th>\n      <td mat-cell *matCellDef="let element">{{ element.owner.displayName }}</td>\n    </ng-container>\n\n    \x3c!-- Archived at Column --\x3e\n    <ng-container matColumnDef="updated_at">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header id="updated_at" width="15%">Archived at</th>\n      <td mat-cell *matCellDef="let element">{{ element.updated_at | date: \'medium\' }}</td>\n    </ng-container>\n\n    \x3c!-- Actions Column --\x3e\n    <ng-container matColumnDef="actions">\n      <th mat-header-cell *matHeaderCellDef id="actions" width="1%"></th>\n      <td mat-cell *matCellDef="let element">\n        <div class="table__centered-cell">\n          <button\n            *ngIf="\'ACTIVE\' === element.status"\n            (click)="onEditActionClicked(element)"\n            mat-icon-button\n            aria-label="Button to edit an application"\n            matTooltip="Edit application"\n          >\n            <mat-icon>edit</mat-icon>\n          </button>\n          <ng-container>\n            <button\n              *ngIf="\'ARCHIVED\' === element.status"\n              (click)="onRestoreActionClicked(element)"\n              mat-icon-button\n              aria-label="Button to restore an application"\n              matTooltip="Restore application"\n            >\n              <mat-icon svgIcon="gio:magic-wand"></mat-icon>\n            </button>\n          </ng-container>\n        </div>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef="this.displayedColumns"></tr>\n    <tr mat-row *matRowDef="let row; columns: this.displayedColumns"></tr>\n\n    \x3c!-- Row shown when there is no data --\x3e\n    <tr class="mat-row" *matNoDataRow>\n      <td class="mat-cell" [attr.colspan]="this.displayedColumns.length">\n        {{ \'ACTIVE\' === currentStatus ? \'There is no application (yet).\' : \'There is no archived application.\' }}\n      </td>\n    </tr>\n  </table>\n</gio-table-wrapper>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="title">\n  <h1>APIs</h1>\n  <button\n    (click)="onAddApiClick()"\n    mat-raised-button\n    color="primary"\n    aria-label="add-api"\n    *gioPermission="{ anyOf: [\'environment-api-c\'] }"\n  >\n    <mat-icon>add</mat-icon> Add API\n  </button>\n</div>\n\n<gio-table-wrapper\n  [searchLabel]="searchLabel"\n  [length]="apisTableDSUnpaginatedLength"\n  [filters]="filters"\n  (filtersChange)="onFiltersChanged($event)"\n>\n  <table mat-table matSort [dataSource]="apisTableDS" id="apisTable" aria-label="Apis table">\n    \x3c!-- Picture Column --\x3e\n    <ng-container matColumnDef="picture">\n      <th mat-header-cell *matHeaderCellDef id="picture"></th>\n      <td mat-cell *matCellDef="let element">\n        <gio-avatar [src]="element.picture" [name]="element.name" size="32" [roundedBorder]="true"></gio-avatar>\n      </td>\n    </ng-container>\n\n    \x3c!-- Display Name Column --\x3e\n    <ng-container matColumnDef="name">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header id="name">Name</th>\n      <td mat-cell *matCellDef="let element" (click)="onEditActionClicked(element)">\n        {{ element.name }}\n      </td>\n    </ng-container>\n\n    \x3c!-- Display States Column --\x3e\n    <ng-container matColumnDef="states">\n      <th mat-header-cell *matHeaderCellDef id="states"></th>\n      <td mat-cell *matCellDef="let element">\n        <mat-icon\n          *ngIf="element.state === \'STARTED\'"\n          matTooltip="Started"\n          class="states__api-started"\n          size="20"\n          svgIcon="gio:play-circle"\n        ></mat-icon>\n        <mat-icon\n          *ngIf="element.state !== \'STARTED\'"\n          matTooltip="Stopped"\n          class="states__api-not-started"\n          size="20"\n          svgIcon="gio:stop-circle"\n        ></mat-icon>\n        <mat-icon\n          *ngIf="element.isNotSynced$ | async"\n          matTooltip="API out of sync"\n          class="states__api-is-not-synced"\n          size="20"\n          svgIcon="gio:refresh-cw"\n        ></mat-icon>\n        <mat-icon\n          *ngIf="element.lifecycleState === \'PUBLISHED\'"\n          matTooltip="Published"\n          class="states__api-published"\n          size="20"\n          svgIcon="gio:cloud-published"\n        ></mat-icon>\n        <mat-icon\n          *ngIf="element.lifecycleState !== \'PUBLISHED\'"\n          matTooltip="Unpublished"\n          class="states__api-not-published"\n          size="20"\n          svgIcon="gio:cloud-unpublished"\n        ></mat-icon>\n        <mat-icon\n          *ngIf="element.origin === \'kubernetes\'"\n          matTooltip="Kubernetes Origin"\n          class="states__api-origin"\n          size="20"\n          svgIcon="gio:kubernetes"\n        ></mat-icon>\n        <span\n          *ngIf="element.workflowBadge"\n          [ngClass]="element.workflowBadge.class"\n          class="states__api-workflow-badge"\n          [matTooltip]="element.workflowBadge.text"\n        >\n          {{ element.workflowBadge.text }}\n        </span>\n      </td>\n    </ng-container>\n\n    \x3c!-- Display Context Path Column --\x3e\n    <ng-container matColumnDef="contextPath">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header id="contextPath">Context paths</th>\n      <td mat-cell *matCellDef="let element">\n        <a>{{ element.contextPath }}</a>\n      </td>\n    </ng-container>\n\n    \x3c!-- Display Tags Column --\x3e\n    <ng-container matColumnDef="tags">\n      <th mat-header-cell *matHeaderCellDef id="tags">Tags</th>\n      <td mat-cell *matCellDef="let element">\n        <a>{{ element.tags }}</a>\n      </td>\n    </ng-container>\n\n    \x3c!-- Display Quality Score Column --\x3e\n    <ng-container matColumnDef="qualityScore" *ngIf="isQualityDisplayed">\n      <th mat-header-cell *matHeaderCellDef id="qualityScore">Quality</th>\n      <td mat-cell *matCellDef="let element">\n        <span *ngIf="element.qualityScore$ | async as qualityScore" class="quality-score" [ngClass]="qualityScore.class">\n          {{ qualityScore.score }}%\n        </span>\n      </td>\n    </ng-container>\n\n    \x3c!-- Display Owner Column --\x3e\n    <ng-container matColumnDef="owner">\n      <th mat-header-cell *matHeaderCellDef id="owner">Owner</th>\n      <td mat-cell *matCellDef="let element">\n        <a [matTooltip]="element.ownerEmail ?? null">{{ element.owner }}</a>\n      </td>\n    </ng-container>\n\n    \x3c!-- Display Version Column --\x3e\n    <ng-container matColumnDef="definitionVersion">\n      <th mat-header-cell *matHeaderCellDef id="definitionVersion">Version</th>\n      <td mat-cell *matCellDef="let element">\n        <span [matTooltip]="element.definitionVersion.label" class="gio-badge-neutral"\n          ><mat-icon *ngIf="element.definitionVersion.icon" class="gio-left" [svgIcon]="element.definitionVersion.icon"></mat-icon\n          >{{ element.definitionVersion.label }}</span\n        >\n      </td>\n    </ng-container>\n\n    \x3c!-- Display Visibility Column --\x3e\n    <ng-container matColumnDef="visibility">\n      <th mat-header-cell *matHeaderCellDef id="visibility">Visibility</th>\n      <td mat-cell *matCellDef="let element">\n        <mat-icon class="visibility" size="20" [matTooltip]="element.visibility.label | titlecase">{{ element.visibility.icon }}</mat-icon>\n      </td>\n    </ng-container>\n\n    \x3c!-- Actions Column --\x3e\n    <ng-container matColumnDef="actions">\n      <th mat-header-cell *matHeaderCellDef id="actions"></th>\n      <td mat-cell *matCellDef="let element">\n        <div class="actions__edit">\n          <button\n            *ngIf="!element.readonly"\n            (click)="onEditActionClicked(element)"\n            mat-icon-button\n            aria-label="Button to edit an API"\n            matTooltip="Edit API"\n          >\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button\n            *ngIf="element.readonly"\n            (click)="onEditActionClicked(element)"\n            mat-icon-button\n            aria-label="Button to view API details"\n            matTooltip="View API details"\n          >\n            <mat-icon svgIcon="gio:eye-empty"></mat-icon>\n          </button>\n        </div>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n    <tr mat-row *matRowDef="let row; columns: displayedColumns"></tr>\n\n    \x3c!-- Row shown when there is no data --\x3e\n    <tr class="mat-row" *matNoDataRow>\n      <td *ngIf="!isLoadingData && apisTableDS.length === 0" class="mat-cell" [attr.colspan]="displayedColumns.length">\n        {{ \'There is no API (yet).\' }}\n      </td>\n      <td *ngIf="isLoadingData" class="mat-cell" [attr.colspan]="displayedColumns.length">\n        {{ \'Loading...\' }}\n      </td>\n    </tr>\n  </table>\n</gio-table-wrapper>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="title">\n  <h1>Entrypoints</h1>\n  <button\n    *ngIf="!this.isReadOnly && (!this.virtualHostModeEnabled || (this.virtualHostModeEnabled && !this.domainRestrictions.length))"\n    (click)="switchEntrypointMode()"\n    mat-raised-button\n    color="primary"\n  >\n    {{ virtualHostModeEnabled ? \'Switch to context-path mode\' : \'Switch to virtual-hosts mode\' }}\n  </button>\n</div>\n\n<ng-container *ngIf="apiProxy">\n  <api-proxy-entrypoints-context-path\n    *ngIf="!virtualHostModeEnabled"\n    [readOnly]="isReadOnly"\n    [apiProxy]="apiProxy"\n    (apiProxySubmit)="onSubmit($event)"\n  ></api-proxy-entrypoints-context-path>\n\n  <api-proxy-entrypoints-virtual-host\n    *ngIf="virtualHostModeEnabled"\n    [readOnly]="isReadOnly"\n    [apiProxy]="apiProxy"\n    [domainRestrictions]="domainRestrictions"\n    (apiProxySubmit)="onSubmit($event)"\n  ></api-proxy-entrypoints-virtual-host>\n</ng-container>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<form *ngIf="entrypointsForm" [formGroup]="entrypointsForm" autocomplete="off" gioFormFocusInvalid>\n  <mat-card *ngIf="!virtualHostModeEnabled" class="form-card">\n    <mat-form-field appearance="fill" class="form-card__context-path-field">\n      <mat-label>Gateway context-path</mat-label>\n      <input matInput formControlName="contextPath" required />\n      <mat-hint\n        >Path where API is exposed, must start with a \'/\' and must contain any letter, capitalize letter, number, dash or\n        underscore.</mat-hint\n      >\n      <mat-error *ngIf="entrypointsForm.get(\'contextPath\').hasError(\'required\')">Context path is required.</mat-error>\n      <mat-error *ngIf="entrypointsForm.get(\'contextPath\').hasError(\'contextPath\')">{{\n        entrypointsForm.get(\'contextPath\').getError(\'contextPath\')\n      }}</mat-error>\n    </mat-form-field>\n  </mat-card>\n\n  <gio-save-bar [form]="entrypointsForm" [formInitialValues]="initialEntrypointsFormValue" (submitted)="onSubmit()"></gio-save-bar>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<form *ngIf="virtualHostsForm" [formGroup]="virtualHostsForm" autocomplete="off" gioFormFocusInvalid>\n  <mat-card>\n    <div class="virtual-host__header">\n      <span>Use virtual-host to define on which entrypoint your API can be reached depending on host. </span>\n\n      <button *ngIf="!readOnly" mat-raised-button type="button" (click)="onAddVirtualHost()" color="primary">\n        <mat-icon svgIcon="gio:plus"></mat-icon> Add virtual-host\n      </button>\n    </div>\n\n    <table\n      mat-table\n      [dataSource]="virtualHostsTableData"\n      class="virtual-host__table"\n      id="virtualHostsTable"\n      aria-label="Virtual hosts table"\n    >\n      \x3c!-- Host Column --\x3e\n      <ng-container matColumnDef="host">\n        <th mat-header-cell *matHeaderCellDef id="host" width="25%">Host</th>\n        <td mat-cell *matCellDef="let element">\n          <mat-form-field appearance="fill" class="virtual-host__table__host-field">\n            <mat-label>Listening host</mat-label>\n            <input #hostInput matInput [formControl]="element.controls.host" [matAutocomplete]="hostAuto" />\n\n            \x3c!-- Config Autocomplete to only select domain with input value --\x3e\n            <mat-autocomplete #hostAuto="matAutocomplete">\n              <mat-option\n                *ngFor="let domain of domainRestrictions"\n                [value]="hostInput.value"\n                (click)="element.controls.hostDomain.setValue(domain)"\n              >\n                {{ hostInput.value ? hostInput.value + \'.\' + domain : domain }}\n              </mat-option>\n            </mat-autocomplete>\n\n            <span matSuffix\n              ><em>{{ element.controls.hostDomain.value }}</em></span\n            >\n\n            <mat-hint>Host which must be set into the HTTP request to access this entrypoint.</mat-hint>\n            <mat-error *ngIf="element.controls.host.hasError(\'required\')">Listening host is required.</mat-error>\n            <mat-error *ngIf="element.controls.host.hasError(\'host\')"\n              >Listening host is not valid (must end with one of restriction domain).</mat-error\n            >\n          </mat-form-field>\n        </td>\n      </ng-container>\n      \x3c!-- Path Column --\x3e\n      <ng-container matColumnDef="path">\n        <th mat-header-cell *matHeaderCellDef id="path" width="25%">Path</th>\n        <td mat-cell *matCellDef="let element">\n          <mat-form-field appearance="fill" class="virtual-host__table__path-field">\n            <mat-label>Listening Path</mat-label>\n            <input matInput [formControl]="element.controls.path" required />\n            <mat-hint\n              >Path where API is exposed, must start with a \'/\' and must contain any letter, capitalize letter, number, dash or\n              underscore.</mat-hint\n            >\n            <mat-error *ngIf="element.controls.path.hasError(\'required\')">Listening path is required.</mat-error>\n            <mat-error *ngIf="element.controls.path.hasError(\'pattern\')"\n              >Listening path is not valid (must start with a \'/\' and must contain any letter, capitalize letter, number, dash or\n              underscore).</mat-error\n            >\n          </mat-form-field>\n        </td>\n      </ng-container>\n      \x3c!-- Override Column --\x3e\n      <ng-container matColumnDef="override_entrypoint">\n        <th mat-header-cell *matHeaderCellDef id="override_entrypoint" width="25%">Override</th>\n        <td mat-cell *matCellDef="let element">\n          <mat-checkbox [formControl]="element.controls.override_entrypoint" aria-label="Override entrypoint"\n            >Override entrypoint\n          </mat-checkbox>\n\n          <div class="mat-small">Useful to override entrypoint with the virtual host on the portal.</div>\n        </td>\n      </ng-container>\n      \x3c!-- Remove Column --\x3e\n      <ng-container matColumnDef="remove">\n        <th mat-header-cell *matHeaderCellDef id="remove" width="1%"></th>\n        <td mat-cell *matCellDef="let element; let i = index">\n          <button\n            type="button"\n            *ngIf="!readOnly"\n            (click)="onDeleteVirtualHostClicked(i)"\n            mat-icon-button\n            aria-label="Button to delete a virtual host"\n          >\n            <mat-icon svgIcon="gio:trash"></mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef="virtualHostsTableDisplayedColumns"></tr>\n      <tr mat-row *matRowDef="let row; columns: virtualHostsTableDisplayedColumns"></tr>\n\n      \x3c!-- Row shown when there is no data --\x3e\n      <tr class="mat-row" *matNoDataRow>\n        <td class="mat-cell" [attr.colspan]="virtualHostsTableDisplayedColumns.length">No entrypoints</td>\n      </tr>\n    </table>\n  </mat-card>\n\n  <gio-save-bar [form]="virtualHostsForm" (submitted)="onSubmit()" (resetClicked)="onResetClicked()"></gio-save-bar>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h1>Cross-origin resource sharing (CORS)</h1>\n\n<form *ngIf="corsForm" [formGroup]="corsForm" autocomplete="off" gioFormFocusInvalid>\n  <mat-card>\n    <mat-card-content>\n      \x3c!-- Enable Cors --\x3e\n      <gio-form-slide-toggle appearance="fill" class="cors-card__enable-toggle">\n        <gio-form-label>Enable Cors</gio-form-label>\n        CORS is a mechanism that allows restricted resources (e.g. fonts) on a web page to be requested from another domain outside the\n        domain from which the first resource was served. If you enable the try-it feature of a Swagger page you probably have to enable and\n        configure the CORS.\n        <mat-slide-toggle\n          gioFormSlideToggle\n          formControlName="enabled"\n          aria-label="CORS enable toggle "\n          name="enableCors"\n        ></mat-slide-toggle>\n      </gio-form-slide-toggle>\n\n      <mat-divider></mat-divider>\n\n      \x3c!-- Allow Origin --\x3e\n      <div class="cors-card__allow-origin" [class.disabled]="!corsForm.get(\'enabled\').value">\n        <div class="cors-card__allow-origin__label">Access-Control-Allow-Origin</div>\n        <p class="cors-card__allow-origin__hint">\n          The origin parameter specifies a URI that may access the resource. Scheme, domain and port are part of the\n          <em>same-origin</em> definition. <br />\n          If you choose to enable \'*\' it means that is allows all requests, regardless of origin.\n        </p>\n        <mat-form-field class="cors-card__allow-origin__form-field" appearance="fill">\n          <mat-label>Allow-Origin</mat-label>\n          <gio-form-tags-input\n            formControlName="allowOrigin"\n            placeholder="*, https://mydomain.com, (http|https).*.mydomain.com, ..."\n            [tagValidationHook]="confirmAllowAllOrigins()"\n          >\n          </gio-form-tags-input>\n\n          <mat-error *ngIf="corsForm.get(\'allowOrigin\')?.errors?.allowOrigin">{{\n            corsForm.get(\'allowOrigin\')?.errors?.allowOrigin\n          }}</mat-error>\n          <mat-hint>Regular Expressions are also supported</mat-hint>\n        </mat-form-field>\n      </div>\n\n      \x3c!-- Allow Methods --\x3e\n      <div class="cors-card__allow-methods" [class.disabled]="!corsForm.get(\'enabled\').value">\n        <div class="cors-card__allow-methods__label">Access-Control-Allow-Methods</div>\n        <p class="cors-card__allow-methods__hint">\n          Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request.\n        </p>\n        <mat-form-field class="cors-card__allow-methods__form-field" appearance="fill">\n          <mat-label>Access-Control-Allow-Methods</mat-label>\n          <mat-select formControlName="allowMethods" multiple>\n            <mat-option *ngFor="let method of httpMethods" [value]="method">{{ method }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      \x3c!-- Allow Headers --\x3e\n      <div class="cors-card__allow-headers" [class.disabled]="!corsForm.get(\'enabled\').value">\n        <div class="cors-card__allow-headers__label">Access-Control-Allow-Headers</div>\n        <p>Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request.</p>\n        <mat-form-field class="cors-card__allow-headers__form-field" appearance="fill">\n          <mat-label>Allow-Headers</mat-label>\n          <gio-form-tags-input\n            aria-label="Allow-Headers selection"\n            formControlName="allowHeaders"\n            placeholder="Content-Type, ..."\n            [addOnBlur]="false"\n            [autocompleteOptions]="defaultHttpHeaders"\n          >\n          </gio-form-tags-input>\n        </mat-form-field>\n      </div>\n\n      \x3c!-- Allow Credentials --\x3e\n      <div class="cors-card__allow-credentials" [class.disabled]="!corsForm.get(\'enabled\').value">\n        <gio-form-slide-toggle appearance="fill" class="cors-card__allow-credentials__enable-toggle">\n          <gio-form-label>Access-Control-Allow-Credentials</gio-form-label>\n          Indicates whether or not the response to the request can be exposed when the credentials flag is true.\n          <mat-slide-toggle\n            gioFormSlideToggle\n            formControlName="allowCredentials"\n            aria-label="CORS allow credentials toggle"\n            name="allowCredentials"\n          ></mat-slide-toggle>\n        </gio-form-slide-toggle>\n      </div>\n\n      \x3c!-- Max Age --\x3e\n      <div class="cors-card__max-age" [class.disabled]="!corsForm.get(\'enabled\').value">\n        <div class="cors-card__max-age__label">Max Age</div>\n        <p class="cors-card__max-age__hint">\n          This header indicates how long the results of a preflight request can be cached (-1 if disabled).\n        </p>\n        <mat-form-field class="cors-card__max-age__form-field" appearance="fill">\n          <mat-label>Max Age</mat-label>\n          <input matInput formControlName="maxAge" type="number" min="-1" />\n          <mat-hint>(seconds)</mat-hint>\n        </mat-form-field>\n      </div>\n\n      \x3c!-- Expose-Headers --\x3e\n      <div class="cors-card__expose-headers" [class.disabled]="!corsForm.get(\'enabled\').value">\n        <div class="cors-card__expose-headers__label">Access-Control-Expose-Headers</div>\n        <p class="cors-card__expose-headers__hint">This header lets a server whitelist headers that browsers are allowed to access.</p>\n        <mat-form-field class="cors-card__expose-headers__form-field" appearance="fill">\n          <mat-label>Expose-Headers</mat-label>\n          <gio-form-tags-input\n            aria-label="Expose-Headers selection"\n            formControlName="exposeHeaders"\n            placeholder="Cache-Control, Content-Length, Content-Type, ..."\n            [addOnBlur]="false"\n            [autocompleteOptions]="defaultHttpHeaders"\n          >\n          </gio-form-tags-input>\n        </mat-form-field>\n      </div>\n\n      \x3c!-- Run policies --\x3e\n      <div class="cors-card__run-policies" [class.disabled]="!corsForm.get(\'enabled\').value">\n        <gio-form-slide-toggle appearance="fill" class="cors-card__run-policies__enable-toggle">\n          <gio-form-label>Run policies for preflight requests</gio-form-label>\n          By default, preflight-requests are ending when processed by the gateway without running API policies.\n          <mat-slide-toggle\n            gioFormSlideToggle\n            formControlName="runPolicies"\n            aria-label="Run policies for preflight requests toggle"\n            name="runPolicies"\n          ></mat-slide-toggle>\n        </gio-form-slide-toggle>\n      </div>\n    </mat-card-content>\n  </mat-card>\n\n  <gio-save-bar [form]="corsForm" [formInitialValues]="initialCorsFormValue" (submitted)="onSubmit()"></gio-save-bar>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h1>Deployments</h1>\n\n<form *ngIf="deploymentsForm" [formGroup]="deploymentsForm" autocomplete="off" gioFormFocusInvalid>\n  <mat-card>\n    <p>Use sharding tags to control where the API must be deployed.</p>\n\n    <mat-form-field class="deployments-card__form-field" appearance="fill">\n      <mat-label>Sharding tags</mat-label>\n      <mat-select formControlName="tags" multiple>\n        <mat-option *ngFor="let tag of shardingTags" [value]="tag.id"\n          >{{ tag.name }}<span *ngIf="tag.description"> - {{ tag.description }}</span></mat-option\n        >\n      </mat-select>\n    </mat-form-field>\n  </mat-card>\n\n  <gio-save-bar [form]="deploymentsForm" [formInitialValues]="initialDeploymentsFormValue" (submitted)="onSubmit()"></gio-save-bar>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h1>Response Templates</h1>\n\n<mat-card>\n  <div class="response-templates-list__header">\n    <span>Define your own response templates if you\'re looking for overriding default responses from the gateway.</span>\n\n    <ng-container *ngIf="!isReadOnly && responseTemplateTableData">\n      <button\n        *gioPermission="{ anyOf: [\'api-response_templates-c\'] }"\n        mat-raised-button\n        type="button"\n        (click)="onAddResponseTemplateClicked()"\n        color="primary"\n      >\n        <mat-icon svgIcon="gio:plus"></mat-icon> Add new Response Template\n      </button>\n    </ng-container>\n  </div>\n\n  <table\n    mat-table\n    [dataSource]="responseTemplateTableData"\n    class="response-templates-list__table"\n    id="responseTemplateTable"\n    aria-label="Response Template table"\n  >\n    \x3c!-- Key Column --\x3e\n    <ng-container matColumnDef="key">\n      <th mat-header-cell *matHeaderCellDef id="key" width="25%">Key</th>\n      <td mat-cell *matCellDef="let element">\n        {{ element.key }}\n      </td>\n    </ng-container>\n    \x3c!-- Content-Type Column --\x3e\n    <ng-container matColumnDef="contentType">\n      <th mat-header-cell *matHeaderCellDef id="contentType" width="25%">Content-Type</th>\n      <td mat-cell *matCellDef="let element">\n        {{ element.contentType }}\n      </td>\n    </ng-container>\n    \x3c!-- Status Code Column --\x3e\n    <ng-container matColumnDef="statusCode">\n      <th mat-header-cell *matHeaderCellDef id="key" width="25%">Status Code</th>\n      <td mat-cell *matCellDef="let element">\n        {{ element.statusCode }}\n      </td>\n    </ng-container>\n    \x3c!-- Actions Column --\x3e\n    <ng-container matColumnDef="actions">\n      <th mat-header-cell *matHeaderCellDef id="actions" width="1%"></th>\n      <td mat-cell *matCellDef="let element">\n        <div class="response-templates-list__table__actions">\n          <button\n            *ngIf="isReadOnly"\n            (click)="onEditResponseTemplateClicked(element)"\n            mat-icon-button\n            aria-label="Button to open Response Template detail"\n          >\n            <mat-icon svgIcon="gio:eye-empty"></mat-icon>\n          </button>\n          <button\n            *ngIf="!isReadOnly"\n            (click)="onEditResponseTemplateClicked(element)"\n            mat-icon-button\n            aria-label="Button to edit a Response Template"\n          >\n            <mat-icon svgIcon="gio:edit-pencil"></mat-icon>\n          </button>\n          <ng-container *ngIf="!isReadOnly">\n            <button\n              *gioPermission="{ anyOf: [\'api-response_templates-d\'] }"\n              (click)="onDeleteResponseTemplateClicked(element)"\n              mat-icon-button\n              aria-label="Button to delete a Response Template"\n            >\n              <mat-icon svgIcon="gio:trash"></mat-icon>\n            </button>\n          </ng-container>\n        </div>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef="responseTemplateTableDisplayedColumns"></tr>\n    <tr mat-row *matRowDef="let row; columns: responseTemplateTableDisplayedColumns"></tr>\n\n    \x3c!-- Row shown when there is no data --\x3e\n    <tr class="mat-row" *matNoDataRow>\n      <td class="mat-cell" [attr.colspan]="responseTemplateTableDisplayedColumns.length">No Response Templates</td>\n    </tr>\n  </table>\n</mat-card>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<form *ngIf="responseTemplatesForm" [formGroup]="responseTemplatesForm" autocomplete="off" gioFormFocusInvalid>\n  <h1>\n    <gio-go-back-button\n      [ajsGo]="{ to: \'management.apis.detail.proxy.responsetemplates.list\', params: { apiId: apiId } }"\n    ></gio-go-back-button>\n    <ng-container *ngIf="mode === \'new\'">Create a new Response Template</ng-container>\n    <ng-container *ngIf="mode === \'edit\'">{{ isReadOnly ? \'\' : \'Update \' }}Response Template</ng-container>\n  </h1>\n\n  <mat-card>\n    \x3c!-- Key --\x3e\n    <div class="card__template-key">\n      <div class="card__template-key__label">Template key</div>\n      <p class="card__template-key__hint">The template key for which template responses will be applied.</p>\n\n      <mat-form-field class="card__template-key__form-field" appearance="fill">\n        <mat-label>Template key</mat-label>\n        <input type="text" aria-label="Template key input" matInput formControlName="key" [matAutocomplete]="tkAuto" required />\n        <mat-autocomplete #tkAuto="matAutocomplete">\n          <mat-option *ngFor="let key of defaultKeys" [value]="key">\n            {{ key }}\n          </mat-option>\n        </mat-autocomplete>\n\n        <mat-error *ngIf="responseTemplatesForm.get(\'key\').hasError(\'required\')"> Status code is required. </mat-error>\n      </mat-form-field>\n    </div>\n\n    \x3c!-- Accept header --\x3e\n    <div class="card__accept-header">\n      <div class="card__accept-header__label">Accept header to match</div>\n      <p class="card__accept-header__hint">The Accept header of requests for which this template response should be used.</p>\n\n      <mat-form-field class="card__accept-header__form-field" appearance="fill">\n        <mat-label>Accept</mat-label>\n        <input\n          type="text"\n          aria-label="Accept header to match input"\n          matInput\n          formControlName="acceptHeader"\n          placeholder="*/*, application/json, text/xml, ..."\n          required\n        />\n        <mat-error *ngIf="responseTemplatesForm.get(\'acceptHeader\').hasError(\'uniqAcceptHeader\')">\n          {{ responseTemplatesForm.get(\'acceptHeader\').getError(\'uniqAcceptHeader\') }}\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    \x3c!-- Status code --\x3e\n    <div class="card__status-code">\n      <div class="card__status-code__label">Status code</div>\n      <p class="card__status-code__hint">The status code sent to the API consumer.</p>\n\n      <mat-form-field class="card__status-code__form-field" appearance="fill">\n        <mat-label>Status code</mat-label>\n        <input type="text" aria-label="Status code input" matInput formControlName="statusCode" [matAutocomplete]="scAuto" required />\n        <mat-autocomplete #scAuto="matAutocomplete">\n          <mat-option *ngFor="let statusCode of filteredStatusCodes$ | async" [value]="statusCode.code">\n            {{ statusCode.code }} - {{ statusCode.label }}\n          </mat-option>\n        </mat-autocomplete>\n        <em matSuffix *ngIf="selectedStatusCodes$ | async as selectedStatusCodes">{{ selectedStatusCodes.label }}</em>\n\n        <mat-error *ngIf="responseTemplatesForm.get(\'statusCode\').hasError(\'required\')"> Status code is required. </mat-error>\n        <mat-error *ngIf="responseTemplatesForm.get(\'statusCode\').hasError(\'statusCode\')">\n          {{ responseTemplatesForm.get(\'statusCode\').getError(\'statusCode\') }}\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class="card__http-headers">\n      <div class="card__http-headers__label">HTTP Headers</div>\n      <gio-form-headers class="card__http-headers__form-field" formControlName="headers"></gio-form-headers>\n    </div>\n\n    \x3c!-- Status code --\x3e\n    <div class="card__body">\n      <div class="card__body__label">Body</div>\n      <p class="card__body__hint">Response template body.</p>\n      <mat-form-field class="card__body__form-field" appearance="fill">\n        <mat-label>Body</mat-label>\n        <textarea matInput formControlName="body" rows="8"> </textarea>\n      </mat-form-field>\n    </div>\n  </mat-card>\n\n  <gio-save-bar\n    *ngIf="!isReadOnly"\n    [creationMode]="mode === \'new\'"\n    [form]="responseTemplatesForm"\n    [formInitialValues]="initialResponseTemplatesFormValue"\n    (submitted)="onSubmit()"\n  ></gio-save-bar>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div class="endpoint-list__header">\n  <h1>Endpoints</h1>\n\n  <div *ngIf="!isReadOnly && endpointGroupsTableData">\n    <button *gioPermission="{ anyOf: [\'api-definition-u\'] }" mat-raised-button type="button" color="primary" (click)="navigateToGroup(\'\')">\n      <mat-icon svgIcon="gio:plus"></mat-icon>Add new endpoint group\n    </button>\n  </div>\n</div>\n\n<div *ngIf="endpointGroupsTableData">\n  <mat-card class="endpoint-list__card" *ngFor="let endpointGroupData of endpointGroupsTableData; let i = index">\n    <div class="endpoint-list__header">\n      <h2>{{ endpointGroupData.name }}</h2>\n      <div>\n        <ng-container *ngIf="!isReadOnly; else readOnlyGroupActions">\n          <button\n            class="endpoint-list__action"\n            *gioPermission="{ anyOf: [\'api-definition-u\'] }"\n            mat-raised-button\n            (click)="navigateToEndpoint(endpointGroupData.name, \'\')"\n            aria-label="Add new endpoint"\n            matTooltip="Add new endpoint"\n          >\n            <mat-icon svgIcon="gio:plus"></mat-icon> Add new endpoint\n          </button>\n          <button\n            class="endpoint-list__action"\n            *gioPermission="{ anyOf: [\'api-definition-u\'] }"\n            mat-raised-button\n            (click)="navigateToGroup(endpointGroupData.name)"\n            aria-label="Edit group"\n            matTooltip="Edit group"\n          >\n            <mat-icon svgIcon="gio:edit-pencil"></mat-icon> Edit group\n          </button>\n          <button\n            class="endpoint-list__action"\n            *gioPermission="{ anyOf: [\'api-definition-u\'] }"\n            mat-raised-button\n            (click)="deleteGroup(endpointGroupData.name)"\n            aria-label="Delete group"\n            matTooltip="Delete group"\n          >\n            <mat-icon svgIcon="gio:trash"></mat-icon> Delete group\n          </button>\n        </ng-container>\n        <ng-template #readOnlyGroupActions>\n          <button\n            class="endpoint-list__action"\n            mat-raised-button\n            color="primary"\n            aria-label="Button to open group detail"\n            matTooltip="Open group detail"\n            (click)="navigateToGroup(endpointGroupData.name)"\n          >\n            <mat-icon svgIcon="gio:eye-empty"></mat-icon> Open group detail\n          </button>\n        </ng-template>\n      </div>\n    </div>\n\n    <table\n      mat-table\n      [dataSource]="endpointGroupData.endpoints"\n      [attr.id]="\'endpointGroupsTable-\' + i"\n      aria-label="Endpoint group table"\n      class="endpoint-list__table"\n    >\n      \x3c!-- Name Column --\x3e\n      <ng-container matColumnDef="name">\n        <th mat-header-cell *matHeaderCellDef id="name" width="20%">Name</th>\n        <td mat-cell *matCellDef="let element">\n          {{ element.name }}\n        </td>\n      </ng-container>\n\n      \x3c!-- Health Check Column --\x3e\n      <ng-container matColumnDef="healthCheck">\n        <th mat-header-cell *matHeaderCellDef id="healthCheck" width="10%"></th>\n        <td mat-cell *matCellDef="let element">\n          <div class="endpoint-list__table__hc">\n            <span *ngIf="element.isBackup" matTooltip="Secondary endpoint" class="gio-badge-neutral">Secondary</span>\n            <mat-icon *ngIf="element.healthcheck" matTooltip="Health check is enabled">favorite</mat-icon>\n            <mat-icon *ngIf="element.inherit" matTooltip="HTTP configuration inherited">subdirectory_arrow_right</mat-icon>\n          </div>\n        </td>\n      </ng-container>\n\n      \x3c!-- Target Column --\x3e\n      <ng-container matColumnDef="target">\n        <th mat-header-cell *matHeaderCellDef id="target" width="25%">Target</th>\n        <td mat-cell *matCellDef="let element">\n          {{ element.target }}\n        </td>\n      </ng-container>\n\n      \x3c!-- Type Column --\x3e\n      <ng-container matColumnDef="type">\n        <th mat-header-cell *matHeaderCellDef id="type" width="20%">Type</th>\n        <td mat-cell *matCellDef="let element">\n          {{ element.type }}\n        </td>\n      </ng-container>\n\n      \x3c!-- Weight Column --\x3e\n      <ng-container matColumnDef="weight">\n        <th mat-header-cell *matHeaderCellDef id="weight" width="20%">Weight</th>\n        <td mat-cell *matCellDef="let element">\n          {{ element.weight }}\n        </td>\n      </ng-container>\n\n      \x3c!-- Actions Column --\x3e\n      <ng-container matColumnDef="actions">\n        <th mat-header-cell *matHeaderCellDef id="actions" width="1%"></th>\n        <td mat-cell *matCellDef="let element">\n          <div class="endpoint-list__table__actions">\n            <ng-container *ngIf="!isReadOnly; else readOnlyEndpointActions">\n              <button\n                mat-icon-button\n                aria-label="Button to edit an endpoint"\n                matTooltip="Edit endpoint"\n                (click)="navigateToEndpoint(endpointGroupData.name, element.name)"\n              >\n                <mat-icon svgIcon="gio:edit-pencil"></mat-icon>\n              </button>\n              <button\n                *gioPermission="{ anyOf: [\'api-definition-u\'] }"\n                mat-icon-button\n                (click)="deleteEndpoint(endpointGroupData.name, element.name)"\n                aria-label="Delete endpoint"\n                matTooltip="Delete endpoint"\n              >\n                <mat-icon svgIcon="gio:trash"></mat-icon>\n              </button>\n            </ng-container>\n            <ng-template #readOnlyEndpointActions>\n              <button\n                mat-icon-button\n                aria-label="Button to open endpoint detail"\n                matTooltip="Open endpoint detail"\n                (click)="navigateToEndpoint(endpointGroupData.name, element.name)"\n              >\n                <mat-icon svgIcon="gio:eye-empty"></mat-icon>\n              </button>\n            </ng-template>\n          </div>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef="endpointTableDisplayedColumns"></tr>\n      <tr mat-row *matRowDef="let row; columns: endpointTableDisplayedColumns"></tr>\n\n      \x3c!-- Row shown when there is no data --\x3e\n      <tr class="mat-row" *matNoDataRow>\n        <td class="mat-cell" [attr.colspan]="endpointTableDisplayedColumns.length">No Endpoints</td>\n      </tr>\n    </table>\n  </mat-card>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h2 mat-dialog-title class="title">Duplicate API</h2>\n\n<mat-dialog-content *ngIf="duplicateApiForm" class="content" [formGroup]="duplicateApiForm">\n  <div class="content__row">\n    <mat-form-field class="content__row__contextPath-field" appearance="fill">\n      <mat-label>Context path</mat-label>\n      <input #apiName matInput formControlName="contextPath" [placeholder]="contextPathPlaceholder" required />\n      <mat-error *ngIf="duplicateApiForm.controls.contextPath.hasError(\'required\')">Context path is required.</mat-error>\n      <mat-error *ngIf="duplicateApiForm.controls.contextPath.hasError(\'contextPath\')">{{\n        duplicateApiForm.controls.contextPath.getError(\'contextPath\')\n      }}</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class="content__row__version-field" appearance="fill">\n      <mat-label>Version</mat-label>\n      <input #apiName matInput formControlName="version" [placeholder]="versionPlaceholder" required />\n      <mat-error *ngIf="duplicateApiForm.controls.version.hasError(\'required\')">Version is required.</mat-error>\n      <mat-error *ngIf="duplicateApiForm.controls.version.hasError(\'version\')">{{\n        duplicateApiForm.controls.version.getError(\'version\')\n      }}</mat-error>\n    </mat-form-field>\n  </div>\n  <h5>Include additional data</h5>\n  <div class="content__options" formGroupName="options">\n    <mat-checkbox class="content__options__option" *ngFor="let option of optionsCheckbox" [formControlName]="option.id">\n      {{ option.label }}\n    </mat-checkbox>\n  </div>\n</mat-dialog-content>\n\n<mat-dialog-actions align="end" class="actions">\n  <button mat-flat-button [mat-dialog-close]="false">Cancel</button>\n  <button color="primary" mat-raised-button [disabled]="duplicateApiForm.invalid" (click)="onDuplicate()">Duplicate</button>\n</mat-dialog-actions>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h2 mat-dialog-title class="title">Export API</h2>\n\n<mat-dialog-content class="content">\n  <mat-tab-group [(selectedIndex)]="selectedTabIndex">\n    \x3c!-- Tab - Export Json --\x3e\n    <mat-tab label="Gravitee API definition">\n      <div *ngIf="exportJsonFrom" class="content__json" [formGroup]="exportJsonFrom">\n        <mat-form-field class="content__json__select" appearance="fill">\n          <mat-label>Target APIM version</mat-label>\n          <mat-select #exportVersionSelect formControlName="exportVersion" name="exportVersion">\n            <mat-select-trigger *ngIf="getJsonOptions(exportVersionSelect.value) as option">\n              {{ exportVersionSelect.value || \'\' }} <span *ngIf="option.isDeprecated" class="gio-badge-error">Deprecated</span>\n            </mat-select-trigger>\n\n            <mat-option *ngFor="let option of jsonOptions" [value]="option.id">\n              {{ option.label }} <span *ngIf="option.isDeprecated" class="gio-badge-error">Deprecated</span>\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <h5>Include additional data</h5>\n        <div class="content__options" formGroupName="options">\n          <mat-checkbox class="content__options__option" *ngFor="let option of jsonOptionsCheckbox" [formControlName]="option.id">\n            {{ option.label }}\n          </mat-checkbox>\n        </div>\n      </div>\n    </mat-tab>\n    \x3c!-- Tab - Export CRD --\x3e\n    <mat-tab>\n      <ng-template mat-tab-label>\n        <mat-icon class="content__crd__label__icon" svgIcon="gio:kubernetes"></mat-icon>\n        CRD API Definition\n      </ng-template>\n\n      <gio-banner-info>\n        <div>\n          Export your API Definition to a CRD format (Custom Resource Definition from Kubernetes) and start using our beta GKO to manage\n          your API declaratively.\n          <a href="https://docs.gravitee.io/apim/3.x/apim_kubernetes_operator_overview.html" target="_blank" rel="noopener noreferrer">\n            Link to documentation <mat-icon class="content__crd__link__icon" svgIcon="gio:external-link"></mat-icon>\n          </a>\n        </div>\n      </gio-banner-info>\n    </mat-tab>\n  </mat-tab-group>\n</mat-dialog-content>\n\n<mat-dialog-actions align="end" class="actions">\n  <button mat-flat-button [mat-dialog-close]="false">Cancel</button>\n  <button color="primary" mat-raised-button (click)="onExport()">Export</button>\n</mat-dialog-actions>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<ng-container *ngIf="state === \'hasCockpit\'">\n  <h2 mat-dialog-title>Promote the API</h2>\n\n  <mat-dialog-content class="promote__content">\n    <div *ngIf="promotionTargets.length > 0; else noEnvironment">\n      <gio-banner-info *ngIf="hasPromotionInProgress">\n        Pending environments promotion\n        <span gioBannerBody>You will be able to promote them again after they have been accepted or rejected.</span>\n      </gio-banner-info>\n\n      <mat-form-field class="promote__content__promotion-targets" appearance="fill">\n        <mat-label>Environment</mat-label>\n        <mat-select [formControl]="promoteControl">\n          <mat-option *ngFor="let target of promotionTargets" [value]="target.id" [disabled]="target.promotionInProgress">\n            {{ target.name }}{{ target.promotionInProgress ? \' (pending)\' : \'\' }}\n          </mat-option>\n        </mat-select>\n        <mat-hint>Select the environment where you want to promote the API.</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <ng-template #noEnvironment>\n      <gio-banner-warning>No environment is available to promote this API.</gio-banner-warning>\n    </ng-template>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align="end" class="actions">\n    <button mat-flat-button [mat-dialog-close]="false">Cancel</button>\n    <button color="primary" mat-raised-button [disabled]="promotionTargets.length === 0" (click)="onPromote()">Promote</button>\n  </mat-dialog-actions>\n</ng-container>\n\n<ng-container *ngIf="state === \'meetCockpit\'">\n  <h2 mat-dialog-title>Meet Cockpit</h2>\n\n  <mat-dialog-content class="meet-cockpit__content">\n    <img class="meet-cockpit__content__logo" src="/assets/gravitee_cockpit_logo.png" alt="Logo of Gravitee.io Cockpit" />\n    <p>\n      <a [href]="cockpitURL" target="_blank">Cockpit</a> is a centralized, multi-tenancy tool for monitoring all your Gravitee.io\n      installations from one handy interactive dashboard.\n    </p>\n    <p>\n      Create an account on <a [href]="cockpitURL" target="_blank">Cockpit</a>, register your current installation and start promoting your\n      APIs across multiple environments!`.\n    </p>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align="end" class="actions">\n    <button mat-flat-button [mat-dialog-close]="false">Ok</button>\n  </mat-dialog-actions>\n</ng-container>\n\n<ng-container *ngIf="state === \'loading\'">\n  <h2 mat-dialog-title>Promote the API</h2>\n\n  <mat-dialog-content class="loading__content">\n    Loading...\n    <mat-progress-bar mode="indeterminate"></mat-progress-bar>\n  </mat-dialog-content>\n\n  <mat-dialog-actions align="end" class="actions">\n    <button mat-flat-button [mat-dialog-close]="false">Close</button>\n  </mat-dialog-actions>\n</ng-container>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h1>General</h1>\n\n<gio-banner-warning *ngIf="updateState === \'TO_UPDATE\'" class="details-card__update-banner">\n  <div>API version out-of-date</div>\n  <button\n    gioBannerAction\n    mat-raised-button\n    (click)="updateApiVersion()"\n    type="button"\n    aria-label="Button to update api version"\n    matTooltip="Update api version"\n    color="basic"\n  >\n    <mat-icon svgIcon="gio:up-circle"></mat-icon> Update API version\n  </button>\n  <div gioBannerBody>\n    <div>We no longer support path-based APIs. To continue using all features, you will need to update your API.</div>\n    <a href="https://www.gravitee.io/blog/gravitee-api-definitions" target="_blank">Learn more</a>\n  </div>\n</gio-banner-warning>\n\n<gio-banner-warning *ngIf="updateState == \'IN_PROGRESS\'" class="details-card__update-banner">\n  <div>Updating your API version</div>\n  <button gioBannerAction mat-raised-button type="button" aria-label="Updating" color="basic" disabled>\n    <mat-icon class="details-card__update-banner__refresh-icon" svgIcon="gio:refresh-ccw"></mat-icon> Updating\n  </button>\n  <span gioBannerBody>In a few seconds the page will reload automatically</span>\n</gio-banner-warning>\n\n<gio-banner-info *ngIf="updateState === \'UPDATED\'" class="details-card__update-banner">\n  <div>Your API is up-to-date!</div>\n  <button gioBannerAction (click)="reloadApi()" mat-raised-button type="button" aria-label="Continue" color="primary">Continue</button>\n  <span gioBannerBody>Gravitee will reload to apply your new API Version</span>\n</gio-banner-info>\n\n<form *ngIf="apiDetailsForm" [formGroup]="apiDetailsForm" autocomplete="off" gioFormFocusInvalid>\n  <mat-card class="details-card">\n    <div class="details-card__header">\n      <div class="details-card__header__info-inputs">\n        <div class="details-card__header__info-inputs__first-row">\n          <mat-form-field class="details-card__header__info-inputs__first-row__name-field" appearance="fill">\n            <mat-label>Name</mat-label>\n            <input #apiName matInput formControlName="name" required />\n            <mat-error *ngIf="apiDetailsForm.controls.name.hasError(\'required\')">Name is required.</mat-error>\n          </mat-form-field>\n\n          <mat-form-field class="details-card__header__info-inputs__first-row__version-field" appearance="fill">\n            <mat-label>Version</mat-label>\n            <input matInput formControlName="version" required />\n            <mat-error *ngIf="apiDetailsForm.controls.version.hasError(\'required\')">Version is required.</mat-error>\n            <mat-error *ngIf="apiDetailsForm.controls.version.hasError(\'version\')">{{\n              apiDetailsForm.controls.version.getError(\'version\')\n            }}</mat-error>\n          </mat-form-field>\n        </div>\n        <div class="details-card__header__info-inputs__second-row">\n          <mat-form-field class="details-card__header__info-inputs__second-row__description-field" appearance="fill">\n            <mat-label>Description</mat-label>\n            <textarea matInput formControlName="description" required></textarea>\n            <mat-error *ngIf="apiDetailsForm.controls.description.hasError(\'required\')">Description is required.</mat-error>\n          </mat-form-field>\n\n          <mat-form-field class="etails-card__header__info-inputs__second-row__labels-field" appearance="fill">\n            <mat-label>Labels</mat-label>\n            <gio-form-tags-input\n              formControlName="labels"\n              [addOnBlur]="false"\n              [autocompleteOptions]="labelsAutocompleteOptions"\n            ></gio-form-tags-input>\n          </mat-form-field>\n\n          <mat-form-field class="etails-card__header__info-inputs__second-row__categories-field" appearance="fill">\n            <mat-label>Categories</mat-label>\n            <mat-select formControlName="categories" multiple>\n              <mat-option *ngIf="apiCategories.length === 0" disabled>No categories available</mat-option>\n              <mat-option *ngFor="let category of apiCategories" [value]="category.key"\n                >{{ category.name }} <em *ngIf="category.description"> - {{ category.description }}</em></mat-option\n              >\n            </mat-select>\n          </mat-form-field>\n\n          <gio-form-slide-toggle\n            *ngIf="canDisplayJupiterToggle"\n            appearance="fill"\n            class="etails-card__header__info-inputs__second-row__jupiter-field"\n          >\n            Enable Jupiter mode\n            <mat-slide-toggle\n              gioFormSlideToggle\n              formControlName="enableJupiter"\n              aria-label="Enable Jupiter mode"\n              name="enableJupiter"\n            ></mat-slide-toggle>\n          </gio-form-slide-toggle>\n        </div>\n      </div>\n      <div class="details-card__header__right-coll">\n        <div class="details-card__header__right-coll__media">\n          <gio-form-file-picker class="details-card__header__right-coll__media__picture" formControlName="picture" accept="image/*">\n            <gio-form-file-picker-label>API picture</gio-form-file-picker-label>\n            <gio-form-file-picker-add-button class="details-card__header__right-coll__media__picture__btn">\n              <span class="details-card__header__right-coll__media__picture__btn__text"> Click here or drag an image </span>\n              <gio-avatar\n                class="details-card__header__right-coll__media__picture__btn__default-avatar"\n                size="114"\n                [name]="apiName.value"\n              ></gio-avatar>\n            </gio-form-file-picker-add-button>\n            <gio-form-file-picker-empty>\n              <gio-avatar size="114" [name]="apiName.value"></gio-avatar>\n            </gio-form-file-picker-empty>\n          </gio-form-file-picker>\n          <gio-form-file-picker class="details-card__header__right-coll__media__background" formControlName="background" accept="image/*">\n            <gio-form-file-picker-label>API background</gio-form-file-picker-label>\n            <gio-form-file-picker-add-button class="details-card__header__right-coll__media__background__btn">\n              <span class="details-card__header__right-coll__media__background__btn__text"> Click here or drag an image </span>\n            </gio-form-file-picker-add-button>\n            <gio-form-file-picker-empty><span>No background defined</span></gio-form-file-picker-empty>\n          </gio-form-file-picker>\n        </div>\n\n        <div class="details-card__header__right-coll__info">\n          <dl class="gio-description-list">\n            <dt>Owner</dt>\n            <dd gioClipboardCopyWrapper [contentToCopy]="apiOwner">{{ apiOwner }}</dd>\n\n            <dt>Created</dt>\n            <dd>{{ apiCreatedAt | date: \'medium\' }}</dd>\n\n            <dt>Last connection</dt>\n            <dd>{{ apiLastDeploymentAt | date: \'medium\' }}</dd>\n          </dl>\n        </div>\n      </div>\n    </div>\n\n    <div class="details-card__actions">\n      <button mat-button class="details-card__actions_btn" (click)="exportApi()"><mat-icon svgIcon="gio:upload"></mat-icon> Export</button>\n      <button\n        *gioPermission="{ anyOf: [\'api-definition-u\'] }"\n        mat-button\n        class="details-card__actions_btn"\n        [disabled]="isReadOnly"\n        (click)="importApi()"\n      >\n        <mat-icon svgIcon="gio:download"></mat-icon> Import\n      </button>\n      <button\n        *gioPermission="{ anyOf: [\'api-definition-c\'] }"\n        mat-button\n        class="details-card__actions_btn"\n        [disabled]="isReadOnly"\n        (click)="duplicateApi()"\n      >\n        <mat-icon svgIcon="gio:copy"></mat-icon> Duplicate\n      </button>\n      <button\n        *gioPermission="{ anyOf: [\'api-definition-u\'] }"\n        mat-button\n        class="details-card__actions_btn"\n        [disabled]="!canPromote || isReadOnly"\n        (click)="promoteApi()"\n      >\n        <mat-icon svgIcon="gio:language"></mat-icon> Promote\n      </button>\n    </div>\n  </mat-card>\n\n  <api-portal-details-quality *ngIf="isQualityEnabled && apiId" class="api-quality" [apiId]="apiId"></api-portal-details-quality>\n\n  <api-portal-details-danger-zone class="danger-zone" [api]="api" (reloadDetails)="ngOnInit()"></api-portal-details-danger-zone>\n\n  <gio-save-bar [form]="apiDetailsForm" [formInitialValues]="initialApiDetailsFormValue" (submitted)="onSubmit()"></gio-save-bar>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h1>\n  <gio-go-back-button [ajsGo]="{ to: \'management.apis.detail.proxy.endpoints\', params: { apiId: apiId } }"></gio-go-back-button>\n  Group\n</h1>\n\n<form *ngIf="groupForm" autocomplete="off" gioFormFocusInvalid [formGroup]="groupForm">\n  <mat-tab-group animationDuration="0ms">\n    <mat-tab label="General">\n      \x3c!-- General tab content --\x3e\n      <div class="tab-body-wrapper">\n        <api-proxy-group-general *ngIf="generalForm" [generalForm]="generalForm"></api-proxy-group-general>\n      </div>\n    </mat-tab>\n    <mat-tab label="Configuration">\n      \x3c!-- Configuration tab content --\x3e\n      <div class="tab-body-wrapper">\n        <api-proxy-group-configuration\n          *ngIf="schemaForm"\n          [schemaForm]="schemaForm"\n          [group]="group"\n          [isReadOnly]="isReadOnly"\n          (onConfigurationChange)="onConfigurationChange($event)"\n        ></api-proxy-group-configuration>\n      </div>\n    </mat-tab>\n    <mat-tab label="Service discovery">\n      \x3c!-- Service discovery tab content --\x3e\n      <div class="tab-body-wrapper">\n        <api-proxy-group-service-discovery\n          *ngIf="serviceDiscoveryForm && serviceDiscoveryItems"\n          [serviceDiscoveryForm]="serviceDiscoveryForm"\n          [serviceDiscoveryItems]="serviceDiscoveryItems"\n          [group]="group"\n          [isReadOnly]="isReadOnly"\n          (onServiceDiscoveryConfigurationChange)="onServiceDiscoveryChange($event)"\n        ></api-proxy-group-service-discovery>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n\n  <gio-save-bar\n    class="save-bar"\n    [creationMode]="mode === \'new\'"\n    [form]="groupForm"\n    [formInitialValues]="initialGroupFormValue"\n    (submitted)="onSubmit()"\n    (resetClicked)="reset()"\n  ></gio-save-bar>\n</form>\n'},,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n    \n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    \n            http://www.apache.org/licenses/LICENSE-2.0\n    \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<mat-card *ngIf="healthCheckForm" [formGroup]="healthCheckForm">\n  <mat-card-content class="health-check-card">\n    \x3c!-- Enable health-check --\x3e\n    <gio-form-slide-toggle class="health-check-card__enable-toggle">\n      <gio-form-label>Enable health-check</gio-form-label>\n      <mat-slide-toggle\n        gioFormSlideToggle\n        formControlName="enabled"\n        aria-label="Health-check enable toggle"\n        name="enableHealthCheck"\n      ></mat-slide-toggle>\n    </gio-form-slide-toggle>\n\n    \x3c!-- Inherit configuration --\x3e\n    <gio-form-slide-toggle *ngIf="inheritHealthCheck" class="health-check-card__inherit-toggle">\n      <gio-form-label>Inherit configuration</gio-form-label>\n      <mat-slide-toggle\n        gioFormSlideToggle\n        formControlName="inherit"\n        aria-label="Inherit configuration toggle"\n        name="inheritHealthCheck"\n      ></mat-slide-toggle>\n    </gio-form-slide-toggle>\n\n    <mat-divider></mat-divider>\n\n    <gio-banner-info\n      *ngIf="healthCheckForm.get(\'enabled\').value && inheritHealthCheck && healthCheckForm.get(\'inherit\').value"\n      class="health-check-card__banner"\n    >\n      Inherited configuration preview from global health-check settings.\n    </gio-banner-info>\n\n    <div [class.disabled]="isDisabled$ | async" class="health-check-card--forms">\n      \x3c!-- Trigger --\x3e\n      <h3>Trigger</h3>\n      <div class="health-check-card__trigger">\n        <gv-cron-editor required formControlName="schedule" ngDefaultControl label="Schedule"></gv-cron-editor>\n        <div class="health-check-card__trigger__hint">A cron expression to schedule the health check</div>\n      </div>\n      \x3c!-- Request --\x3e\n      <h3>Request</h3>\n      <div class="health-check-card__request">\n        \x3c!-- Request HTTP Method --\x3e\n        <mat-form-field class="health-check-card__request__methods__form-field" appearance="fill">\n          <mat-label>HTTP Method</mat-label>\n          <mat-select formControlName="method" required>\n            <mat-option *ngFor="let method of httpMethods" [value]="method">{{ method }}</mat-option>\n          </mat-select>\n          <mat-error *ngIf="healthCheckForm.get(\'method\').hasError(\'required\')">HTTP Method is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Request Path --\x3e\n        <mat-form-field class="health-check-card__request__path__form-field" appearance="fill">\n          <mat-label>Path</mat-label>\n          <input type="text" matInput formControlName="path" required />\n          <mat-hint>Additional path added to the endpoint target.</mat-hint>\n          <mat-error *ngIf="healthCheckForm.get(\'path\').hasError(\'required\')">Path is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Request fromRoot --\x3e\n        <gio-form-slide-toggle appearance="fill" class="health-check-card__request__fromRoot__toggle">\n          <gio-form-label>From root path (\'/\')</gio-form-label>\n          <span class="mat-caption">\n            When "from root" is enabled, the path is appended to the root path (\'/\') of the endpoint without any additional path configured\n            at the endpoint level.\n          </span>\n          <mat-slide-toggle\n            gioFormSlideToggle\n            formControlName="fromRoot"\n            aria-label="From root path enable toggle"\n            name="fromRootCheck"\n          ></mat-slide-toggle>\n        </gio-form-slide-toggle>\n\n        \x3c!-- Request HTTP Body --\x3e\n        <mat-form-field\n          *ngIf="healthCheckForm.get(\'method\').value === \'POST\' || healthCheckForm.get(\'method\').value === \'PUT\'"\n          class="health-check-card__request__body__form-field"\n          appearance="fill"\n        >\n          <mat-label>Body</mat-label>\n          <textarea\n            aria-label="Endpoint target input"\n            matInput\n            formControlName="body"\n            rows="5"\n            maxlength="1000"\n            placeholder="HTTP Body"\n          ></textarea>\n          <mat-hint>Make sure to add Content-Type header for POST/PUT HTTP method.</mat-hint>\n        </mat-form-field>\n\n        \x3c!-- Request HTTP Headers --\x3e\n        <div class="health-check-card__request__http-headers">\n          <div class="health-check-card__request__http-headers__label">HTTP Headers</div>\n          <gio-form-headers class="health-check-card__request__http-headers__form-field" formControlName="headers"></gio-form-headers>\n          <div class="health-check-card__request__http-headers__hint">\n            Header value support EL (e.g: &#123; #dictionaries[\'my-dictionary\'][\'my-property\'] &#125;)\n          </div>\n        </div>\n      </div>\n      \x3c!-- Assertions --\x3e\n      <h3>Assertions</h3>\n\n      <div class="health-check-card__assertions" formArrayName="assertions">\n        <gio-banner-info *ngIf="!(isDisabled$ | async)" class="health-check-card__assertions__banner">\n          How to write assertion\n          <span gioBannerBody>\n            Example 1: Check the status of the HTTP response : <code>#response.status == 200</code><br />\n            Example 2: Check the JSON content of the response <code>#jsonPath(#response.content, \'$.status\') == \'green\'</code><br />\n          </span>\n        </gio-banner-info>\n        <div\n          *ngFor="let option of healthCheckForm.get(\'assertions\').controls; let i = index"\n          class="health-check-card__assertions__assertion"\n        >\n          <mat-form-field class="health-check-card__assertions__assertion__form-field" appearance="fill">\n            <mat-label>Assertion #{{ i }}</mat-label>\n            <input type="text" matInput [formControlName]="i" required />\n            <mat-error *ngIf="healthCheckForm.get(\'assertions\').at(i).hasError(\'required\')">Assertion is required.</mat-error>\n          </mat-form-field>\n          <button\n            mat-icon-button\n            class="health-check-card__assertions__assertion__remove-button"\n            type="button"\n            [disabled]="healthCheckForm.get(\'assertions\').length === 1"\n            (click)="removeAssertion(i)"\n            matTooltip="Remove assertion"\n            aria-label="Remove assertion"\n          >\n            <mat-icon svgIcon="gio:cancel"></mat-icon>\n          </button>\n        </div>\n\n        <div class="health-check-card__assertions__add">\n          <button mat-raised-button type="button" [disabled]="isDisabled$ | async" (click)="addAssertion()">\n            <mat-icon svgIcon="gio:plus"></mat-icon> Add assertion\n          </button>\n        </div>\n      </div>\n    </div>\n  </mat-card-content>\n</mat-card>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h1>\n  <gio-go-back-button [ajsGo]="{ to: \'management.apis.detail.proxy.endpoints\', params: { apiId: apiId } }"></gio-go-back-button>\n  Endpoint\n</h1>\n\n<form *ngIf="endpointForm" gioFormFocusInvalid autocomplete="off" [formGroup]="endpointForm">\n  <mat-tab-group animationDuration="0ms">\n    <mat-tab label="General">\n      \x3c!-- General tab content --\x3e\n      <div class="tab-body-wrapper">\n        <api-proxy-group-endpoint-edit-general\n          *ngIf="generalForm && endpoint && supportedTypes && tenants"\n          [generalForm]="generalForm"\n          [endpoint]="endpoint"\n          [supportedTypes]="supportedTypes"\n          [tenants]="tenants"\n        ></api-proxy-group-endpoint-edit-general>\n      </div>\n    </mat-tab>\n    <mat-tab label="Configuration">\n      \x3c!-- Configuration tab content --\x3e\n      <div class="tab-body-wrapper">\n        <api-proxy-group-endpoint-configuration\n          *ngIf="configurationForm && configurationSchema && endpoint"\n          [configurationForm]="configurationForm"\n          [endpoint]="endpoint"\n          [configurationSchema]="configurationSchema"\n          [isReadOnly]="isReadOnly"\n          (onConfigurationChange)="onConfigurationChange($event)"\n        ></api-proxy-group-endpoint-configuration>\n      </div>\n    </mat-tab>\n    <mat-tab label="Health-check">\n      \x3c!-- Configuration tab content --\x3e\n      <div class="tab-body-wrapper">\n        <api-proxy-health-check-form\n          [healthCheckForm]="healthCheckForm"\n          [inheritHealthCheck]="inheritHealthCheck"\n        ></api-proxy-health-check-form>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n\n  <gio-save-bar\n    class="save-bar"\n    [creationMode]="mode === \'new\'"\n    [form]="endpointForm"\n    [formInitialValues]="initialEndpointFormValue"\n    (submitted)="onSubmit()"\n  ></gio-save-bar>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n    \n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    \n            http://www.apache.org/licenses/LICENSE-2.0\n    \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h1>Failover</h1>\n\n<form *ngIf="failoverForm" [formGroup]="failoverForm" autocomplete="off" gioFormFocusInvalid>\n  <mat-card>\n    <mat-card-content>\n      \x3c!-- Enable failover --\x3e\n      <gio-form-slide-toggle appearance="fill" class="failover-card__enable-toggle">\n        <gio-form-label>Enable Failover</gio-form-label>\n        When gateway receives a connect timeout from backend servers, it redirects traffic to the next server until "max attempts" or\n        "timeout" have been reached.\n        <mat-slide-toggle\n          gioFormSlideToggle\n          formControlName="enabled"\n          aria-label="Failover enable toggle "\n          name="enableFailover"\n        ></mat-slide-toggle>\n      </gio-form-slide-toggle>\n\n      <mat-divider></mat-divider>\n\n      \x3c!-- Max Attempts --\x3e\n      <div class="failover-card__max-attempts" [class.disabled]="!enabled.value">\n        <div class="failover-card__max-attempts__label">Max attempts</div>\n        <p class="failover-card__max-attempts__hint">\n          Limits the number of possible tries before returning an error. Each try get an endpoint according to the load balancing algorithm.\n        </p>\n        <mat-form-field class="failover-card__max-attempts__form-field" appearance="fill">\n          <mat-label>Max Attempts</mat-label>\n          <input matInput formControlName="maxAttempts" type="number" min="1" required />\n          <mat-hint>Must be greater than 0.</mat-hint>\n          <mat-error *ngIf="maxAttempts.hasError(\'min\')">Must be greater than 0.</mat-error>\n          <mat-error *ngIf="maxAttempts.hasError(\'required\')">Max Attempts is required</mat-error>\n        </mat-form-field>\n      </div>\n\n      \x3c!-- Timeout --\x3e\n      <div class="failover-card__timeout" [class.disabled]="!enabled.value">\n        <div class="failover-card__timeout__label">Timeout (ms)</div>\n        <p class="failover-card__timeout__hint">Limits the time allowed to try another attempt.</p>\n        <mat-form-field class="failover-card__timeout__form-field" appearance="fill">\n          <mat-label>Timeout</mat-label>\n          <input matInput formControlName="retryTimeout" type="number" min="1" required />\n          <mat-hint>Must be greater than 0.</mat-hint>\n          <mat-error *ngIf="retryTimeout.hasError(\'min\')">Must be greater than 0.</mat-error>\n          <mat-error *ngIf="retryTimeout.hasError(\'required\')">Timeout is required</mat-error>\n        </mat-form-field>\n      </div>\n    </mat-card-content>\n  </mat-card>\n\n  <gio-save-bar [form]="failoverForm" [formInitialValues]="initialFailoverFormValue" (submitted)="onSubmit()"></gio-save-bar>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gio-side-nav">\n  <gio-menu class="gio-side-nav__menu">\n    <gio-menu-header>\n      <gio-menu-selector\n        tabIndex="1"\n        [selectedItemValue]="this.constants.org.currentEnv.id"\n        selectorTitle="Environment"\n        [selectorItems]="environments"\n        (selectChange)="this.changeCurrentEnv($event)"\n      ></gio-menu-selector>\n    </gio-menu-header>\n    <gio-menu-list>\n      <gio-menu-item\n        *ngFor="let item of mainMenuItems"\n        tabIndex="1"\n        [title]="item.displayName"\n        [icon]="item.icon"\n        (click)="navigateTo(item.targetRoute)"\n        [active]="isActive(item.baseRoute)"\n        >{{ item.displayName }}</gio-menu-item\n      >\n    </gio-menu-list>\n\n    <gio-menu-footer *ngIf="footerMenuItems.length > 0">\n      <gio-menu-item\n        *ngFor="let item of footerMenuItems"\n        tabIndex="1"\n        [title]="item.displayName"\n        [icon]="item.icon"\n        (click)="navigateTo(item.targetRoute)"\n        [active]="isActive(item.baseRoute)"\n        >{{ item.displayName }}</gio-menu-item\n      >\n    </gio-menu-footer>\n  </gio-menu>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gio-top-nav">\n  <gio-top-bar>\n    <button mat-icon-button gioTopBarHome>\n      <mat-icon svgIcon="gio:gravitee" (click)="navigateToHome()"></mat-icon>\n    </button>\n    <gio-top-bar-content type="apim" productName="API Management"></gio-top-bar-content>\n    <gio-top-bar-link\n      *ngIf="constants?.env?.settings?.portal?.url"\n      [url]="constants.env.settings.portal.url"\n      name="Developers Portal"\n    ></gio-top-bar-link>\n    <gio-top-bar-menu>\n      <button\n        mat-icon-button\n        (click)="openContextualDocumentation()"\n        aria-label="Display contextual documentation"\n        *ngIf="displayDocumentationButton"\n        data-pendoId="sidenav-resource-center"\n      >\n        <mat-icon svgIcon="gio:question-mark-circle"></mat-icon>\n      </button>\n      <gio-notification-menu *ngIf="newsletterProposed"></gio-notification-menu>\n      <gio-user-menu *ngIf="newsletterProposed" [hasAlert]="hasAlert" [userTaskCount]="userTaskCount"></gio-user-menu>\n    </gio-top-bar-menu>\n  </gio-top-bar>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="settings-navigation">\n  <gio-submenu class="settings-navigation__submenu">\n    <ng-container *ngFor="let group of this.groupItems">\n      <gio-submenu-group [title]="group.title" *ngIf="group.items && group.items.length > 0">\n        <gio-submenu-item\n          *ngFor="let item of group.items"\n          tabIndex="1"\n          (click)="navigateTo(item.targetRoute)"\n          [active]="isActive(item.baseRoute)"\n          >{{ item.displayName }}</gio-submenu-item\n        >\n      </gio-submenu-group>\n    </ng-container>\n  </gio-submenu>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="application-navigation">\n  <gio-submenu class="application-navigation__menu">\n    <div gioSubmenuTitle class="application-navigation__menu__title">{{ this.applicationName }}</div>\n    <ng-container *ngFor="let item of this.subMenuItems">\n      <gio-submenu-item *ngIf="item.targetRoute" tabIndex="1" (click)="navigateTo(item.targetRoute)" [active]="isActive(item.baseRoute)">{{\n        item.displayName\n      }}</gio-submenu-item>\n    </ng-container>\n  </gio-submenu>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="api-navigation">\n  <div class="api-navigation__menu">\n    <gio-submenu class="api-navigation__submenu">\n      <api-navigation-title\n        gioSubmenuTitle\n        [apiName]="this.apiName"\n        [apiVersion]="this.apiVersion"\n        [apiState]="this.apiState"\n        [apiLifecycleState]="this.apiLifecycleState"\n        [apiIsSync]="this.apiIsSync"\n        [apiOrigin]="this.apiOrigin"\n      ></api-navigation-title>\n      <span *ngIf="this.bannerState !== \'close\'" class="gio-badge-accent api-navigation__submenu__banner">\n        <mat-icon class="api-navigation__submenu__banner__icon" svgIcon="gio:arrow-down"></mat-icon>\n        <b class="api-navigation__submenu__banner__message">Design and Messages are now easier to access</b>\n        <button mat-icon-button class="api-navigation__submenu__banner__button" aria-label="Close" (click)="closeBanner()">\n          <mat-icon svgIcon="gio:cancel"></mat-icon>\n        </button>\n      </span>\n      <ng-container *ngFor="let menuItem of this.subMenuItems">\n        <gio-submenu-item\n          *ngIf="!menuItem?.targetRoute && menuItem?.tabs?.length > 0"\n          tabIndex="1"\n          (click)="navigateTo(menuItem?.tabs[0]?.targetRoute)"\n          [active]="isTabActive(menuItem?.tabs)"\n          >{{ menuItem?.displayName }}</gio-submenu-item\n        >\n        <gio-submenu-item\n          *ngIf="menuItem?.targetRoute"\n          tabIndex="1"\n          (click)="navigateTo(menuItem?.targetRoute)"\n          [active]="isActive(menuItem?.baseRoute)"\n          >{{ menuItem?.displayName }}</gio-submenu-item\n        >\n      </ng-container>\n      <ng-container *ngFor="let group of this.groupItems">\n        <gio-submenu-group [title]="group.title" *ngIf="group.title">\n          <ng-container *ngFor="let subItem of group.items">\n            <gio-submenu-item\n              *ngIf="!subItem?.targetRoute && subItem?.tabs?.length > 0"\n              tabIndex="1"\n              (click)="navigateTo(subItem?.tabs[0]?.targetRoute)"\n              [active]="isTabActive(subItem?.tabs)"\n              >{{ subItem?.displayName }}</gio-submenu-item\n            >\n            <gio-submenu-item\n              *ngIf="subItem?.targetRoute"\n              tabIndex="1"\n              (click)="navigateTo(subItem?.targetRoute)"\n              [active]="isActive(subItem?.baseRoute)"\n              >{{ subItem?.displayName }}</gio-submenu-item\n            >\n          </ng-container>\n        </gio-submenu-group>\n      </ng-container>\n    </gio-submenu>\n  </div>\n  <div class="api-navigation__content">\n    <ng-content select="#banner"></ng-content>\n    <api-navigation-tabs *ngIf="this.selectedItemWithTabs" [tabMenuItems]="this.selectedItemWithTabs.tabs"></api-navigation-tabs>\n    <div class="api-navigation__content__view">\n      <ng-content select="#view"></ng-content>\n    </div>\n  </div>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n    \n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    \n            http://www.apache.org/licenses/LICENSE-2.0\n    \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<h1>\n  Health-check\n  <button class="api-proxy-health-check__go-to-dashboard" mat-raised-button type="button" (click)="gotToHealthCheckDashboard()">\n    Go to Health-check dashboard\n  </button>\n</h1>\n\n<p class="api-proxy-health-check__description">\n  Health check configuration let you enable or disable health check service, set a frequency rate, choose an health relative path and\n  provide some assertions to control endpoint API\'s health.\n</p>\n\n<gio-banner-info class="api-proxy-health-check__banner-info">\n  <span> By enabling health-check, all non-backup endpoints will be checked except if health-check is disabled at endpoint level. </span>\n</gio-banner-info>\n\n<form *ngIf="healthCheckForm" autocomplete="off" gioFormFocusInvalid [formGroup]="healthCheckForm">\n  <api-proxy-health-check-form [healthCheckForm]="healthCheckForm"></api-proxy-health-check-form>\n\n  <gio-save-bar [form]="healthCheckForm" (resetClicked)="ngOnInit()" (submitted)="onSubmit()"></gio-save-bar>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="plans__header">\n  <h1>Plans</h1>\n  <div *ngIf="!isReadOnly && plansTableDS">\n    <button\n      *gioPermission="{ anyOf: [\'api-plan-u\'] }"\n      mat-raised-button\n      type="button"\n      color="primary"\n      aria-label="Add new plan"\n      (click)="navigateToNewPlan()"\n    >\n      <mat-icon svgIcon="gio:plus"></mat-icon>Add new plan\n    </button>\n  </div>\n</div>\n\n<mat-button-toggle-group class="plans__filters" aria-label="Plan status filters" [value]="status">\n  <mat-button-toggle\n    *ngFor="let planStatus of apiPlanStatus"\n    [attr.aria-label]="\'Filter on\' + planStatus + \'plans\'"\n    [matTooltip]="\'Filter on\' + planStatus + \'plans\'"\n    [value]="planStatus"\n    (click)="searchPlansByStatus(planStatus)"\n  >\n    {{ planStatus }}\n  </mat-button-toggle>\n</mat-button-toggle-group>\n<table\n  mat-table\n  class="plans__table"\n  id="plansTable"\n  aria-label="Plans table"\n  cdkDropList\n  (cdkDropListDropped)="dropRow($event)"\n  [dataSource]="plansTableDS"\n>\n  \x3c!-- Display Drag icon Column --\x3e\n  <ng-container matColumnDef="drag-icon" *ngIf="!isReadOnly">\n    <th mat-header-cell *matHeaderCellDef id="drag-icon"></th>\n    <td mat-cell *matCellDef="let element" [class.plans__table__drag-icon]="!isReadOnly">\n      <mat-icon class="plans__table__drag-icon" svgIcon="gio:drag-indicator"></mat-icon>\n    </td>\n  </ng-container>\n  \x3c!-- Display Name Column --\x3e\n  <ng-container matColumnDef="name">\n    <th mat-header-cell *matHeaderCellDef id="name">Name</th>\n    <td mat-cell *matCellDef="let element" class="plans__table__name" (click)="navigateToPlan(element.id)">\n      {{ element.name }}\n    </td>\n  </ng-container>\n\n  \x3c!-- Display Security Column --\x3e\n  <ng-container matColumnDef="security">\n    <th mat-header-cell *matHeaderCellDef id="security">Security</th>\n    <td mat-cell *matCellDef="let element">\n      {{ element.security }}\n    </td>\n  </ng-container>\n\n  \x3c!-- Display Status Column --\x3e\n  <ng-container matColumnDef="status">\n    <th mat-header-cell *matHeaderCellDef id="status">Status</th>\n    <td mat-cell *matCellDef="let element">\n      <span *ngIf="element.status === \'PUBLISHED\'" class="gio-badge-neutral">{{ element.status }}</span>\n      <span *ngIf="[\'DEPRECATED\', \'CLOSED\'].includes(element.status)" class="gio-badge-error">{{ element.status }}</span>\n      <span *ngIf="element.status === \'STAGING\'" class="gio-badge-warning">{{ element.status }}</span>\n    </td>\n  </ng-container>\n\n  \x3c!-- Display Tags Column --\x3e\n  <ng-container matColumnDef="deploy-on">\n    <th mat-header-cell *matHeaderCellDef id="deploy-on">Deploy on</th>\n    <td mat-cell *matCellDef="let element">\n      <a>{{ element.tags?.join(\', \') }}</a>\n    </td>\n  </ng-container>\n\n  \x3c!-- Actions Column --\x3e\n  <ng-container matColumnDef="actions">\n    <th mat-header-cell *matHeaderCellDef id="actions"></th>\n    <td mat-cell *matCellDef="let element">\n      <div class="plans__table__actions">\n        <ng-container *ngIf="!isReadOnly; else readOnlyPlanActions">\n          <ng-container *ngIf="element.status !== \'CLOSED\'">\n            <button\n              *gioPermission="{ anyOf: [\'api-plan-u\'] }"\n              mat-icon-button\n              aria-label="Edit the plan"\n              matTooltip="Edit the plan"\n              (click)="navigateToPlan(element.id)"\n            >\n              <mat-icon svgIcon="gio:edit-pencil"></mat-icon>\n            </button>\n          </ng-container>\n          <ng-container *ngIf="isV2Api && element.status !== \'CLOSED\'">\n            <button\n              *gioPermission="{ anyOf: [\'api-plan-u\'] }"\n              mat-icon-button\n              aria-label="Design the plan"\n              matTooltip="Design the plan"\n              (click)="designPlan(element.id)"\n            >\n              <mat-icon svgIcon="gio:shield-check"></mat-icon>\n            </button>\n          </ng-container>\n          <ng-container *ngIf="element.status === \'STAGING\'">\n            <button\n              *gioPermission="{ anyOf: [\'api-plan-u\'] }"\n              mat-icon-button\n              aria-label="Publish the plan"\n              matTooltip="Publish the plan"\n              (click)="publishPlan(element)"\n            >\n              <mat-icon svgIcon="gio:upload-cloud"></mat-icon>\n            </button>\n          </ng-container>\n          <ng-container *ngIf="element.status === \'PUBLISHED\'">\n            <button\n              *gioPermission="{ anyOf: [\'api-plan-u\'] }"\n              mat-icon-button\n              aria-label="Deprecate the plan"\n              matTooltip="Deprecate the plan"\n              (click)="deprecatePlan(element)"\n            >\n              <mat-icon svgIcon="gio:cloud-unpublished"></mat-icon>\n            </button>\n          </ng-container>\n          <ng-container *ngIf="element.status !== \'CLOSED\'">\n            <button\n              *gioPermission="{ anyOf: [\'api-plan-u\'] }"\n              mat-icon-button\n              aria-label="Close the plan"\n              matTooltip="Close the plan"\n              (click)="closePlan(element)"\n            >\n              <mat-icon svgIcon="gio:cancel"></mat-icon>\n            </button>\n          </ng-container>\n        </ng-container>\n        <ng-template #readOnlyPlanActions>\n          <button\n            *gioPermission="{ anyOf: [\'api-plan-r\'] }"\n            mat-icon-button\n            aria-label="View the plan details"\n            matTooltip="View the plan details"\n            (click)="navigateToPlan(element.id)"\n          >\n            <mat-icon svgIcon="gio:eye-empty"></mat-icon>\n          </button>\n        </ng-template>\n      </div>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n  <tr mat-row cdkDrag [cdkDragDisabled]="isReadOnly || row.status !== \'PUBLISHED\'" *matRowDef="let row; columns: displayedColumns"></tr>\n\n  \x3c!-- Row shown when there is no data --\x3e\n  <tr class="mat-row" *matNoDataRow>\n    <td *ngIf="!isLoadingData && plansTableDS.length === 0" class="mat-cell" [attr.colspan]="displayedColumns.length">\n      {{ \'There is no plan (yet).\' }}\n    </td>\n    <td *ngIf="isLoadingData" class="mat-cell" [attr.colspan]="displayedColumns.length">\n      {{ \'Loading...\' }}\n    </td>\n  </tr>\n</table>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n    \n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    \n            http://www.apache.org/licenses/LICENSE-2.0\n    \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<ng-container *ngIf="generalForm" [formGroup]="generalForm">\n  <mat-form-field class="name-field" appearance="fill">\n    <mat-label>Name</mat-label>\n    <input matInput formControlName="name" required />\n    <mat-error *ngIf="generalForm.get(\'name\').hasError(\'required\')">Name is required.</mat-error>\n    <mat-error *ngIf="generalForm.get(\'name\').hasError(\'maxlength\')">The name has to be less than 50 characters long.</mat-error>\n    <mat-hint align="end">{{ generalForm.get(\'name\').value?.length || 0 }}/50</mat-hint>\n  </mat-form-field>\n\n  <mat-form-field class="description-field" appearance="fill">\n    <mat-label>Description</mat-label>\n    <textarea matInput formControlName="description"></textarea>\n  </mat-form-field>\n\n  <mat-form-field class="characteristics-field" appearance="fill">\n    <mat-label>Characteristics</mat-label>\n    <gio-form-tags-input formControlName="characteristics" [addOnBlur]="false"></gio-form-tags-input>\n  </mat-form-field>\n\n  <h2>Conditions</h2>\n\n  // TODO: This plan is published, if you change the general conditions please remember to notify you API subscribers\n\n  <mat-form-field class="generalConditions-field" appearance="fill">\n    <mat-label>Page of General Conditions</mat-label>\n    <mat-select formControlName="generalConditions">\n      <ng-container *ngIf="conditionPages$ | async; let conditionPages">\n        <mat-option *ngIf="conditionPages?.length === 0" disabled>No page available</mat-option>\n        <mat-option *ngIf="conditionPages?.length !== 0"></mat-option>\n        <mat-option *ngFor="let page of conditionPages" [value]="page.id">{{ page.name }}</mat-option>\n      </ng-container>\n    </mat-select>\n  </mat-form-field>\n\n  <h2>Subscriptions</h2>\n\n  // TODO: disabled="plan.security == \'KEY_LESS\'"\n\n  <gio-form-slide-toggle appearance="fill" class="validation-field">\n    Auto validate subscription\n    <mat-slide-toggle\n      gioFormSlideToggle\n      formControlName="validation"\n      aria-label="Auto validate subscription toggle"\n      name="validation"\n    ></mat-slide-toggle>\n  </gio-form-slide-toggle>\n\n  <gio-form-slide-toggle appearance="fill" class="commentRequired-field">\n    Consumer must provide a comment when subscribing to the plan\n    <mat-slide-toggle\n      gioFormSlideToggle\n      formControlName="commentRequired"\n      aria-label="Comment when subscribing to the plan toggle"\n      name="commentRequired"\n    ></mat-slide-toggle>\n  </gio-form-slide-toggle>\n\n  <mat-form-field class="commentMessage-field" appearance="fill">\n    <mat-label>Custom message to display to consumer</mat-label>\n    <input matInput formControlName="commentMessage" />\n    <mat-error *ngIf="generalForm.get(\'commentMessage\').hasError(\'maxlength\')"\n      >The comment message has to be less than 64 characters long.</mat-error\n    >\n  </mat-form-field>\n\n  <h2>Deployment</h2>\n\n  <mat-form-field appearance="fill">\n    <mat-label>Sharding tags</mat-label>\n    <mat-select formControlName="shardingTags" aria-label="Sharding tags selection" multiple>\n      <mat-option *ngFor="let tag of shardingTags$ | async" [value]="tag.id" [disabled]="tag.disabled"\n        >{{ tag.name }}{{ tag.description ? \' - \' + tag.description : \'\' }}</mat-option\n      >\n    </mat-select>\n  </mat-form-field>\n\n  <h2>Access-Control</h2>\n\n  <mat-form-field appearance="fill">\n    <mat-label>Groups excluded</mat-label>\n    <mat-select formControlName="excludedGroups" aria-label="Groups excluded selection" multiple>\n      <mat-option *ngFor="let group of groups$ | async" [value]="group.id">{{ group.name }}</mat-option>\n    </mat-select>\n  </mat-form-field>\n</ng-container>\n\n<div class="actions">\n  <button mat-button matStepperNext>Next</button>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n    \n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    \n            http://www.apache.org/licenses/LICENSE-2.0\n    \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<ng-container *ngIf="secureForm" [formGroup]="secureForm">\n  <mat-form-field class="securityTypes-field" appearance="fill">\n    <mat-label>Authentication type</mat-label>\n    <mat-select formControlName="securityTypes" required>\n      <mat-option *ngFor="let type of securityTypes" [value]="type.id">{{ type.name }}</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <ng-container *ngIf="securityConfigSchema">\n    <h2>Configuration</h2>\n\n    <gv-schema-form\n      class="securityConfigSchema-form"\n      ngDefaultControl\n      formControlName="securityConfig"\n      [schema]="securityConfigSchema"\n      [attr.readonly]="secureForm.get(\'securityConfig\').enabled ? null : true"\n      (:gv-schema-form:fetch-resources)="onFetchResources($event)"\n    ></gv-schema-form>\n\n    <h2>Additional selection rule</h2>\n\n    <gio-banner-info>\n      Define an additional rule when you\'re managing multiple plans of the same type to improve the plan\'s selection process.\n      <span gioBannerBody>\n        For example, if you want to check the issuer of a jwt token: &#123; #context.attributes[\'jwt\'].claims[\'iss\'] == \'my-issuer\' &#125;\n      </span>\n    </gio-banner-info>\n    <mat-form-field class="selectionRule-field" appearance="fill">\n      <mat-label>Selection Rule</mat-label>\n      <input matInput formControlName="selectionRule" />\n      <mat-hint> Support EL (e.g: &#123; #context.attributes[\'jwt\'].claims[\'iss\'] == \'my-issuer\' &#125;)</mat-hint>\n    </mat-form-field>\n  </ng-container>\n</ng-container>\n\n<div class="actions">\n  <button mat-button matStepperPrevious>Back</button>\n  <button mat-button matStepperNext>Next</button>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n    \n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    \n            http://www.apache.org/licenses/LICENSE-2.0\n    \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<h1>Plan</h1>\n<form *ngIf="planForm" autocomplete="off" gioFormFocusInvalid [formGroup]="planForm">\n  <mat-card>\n    <mat-stepper>\n      <mat-step state="general" [stepControl]="planForm.get(\'general\')">\n        <ng-template matStepperIcon="general">\n          <mat-icon svgIcon="gio:edit-pencil"></mat-icon>\n        </ng-template>\n        <ng-template matStepLabel>General</ng-template>\n        <plan-edit-general-step matStepContent [api]="api"></plan-edit-general-step>\n      </mat-step>\n\n      <mat-step state="secure" [stepControl]="planForm.get(\'secure\')">\n        <ng-template matStepperIcon="secure">\n          <mat-icon svgIcon="gio:lock"></mat-icon>\n        </ng-template>\n        <ng-template matStepLabel>Secure</ng-template>\n        <plan-edit-secure-step matStepContent [api]="api"></plan-edit-secure-step>\n      </mat-step>\n\n      <mat-step state="restriction">\n        <ng-template matStepperIcon="restriction">\n          <mat-icon svgIcon="gio:shield-cross"></mat-icon>\n        </ng-template>\n        <ng-template matStepLabel>Restriction</ng-template>\n        <plan-edit-restriction-step matStepContent></plan-edit-restriction-step>\n      </mat-step>\n    </mat-stepper>\n  </mat-card>\n\n  <gio-save-bar\n    *ngIf="planForm"\n    [creationMode]="true"\n    [form]="planForm"\n    [formInitialValues]="initialPlanFormValue"\n    (submitted)="onSubmit()"\n  ></gio-save-bar>\n</form>\n'},,,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="policy-studio-debug">\n  <div class="policy-studio-debug__request">\n    <policy-studio-debug-request\n      [debugInProgress]="debugResponse?.isLoading"\n      (requestSubmitted)="onRequestSubmitted($event)"\n      (cancelSubmitted)="onRequestCancelled()"\n    ></policy-studio-debug-request>\n  </div>\n\n  <div class="policy-studio-debug__response">\n    <div class="policy-studio-debug__response__container">\n      <policy-studio-debug-response [debugResponse]="debugResponse" [listPolicies]="listPolicies"></policy-studio-debug-response>\n    </div>\n  </div>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gv-design\n  *ngIf="!isLoading"\n  #gvDesignComponent\n  class="policy-studio-design"\n  flowsTitle="API Flows"\n  can-add\n  has-policy-filter\n  has-conditional-steps\n  sortable\n  [attr.readonly]="isReadonly ? isReadonly : null"\n  [attr.readonly-plans]="readonlyPlans ? readonlyPlans : null"\n  [flowSchema]="apiFlowSchema"\n  [policies]="policies"\n  [definition]="apiDefinition"\n  [services]="services"\n  [resourceTypes]="resourceTypes"\n  [selectedFlowsId]="selectedFlowsIds"\n  [documentation]="policyDocumentation"\n  (:gv-design:change)="onChange($event)"\n  (:gv-design:fetch-documentation)="fetchPolicyDocumentation($any($event).detail)"\n  (:gv-design:select-flows)="onFlowSelectionChanged($any($event).detail)"\n  (:gv-expression-language:ready)="fetchSpelGrammar($any($event).detail)"\n></gv-design>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gio-policy-studio-layout__header">\n  <h3 class="mat-h3 gio-policy-studio-layout__header__title">{{ apiDefinition?.name }}</h3>\n  <nav mat-tab-nav-bar mat-align-tabs="end" class="gio-policy-studio-layout__header__nav">\n    <a\n      mat-tab-link\n      uiSrefStatus\n      #uis="uiSrefStatus"\n      *ngFor="let link of policyStudioMenu"\n      [uiParams]="link.params"\n      [uiSref]="\'.\' + link.uiSref"\n      [active]="uis.status.active"\n    >\n      {{ link.label }}\n    </a>\n  </nav>\n</div>\n\n<section ui-view class="gio-policy-studio-layout__tab-content" [class.save-bar-opened]="this.isDirty">\n  <h4 style="margin: 1em 2em">Loading...</h4>\n</section>\n\n<gio-save-bar\n  *ngIf="this.isDirty"\n  class="gio-policy-studio-layout__save-bar"\n  [opened]="this.isDirty"\n  [creationMode]="false"\n  (resetClicked)="onReset()"\n  (submitted)="onSubmit()"\n>\n</gio-save-bar>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div *ngIf="!this.isLoading" class="policy-studio-api-config">\n  <div class="policy-studio-api-config__information">\n    <gv-icon class="policy-studio-api-config__information__icon" title="Info" shape="code:info"></gv-icon>\n    <blockquote class="policy-studio-api-config__information__blockquote" [innerHtml]="this.information"></blockquote>\n  </div>\n\n  <gv-schema-form\n    class="policy-studio-api-config__schema-form"\n    [attr.readonly]="isReadonly ? isReadonly : null"\n    [schema]="this.schema"\n    [values]="this.apiDefinition"\n    (:gv-schema-form:change)="onChange($event)"\n  >\n  </gv-schema-form>\n\n  <gio-form-slide-toggle *ngIf="displayJupiterToggle" class="policy-studio-api-config__execution_mode" appearance="fill">\n    <gio-form-label>Enable Jupiter mode</gio-form-label>\n    <mat-slide-toggle\n      gioFormSlideToggle\n      aria-label="Enable Jupiter mode"\n      name="execution_mode"\n      [disabled]="isReadonly"\n      [checked]="apiDefinition.execution_mode === \'jupiter\'"\n      (change)="toggleJupiterMode($event)"\n    ></mat-slide-toggle>\n  </gio-form-slide-toggle>\n</div>\n'},,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gv-properties\n  *ngIf="!isLoading"\n  class="policy-studio-properties"\n  [attr.readonly]="isReadonly ? isReadonly : null"\n  [provider]="this.provider"\n  (:gv-properties:change)="this.onChange($event)"\n  (:gv-properties:save-provider)="this.onSaveProvider($event)"\n  (:gv-properties:switch-encrypted)="this.onChange($event)"\n  encryptable\n  [properties]="this.apiDefinition.properties"\n  [providers]="this.providers"\n  [dynamicPropertySchema]="this.dynamicPropertySchema"\n></gv-properties>\n'},,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<gv-resources\n  *ngIf="!isLoading"\n  class="policy-studio-resources"\n  [attr.readonly]="this.isReadonly"\n  (:gv-resources:change)="this.onChange($event)"\n  [resources]="this.apiDefinition.resources"\n  [types]="this.resourceTypes"\n></gv-resources>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="policy-studio-debug-inspector-body">\n  <gio-diff [left]="formattedInput" [right]="formattedOutput"></gio-diff>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="policy-studio-debug-inspector__header">\n  <h5>Inspector</h5>\n</div>\n\n<div class="policy-studio-debug-inspector__content">\n  <div class="policy-studio-debug-inspector__content__wrapper">\n    <mat-tree #errors [dataSource]="errorsDataSource" [treeControl]="errorsTreeControl">\n      \x3c!-- This is the tree node template for leaf nodes --\x3e\n      <mat-tree-node *matTreeNodeDef="let node" class="policy-studio-debug-inspector__tree-node-content">\n        <policy-studio-debug-inspector-error [error]="node.input"></policy-studio-debug-inspector-error>\n      </mat-tree-node>\n      \x3c!-- This is the tree node template for expandable nodes --\x3e\n      <mat-tree-node *matTreeNodeDef="let node; when: hasChild" matTreeNodePadding class="policy-studio-debug-inspector__tree-node">\n        <button mat-icon-button matTreeNodeToggle [attr.aria-label]="\'Toggle errors\'">\n          <mat-icon class="mat-icon-rtl-mirror">\n            {{ errorsTreeControl.isExpanded(node) ? \'expand_more\' : \'chevron_right\' }}\n          </mat-icon>\n        </button>\n        <mat-icon class="policy-studio-debug-inspector__tree-node__error-icon" svgIcon="gio:warning-circled-outline"></mat-icon>\n        {{ node.name }}\n      </mat-tree-node>\n    </mat-tree>\n\n    <mat-tree [dataSource]="conditionDataSource" [treeControl]="conditionTreeControl">\n      \x3c!-- This is the tree node template for leaf nodes --\x3e\n      <mat-tree-node *matTreeNodeDef="let node" class="policy-studio-debug-inspector__tree-node-content">\n        <policy-studio-debug-inspector-text\n          [input]="node.input"\n          [output]="node.output"\n          [noDiff]="true"\n        ></policy-studio-debug-inspector-text>\n      </mat-tree-node>\n      \x3c!-- This is the tree node template for expandable nodes --\x3e\n      <mat-tree-node *matTreeNodeDef="let node; when: hasChild" matTreeNodePadding class="policy-studio-debug-inspector__tree-node">\n        <button mat-icon-button matTreeNodeToggle [attr.aria-label]="\'Toggle condition\'">\n          <mat-icon class="mat-icon-rtl-mirror">\n            {{ conditionTreeControl.isExpanded(node) ? \'expand_more\' : \'chevron_right\' }}\n          </mat-icon>\n        </button>\n        <mat-icon class="mat-icon-rtl-mirror policy-studio-debug-inspector__tree-node__condition-icon" svgIcon="gio:if"></mat-icon>\n        {{ node.name }}\n      </mat-tree-node>\n    </mat-tree>\n\n    <div class="policy-studio-debug-inspector__content__wrapper__title">\n      <div>Input</div>\n      <div>Output</div>\n    </div>\n\n    <mat-tree #tree [dataSource]="dataSource" [treeControl]="treeControl">\n      \x3c!-- This is the tree node template for leaf nodes --\x3e\n      <mat-tree-node *matTreeNodeDef="let node" class="policy-studio-debug-inspector__tree-node-content">\n        <ng-container [ngSwitch]="node.type">\n          <policy-studio-debug-inspector-table\n            *ngSwitchCase="\'table\'"\n            [name]="node.name"\n            [input]="node.input"\n            [output]="node.output"\n          ></policy-studio-debug-inspector-table>\n\n          <policy-studio-debug-inspector-body\n            *ngSwitchCase="\'body\'"\n            [input]="node.input"\n            [output]="node.output"\n          ></policy-studio-debug-inspector-body>\n\n          <policy-studio-debug-inspector-text\n            *ngSwitchDefault\n            [name]="node.name"\n            [input]="node.input"\n            [output]="node.output"\n          ></policy-studio-debug-inspector-text>\n        </ng-container>\n      </mat-tree-node>\n      \x3c!-- This is the tree node template for expandable nodes --\x3e\n      <mat-tree-node\n        *matTreeNodeDef="let node; when: hasChild"\n        matTreeNodePadding\n        class="policy-studio-debug-inspector__tree-node"\n        [class.errors]="node.type === \'error\'"\n      >\n        <button mat-icon-button matTreeNodeToggle [attr.aria-label]="\'Toggle \' + node.name">\n          <mat-icon class="mat-icon-rtl-mirror">\n            {{ treeControl.isExpanded(node) ? \'expand_more\' : \'chevron_right\' }}\n          </mat-icon>\n        </button>\n        {{ node.name }}\n      </mat-tree-node>\n    </mat-tree>\n  </div>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<table class="gio-table-light" attr.aria-label="Debug errors">\n  <tbody>\n    <tr *ngIf="error.status">\n      <td class="key">Status</td>\n      <td class="value">\n        <span gioClipboardCopyWrapper [contentToCopy]="error.status">{{ error.status }}</span>\n      </td>\n    </tr>\n    <tr *ngIf="error.message">\n      <td class="key">Message</td>\n      <td class="value">\n        <span gioClipboardCopyWrapper [contentToCopy]="error.message">{{ error.message }}</span>\n      </td>\n    </tr>\n    <tr *ngIf="error.contentType">\n      <td class="key">Content Type</td>\n      <td class="value">\n        <span gioClipboardCopyWrapper [contentToCopy]="error.contentType">{{ error.contentType }}</span>\n      </td>\n    </tr>\n    <tr *ngIf="error.key">\n      <td class="key">Key</td>\n      <td class="value">\n        <span gioClipboardCopyWrapper [contentToCopy]="error.key">{{ error.key }}</span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<table class="gio-table-light" attr.aria-label="Debug information for {{ name }}">\n  <thead>\n    <tr>\n      <th>key</th>\n      <th>value</th>\n      <th>key</th>\n      <th>value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor="let rowItem of rowItems" [ngClass]="rowItem.diffClass">\n      <td class="input">\n        <span gioClipboardCopyWrapper [contentToCopy]="rowItem.key">{{ rowItem.key }}</span>\n      </td>\n      <td class="input">\n        <span gioClipboardCopyWrapper [contentToCopy]="rowItem.inputValue">{{ rowItem.inputValue }}</span>\n      </td>\n      <td class="output">\n        <span gioClipboardCopyWrapper [contentToCopy]="rowItem.key">{{ rowItem.key }}</span>\n      </td>\n      <td class="output">\n        <span gioClipboardCopyWrapper [contentToCopy]="rowItem.outputValue">{{ rowItem.outputValue }}</span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<form class="policy-studio-debug-request" [formGroup]="requestFormGroup" (ngSubmit)="onSendRequest()">\n  <div class="policy-studio-debug-request__header">Request</div>\n  <div class="policy-studio-debug-request__content">\n    <div class="policy-studio-debug-request__content__wrapper">\n      <mat-form-field class="policy-studio-debug-request__content__wrapper__field" appearance="fill">\n        <mat-label>HTTP method</mat-label>\n        <mat-select formControlName="method">\n          <mat-option *ngFor="let method of httpMethods" [value]="method">{{ method }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field class="policy-studio-debug-request__content__wrapper__field" appearance="fill">\n        <mat-label>Path</mat-label>\n        <input matInput formControlName="path" placeholder="/" />\n      </mat-form-field>\n\n      <mat-tab-group class="policy-studio-debug-request__content__wrapper__tab-group">\n        <mat-tab label="Headers">\n          <gio-form-headers formControlName="headers"></gio-form-headers>\n        </mat-tab>\n        <mat-tab label="Request body">\n          <gv-code\n            class="policy-studio-debug-request__content__body"\n            [options]="{\n              placeholder: \'Put request body here\',\n              lineWrapping: true,\n              lineNumbers: true,\n              allowDropFileTypes: true,\n              autoCloseTags: true\n            }"\n            (:gv-code:input)="onBodyChange($event.detail)"\n          ></gv-code>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n  </div>\n  <div class="policy-studio-debug-request__btn">\n    <button\n      class="policy-studio-debug-request__btn__cancel"\n      mat-button\n      type="button"\n      (click)="onCancelClick()"\n      [disabled]="!debugInProgress"\n    >\n      Cancel\n    </button>\n    <button class="policy-studio-debug-request__btn__submit" mat-flat-button color="primary" type="submit" [disabled]="debugInProgress">\n      Send\n    </button>\n  </div>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="policy-studio-debug-response">\n  <ng-container *ngIf="!debugResponse; then emptyResponse"></ng-container>\n  <ng-container *ngIf="!!debugResponse && debugResponse.isLoading; then loadingResponse"></ng-container>\n  <ng-container *ngIf="!!debugResponse && !debugResponse.isLoading && !debugResponse.reachedTimeout; then displayResponse"></ng-container>\n  <ng-container\n    *ngIf="!!debugResponse && !debugResponse.isLoading && !debugResponse.reachedTimeout && !inspectorVM; then inspectorHelper"\n  ></ng-container>\n  <ng-container *ngIf="!!debugResponse && !debugResponse.isLoading && debugResponse.reachedTimeout; then reachedTimeout"></ng-container>\n</div>\n\n\x3c!-- Empty Response --\x3e\n<ng-template #emptyResponse>\n  <div class="policy-studio-debug-response__empty-response">\n    <gv-icon class="policy-studio-debug-response__empty-response__icon" shape="editor:format_align_left"></gv-icon>\n    <h5>Define and run the request you want to test!</h5>\n  </div>\n</ng-template>\n\n\x3c!-- Loading Response --\x3e\n<ng-template #loadingResponse>\n  <div class="policy-studio-debug-response__loading-response">\n    <gv-icon class="policy-studio-debug-response__loading-response__icon" shape="communication:sending"></gv-icon>\n    <h5>Request in progress!</h5>\n  </div>\n</ng-template>\n\n\x3c!-- Debug request ended in timeout --\x3e\n<ng-template #reachedTimeout>\n  <div class="policy-studio-debug-response__reached-timeout">\n    <gv-icon class="policy-studio-debug-response__reached-timeout__icon" shape="devices:lte#2"></gv-icon>\n    <h5>Bad news, it looks like your request was lost in space. Please try again.</h5>\n  </div>\n</ng-template>\n\n\x3c!-- Display timeline helper text --\x3e\n<ng-template #inspectorHelper>\n  <div class="policy-studio-debug-response__inspector-helper">\n    <gv-icon class="policy-studio-debug-response__inspector-helper__icon" shape="general:search"></gv-icon>\n    <h5>Select a step in the timeline to compare its inputs and outputs</h5>\n  </div>\n</ng-template>\n\n\x3c!-- Display Response --\x3e\n<ng-template #displayResponse>\n  <div class="policy-studio-debug-response__display-response__header">\n    <div>Response</div>\n    <div\n      class="policy-studio-debug-response__display-response__header__status"\n      [class.status-success]="responseDisplayableVM.successfulRequest"\n      [class.status-error]="responseDisplayableVM.errorRequest"\n    >\n      {{ responseDisplayableVM.statusCode }} - {{ responseDisplayableVM.statusCodeDescription }}\n    </div>\n    <div class="policy-studio-debug-response__display-response__header__method" [ngClass]="responseDisplayableVM.methodBadgeCSSClass">\n      {{ debugResponse.request.method }}\n    </div>\n    <div class="policy-studio-debug-response__display-response__header__path">{{ debugResponse.request.path }}</div>\n  </div>\n  <div>\n    <policy-studio-debug-timeline\n      [nbPoliciesRequest]="debugResponse.requestPolicyDebugSteps.length"\n      [nbPoliciesResponse]="debugResponse.responsePolicyDebugSteps.length"\n      [metrics]="debugResponse.metrics"\n    >\n      <policy-studio-debug-timeline-card\n        *ngFor="let timelineStep of responseDisplayableVM.timelineSteps"\n        [id]="\'card_\' + timelineStep.id"\n        [timelineStep]="timelineStep"\n        (click)="onSelectTimelineStep(timelineStep)"\n      ></policy-studio-debug-timeline-card>\n    </policy-studio-debug-timeline>\n  </div>\n  <div>\n    <policy-studio-debug-timeline-overview\n      [timelineSteps]="responseDisplayableVM.timelineSteps"\n      (selected)="onSelectTimelineStepOverview($event)"\n    ></policy-studio-debug-timeline-overview>\n  </div>\n  <div>\n    <policy-studio-debug-timeline-legend></policy-studio-debug-timeline-legend>\n  </div>\n\n  <policy-studio-debug-inspector\n    class="policy-studio-debug-response__display-response__inspector"\n    *ngIf="inspectorVM"\n    [inputDebugStep]="inspectorVM.input"\n    [outputDebugStep]="inspectorVM.output"\n    [executionStatus]="inspectorVM.executionStatus"\n  >\n  </policy-studio-debug-inspector>\n</ng-template>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div\n  class="policy-studio-debug-timeline-card"\n  [timelineHover]="timelineStep?.id"\n  [class.color-green]="timelineCardVM.color === \'green\'"\n  [class.color-blue]="timelineCardVM.color === \'blue\'"\n  [class.selected-start]="timelineCardVM.selection === \'start\'"\n  [class.selected-content]="timelineCardVM.selection === \'content\'"\n  [class.selected-end]="timelineCardVM.selection === \'end\'"\n  [class.selected-single]="timelineCardVM.selection === \'single\'"\n  [class.clickable]="timelineCardVM.clickable"\n>\n  <div class="policy-studio-debug-timeline-card__left">\n    <mat-icon *ngIf="timelineCardVM.icon" class="policy-studio-debug-timeline-card__left__icon" [svgIcon]="timelineCardVM.icon"></mat-icon\n    ><img\n      *ngIf="timelineCardVM.iconUrl"\n      class="policy-studio-debug-timeline-card__left__img"\n      [src]="timelineCardVM.iconUrl"\n      [alt]="timelineCardVM.title"\n    />\n  </div>\n  <div class="policy-studio-debug-timeline-card__content">\n    <div *ngIf="timelineCardVM.headerLabel" class="policy-studio-debug-timeline-card__content__header-label">\n      {{ timelineCardVM.headerLabel }}\n    </div>\n    <div class="policy-studio-debug-timeline-card__content__title" [title]="timelineCardVM.title">\n      {{ timelineCardVM.title }}\n    </div>\n  </div>\n  <div class="policy-studio-debug-timeline-card__right">\n    <div>\n      <mat-icon\n        *ngIf="timelineCardVM.condition"\n        [class.error]="timelineStep.executionStatus === \'ERROR\'"\n        [class.skipped]="timelineStep.executionStatus === \'SKIPPED\'"\n        svgIcon="gio:if"\n      ></mat-icon>\n      <mat-icon\n        *ngIf="timelineCardVM.rightIcon"\n        [class.error]="timelineStep.executionStatus === \'ERROR\'"\n        [class.skipped]="timelineStep.executionStatus === \'SKIPPED\'"\n        [svgIcon]="timelineCardVM.rightIcon"\n      ></mat-icon>\n    </div>\n  </div>\n  <div class="policy-studio-debug-timeline-card__time-label" *ngIf="timelineCardVM.executionTime">\n    {{ timelineCardVM.executionTime | number: \'1.0-3\' }}ms\n  </div>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div class="policy-studio-debug-timeline">\n  <div class="policy-studio-debug-timeline__header">\n    <span class="policy-studio-debug-timeline__header__title">Timeline</span>\n    <span class="policy-studio-debug-timeline__header__counter">\n      <span class="policy-studio-debug-timeline__header__counter__title">Policies:</span>\n      <span class="gio-badge-primary">{{ nbPoliciesRequest }} Request</span> /\n      <span class="gio-badge-primary">{{ nbPoliciesResponse }} Response</span>\n    </span>\n    <span class="policy-studio-debug-timeline__header__metrics" *ngIf="metrics">\n      <span class="policy-studio-debug-timeline__header__metrics__title" *ngIf="metrics.apiResponseTimeMs != null">Api response:</span>\n      <span class="policy-studio-debug-timeline__header__metrics__api-response" *ngIf="metrics.apiResponseTimeMs != null"\n        >{{ metrics.apiResponseTimeMs }}ms</span\n      >\n      <span class="policy-studio-debug-timeline__header__metrics__title" *ngIf="metrics.proxyResponseTimeMs != null">Proxy response:</span>\n      <span class="policy-studio-debug-timeline__header__metrics__proxy-response" *ngIf="metrics.proxyResponseTimeMs != null"\n        >{{ metrics.proxyResponseTimeMs }}ms</span\n      >\n      <span class="policy-studio-debug-timeline__header__metrics__title" *ngIf="metrics.proxyLatencyMs != null">Proxy latency:</span>\n      <span class="policy-studio-debug-timeline__header__metrics__proxy-latency" *ngIf="metrics.proxyLatencyMs != null"\n        >{{ metrics.proxyLatencyMs }}ms</span\n      >\n    </span>\n  </div>\n  <div class="policy-studio-debug-timeline__background"></div>\n  <div class="policy-studio-debug-timeline__scroll" #horizontalScroll>\n    <ng-content></ng-content>\n  </div>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div class="policy-studio-debug-timeline-legend">\n  <span class="policy-studio-debug-timeline-legend__badge">\n    <mat-icon class="gio-left" svgIcon="gio:smartphone-device"></mat-icon> Client APP</span\n  >\n  <span class="policy-studio-debug-timeline-legend__badge"> <mat-icon class="gio-left" svgIcon="gio:server"></mat-icon> Backend</span>\n  <span class="policy-studio-debug-timeline-legend__badge">\n    <mat-icon class="gio-left color-green" svgIcon="gio:circle-filled"></mat-icon> Request / Response</span\n  >\n  <span class="policy-studio-debug-timeline-legend__badge">\n    <mat-icon class="gio-left color-blue" svgIcon="gio:circle-filled"></mat-icon> Input / Output</span\n  >\n  <span class="policy-studio-debug-timeline-legend__badge">\n    <mat-icon class="gio-left color-red" svgIcon="gio:warning-circled-outline"></mat-icon> Error</span\n  >\n  <span class="policy-studio-debug-timeline-legend__badge">\n    <mat-icon class="gio-left color-black" svgIcon="gio:if"></mat-icon> Conditional</span\n  >\n  <span class="policy-studio-debug-timeline-legend__badge">\n    <mat-icon class="gio-left color-grey" svgIcon="gio:prohibition"></mat-icon> Not executed</span\n  >\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<table class="gio-table-light" attr.aria-label="Debug information for {{ name }}">\n  <tbody>\n    <tr [ngClass]="this.diffClass">\n      <td class="input">\n        <span gioClipboardCopyWrapper [contentToCopy]="input">{{ input }}</span>\n      </td>\n      <td class="output">\n        <span gioClipboardCopyWrapper [contentToCopy]="output">{{ output }}</span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div class="policy-studio-debug-timeline-overview">\n  <div class="policy-studio-debug-timeline-overview__left-client-app">\n    <mat-icon class="gio-left" svgIcon="gio:smartphone-device"></mat-icon>\n  </div>\n\n  <ng-container *ngFor="let timelineStep of timelineSteps">\n    <ng-container [ngSwitch]="timelineStep.mode">\n      <div\n        *ngSwitchCase="\'CLIENT_APP_REQUEST\'"\n        class="policy-studio-debug-timeline-overview__step"\n        [timelineHover]="timelineStep.id"\n        matTooltip="Client App"\n        (click)="selected.emit(timelineStep)"\n      >\n        <div class="policy-studio-debug-timeline-overview__step__line color-green" [ngClass]="\'selected-\' + timelineStep.selection"></div>\n      </div>\n\n      <div\n        *ngSwitchCase="\'CLIENT_APP_RESPONSE\'"\n        class="policy-studio-debug-timeline-overview__step"\n        [timelineHover]="timelineStep.id"\n        matTooltip="Client App"\n        (click)="selected.emit(timelineStep)"\n      >\n        <div class="policy-studio-debug-timeline-overview__step__line color-green" [ngClass]="\'selected-\' + timelineStep.selection"></div>\n      </div>\n\n      <div\n        *ngSwitchCase="\'REQUEST_INPUT\'"\n        class="policy-studio-debug-timeline-overview__step"\n        [timelineHover]="timelineStep.id"\n        matTooltip="Request input"\n        (click)="selected.emit(timelineStep)"\n      >\n        <div class="policy-studio-debug-timeline-overview__step__line color-blue" [ngClass]="\'selected-\' + timelineStep.selection"></div>\n      </div>\n\n      <div\n        *ngSwitchCase="\'REQUEST_OUTPUT\'"\n        class="policy-studio-debug-timeline-overview__step"\n        [timelineHover]="timelineStep.id"\n        matTooltip="Request output"\n        (click)="selected.emit(timelineStep)"\n      >\n        <div class="policy-studio-debug-timeline-overview__step__line color-blue" [ngClass]="\'selected-\' + timelineStep.selection"></div>\n      </div>\n\n      <div\n        *ngSwitchCase="\'RESPONSE_INPUT\'"\n        class="policy-studio-debug-timeline-overview__step"\n        [timelineHover]="timelineStep.id"\n        matTooltip="Response input"\n        (click)="selected.emit(timelineStep)"\n      >\n        <div class="policy-studio-debug-timeline-overview__step__line color-blue" [ngClass]="\'selected-\' + timelineStep.selection"></div>\n      </div>\n\n      <div\n        *ngSwitchCase="\'RESPONSE_OUTPUT\'"\n        class="policy-studio-debug-timeline-overview__step"\n        [timelineHover]="timelineStep.id"\n        matTooltip="Response output"\n        (click)="selected.emit(timelineStep)"\n      >\n        <div class="policy-studio-debug-timeline-overview__step__line color-blue" [ngClass]="\'selected-\' + timelineStep.selection"></div>\n      </div>\n\n      <div *ngSwitchCase="\'BACKEND_TARGET\'" class="policy-studio-debug-timeline-overview__center-target-backend">\n        <mat-icon class="gio-left" svgIcon="gio:server"></mat-icon>\n      </div>\n\n      <div\n        *ngSwitchDefault\n        class="policy-studio-debug-timeline-overview__step"\n        [timelineHover]="timelineStep.id"\n        [matTooltip]="timelineStep.policyName"\n        [class.disabled]="timelineStep.executionStatus === \'SKIPPED\'"\n        (click)="selected.emit(timelineStep)"\n      >\n        <div\n          class="policy-studio-debug-timeline-overview__step__line"\n          [class.color-red]="timelineStep.executionStatus === \'ERROR\'"\n          [class.color-grey]="timelineStep.executionStatus === \'SKIPPED\'"\n          [ngClass]="\'selected-\' + timelineStep.selection"\n        ></div>\n      </div>\n    </ng-container>\n  </ng-container>\n\n  <div class="policy-studio-debug-timeline-overview__right-client-app">\n    <mat-icon class="gio-left" svgIcon="gio:smartphone-device"></mat-icon>\n  </div>\n</div>\n'},,,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gio-diff">\n  <div class="gio-diff__header">\n    <mat-button-toggle-group\n      class="gio-diff__header__output-format"\n      [(ngModel)]="outputFormat"\n      (ngModelChange)="computeDiff()"\n      aria-label="Output format button group"\n    >\n      <mat-button-toggle value="raw">Raw</mat-button-toggle>\n      <mat-button-toggle [disabled]="!hasChanges" value="side-by-side">Diff Side By Side</mat-button-toggle>\n      <mat-button-toggle [disabled]="!hasChanges" value="line-by-line">Diff Line By Line</mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n\n  <div class="gio-diff__content">\n    <div *ngIf="outputFormat !== \'raw\'" [innerHtml]="diffHTML"></div>\n\n    <div *ngIf="outputFormat === \'raw\'" class="gio-diff__content__row">\n      <div class="gio-diff__content__row__gv-code">\n        <gv-code [class.single]="!hasChanges" [value]="left" [options]="gvCodeOptions" readonly></gv-code>\n        <gio-clipboard-copy-icon class="gio-diff__content__row__gv-code__copy-icon" [contentToCopy]="right"></gio-clipboard-copy-icon>\n      </div>\n      <div *ngIf="hasChanges" class="gio-diff__content__row__gv-code">\n        <gv-code [value]="right" [options]="gvCodeOptions" readonly></gv-code>\n        <gio-clipboard-copy-icon class="gio-diff__content__row__gv-code__copy-icon" [contentToCopy]="right"></gio-clipboard-copy-icon>\n      </div>\n    </div>\n  </div>\n</div>\n'},,,,,,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="form-slide-toggle" [class.appearance-standard]="appearance === \'standard\'" [class.appearance-fill]="appearance === \'fill\'">\n  <div class="form-slide-toggle__icon">\n    <ng-content select="[gioFormPrefix]"></ng-content>\n  </div>\n  <div class="form-slide-toggle__field">\n    <div class="form-slide-toggle__field__text" [class.disabled]="disabled">\n      <span class="form-slide-toggle__field__text__label-1">\n        <ng-content select="gio-form-label"></ng-content>\n      </span>\n      <span class="form-slide-toggle__field__text__label-2">\n        <ng-content></ng-content>\n      </span>\n    </div>\n    <div class="form-slide-toggle__field__mat-slide-toggle">\n      <ng-content select="[gioFormSlideToggle]"></ng-content>\n    </div>\n  </div>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n\n<div class="gio-table-wrapper__header-bar">\n  <div>\n    <mat-form-field *ngIf="!disableSearchInput" class="gio-table-wrapper__header-bar__search-field" appearance="outline">\n      <mat-icon matPrefix>search</mat-icon>\n      <mat-label>{{ searchLabel }}</mat-label>\n      <input class="search-input" [formControl]="inputSearch" type="search" matInput data-testid="search" />\n    </mat-form-field>\n  </div>\n\n  <mat-paginator\n    class="gio-table-wrapper__header-bar__paginator"\n    #paginatorTop\n    [length]="length"\n    [pageSizeOptions]="[5, 10, 25, 100]"\n    aria-label="Select page"\n  ></mat-paginator>\n</div>\n<ng-content select="[mat-table]"></ng-content>\n\n<div class="gio-table-wrapper__footer-bar">\n  <mat-paginator\n    #paginatorBottom\n    class="gio-table-wrapper__footer-bar__paginator"\n    [class.hidden]="length <= paginatorBottom.pageSize"\n    [length]="length"\n    [hidePageSize]="true"\n    aria-label="Select page"\n  ></mat-paginator>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div #avatarContainer class="gio-avatar" [class.rounded]="roundedBorder">\n  <img *ngIf="imgSrc" class="gio-avatar__img" [src]="imgSrc" alt="Avatar picture" [width]="size" (error)="onImgError($event)" />\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<mat-card class="api-quality">\n  <h3>Quality</h3>\n  <div *ngIf="qualityMetrics; else loading" class="api-quality__content">\n    <gio-circular-percentage class="api-quality__content__score" [score]="qualityMetrics.score"></gio-circular-percentage>\n    <div class="api-quality__content__list">\n      <div *ngFor="let qualityMetric of qualityMetrics.metrics_passed | keyvalue" class="api-quality__content__list__item">\n        <mat-icon\n          *ngIf="qualityMetric.value"\n          class="api-quality__content__list__item__green-icon"\n          svgIcon="gio:check-circled-outline"\n        ></mat-icon>\n        <mat-icon *ngIf="!qualityMetric.value" class="api-quality__content__list__item__red-icon" svgIcon="gio:alert-circle"></mat-icon>\n        <span class="api-quality__content__list__item__text">{{ qualityMetricsDescription[qualityMetric.key] }}</span>\n      </div>\n    </div>\n  </div>\n</mat-card>\n\n<ng-template #loading>\n  Loading...\n  <mat-progress-bar mode="indeterminate"></mat-progress-bar>\n</ng-template>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<mat-card class="danger-card">\n  <h3 class="danger-card__title">Danger Zone</h3>\n\n  <div class="danger-card__actions">\n    <ng-container *gioPermission="{ anyOf: [\'api-definition-u\'] }">\n      <div *ngIf="dangerActions.canAskForReview" class="danger-card__actions__action">\n        <span>Ask for a review before to be able to publish / start your API.</span>\n        <button mat-button color="warn" [disabled]="isReadOnly" (click)="askForReview()">Ask for a review</button>\n      </div>\n\n      <div *ngIf="dangerActions.canStopApi" class="danger-card__actions__action">\n        <span> Stop the API. It will no longer be available on all gateways. </span>\n        <button mat-button color="warn" [disabled]="isReadOnly" (click)="changeLifecycle(\'STOP\')">Stop the API</button>\n      </div>\n\n      <div *ngIf="dangerActions.canStartApi" class="danger-card__actions__action">\n        <span> Start the API. It will be available on all gateways (depending on sharding tags). </span>\n        <button mat-button color="warn" [disabled]="isReadOnly" (click)="changeLifecycle(\'START\')">Start the API</button>\n      </div>\n\n      <div *ngIf="dangerActions.canChangeApiLifecycle" class="danger-card__actions__action">\n        <ng-container *ngIf="dangerActions.canPublish">\n          <span> Publish the API. It will be available on portal (depending on visibility/rights). </span>\n          <button mat-button color="warn" [disabled]="isReadOnly" (click)="changeApiLifecycle(\'PUBLISHED\')">Publish the API</button>\n        </ng-container>\n        <ng-container *ngIf="dangerActions.canUnpublish">\n          <span> Unpublish the API. It will no longer be available on portal. </span>\n\n          <button mat-button color="warn" [disabled]="isReadOnly" (click)="changeApiLifecycle(\'UNPUBLISHED\')">Unpublish the API</button>\n        </ng-container>\n      </div>\n\n      <div *ngIf="dangerActions.canChangeVisibilityToPrivate" class="danger-card__actions__action">\n        <span> Make this API private. Only members will see it. </span>\n        <button mat-button color="warn" [disabled]="isReadOnly" (click)="changeVisibility(\'PRIVATE\')">Make Private</button>\n      </div>\n\n      <div *ngIf="dangerActions.canChangeVisibilityToPublic" class="danger-card__actions__action">\n        <span>Make this API public. Everyone can see it.</span>\n        <button mat-button color="warn" [disabled]="isReadOnly" (click)="changeVisibility(\'PUBLIC\')">Make Public</button>\n      </div>\n    </ng-container>\n\n    <ng-container *gioPermission="{ anyOf: [\'api-definition-d\'] }">\n      <div *ngIf="dangerActions.canDeprecate" class="danger-card__actions__action">\n        <span>Deprecate this API. It will no longer be published on portal.</span>\n        <button mat-button color="warn" [disabled]="isReadOnly" (click)="changeApiLifecycle(\'DEPRECATED\')">Deprecate</button>\n      </div>\n\n      <div class="danger-card__actions__action">\n        <span class="gv-form-danger-text">\n          Delete this API.\n          <span *ngIf="!dangerActions.canDelete">A running or published API cannot be deleted</span>\n        </span>\n        <button mat-button color="warn" [disabled]="!dangerActions.canDelete || isReadOnly" (click)="delete()">Delete</button>\n      </div>\n    </ng-container>\n  </div>\n</mat-card>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<svg viewBox="0 0 36 36" class="circular" [ngClass]="colorClass">\n  <path\n    class="circular__circle-bg"\n    d="M18 2.0845\n            a 15.9155 15.9155 0 0 1 0 31.831\n            a 15.9155 15.9155 0 0 1 0 -31.831"\n  />\n  <path\n    class="circular__circle"\n    [attr.stroke-dasharray]="percentage + \' 100\'"\n    d="M18 2.0845\n            a 15.9155 15.9155 0 0 1 0 31.831\n            a 15.9155 15.9155 0 0 1 0 -31.831"\n  />\n  <text x="18" y="21.80" class="circular__percentage">{{ percentage }}%</text>\n</svg>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<button mat-icon-button type="button" class="back-button" matTooltip="Go back" (click)="goBack()">\n  <mat-icon>arrow_back</mat-icon>\n</button>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<form *ngIf="!!generalForm" [formGroup]="generalForm" autocomplete="off" gioFormFocusInvalid>\n  <mat-card>\n    \x3c!-- Name --\x3e\n    <div class="card__group-name">\n      <div class="card__group-name__label">Name</div>\n      <mat-form-field class="card__group-name__form-field" appearance="fill">\n        <mat-label>Name</mat-label>\n        <input type="text" aria-label="Group name input" matInput formControlName="name" required />\n        <mat-error *ngIf="generalForm.get(\'name\').hasError(\'required\')"> Name is required. </mat-error>\n        <mat-error *ngIf="generalForm.get(\'name\').hasError(\'pattern\')"> Group name does not support <code>:</code> in its name. </mat-error>\n        <mat-error *ngIf="generalForm.get(\'name\').hasError(\'isUnique\')"> This name is used by another endpoint group. </mat-error>\n      </mat-form-field>\n    </div>\n\n    \x3c!-- Load balancing algorithm --\x3e\n    <div class="card__group-lb">\n      <div class="card__group-lb__label">Load balancing algorithm</div>\n      <p class="card__group-lb__hint">\n        You can configure load balancing by creating a logical group of endpoints and specifying a load balancing algorithm for them.\n      </p>\n      <mat-form-field class="card__group-lb__form-field" appearance="fill">\n        <mat-label>Load balancing algorithm</mat-label>\n        <mat-select aria-label="Load balancing algorithm" formControlName="loadBalancerType" required>\n          <mat-option *ngFor="let lb of loadBalancingValues | keyvalue" [value]="lb.value">{{ lb.value }}</mat-option>\n        </mat-select>\n        <mat-error *ngIf="generalForm.get(\'loadBalancerType\').hasError(\'required\')"> Load balancing algorithm is required. </mat-error>\n      </mat-form-field>\n    </div>\n  </mat-card>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<mat-card>\n  <gv-schema-form\n    [attr.readonly]="isReadOnly ? isReadOnly : null"\n    [schema]="schemaForm"\n    [values]="group"\n    (:gv-schema-form:change)="onChange($event)"\n  ></gv-schema-form>\n</mat-card>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<form *ngIf="!!serviceDiscoveryForm && !!serviceDiscoveryItems" [formGroup]="serviceDiscoveryForm" gioFormFocusInvalid>\n  <mat-card>\n    <gio-form-slide-toggle appearance="fill" class="card__group-sd__enable">\n      <gio-form-label>Enabled service discovery</gio-form-label>\n      By enabling service discovery, endpoints will be dynamically added or removed (without downtime).\n      <mat-slide-toggle\n        gioFormSlideToggle\n        formControlName="enabled"\n        aria-label="Enable service discovery"\n        name="enableServiceDiscoveryConfiguration"\n      ></mat-slide-toggle>\n    </gio-form-slide-toggle>\n\n    \x3c!-- Type --\x3e\n    <div class="card__group-sd">\n      <div class="card__group-sd__type__label">Type</div>\n      <mat-form-field class="card__group-sd__type__form-field" appearance="fill">\n        <mat-label>Type</mat-label>\n        <mat-select aria-label="Service discovery type" formControlName="type">\n          <mat-option *ngFor="let sd of serviceDiscoveryItems" [value]="sd.id">{{ sd.name }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    <div class="card__group-sd" *ngIf="displaySchema">\n      <gv-schema-form\n        [attr.readonly]="isReadOnly ? isReadOnly : null"\n        [schema]="schema"\n        [values]="group?.services?.discovery?.configuration"\n        (:gv-schema-form:change)="onSchemaFormChange($event)"\n      ></gv-schema-form>\n    </div>\n  </mat-card>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<form *ngIf="!!generalForm" [formGroup]="generalForm" autocomplete="off" gioFormFocusInvalid>\n  <mat-card>\n    <div class="card__group-endpoint__row">\n      \x3c!-- Type --\x3e\n      <div class="card__group-endpoint__row__type">\n        <div class="card__group-endpoint__row__type__label">Type</div>\n        <mat-form-field class="card__group-endpoint__row__type__form-field" appearance="fill">\n          <mat-label>Type</mat-label>\n          <mat-select aria-label="Endpoint type" formControlName="type" required>\n            <mat-option *ngFor="let st of supportedTypes" [value]="st">{{ st }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      \x3c!-- Name --\x3e\n      <div class="card__group-endpoint__row__name">\n        <div class="card__group-endpoint__row__name__label">Name</div>\n        <mat-form-field class="card__group-endpoint__row__name__form-field" appearance="fill">\n          <mat-label>Name</mat-label>\n          <input type="text" aria-label="Endpoint name input" matInput formControlName="name" required />\n          <mat-error *ngIf="generalForm.get(\'name\').hasError(\'required\')"> Name is required. </mat-error>\n          <mat-error *ngIf="generalForm.get(\'name\').hasError(\'pattern\')">\n            Endpoint name does not support <code>:</code> in its name.\n          </mat-error>\n          <mat-error *ngIf="generalForm.get(\'name\').hasError(\'isUnique\')"> This name is used by another endpoint. </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n\n    \x3c!-- Target --\x3e\n    <div class="card__group-endpoint__row__target">\n      <div class="card__group-endpoint__row__target__label">Target</div>\n      <mat-form-field class="card__group-endpoint__row__target__form-field" appearance="fill">\n        <mat-label>Target</mat-label>\n        <input type="text" aria-label="Endpoint target input" matInput formControlName="target" required />\n        <mat-error *ngIf="generalForm.get(\'target\').hasError(\'required\')"> Target is required. </mat-error>\n      </mat-form-field>\n    </div>\n\n    \x3c!-- Weight --\x3e\n    <div class="card__group-endpoint__row__weight">\n      <div class="card__group-endpoint__row__weight__label">Weight</div>\n      <mat-form-field class="card__group-endpoint__row__weight__form-field" appearance="fill">\n        <mat-label>Weight</mat-label>\n        <input type="number" aria-label="Endpoint weight input" matInput formControlName="weight" required />\n        <mat-error *ngIf="generalForm.get(\'weight\').hasError(\'required\')"> Weight is required. </mat-error>\n      </mat-form-field>\n    </div>\n\n    \x3c!-- Tenants --\x3e\n    <div class="card__group-endpoint__row__tenant">\n      <div class="card__group-endpoint__row__tenant__label">Tenants</div>\n      <mat-form-field class="card__group-endpoint__row__tenant__form-field" appearance="fill">\n        <mat-label>Tenants</mat-label>\n        <mat-select aria-label="Endpoint tenants" formControlName="tenants" multiple>\n          <mat-option *ngFor="let tenant of tenants" [value]="tenant.name">\n            <span class="card__group-endpoint__row__tenant__name" [matTooltip]="tenant.description">{{ tenant.name }}</span>\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    \x3c!-- Secondary endpoint --\x3e\n    <div class="card__group-endpoint__row__backup">\n      <div class="card__group-endpoint__row__backup__label">Secondary endpoint</div>\n      <mat-checkbox class="card__group-endpoint__row__backup__checkbox" aria-label="Secondary endpoint checkbox" formControlName="backup">\n        <span class="card__group-endpoint__row__backup__checkbox__label">\n          A secondary endpoint is not included in load-balancer pool and can only be selected to handle requests when all primary endpoints\n          are marked as "DOWN" by health-check service.</span\n        >\n      </mat-checkbox>\n    </div>\n  </mat-card>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<form [formGroup]="configurationForm">\n  <mat-card>\n    <gio-form-slide-toggle appearance="fill" class="card__endpoint-configuration__inherit">\n      <gio-form-label>Inherit configuration</gio-form-label>\n      Inherit endpoint configuration from group.\n      <mat-slide-toggle\n        gioFormSlideToggle\n        formControlName="inherit"\n        aria-label="Inherit configuration"\n        name="enableEndpointConfiguration"\n      ></mat-slide-toggle>\n    </gio-form-slide-toggle>\n\n    <div *ngIf="!configurationForm.get(\'inherit\').value">\n      <gv-schema-form\n        [attr.readonly]="isReadOnly ? isReadOnly : null"\n        [schema]="configurationSchema"\n        [values]="endpoint"\n        (:gv-schema-form:change)="onChange($event)"\n      ></gv-schema-form>\n    </div>\n  </mat-card>\n</form>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="api-navigation-title">\n  <mat-icon\n    *ngIf="apiState === \'STARTED\'"\n    matTooltip="Started"\n    class="api-navigation-title__icon api-navigation-title__icon__play"\n    svgIcon="gio:play-circle"\n  ></mat-icon>\n  <mat-icon\n    *ngIf="apiState !== \'STARTED\'"\n    matTooltip="Stopped"\n    class="api-navigation-title__icon api-navigation-title__icon__stop"\n    svgIcon="gio:stop-circle"\n  ></mat-icon>\n  <mat-icon\n    *ngIf="!apiIsSync"\n    matTooltip="API out of sync"\n    class="api-navigation-title__icon api-navigation-title__icon__refresh"\n    svgIcon="gio:refresh-cw"\n  >\n  </mat-icon>\n  <mat-icon\n    *ngIf="apiLifecycleState === \'PUBLISHED\'"\n    matTooltip="Published"\n    class="api-navigation-title__icon"\n    svgIcon="gio:cloud-published"\n  ></mat-icon>\n  <mat-icon\n    *ngIf="apiLifecycleState !== \'PUBLISHED\'"\n    matTooltip="Unpublished"\n    class="api-navigation-title__icon"\n    svgIcon="gio:cloud-unpublished"\n  ></mat-icon>\n  <mat-icon\n    *ngIf="apiOrigin === \'kubernetes\'"\n    matTooltip="Kubernetes Origin"\n    class="api-navigation-title__icon"\n    svgIcon="gio:kubernetes"\n  ></mat-icon>\n  <div class="api-navigation-title__name" [matTooltip]="apiName + \' ( \' + apiVersion + \' )\'">{{ apiName }} ({{ apiVersion }})</div>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<nav mat-tab-nav-bar class="api-navigation-tabs">\n  <a\n    mat-tab-link\n    *ngFor="let menuItem of this.tabMenuItems"\n    (click)="navigateTo(menuItem.targetRoute)"\n    [active]="isActive(menuItem.baseRoute)"\n    class="api-navigation-tabs__link"\n    >{{ menuItem.displayName }}</a\n  >\n</nav>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n    \n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    \n            http://www.apache.org/licenses/LICENSE-2.0\n    \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n🦊\n\n<div>\n  <button mat-button matStepperPrevious>Back</button>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gio-instance-details">\n  <instance-details-header [instance]="instance"></instance-details-header>\n  <div ui-view class="instances-detail__content"></div>\n</div>\n'},function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gio-instance-details-header">\n  <mat-card *ngIf="instance">\n    <h3>\n      {{ instance.hostname }}\n      <small>( {{ instance.ip }}:{{ instance.port }} )</small>\n    </h3>\n    <h4>{{ instance.version }}</h4>\n    <div *ngIf="instance.tags?.length > 0">Tags: {{ instance.tags }}</div>\n    <div *ngIf="!instance.tags || instance.tags.length === 0">No tag configured</div>\n  </mat-card>\n\n  <nav mat-tab-nav-bar class="gio-instance-details-header__navigation-tabs">\n    <a\n      mat-tab-link\n      *ngFor="let menuItem of this.tabMenuItems"\n      (click)="navigateTo(menuItem.targetRoute)"\n      [active]="isActive(menuItem.baseRoute)"\n      [attr.data-testid]="menuItem.testId"\n      class="gio-instance-details-header__navigation-tabs__link"\n      >{{ menuItem.displayName }}</a\n    >\n  </nav>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="gio-instance-details-environment">\n  <div class="gio-instance-details-environment__cards">\n    <mat-card class="gio-instance-details-environment__cards__card">\n      <h2 gioTableOfContents gioTableOfContentsName="Information" class="gio-instance-details-environment__cards__card__title">\n        <mat-icon svgIcon="gio:info"></mat-icon>\n        <span>Information</span>\n      </h2>\n\n      <gio-table-wrapper\n        *ngIf="filteredInformationItemsDS"\n        [length]="informationTableUnpaginatedLength"\n        (filtersChange)="onInformationFiltersChanged($event)"\n      >\n        <table\n          mat-table\n          [dataSource]="filteredInformationItemsDS"\n          matSort\n          class="information-table"\n          id="informationTable"\n          aria-label="Information table"\n        >\n          \x3c!-- Icon Column --\x3e\n          <ng-container matColumnDef="icon">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef="let info">\n              <mat-icon [svgIcon]="info.icon"></mat-icon>\n            </td>\n          </ng-container>\n\n          \x3c!-- Type Column --\x3e\n          <ng-container matColumnDef="type">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription="Sort by type">Type</th>\n            <td mat-cell *matCellDef="let info">{{ info.type }}</td>\n          </ng-container>\n\n          \x3c!-- Value Column --\x3e\n          <ng-container matColumnDef="value">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription="Sort by value">Value</th>\n            <td mat-cell *matCellDef="let info" [ngClass]="info.class">{{ info.value }}</td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef="informationTableDisplayedColumns"></tr>\n          <tr mat-row *matRowDef="let row; columns: informationTableDisplayedColumns"></tr>\n\n          <tr class="mat-row" *matNoDataRow>\n            <td class="mat-cell" [attr.colspan]="informationTableDisplayedColumns.length">No information</td>\n          </tr>\n        </table>\n      </gio-table-wrapper>\n    </mat-card>\n    <mat-card class="gio-instance-details-environment__cards__card">\n      <h2 gioTableOfContents gioTableOfContentsName="Plugins" class="gio-instance-details-environment__cards__card__title">\n        <mat-icon svgIcon="gio:puzzle"></mat-icon>\n        <span>Plugins</span>\n      </h2>\n\n      <gio-table-wrapper\n        *ngIf="filteredPluginsItemsDS"\n        [length]="pluginsTableUnpaginatedLength"\n        (filtersChange)="onPluginsFiltersChanged($event)"\n      >\n        <table mat-table [dataSource]="filteredPluginsItemsDS" matSort class="plugins-table" id="pluginsTable" aria-label="Plugin table">\n          \x3c!-- Icon Column --\x3e\n          <ng-container matColumnDef="icon">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef="let plugin">\n              <mat-icon [svgIcon]="plugin.icon"></mat-icon>\n            </td>\n          </ng-container>\n\n          \x3c!-- ID Column --\x3e\n          <ng-container matColumnDef="id">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription="Sort by ID">ID</th>\n            <td mat-cell *matCellDef="let plugin">{{ plugin.id }}</td>\n          </ng-container>\n\n          \x3c!-- Name Column --\x3e\n          <ng-container matColumnDef="name">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription="Sort by name">Name</th>\n            <td mat-cell *matCellDef="let plugin">{{ plugin.name }}</td>\n          </ng-container>\n\n          \x3c!-- Version Column --\x3e\n          <ng-container matColumnDef="version">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription="Sort by version">Version</th>\n            <td mat-cell *matCellDef="let plugin">{{ plugin.version }}</td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef="pluginsTableDisplayedColumns"></tr>\n          <tr mat-row *matRowDef="let row; columns: pluginsTableDisplayedColumns"></tr>\n\n          <tr class="mat-row" *matNoDataRow>\n            <td class="mat-cell" [attr.colspan]="pluginsTableDisplayedColumns.length">No plugin</td>\n          </tr>\n        </table>\n      </gio-table-wrapper>\n    </mat-card>\n    <mat-card class="gio-instance-details-environment__cards__card">\n      <h2 gioTableOfContents gioTableOfContentsName="System properties" class="gio-instance-details-environment__cards__card__title">\n        <mat-icon svgIcon="gio:list"></mat-icon>\n        <span>System properties</span>\n      </h2>\n\n      <gio-table-wrapper\n        *ngIf="filteredPropertiesItemsDS"\n        [length]="propertiesTableUnpaginatedLength"\n        (filtersChange)="onPropertiesFiltersChanged($event)"\n      >\n        <table\n          mat-table\n          [dataSource]="filteredPropertiesItemsDS"\n          matSort\n          class="properties-table"\n          id="propertiesTable"\n          aria-label="Properties table"\n        >\n          \x3c!-- Name Column --\x3e\n          <ng-container matColumnDef="name">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription="Sort by name">Name</th>\n            <td mat-cell *matCellDef="let property">{{ property.name }}</td>\n          </ng-container>\n\n          \x3c!-- Version Column --\x3e\n          <ng-container matColumnDef="value">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription="Sort by value">Value</th>\n            <td mat-cell *matCellDef="let property">{{ property.value }}</td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef="propertiesTableDisplayedColumns"></tr>\n          <tr mat-row *matRowDef="let row; columns: propertiesTableDisplayedColumns"></tr>\n\n          <tr class="mat-row" *matNoDataRow>\n            <td class="mat-cell" [attr.colspan]="propertiesTableDisplayedColumns.length">No property</td>\n          </tr>\n        </table>\n      </gio-table-wrapper>\n    </mat-card>\n  </div>\n\n  <gio-table-of-contents\n    class="gio-instance-details-environment__toc"\n    [sectionNames]="{ \'\': \'Environment\' }"\n    scrollingContainer=".gio-main-page__content"\n  ></gio-table-of-contents>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div *ngIf="!instanceStarted">\n  <h1><mat-icon svgIcon="gio:alert-circle"></mat-icon> There is no data for stopped gateway instance</h1>\n</div>\n<div *ngIf="instanceStarted" class="gio-instance-details-monitoring">\n  <div class="gio-instance-details-monitoring__main-indicators">\n    <mat-card class="gio-instance-details-monitoring__main-indicators__card">\n      <div class="gio-instance-details-monitoring__main-indicators__card__percentage">\n        <gio-circular-percentage [score]="monitoringData?.process?.cpu_percent / 100" reverseColor="true"></gio-circular-percentage>\n      </div>\n      <h4>CPU</h4>\n    </mat-card>\n    <mat-card class="gio-instance-details-monitoring__main-indicators__card">\n      <div class="gio-instance-details-monitoring__main-indicators__card__percentage">\n        <gio-circular-percentage [score]="monitoringData?.jvm?.heap_used_percent / 100" reverseColor="true"></gio-circular-percentage>\n      </div>\n      <h4>Heap</h4>\n    </mat-card>\n    <mat-card class="gio-instance-details-monitoring__main-indicators__card">\n      <div class="gio-instance-details-monitoring__main-indicators__card__value">\n        {{ monitoringData?.gc?.old_collection_count }}\n      </div>\n      <h4>GC collections</h4>\n    </mat-card>\n    <mat-card class="gio-instance-details-monitoring__main-indicators__card">\n      <div class="gio-instance-details-monitoring__main-indicators__card__value">\n        {{ monitoringData?.process?.open_file_descriptors }}\n      </div>\n      <h4>File Descriptors</h4>\n    </mat-card>\n  </div>\n\n  <div class="gio-instance-details-monitoring__jvm">\n    <mat-card data-testid="instance-monitoring_jvm-box">\n      <h2 class="gio-instance-details-monitoring__card-title">\n        <mat-icon svgIcon="gio:cpu"></mat-icon>\n        <span>JVM</span>\n      </h2>\n      <dl class="gio-description-list">\n        <dt>Date</dt>\n        <dd>{{ monitoringData?.jvm?.timestamp | date: \'medium\' }}</dd>\n        <dt>Uptime</dt>\n        <dd>{{ humanizeDuration(monitoringData?.jvm?.uptime_in_millis) }}</dd>\n        <dt>Heap used</dt>\n        <dd>{{ humanizeSize(monitoringData?.jvm?.heap_used_in_bytes) }}</dd>\n        <dt>Percent of heap used</dt>\n        <dd>{{ monitoringData?.jvm?.heap_used_percent + \'%\' }}</dd>\n        <dt>Heap committed</dt>\n        <dd>{{ humanizeSize(monitoringData?.jvm?.heap_committed_in_bytes) }}</dd>\n        <dt>Heap max</dt>\n        <dd>{{ humanizeSize(monitoringData?.jvm?.heap_max_in_bytes) }}</dd>\n        <dt>Non heap used</dt>\n        <dd>{{ humanizeSize(monitoringData?.jvm?.non_heap_used_in_bytes) }}</dd>\n        <dt>Non heap committed</dt>\n        <dd>{{ humanizeSize(monitoringData?.jvm?.non_heap_committed_in_bytes) }}</dd>\n      </dl>\n      <div class="gio-instance-details-monitoring__jvm__pool">\n        <mat-card>\n          <dl class="gio-description-list">\n            <dt>Young pool used</dt>\n            <dd>{{ humanizeSize(monitoringData?.jvm?.young_pool_used_in_bytes) }}</dd>\n            <dt>Young pool max</dt>\n            <dd>{{ humanizeSize(monitoringData?.jvm?.young_pool_max_in_bytes) }}</dd>\n          </dl>\n          <div class="gio-instance-details-monitoring__jvm__pool__progress-bar">\n            <strong>{{ ratioLabel(monitoringData?.jvm?.young_pool_used_in_bytes, monitoringData?.jvm?.young_pool_max_in_bytes) }}</strong>\n            <mat-progress-bar\n              mode="determinate"\n              [value]="ratio(monitoringData?.jvm?.young_pool_used_in_bytes, monitoringData?.jvm?.young_pool_max_in_bytes)"\n            ></mat-progress-bar>\n          </div>\n          <dl class="gio-description-list">\n            <dt>Young pool peak used</dt>\n            <dd>{{ humanizeSize(monitoringData?.jvm?.young_pool_peak_used_in_bytes) }}</dd>\n            <dt>Young pool peak max</dt>\n            <dd>{{ humanizeSize(monitoringData?.jvm?.young_pool_peak_max_in_bytes) }}</dd>\n          </dl>\n          <div class="gio-instance-details-monitoring__jvm__pool__progress-bar">\n            <strong>{{\n              ratioLabel(monitoringData?.jvm?.young_pool_peak_used_in_bytes, monitoringData?.jvm?.young_pool_peak_max_in_bytes)\n            }}</strong>\n            <mat-progress-bar\n              mode="determinate"\n              [value]="ratio(monitoringData?.jvm?.young_pool_peak_used_in_bytes, monitoringData?.jvm?.young_pool_peak_max_in_bytes)"\n            ></mat-progress-bar>\n          </div>\n        </mat-card>\n        <mat-card>\n          <dl class="gio-description-list">\n            <dt>Survivor pool used</dt>\n            <dd>{{ humanizeSize(monitoringData?.jvm?.survivor_pool_used_in_bytes) }}</dd>\n            <dt>Survivor pool max</dt>\n            <dd>{{ humanizeSize(monitoringData?.jvm?.survivor_pool_max_in_bytes) }}</dd>\n          </dl>\n          <div class="gio-instance-details-monitoring__jvm__pool__progress-bar">\n            <strong>{{\n              ratioLabel(monitoringData?.jvm?.survivor_pool_used_in_bytes, monitoringData?.jvm?.survivor_pool_max_in_bytes)\n            }}</strong>\n            <mat-progress-bar\n              mode="determinate"\n              [value]="ratio(monitoringData?.jvm?.survivor_pool_used_in_bytes, monitoringData?.jvm?.survivor_pool_max_in_bytes)"\n            ></mat-progress-bar>\n          </div>\n          <dl class="gio-description-list">\n            <dt>Survivor pool peak used</dt>\n            <dd>{{ humanizeSize(monitoringData?.jvm?.survivor_pool_peak_used_in_bytes) }}</dd>\n            <dt>Survivor pool peak max</dt>\n            <dd>{{ humanizeSize(monitoringData?.jvm?.survivor_pool_peak_max_in_bytes) }}</dd>\n          </dl>\n          <div class="gio-instance-details-monitoring__jvm__pool__progress-bar">\n            <strong>{{\n              ratioLabel(monitoringData?.jvm?.survivor_pool_peak_used_in_bytes, monitoringData?.jvm?.survivor_pool_peak_max_in_bytes)\n            }}</strong>\n            <mat-progress-bar\n              mode="determinate"\n              [value]="ratio(monitoringData?.jvm?.survivor_pool_peak_used_in_bytes, monitoringData?.jvm?.survivor_pool_peak_max_in_bytes)"\n            ></mat-progress-bar>\n          </div>\n        </mat-card>\n        <mat-card>\n          <dl class="gio-description-list">\n            <dt>Old pool used</dt>\n            <dd>{{ humanizeSize(monitoringData?.jvm?.old_pool_used_in_bytes) }}</dd>\n            <dt>Old pool max</dt>\n            <dd>{{ humanizeSize(monitoringData?.jvm?.old_pool_max_in_bytes) }}</dd>\n          </dl>\n          <div class="gio-instance-details-monitoring__jvm__pool__progress-bar">\n            <strong>{{ ratioLabel(monitoringData?.jvm?.old_pool_used_in_bytes, monitoringData?.jvm?.old_pool_max_in_bytes) }}</strong>\n            <mat-progress-bar\n              mode="determinate"\n              [value]="ratio(monitoringData?.jvm?.old_pool_used_in_bytes, monitoringData?.jvm?.old_pool_max_in_bytes)"\n            ></mat-progress-bar>\n          </div>\n          <dl class="gio-description-list">\n            <dt>Old pool peak used</dt>\n            <dd>{{ humanizeSize(monitoringData?.jvm?.old_pool_peak_used_in_bytes) }}</dd>\n            <dt>Old pool peak max</dt>\n            <dd>{{ humanizeSize(monitoringData?.jvm?.old_pool_peak_max_in_bytes) }}</dd>\n          </dl>\n          <div class="gio-instance-details-monitoring__jvm__pool__progress-bar">\n            <strong>{{\n              ratioLabel(monitoringData?.jvm?.old_pool_peak_used_in_bytes, monitoringData?.jvm?.old_pool_peak_max_in_bytes)\n            }}</strong>\n            <mat-progress-bar\n              mode="determinate"\n              [value]="ratio(monitoringData?.jvm?.old_pool_peak_used_in_bytes, monitoringData?.jvm?.old_pool_peak_max_in_bytes)"\n            ></mat-progress-bar>\n          </div>\n        </mat-card>\n      </div>\n    </mat-card>\n  </div>\n\n  <div class="gio-instance-details-monitoring__indicators">\n    <mat-card flex="50" data-testid="instance-monitoring_cpu-box">\n      <h2 class="gio-instance-details-monitoring__card-title">\n        <mat-icon svgIcon="gio:cpu"></mat-icon>\n        <span>CPU</span>\n      </h2>\n      <dl class="gio-description-list">\n        <dt>Percent of use</dt>\n        <dd>{{ monitoringData?.cpu?.percent_use + \'%\' }}</dd>\n        <dt>Load average</dt>\n        <dd>\n          <div class="gio-instance-details-monitoring__load-average">\n            <ng-container *ngFor="let loadAverage of monitoringData?.cpu?.load_average | keyvalue: originalOrder">\n              <div>[{{ loadAverage.key }}]</div>\n              <div>{{ loadAverage.value }}</div>\n            </ng-container>\n          </div>\n        </dd>\n      </dl>\n    </mat-card>\n    <mat-card flex="50" data-testid="instance-monitoring_process-box">\n      <h2 class="gio-instance-details-monitoring__card-title">\n        <mat-icon svgIcon="gio:cpu"></mat-icon>\n        <span>Process</span>\n      </h2>\n      <dl class="gio-description-list">\n        <dt>Open file descriptors</dt>\n        <dd>{{ monitoringData?.process?.open_file_descriptors }}</dd>\n        <dt>Max file descriptors</dt>\n        <dd>{{ monitoringData?.process?.max_file_descriptors }}</dd>\n      </dl>\n    </mat-card>\n    <mat-card flex="50" data-testid="instance-monitoring_thread-box">\n      <h2 class="gio-instance-details-monitoring__card-title">\n        <mat-icon svgIcon="gio:cpu"></mat-icon>\n        <span>Thread</span>\n      </h2>\n      <dl class="gio-description-list">\n        <dt>Count</dt>\n        <dd>{{ monitoringData?.thread?.count }}</dd>\n        <dt>Peak count</dt>\n        <dd>{{ monitoringData?.thread?.peak_count }}</dd>\n      </dl>\n    </mat-card>\n    <mat-card flex="50" data-testid="instance-monitoring_gc-box">\n      <h2 class="gio-instance-details-monitoring__card-title">\n        <mat-icon svgIcon="gio:cpu"></mat-icon>\n        <span>Garbage collector</span>\n      </h2>\n      <dl class="gio-description-list">\n        <dt>Young collection count</dt>\n        <dd>{{ monitoringData?.gc?.young_collection_count }}</dd>\n        <dt>Young collection time</dt>\n        <dd>{{ monitoringData?.gc?.young_collection_time_in_millis + \' ms\' }}</dd>\n        <dt>Old collection count</dt>\n        <dd>{{ monitoringData?.gc?.old_collection_count }}</dd>\n        <dt>Old collection time</dt>\n        <dd>{{ monitoringData?.gc?.old_collection_time_in_millis + \' ms\' }}</dd>\n      </dl>\n    </mat-card>\n  </div>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div *ngFor="let section of sections$ | async" class="toc">\n  <div *ngIf="section?.name" class="toc__section-name">{{ section?.name }}</div>\n  <nav [attr.aria-label]="section?.name + \' Table of Contents\'">\n    <a\n      *ngFor="let link of sortByTopOffset(section?.links); let i = index"\n      [href]="rootUrl + \'#\' + link.id"\n      [class.active]="link.active"\n      (click)="onClick($event, link.id)"\n      class="toc__link--level-{{ link.type }} toc__link"\n      >{{ link.name }}</a\n    >\n  </nav>\n</div>\n'},,,,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<mat-card class="identity-provider__card" [formGroup]="configurationFormGroup">\n  <h2 gioTableOfContents>Configuration</h2>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Client Id</mat-label>\n    <input matInput name="configurationClientId" formControlName="clientId" required />\n    <mat-error *ngIf="configurationFormGroup.get(\'clientId\').hasError(\'required\')">Client Id is required.</mat-error>\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Client Secret</mat-label>\n    <input matInput name="configurationClientSecret" type="password" formControlName="clientSecret" required />\n    <mat-error *ngIf="configurationFormGroup.get(\'clientSecret\').hasError(\'required\')">Client Secret is required.</mat-error>\n  </mat-form-field>\n</mat-card>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<mat-card class="identity-provider__card" [formGroup]="configurationFormGroup">\n  <h2 gioTableOfContents>Configuration</h2>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Client Id</mat-label>\n    <input matInput name="configurationClientId" formControlName="clientId" required />\n    <mat-error *ngIf="configurationFormGroup.get(\'clientId\').hasError(\'required\')">Client Id is required.</mat-error>\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Client Secret</mat-label>\n    <input matInput name="configurationClientSecret" type="password" formControlName="clientSecret" required />\n    <mat-error *ngIf="configurationFormGroup.get(\'clientSecret\').hasError(\'required\')">Client Secret is required.</mat-error>\n  </mat-form-field>\n</mat-card>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<mat-card class="identity-provider__card" [formGroup]="configurationFormGroup">\n  <h2 gioTableOfContents>Configuration</h2>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Client Id</mat-label>\n    <input matInput name="configurationClientId" formControlName="clientId" required />\n    <mat-error *ngIf="configurationFormGroup.get(\'clientId\').hasError(\'required\')">Client Id is required.</mat-error>\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Client Secret</mat-label>\n    <input matInput name="configurationClientSecret" type="password" formControlName="clientSecret" required />\n    <mat-error *ngIf="configurationFormGroup.get(\'clientSecret\').hasError(\'required\')">Client Secret is required.</mat-error>\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Server URL</mat-label>\n    <input matInput name="configurationServerURL" type="url" formControlName="serverURL" required />\n    <mat-error *ngIf="configurationFormGroup.get(\'serverURL\').hasError(\'required\')">Server URL is required.</mat-error>\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Security domain</mat-label>\n    <input matInput name="configurationDomain" formControlName="domain" required />\n    <mat-error *ngIf="configurationFormGroup.get(\'domain\').hasError(\'required\')">Security domain is required.</mat-error>\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Scopes</mat-label>\n    <gio-form-tags-input placeholder="Enter a scope and press Enter" formControlName="scopes"></gio-form-tags-input>\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Authentication button color</mat-label>\n    <gio-form-color-input placeholder="Select color" formControlName="color"></gio-form-color-input>\n  </mat-form-field>\n</mat-card>\n\n<mat-card class="identity-provider__card" [formGroup]="userProfileMappingFormGroup">\n  <h2 gioTableOfContents>User profile mapping</h2>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>ID</mat-label>\n    <input matInput name="userProfileMappingId" placeholder="sub" formControlName="id" required />\n    <mat-error *ngIf="userProfileMappingFormGroup.get(\'id\').hasError(\'required\')">ID is required.</mat-error>\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>First name</mat-label>\n    <input matInput name="userProfileMappingFirstname" placeholder="given_name" formControlName="firstname" />\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Last name</mat-label>\n    <input matInput name="userProfileMappingLastname" placeholder="family_name" formControlName="lastname" />\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Email</mat-label>\n    <input matInput name="userProfileMappingEmail" placeholder="email" formControlName="email" />\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Picture</mat-label>\n    <input matInput name="userProfileMappingPicture" placeholder="picture" formControlName="picture" />\n  </mat-form-field>\n</mat-card>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<mat-card class="identity-provider__card" [formGroup]="configurationFormGroup">\n  <h2 gioTableOfContents>Configuration</h2>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Client Id</mat-label>\n    <input matInput name="configurationClientId" formControlName="clientId" required />\n    <mat-error *ngIf="configurationFormGroup.get(\'clientId\').hasError(\'required\')">Client Id is required.</mat-error>\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Client Secret</mat-label>\n    <input matInput name="configurationClientSecret" type="password" formControlName="clientSecret" required />\n    <mat-error *ngIf="configurationFormGroup.get(\'clientSecret\').hasError(\'required\')">Client Secret is required.</mat-error>\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Token Endpoint</mat-label>\n    <input matInput name="configurationTokenEndpoint" type="url" formControlName="tokenEndpoint" required />\n    <mat-error *ngIf="configurationFormGroup.get(\'tokenEndpoint\').hasError(\'required\')">Token Endpoint is required.</mat-error>\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Token Introspection Endpoint</mat-label>\n    <input matInput name="configurationTokenIntrospectionEndpoint" type="url" formControlName="tokenIntrospectionEndpoint" />\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Authorize Endpoint</mat-label>\n    <input matInput name="configurationAuthorizeEndpoint" type="url" formControlName="authorizeEndpoint" required />\n    <mat-error *ngIf="configurationFormGroup.get(\'authorizeEndpoint\').hasError(\'required\')">Authorize Endpoint is required.</mat-error>\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>UserInfo Endpoint</mat-label>\n    <input matInput name="configurationUserInfoEndpoint" type="url" formControlName="userInfoEndpoint" required />\n    <mat-error *ngIf="configurationFormGroup.get(\'userInfoEndpoint\').hasError(\'required\')">UserInfo Endpoint is required.</mat-error>\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>UserInfo Logout Endpoint</mat-label>\n    <input matInput name="configurationUserLogoutEndpoint" type="url" formControlName="userLogoutEndpoint" />\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Scopes</mat-label>\n    <gio-form-tags-input placeholder="Enter a scope and press Enter" formControlName="scopes"></gio-form-tags-input>\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Authentication button color</mat-label>\n    <gio-form-color-input placeholder="Select color" formControlName="color"></gio-form-color-input>\n  </mat-form-field>\n</mat-card>\n\n<mat-card class="identity-provider__card" [formGroup]="userProfileMappingFormGroup">\n  <h2 gioTableOfContents>User profile mapping</h2>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>ID</mat-label>\n    <input matInput name="userProfileMappingId" placeholder="sub" formControlName="id" required />\n    <mat-error *ngIf="userProfileMappingFormGroup.get(\'id\').hasError(\'required\')">ID is required.</mat-error>\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>First name</mat-label>\n    <input matInput name="userProfileMappingFirstname" placeholder="given_name" formControlName="firstname" />\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Last name</mat-label>\n    <input matInput name="userProfileMappingLastname" placeholder="family_name" formControlName="lastname" />\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Email</mat-label>\n    <input matInput name="userProfileMappingEmail" placeholder="email" formControlName="email" />\n  </mat-form-field>\n\n  <mat-form-field class="identity-provider__card__form-field" appearance="fill">\n    <mat-label>Picture</mat-label>\n    <input matInput name="userProfileMappingPicture" placeholder="picture" formControlName="picture" />\n  </mat-form-field>\n</mat-card>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="form-card-group">\n  <ng-content select="gio-form-card"></ng-content>\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<div class="form-color-input">\n  <div\n    *ngIf="shouldLabelFloat"\n    class="form-color-input__color-container"\n    matRipple\n    [matRippleCentered]="true"\n    [matRippleUnbounded]="true"\n    [matRippleDisabled]="disabled"\n    matRippleRadius="24"\n  >\n    <div class="form-color-input__color-container__border" [class.disabled]="disabled">\n      <input\n        matInput\n        [placeholder]="placeholder"\n        [formControl]="colorFormControl"\n        class="form-color-input__color-container__border__input"\n        type="color"\n      />\n    </div>\n  </div>\n\n  <input matInput [placeholder]="placeholder" [formControl]="colorFormControl" class="form-color-input__text-input" />\n</div>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<button mat-icon-button [matMenuTriggerFor]="menu" class="gio-user-menu__button-avatar">\n  <gio-avatar [roundedBorder]="true" [src]="userPicture" [name]="currentUser.displayName" size="36"></gio-avatar>\n</button>\n<span *ngIf="hasAlert" class="gio-user-menu__alert-badge gio-badge-accent"></span>\n<mat-menu #menu="matMenu" class="gio-user-menu">\n  <div mat-menu-item class="gio-user-menu__header">\n    <gio-avatar\n      [roundedBorder]="true"\n      [src]="userPicture"\n      [name]="currentUser.displayName"\n      size="36"\n      class="mat-icon gio-user-menu__header__user-avatar"\n    ></gio-avatar>\n    <span class="gio-user-menu__header__user-info">\n      <h5>{{ userShortName }}</h5>\n      <small>{{ currentUser.email }}</small>\n    </span>\n  </div>\n  <mat-divider></mat-divider>\n  <button mat-menu-item (click)="goToMyAccount()">\n    <mat-icon svgIcon="gio:user"></mat-icon>\n    <span>My account</span>\n  </button>\n  <button mat-menu-item (click)="goToTask()">\n    <mat-icon svgIcon="gio:check-circled-outline"></mat-icon>\n    <span\n      >Task <span *ngIf="hasAlert" class="gio-badge-accent">{{ userTaskCount }}</span>\n    </span>\n  </button>\n  <button *ngIf="supportEnabled" mat-menu-item (click)="goToSupport()">\n    <mat-icon svgIcon="gio:megaphone"></mat-icon>\n    <span>Support</span>\n  </button>\n  <mat-divider></mat-divider>\n  <button mat-menu-item (click)="signOut()">\n    <mat-icon svgIcon="gio:logout"></mat-icon>\n    <span>Sign out</span>\n  </button>\n</mat-menu>\n'},,,function(e,t){e.exports='\x3c!--\n\n    Copyright (C) 2015 The Gravitee team (http://gravitee.io)\n\n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n--\x3e\n<button\n  mat-icon-button\n  (click)="isOpen = !isOpen"\n  type="button"\n  cdkOverlayOrigin\n  #trigger="cdkOverlayOrigin"\n  aria-label="Open notifications"\n>\n  <mat-icon svgIcon="gio:bell"></mat-icon>\n  <span *ngIf="hasNotifications" class="gio-notification-menu__badge gio-badge-accent">{{ userNotificationsCount }}</span>\n</button>\n<ng-template\n  cdkConnectedOverlay\n  [cdkConnectedOverlayOrigin]="trigger"\n  [cdkConnectedOverlayOpen]="isOpen"\n  (overlayOutsideClick)="onOutsideClick()"\n>\n  <mat-card class="gio-notification-menu mat-elevation-z4">\n    <div class="gio-notification-menu__header" [class.empty]="!userNotifications.length">\n      <div *ngIf="userNotifications.length < 2">{{ userNotifications.length }} notification</div>\n      <div *ngIf="userNotifications.length > 1">{{ userNotifications.length }} notifications</div>\n      <button mat-button (click)="deleteAll()" *ngIf="userNotifications.length > 0">\n        <span>Delete all</span>\n      </button>\n    </div>\n    <mat-divider *ngIf="userNotifications.length > 0"></mat-divider>\n    <mat-list class="gio-notification-menu__list" *ngIf="userNotifications.length > 0">\n      <mat-list-item *ngFor="let userNotification of userNotifications" class="gio-notification-menu__list-item">\n        <button mat-icon-button (click)="delete(userNotification)" type="button" aria-label="Delete notification">\n          <mat-icon svgIcon="gio:trash"></mat-icon>\n        </button>\n        <div mat-line>\n          <strong>{{ userNotification.title }}</strong>\n        </div>\n        <div mat-line>{{ userNotification.message }}</div>\n        <div mat-line>{{ userNotification.created_at | date: \'medium\' }}</div>\n      </mat-list-item>\n    </mat-list>\n  </mat-card>\n</ng-template>\n'},,,function(e,t,n){"use strict";n.r(t);n(470),n(471),n(22);var i=n(34),a=n.n(i),o=n(1),s=(n(473),n(259)),r=(n(275),n(276),n(277),n(477),n(479),n(170)),l=n(455),c=n(168),d=n(84),p=n(13),m=n.n(p),u=n(260);var h=class{constructor(){return{restrict:"A",require:"ngModel",link:function(e,t,n,i){i.$pristine=!1}}}};var g=class{constructor(){return{restrict:"A",require:"ngModel",link:function(e,t){setTimeout(()=>{t[0].focus()})}}}};var f=class{constructor(){return{restrict:"A",require:"?ngModel",link:function(e,t,n,i){i&&(i.$render=()=>{t[0].value=i.$viewValue},t.on(t[0].localName+":input",e=>{i.$setViewValue(e.target.value)}),t.on(t[0].localName+":select",e=>{i.$setViewValue(e.target.value)}))}}}},b=function(e,t,n,i){return new(n||(n=Promise))((function(a,o){function s(e){try{l(i.next(e))}catch(e){o(e)}}function r(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,r)}l((i=i.apply(e,t||[])).next())}))};class v{}class y{constructor(e,t,n,i){this.$http=e,this.$rootScope=t,this.Constants=n,this.ngIfMatchEtagInterceptor=i}defaultHttpHeaders(){return["Accept","Accept-Charset","Accept-Encoding","Accept-Language","Accept-Ranges","Access-Control-Allow-Credentials","Access-Control-Allow-Headers","Access-Control-Allow-Methods","Access-Control-Allow-Origin","Access-Control-Expose-Headers","Access-Control-Max-Age","Access-Control-Request-Headers","Access-Control-Request-Method","Age","Allow","Authorization","Cache-Control","Connection","Content-Disposition","Content-Encoding","Content-ID","Content-Language","Content-Length","Content-Location","Content-MD5","Content-Range","Content-Type","Cookie","Date","ETag","Expires","Expect","Forwarded","From","Host","If-Match","If-Modified-Since","If-None-Match","If-Unmodified-Since","Keep-Alive","Last-Modified","Location","Link","Max-Forwards","MIME-Version","Origin","Pragma","Proxy-Authenticate","Proxy-Authorization","Proxy-Connection","Range","Referer","Retry-After","Server","Set-Cookie","Set-Cookie2","TE","Trailer","Transfer-Encoding","Upgrade","User-Agent","Vary","Via","Warning","WWW-Authenticate","X-Forwarded-For","X-Forwarded-Proto","X-Forwarded-Server","X-Forwarded-Host"]}get(e){return this.$http.get(this.Constants.env.baseURL+"/apis/"+e)}getAnalyticsHttpTimeout(){return this.Constants.env.settings.analytics.clientTimeout}list(e,t,n,i,a,o){let s=this.Constants.env.baseURL+"/apis/";return null!=n&&(s+="_paged"),(a=a||{}).params={category:e,portal:t,page:n,order:i,ids:o},this.$http.get(s,a)}searchApis(e,t,n,i){let a=this.Constants.env.baseURL+"/apis/_search/";return null!=t&&(a+="_paged"),(i=i||{}).params={q:e||"*",page:t,order:n},this.$http.post(a,{},i)}listTopAPIs(){return this.$http.get(this.Constants.env.baseURL+"/apis/?top=true")}listByGroup(e){return this.$http.get(this.Constants.env.baseURL+"/apis/?group="+e)}start(e){return this.$http.post(this.Constants.env.baseURL+"/apis/"+e.id+"?action=START",{},{headers:{"If-Match":this.ngIfMatchEtagInterceptor.getLastEtag("api")}})}stop(e){return this.$http.post(this.Constants.env.baseURL+"/apis/"+e.id+"?action=STOP",{},{headers:{"If-Match":this.ngIfMatchEtagInterceptor.getLastEtag("api")}})}reload(e){return this.$http.post(`${this.Constants.env.baseURL}/apis/reload/${e}`,{})}migrateApiToPolicyStudio(e){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/_migrate`,{})}update(e){return this.$http.put(this.Constants.env.baseURL+"/apis/"+e.id,{version:e.version,description:e.description,proxy:e.proxy,paths:e.paths,flows:e.flows,plans:e.plans,private:e.private,visibility:e.visibility,name:e.name,services:e.services,properties:e.properties,tags:e.tags,picture:e.picture,picture_url:e.picture_url,background:e.background,background_url:e.background_url,resources:e.resources,categories:e.categories,groups:e.groups,labels:e.labels,path_mappings:e.path_mappings,response_templates:e.response_templates,lifecycle_state:e.lifecycle_state,disable_membership_notifications:e.disable_membership_notifications,flow_mode:e.flow_mode,gravitee:e.gravitee,execution_mode:e.execution_mode},{headers:{"If-Match":this.ngIfMatchEtagInterceptor.getLastEtag("api")}})}delete(e){return this.$http.delete(this.Constants.env.baseURL+"/apis/"+e)}listPolicies(e){return this.$http.get(this.Constants.env.baseURL+"/apis/"+e+"/policies")}isAPISynchronized(e){return this.$http.get(this.Constants.env.baseURL+"/apis/"+e+"/state")}deploy(e,t){return this.$http.post(this.Constants.env.baseURL+"/apis/"+e+"/deploy",t)}rollback(e,t){return this.$http.post(this.Constants.env.baseURL+"/apis/"+e+"/rollback",t)}import(e,t,n,i){const a={"Content-Type":i?"text/plain":"application/json"},o=i?"import-url":"import";if(e)return this.$http.put(`${this.Constants.env.baseURL}/apis/${e}/${o}`,t,{headers:a});const s=n?"?definitionVersion="+n:"";return this.$http.post(`${this.Constants.env.baseURL}/apis/${o}${s}`,t,{headers:a})}importSwagger(e,t,n,i){const a=n?"?definitionVersion="+n:"";return e?this.$http.put(`${this.Constants.env.baseURL}/apis/${e}/import/swagger${a}`,t,i):this.$http.post(`${this.Constants.env.baseURL}/apis/import/swagger${a}`,t,i)}export(e,t,n){return this.$http.get(this.Constants.env.baseURL+"/apis/"+e+"/export?exclude="+t.join(",")+(n?"&version="+n:""))}exportCrd(e){return this.$http.get(this.Constants.env.baseURL+"/apis/"+e+"/crd")}verify(e,t){return this.$http.post(this.Constants.env.baseURL+"/apis/verify",e,t)}importPathMappings(e,t,n){let i="?page="+t;return n&&(i+="&definitionVersion="+n),this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/import-path-mappings${i}`,{})}duplicate(e,t){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/duplicate`,t)}analytics(e,t){let n=`${this.Constants.env.baseURL}/apis/${e}/analytics?`;return Object.keys(t).forEach(e=>{const i=t[e];void 0!==i&&""!==i&&(n+=e+"="+i+"&")}),this.$http.get(n,{timeout:this.getAnalyticsHttpTimeout()})}findLogs(e,t){return this.$http.get(this.buildURLWithQuery(this.cloneQuery(t),`${this.Constants.env.baseURL}/apis/${e}/logs?`),{timeout:3e4})}exportLogsAsCSV(e,t){const n=this.cloneQuery(t);return n.page=1,n.size=1e4,this.$http.get(this.buildURLWithQuery(n,`${this.Constants.env.baseURL}/apis/${e}/logs/export?`),{timeout:3e4})}getLog(e,t,n){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/logs/${t}${n?"?timestamp="+n:""}`)}getMembers(e){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/members`)}addOrUpdateMember(e,t){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/members`,t)}deleteMember(e,t){return this.$http.delete(`${this.Constants.env.baseURL}/apis/${e}/members?user=${t}`)}transferOwnership(e,t){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/members/transfer_ownership`,t)}getGroupsWithMembers(e){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/groups`)}getApiEvents(e,t){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/events?type=${t}`)}searchApiEvents(e,t,n,i,a,o){return this.$http.get(`${this.Constants.env.baseURL}/apis/${t}/events/search?type=${e}&from=${n}&to=${i}&page=${a}&size=${o}`)}getApiPlans(e,t,n){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/plans?status=${t||"staging,published,closed,deprecated"}${n?"&security="+n:""}`)}getApiPlan(e,t){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/plans/${t}`)}getPublishedApiPlans(e){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/plans?status=published`)}savePlan(e,t){let n=null;return n=t.id?this.$http.put(`${this.Constants.env.baseURL}/apis/${e.id}/plans/${t.id}`,{id:t.id,name:t.name,description:t.description,validation:t.validation,policies:t.policies,securityDefinition:t.securityDefinition,characteristics:t.characteristics,order:t.order,paths:t.paths,flows:t.flows,excluded_groups:t.excluded_groups,comment_required:t.comment_required,comment_message:t.comment_message,tags:t.tags,selection_rule:t.selection_rule,general_conditions:t.general_conditions}):this.$http.post(`${this.Constants.env.baseURL}/apis/${e.id}/plans`,{name:t.name,description:t.description,api:t.api,validation:t.validation,policies:t.policies,characteristics:t.characteristics,type:t.type,paths:t.paths,flows:t.flows,security:t.security,securityDefinition:t.securityDefinition,excluded_groups:t.excluded_groups,comment_required:t.comment_required,comment_message:t.comment_message,tags:t.tags,selection_rule:t.selection_rule,general_conditions:t.general_conditions}),n.then(t=>b(this,void 0,void 0,(function*(){return yield this.syncV2Api(e),t})))}closePlan(e,t){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e.id}/plans/${t}/_close`,{}).then(t=>b(this,void 0,void 0,(function*(){return yield this.syncV2Api(e),t})))}publishPlan(e,t){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e.id}/plans/${t}/_publish`,{}).then(t=>b(this,void 0,void 0,(function*(){return yield this.syncV2Api(e),t})))}deprecatePlan(e,t){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e.id}/plans/${t}/_deprecate`,{}).then(t=>b(this,void 0,void 0,(function*(){return yield this.syncV2Api(e),t})))}getSubscriptions(e,t){let n=`${this.Constants.env.baseURL}/apis/${e}/subscriptions`;return void 0!==t&&(n+=t),this.$http.get(n)}exportSubscriptionsAsCSV(e,t){let n=`${this.Constants.env.baseURL}/apis/${e}/subscriptions/export`;return void 0!==t&&(n+=t),this.$http.get(n,{timeout:3e4})}getSubscribers(e,t,n,i,a=[]){const o=[];return t&&o.push("query="+t),n&&o.push("page="+n),i&&o.push("size="+i),a&&a.length>0&&o.push(a.map(e=>"exclude="+e).join("&")),this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/subscribers${o?"?"+o.join("&"):""}`)}getSubscription(e,t){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/subscriptions/${t}`)}closeSubscription(e,t){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/subscriptions/${t}/status?status=CLOSED`,{})}pauseSubscription(e,t){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/subscriptions/${t}/status?status=PAUSED`,{})}updateSubscription(e,t){return this.$http.put(`${this.Constants.env.baseURL}/apis/${e}/subscriptions/${t.id}`,{id:t.id,starting_at:t.starting_at,ending_at:t.ending_at})}resumeSubscription(e,t){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/subscriptions/${t}/status?status=RESUMED`,{})}processSubscription(e,t,n){return this.$http.post(this.Constants.env.baseURL+"/apis/"+e+"/subscriptions/"+t+"/_process",n)}transferSubscription(e,t,n){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/subscriptions/${t}/_transfer`,{id:n.id,plan:n.plan})}getPlanSubscriptions(e,t){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/subscriptions?plan=${t}`)}getAllPlanSubscriptions(e,t){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/subscriptions?plan=${t}&status=accepted,pending,rejected,closed,paused`)}subscribe(e,t,n,i){const a={params:{plan:n,application:t,customApiKey:i}};return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/subscriptions`,null,a)}listApiKeys(e,t){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/subscriptions/${t}/apikeys`)}revokeApiKey(e,t,n){return this.$http.delete(`${this.Constants.env.baseURL}/apis/${e}/subscriptions/${t}/apikeys/${n}`)}reactivateApiKey(e,t,n){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/subscriptions/${t}/apikeys/${n}/_reactivate`,"")}renewApiKey(e,t,n){const i={params:{customApiKey:n}};return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/subscriptions/${t}/apikeys/_renew`,null,i)}updateApiKey(e,t,n){return this.$http.put(`${this.Constants.env.baseURL}/apis/${e}/subscriptions/${t}/apikeys/${n.id}`,n)}listApiMetadata(e){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/metadata`)}createMetadata(e,t){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/metadata`,t)}updateMetadata(e,t){return this.$http.put(`${this.Constants.env.baseURL}/apis/${e}/metadata/${t.key}`,t)}deleteMetadata(e,t){return this.$http.delete(`${this.Constants.env.baseURL}/apis/${e}/metadata/${t}`)}getPermissions(e){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/members/permissions`)}apiHealth(e,t,n){let i=`${this.Constants.env.baseURL}/apis/${e}/health`;return void 0!==t&&(i+="?type="+t),void 0!==n&&(i+="&field="+n),this.$http.get(i,{timeout:3e4})}apiHealthLogs(e,t){let n=`${this.Constants.env.baseURL}/apis/${e}/health/logs?`;return Object.keys(t).forEach(e=>{const i=t[e];void 0!==i&&""!==i&&(n+=e+"="+i+"&")}),this.$http.get(n,{timeout:3e4})}getHealthLog(e,t){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/health/logs/${t}`)}apiHealthAverage(e,t){let n=`${this.Constants.env.baseURL}/apis/${e}/health/average?`;return Object.keys(t).forEach(e=>{const i=t[e];void 0!==i&&""!==i&&(n+=e+"="+i+"&")}),this.$http.get(n,{timeout:3e4})}isRatingEnabled(){return this.Constants.env.settings.portal.rating.enabled}getApiRatings(e,t){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/ratings?pageSize=10&pageNumber=${t}`)}getApiRatingForConnectedUser(e){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/ratings/current`)}getApiRatingSummaryByApi(e){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/ratings/summary`)}createRating(e,t){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/ratings`,t)}createRatingAnswer(e,t,n){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/ratings/${t}/answers`,n)}updateRating(e,t){return this.$http.put(`${this.Constants.env.baseURL}/apis/${e}/ratings/${t.id}`,{rate:t.rate,title:t.title,comment:t.comment})}deleteRating(e,t){return this.$http.delete(`${this.Constants.env.baseURL}/apis/${e}/ratings/${t}`)}deleteRatingAnswer(e,t,n){return this.$http.delete(`${this.Constants.env.baseURL}/apis/${e}/ratings/${t}/answers/${n}`)}getQualityMetrics(e){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/quality`)}getQualityMetricCssClass(e){if(void 0!==e)return e<50?"gravitee-qm-score-bad":e>=50&&e<80?"gravitee-qm-score-medium":"gravitee-qm-score-good"}getPortalHeaders(e){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/headers`)}isEndpointNameAlreadyUsed(e,t){const n=[];return e.proxy.groups.forEach(e=>{var t;n.push(e.name),null===(t=e.endpoints)||void 0===t||t.forEach(e=>{n.push(e.name)})}),n.filter(e=>t===e).length>1}askForReview(e,t){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e.id}/reviews?action=ASK`,{message:t},{headers:{"If-Match":this.ngIfMatchEtagInterceptor.getLastEtag("api")}})}acceptReview(e,t){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e.id}/reviews?action=ACCEPT`,{message:t},{headers:{"If-Match":this.ngIfMatchEtagInterceptor.getLastEtag("api")}})}rejectReview(e,t){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e.id}/reviews?action=REJECT`,{message:t},{headers:{"If-Match":this.ngIfMatchEtagInterceptor.getLastEtag("api")}})}verifyApiKey(e,t,n){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/subscriptions/_canCreate`,{params:{key:n,application:t}})}getFlowSchemaForm(){return this.$http.get(this.Constants.env.baseURL+"/apis/schema")}syncV2Api(e){return b(this,void 0,void 0,(function*(){if(this.isV2(e)){const t=yield this.get(e.id);return this.$rootScope.$broadcast("apiChangeSuccess",{api:t.data}),!0}return!1}))}buildURLWithQuery(e,t){return Object.keys(e).forEach(n=>{const i=e[n];void 0!==i&&""!==i&&(t+=n+"="+i+"&")}),t}cloneQuery(e){const t=Object(o.clone)(e);return t.field.startsWith("-")?(t.order=!1,t.field=t.field.substring(1)):t.order=!0,t}isV2(e){return e&&"2.0.0"===e.gravitee}}y.$inject=["$http","$rootScope","Constants","ngIfMatchEtagInterceptor"];class S{constructor(e){this.$mdDialog=e,this.allowOriginPattern="^(?:(?:[htps\\(\\)?\\|]+):\\/\\/)*(?:[\\w\\(\\)\\[\\]\\{\\}?\\|.*-](?:(?:[?+*]|\\{\\d+(?:,\\d*)?\\}))?)+(?:[a-zA-Z0-9]{2,6})?(?::\\d{1,5})?$",this.querySearchHeaders=(e,t)=>e?t.filter(this.createFilterFor(e)):[],this.createFilterFor=e=>{const t=e.toLowerCase();return function(e){return 0===e.toLowerCase().indexOf(t)}}}getHttpMethods(){return["GET","DELETE","PATCH","POST","PUT","OPTIONS","TRACE","HEAD"]}controlAllowOrigin(e,t,i){if("*"===e)this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove all cross-origin restrictions?",confirmButton:"Yes, I want to allow all origins."}}).then(e=>{e||i.splice(t,1)});else{if(!new RegExp(this.allowOriginPattern,"ig").test(e)){let n=!1;if(["{","[","(","*"].some(e=>this.allowOriginPattern.includes(e)))try{new RegExp(e)}catch(e){n=!0}n&&this.$mdDialog.show(this.$mdDialog.alert({title:"Invalid regex",textContent:e+" is not a valid origin",ok:"Close"})).then(()=>{i.splice(t,1)})}}}isRegexValid(e){let t=!0;return e&&e.forEach(e=>{if("*"!==e&&(e.includes("(")||e.includes("[")||e.includes("*")))try{new RegExp(e)}catch(e){t=!1}}),t}}S.$inject=["$mdDialog"];var w=S,C=n(93);class I{}I.LAST_MINUTE={id:"1m",title:"Last minute",range:6e4,interval:2e3},I.LAST_HOUR={id:"1h",title:"Last hour",range:36e5,interval:12e4},I.LAST_DAY={id:"1d",title:"Last day",range:864e5,interval:288e4},I.LAST_WEEK={id:"1w",title:"Last week",range:6048e5,interval:2016e4},I.LAST_MONTH={id:"1M",title:"Last month",range:2592e6,interval:864e5};var $={template:n(674),controller:"QuickTimeRangeController",bindings:{onTimeframeChange:"&"}};n(1304),n(445);class A{constructor(e,t,n){this.apis=e,this.ApiService=t,this.$q=n,this.RED_COLOR="#D9534F",this.ORANGE_COLOR="#F0AD4E",this.GREEN_COLOR="#5CB85C",this.apis=this.apis.sort((e,t)=>(e.name+" "+e.version).localeCompare(t.name+" "+t.version)),this.startedAPIsWithHC=this.apis.filter(e=>this.hasHealthcheck(e)&&"STARTED"===e.state),this.viewAllApis=this.startedAPIsWithHC.length===this.apis.length,this.updateDisplayedApis(),this.timeframeChange(I.LAST_MINUTE)}updateDisplayedApis(){this.viewAllApis?this.displayedApis=this.apis:this.displayedApis=this.startedAPIsWithHC}timeframeChange(e){this.currentTimeframe=e,this.refresh()}refresh(){const e=Date.now();this.query={from:e-this.currentTimeframe.range,to:e,interval:this.currentTimeframe.interval};let t=0,n=0;const i=this.startedAPIsWithHC.map(e=>{const i=[this.ApiService.apiHealthAverage(e.id,Object.assign(Object.assign({},this.query),{type:"AVAILABILITY"})),this.ApiService.apiHealth(e.id,"availability")];return this.$q.all(i).then(i=>{const a=i[0],o=a.data.values,s=a&&a.data&&a.data.timestamp;o&&o.length>0&&o.forEach(t=>{t.buckets.forEach(t=>{if(t){const n=this._getAvailabilitySeries(t),i=this._computeChartData(s,n);e.chartData=i}else delete e.chartData})});const r=i[1];r.data&&r.data.global&&(e.availability=r.data.global[this.currentTimeframe.id],e.availability>=0&&(e.availability<=80?t++:e.availability<=95&&n++,e.uptimeSeries=this._getApiAvailabilityForGauge(e.availability)))})});this.$q.all(i).then(()=>{this.apisInError=t,this.apisInWarning=n})}hasHealthcheck(e){return e.healthcheck_enabled}isInError(e){return this.hasHealthcheck(e)&&e.availability>=0&&e.availability<=80&&"STARTED"===e.state}isInWarning(e){return this.hasHealthcheck(e)&&e.availability>80&&e.availability<=95&&"STARTED"===e.state}isStopped(e){return"STOPPED"===e.state}getPictureDisplayName(e){return Object(C.e)(e)}_getApiAvailabilityForGauge(e){const t=Math.round(100*e)/100;let n;return n=t<=80?this.RED_COLOR:t<=95?this.ORANGE_COLOR:this.GREEN_COLOR,[{name:"Availability",data:[{color:n,radius:"112%",innerRadius:"88%",y:t}],dataLabels:[{enabled:!0,align:"center",verticalAlign:"middle",format:"{point.y}%",borderWidth:0,style:{fontSize:"12px"}}]}]}_computeChartData(e,t){return{plotOptions:{series:{pointStart:e&&e.from,pointInterval:e&&e.interval}},series:t,legend:{enabled:!1},xAxis:{type:"datetime",dateTimeLabelFormats:{month:"%e. %b",year:"%b"}},yAxis:[{visible:!1,max:100}]}}_getAvailabilitySeries(e){return[{name:"Availability",data:e.data,color:"#5CB85C",type:"column",labelSuffix:"%",decimalFormat:!0,zones:[{value:80,color:this.RED_COLOR},{value:95,color:this.ORANGE_COLOR},{color:this.GREEN_COLOR}]}]}}A.$inject=["apis","ApiService","$q"];var O=A;class T{constructor(e,t,n,i,a,o,s,r,l,c,d,p,m){this.resolvedApi=e,this.resolvedApiGroups=t,this.$state=n,this.$scope=i,this.$rootScope=a,this.$mdDialog=o,this.ApiService=s,this.NotificationService=r,this.resolvedApiState=l,this.UserService=c,this.Constants=d,this.FlowService=p,this.ngIfMatchEtagInterceptor=m,this.$scope=i,this.$state=n,this.$mdDialog=o,this.$rootScope=a,this.hasPlatformPolicies=!1,this.api=e.data,this.ngIfMatchEtagInterceptor.updateLastEtag("api",e.headers("etag")),this.resolvedApiGroups=t,this.ApiService=s,this.NotificationService=r,this.UserService=c,this.apiJustDeployed=!1,this.apiIsSynchronized=l.data.is_synchronized,this.init()}init(){this.$scope.$on("apiPictureChangeSuccess",(e,t)=>{this.api.picture=t.image,this.api.picture_url=t.imageUrl,this.update(this.api)}),this.$scope.$on("apiBackgroundChangeSuccess",(e,t)=>{this.api.background=t.image,this.api.background_url=t.imageUrl,this.update(this.api)}),this.$scope.$on("apiChangeSuccess",(e,t)=>{this.api=t.api,this.checkAPISynchronization(this.api)}),this.FlowService.getConfiguration().then(e=>{this.hasPlatformPolicies=e.data.has_policies})}checkAPISynchronization(e){this.ApiService.isAPISynchronized(e.id).then(e=>{this.apiJustDeployed=!1,this.apiIsSynchronized=!!e.data.is_synchronized,this.$rootScope.$broadcast("checkAPISynchronizationSucceed")})}showDeployAPIConfirm(e,t){const i=this.hasPlatformPolicies?'<div class="gv-deploy-info"><p>Some policies are defined on the platform and may conflict with your API policies on flows.</p><p>Contact your administrator for further information.</p></div>':null;this.$mdDialog.show({controller:"DialogConfirmDeploymentController",controllerAs:"ctrl",template:n(676),clickOutsideToClose:!0,locals:{title:"Would you like to deploy your API?",msg:"You can provide a label to identify your deployment",confirmButton:"OK",more:i}}).then(e=>{(e||""===e)&&this.deploy(t,e)})}showReviewConfirm(e,t){e.stopPropagation(),this.$mdDialog.show({controller:"DialogReviewController",controllerAs:"$ctrl",template:n(677),clickOutsideToClose:!0,locals:{api:t},resolve:{qualityRules:["QualityRuleService",e=>e.list().then(e=>e.data)],apiQualityRules:["QualityRuleService",e=>e.listByApi(t.id).then(e=>e.data)]}}).then(e=>{e&&(e.accept?this.ApiService.acceptReview(t,e.message).then(e=>{this.api.workflow_state="REVIEW_OK",this.ngIfMatchEtagInterceptor.updateLastEtag("api",e.headers("etag")),this.NotificationService.show("Changes accepted for API "+this.api.name),this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api})}):this.ApiService.rejectReview(t,e.message).then(e=>{this.api.workflow_state="REQUEST_FOR_CHANGES",this.ngIfMatchEtagInterceptor.updateLastEtag("api",e.headers("etag")),this.NotificationService.show("Changes rejected for API "+this.api.name),this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api})}))})}deploy(e,t){this.ApiService.deploy(e.id,{deploymentLabel:t}).then(t=>{this.NotificationService.show("API deployed"),this.api=t.data,this.ngIfMatchEtagInterceptor.updateLastEtag("api",t.headers("etag")),this.api.picture_url=e.picture_url,this.apiJustDeployed=!0,this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api})})}update(e){this.ApiService.update(e).then(e=>{this.api=e.data,this.ngIfMatchEtagInterceptor.updateLastEtag("api",e.headers("etag")),this.NotificationService.show("API '"+this.api.name+"' saved"),this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api})})}canDeploy(){return!this.Constants.env.settings.apiReview.enabled||(!this.api.workflow_state||"REVIEW_OK"===this.api.workflow_state)}canReview(){return this.Constants.env.settings.apiReview.enabled&&"IN_REVIEW"===this.api.workflow_state}canTransferOwnership(){return this.UserService.currentUser.isOrganizationAdmin()||this.UserService.currentUser.allowedTo(["api-member-u"])}isAdmin(){return"ADMIN"===this.UserService.currentUser.roles.ORGANIZATION||"ADMIN"===this.UserService.currentUser.roles.ENVIRONMENT}isRequestForChanges(){return this.Constants.env.settings.apiReview.enabled&&"REQUEST_FOR_CHANGES"===this.api.workflow_state}isInDraft(){return this.Constants.env.settings.apiReview.enabled&&"DRAFT"===this.api.workflow_state}isReviewOK(){return this.Constants.env.settings.apiReview.enabled&&"REVIEW_OK"===this.api.workflow_state}isDeprecated(){return"DEPRECATED"===this.api.lifecycle_state}showRequestForChangesConfirm(){this.$mdDialog.show({controller:"DialogRequestForChangesController",controllerAs:"$ctrl",template:n(678),clickOutsideToClose:!0}).then(e=>{e&&this.ApiService.rejectReview(this.api,e.message).then(e=>{this.api.workflow_state="REQUEST_FOR_CHANGES",this.ngIfMatchEtagInterceptor.updateLastEtag("api",e.headers("etag")),this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api}),this.NotificationService.show("Changes has been requested for API "+this.api.name)})})}}T.$inject=["resolvedApi","resolvedApiGroups","$state","$scope","$rootScope","$mdDialog","ApiService","NotificationService","resolvedApiState","UserService","Constants","FlowService","ngIfMatchEtagInterceptor"];var R=T;class _{constructor(e,t,n,i,a){this.ApiService=e,this.resolvedApi=t,this.dashboards=n,this.$scope=i,this.$state=a,this.ApiService=e,this.$scope=i,this.api=t.data,this.dashboards=o.filter(this.dashboards,"enabled");const s=this.$state.params.dashboard;s?(this.dashboard=o.find(this.dashboards,{id:s}),this.dashboard||(delete this.$state.params.dashboard,this.$state.go(this.$state.current))):this.dashboard=this.dashboards[0],o.forEach(this.dashboards,e=>{e.definition&&(e.definition=JSON.parse(e.definition)),o.forEach(e.definition,e=>{o.merge(e,{root:this.api.id,chart:{service:{caller:this.ApiService,function:this.ApiService.analytics}}})})})}viewLogs(){this.$state.transitionTo("management.apis.detail.analytics.logs.list",this.$state.params)}onDashboardChanged(){this.$scope.$broadcast("dashboardReload"),this.setDashboard(this.dashboard.id)}setDashboard(e){this.$state.transitionTo(this.$state.current,o.merge(this.$state.params,{dashboard:e}),{reload:!0})}}_.$inject=["ApiService","resolvedApi","dashboards","$scope","$state"];var x=_;class L{constructor(e,t,n,i,a,s,r,l,c,d){this.ApiService=e,this.resolvedMembers=t,this.resolvedGroups=n,this.resolvedApiGroups=i,this.$mdDialog=a,this.NotificationService=s,this.$scope=r,this.UserService=l,this.GroupService=c,this.RoleService=d,this.api=this.$scope.$parent.apiCtrl.api,this.members=t.data,this.newPrimaryOwner=null,this.$scope.searchText="",this.groupById=o.keyBy(n,"id"),this.displayGroups={},o.forEach(n,e=>{this.displayGroups[e.id]=!1}),this.groupMembers={},this.groupIdsWithMembers=[],this.api.groups&&this.UserService.isUserHasPermissions(["api-member-r"])&&e.getGroupsWithMembers(this.api.id).then(({data:e})=>{this.groupMembers=e,this.groupIdsWithMembers=Object.keys(e)}),d.list("API").then(e=>{this.roles=e,this.newPORoles=o.filter(e,e=>"PRIMARY_OWNER"!==e.name),this.newPORole=o.find(e,e=>e.default)})}updateMember(e){e.role&&this.ApiService.addOrUpdateMember(this.api.id,o.pick(e,["id","reference","role"])).then(()=>{this.NotificationService.show("Member "+e.displayName+" has been updated with role "+e.role)})}deleteMember(e){const t=this.members.indexOf(e);this.ApiService.deleteMember(this.api.id,e.id).then(()=>{this.members.splice(t,1),this.NotificationService.show("Member "+e.displayName+" has been removed")})}isPrimaryOwner(){return this.UserService.currentUser.id===this.api.owner.id}showAddMemberModal(e){this.$mdDialog.show({controller:"DialogAddMemberApiController",template:n(679),parent:a.a.element(document.body),targetEvent:e,clickOutsideToClose:!0,locals:{api:this.api,members:this.members}}).then(e=>{e&&this.ApiService.getMembers(e.id).then(e=>{this.members=e.data})},()=>{})}showDeleteMemberConfirm(e,t){e.stopPropagation(),this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(184),clickOutsideToClose:!0,locals:{title:"Would you like to remove the member?",confirmButton:"Remove"}}).then(e=>{e&&this.deleteMember(t)})}getMembershipDisplay(e){return e.displayName?e.username?e.displayName+" ("+e.username+")":e.displayName:e.username}getMembershipAvatar(e){return e.id?this.UserService.getUserAvatar(e.id):"assets/default_photo.png"}toggleDisableMembershipNotifications(){this.ApiService.update(this.api).then(e=>{this.api=e.data,this.NotificationService.show("API "+this.api.name+" has been updated")})}}L.$inject=["ApiService","resolvedMembers","resolvedGroups","resolvedApiGroups","$mdDialog","NotificationService","$scope","UserService","GroupService","RoleService"];var P=L;class N{constructor(e,t,n,i,a,s,r,l,c,d,p,m,u){this.ApiService=e,this.ApiPrimaryOwnerModeService=t,this.resolvedApi=n,this.resolvedMembers=i,this.resolvedGroups=a,this.$state=s,this.$mdDialog=r,this.NotificationService=l,this.$scope=c,this.UserService=d,this.GroupService=p,this.RoleService=m,this.Constants=u,this.usersSelected=[],this.api=n.data,this.poGroups=this.resolvedGroups.filter(e=>null!=e.apiPrimaryOwner),"GROUP"===this.api.owner.type&&(this.poGroups=this.poGroups.filter(e=>e.id!==this.api.owner.id)),this.useGroupAsPrimaryOwner=this.ApiPrimaryOwnerModeService.isGroupOnly(),this.members=i.data,this.groupById=o.keyBy(a,"id"),this.displayGroups={},o.forEach(a,e=>{this.displayGroups[e.id]=!1}),e.getGroupsWithMembers(this.api.id).then(({data:e})=>{this.groupIdsWithMembers=e}),m.list("API").then(e=>{this.roles=e,this.newPORoles=o.filter(e,e=>"PRIMARY_OWNER"!==e.name),this.newPORole=o.find(e,e=>e.default)})}$onInit(){this.userFilterFn=e=>void 0===e.id||-1===o.findIndex(this.members,t=>t.id===e.id&&"PRIMARY_OWNER"===t.role),this.defaultUsersList=o.filter(this.members,e=>"PRIMARY_OWNER"!==e.role&&"USER"===e.type)}showTransferOwnershipConfirm(e){this.$mdDialog.show({controller:"DialogTransferApiController",controllerAs:"$ctrl",template:n(680),parent:a.a.element(document.body),targetEvent:e,clickOutsideToClose:!0,locals:{newRole:this.newPORole}}).then(e=>{var t;e&&this.transferOwnership(null===(t=this.newPORole)||void 0===t?void 0:t.name)},()=>{})}isAllowedToTransferOwnership(){return this.UserService.currentUser.isOrganizationAdmin()||this.UserService.currentUser.allowedTo(["api-member-u"])}canUseGroupAsPrimaryOwner(){return this.ApiPrimaryOwnerModeService.isGroupOnly()||this.ApiPrimaryOwnerModeService.isHybrid()&&this.poGroups&&this.poGroups.length>0}transferOwnership(e){let t;t=this.useGroupAsPrimaryOwner?{id:this.newPrimaryOwnerGroup,reference:null,role:e,type:"GROUP"}:{id:this.usersSelected[0].id,reference:this.usersSelected[0].reference,role:e,type:"USER"},this.ApiService.transferOwnership(this.api.id,t).then(()=>{this.NotificationService.show("API ownership changed !"),this.$state.go("management.apis.list")})}}N.$inject=["ApiService","ApiPrimaryOwnerModeService","resolvedApi","resolvedMembers","resolvedGroups","$state","$mdDialog","NotificationService","$scope","UserService","GroupService","RoleService","Constants"];var E=N;class D{constructor(e,t,n,i,a,s,r,l,c,d,p){this.ApiService=e,this.PolicyService=t,this.$mdDialog=n,this.NotificationService=i,this.$scope=a,this.dragularService=s,this.$q=r,this.$rootScope=l,this.StringService=c,this.UserService=d,this.$state=p,this.pathsInitialized=[],this.dndEnabled=d.isUserHasPermissions(["api-definition-u"]),this.apiPoliciesByPath={},this.policiesToCopy=[],this.policiesMap={},this.selectedApiPolicy={},this.httpMethods=["GET","POST","PUT","DELETE","HEAD","PATCH","OPTIONS","TRACE","CONNECT"],this.httpMethodsFilter=o.clone(this.httpMethods),this.httpMethodsUpdated=!1,this.schemaByPolicyId={},this.listAllPolicies().then(e=>{o.forEach(e,({policy:e})=>{this.policiesToCopy.push(e),this.policiesMap[e.policyId]=e}),o.forEach(this.$scope.$parent.apiCtrl.api.paths,(e,t)=>{this.apiPoliciesByPath[t]=o.cloneDeep(e)}),this.completeApiPolicies(this.apiPoliciesByPath),this.initDragular(),this.pathsToCompare=this.generatePathsToCompare()}),this.$scope.$on("dragulardrop",(e,t,n,i,a,o,s,r)=>{null!==s?this.editPolicy(r,n.attributes["data-path"].value).then(e=>{"empty"===e.id&&this.savePaths()}):this.savePaths()})}generatePathsToCompare(){return o.map(o.keys(this.apiPoliciesByPath),e=>this.clearPathParam(e))}completeApiPolicies(e){o.forEach(e,e=>{o.forEach(e,e=>{o.forEach(e,(t,n)=>{if("methods"!==n&&"enabled"!==n&&"description"!==n&&"$$hashKey"!==n){e.policyId=n;const t=this.policiesMap[e.policyId];t&&(e.name=t.name,e.type=t.type,e.version=t.version,e.schema=t.schema)}}),e.methods?e.methods=o.map(e.methods,e=>e.toUpperCase()):e.methods=o.clone(this.httpMethods)})})}initDragular(){const e=document.querySelector(".gravitee-policy-draggable");this.dragularService([e],{moves:function(){return!0},copy:!0,scope:this.$scope,containersModel:this.policiesToCopy,classes:{unselectable:"gravitee-policy-draggable-selected"},nameSpace:"policies",accepts:this.acceptDragDrop})}initDragularDropZone(e){if(!this.pathsInitialized[e]){const t=document.querySelector(".dropzone-"+this.StringService.hashCode(e));t&&(this.dragularService([t],{moves:function(){return!0},copy:!1,scope:this.$scope,containersModel:this.apiPoliciesByPath[e],classes:{unselectable:"gravitee-policy-draggable-selected"},nameSpace:"policies",accepts:this.acceptDragDrop}),this.pathsInitialized[e]=!0)}}listAllPolicies(){return this.PolicyService.list({expandSchema:!0}).then(e=>o.map(e.data,e=>({policy:{policyId:e.id,methods:this.httpMethods,version:e.version,name:e.name,type:e.type,description:e.description,enabled:e.enabled||!0}})))}acceptDragDrop(e,t,n){return n===document.querySelector(".gravitee-policy-draggable")||n===t}editPolicy(e,t){return this.$scope.policyJsonSchemaForm=["*"],this.selectedApiPolicy=this.apiPoliciesByPath[t][e],void 0===this.schemaByPolicyId[this.selectedApiPolicy.policyId]?this.PolicyService.getSchema(this.selectedApiPolicy.policyId).then(e=>(this.$scope.policyJsonSchema=this.schemaByPolicyId[this.selectedApiPolicy.policyId]=e.data,this.selectedApiPolicy[this.selectedApiPolicy.policyId]=this.selectedApiPolicy[this.selectedApiPolicy.policyId]||{},this.checkEmptySchema(),this.$scope.policyJsonSchema)):this.$q(()=>(this.$scope.policyJsonSchema=this.schemaByPolicyId[this.selectedApiPolicy.policyId],this.selectedApiPolicy[this.selectedApiPolicy.policyId]=this.selectedApiPolicy[this.selectedApiPolicy.policyId]||{},this.checkEmptySchema(),this.$scope.policyJsonSchema))}getHttpMethodClass(e,t){return"gravitee-policy-method-badge-"+e+(t.indexOf(e)>-1?"-selected":"-unselected")}getApiPolicyClass(e){const t=[],n=this.selectedApiPolicy&&this.selectedApiPolicy.$$hashKey===e.$$hashKey;return n&&t.push("gravitee-policy-card-selected"),n||e.enabled||t.push("gravitee-policy-card-disabled"),e.name||t.push("gravitee-policy-card-missed"),t.join(" ")}getDropzoneClass(e){return"gravitee-policy-dropzone gravitee-policy-dropzone-filled dropzone-"+this.StringService.hashCode(e)}toggleHttpMethod(e,t){this.httpMethodsUpdated=!0;const n=t.indexOf(e);n>-1?t.splice(n,1):t.push(e)}filterByMethod(e){return o.reduce(o.map(e.methods,e=>this.httpMethodsFilter.indexOf(e)<0),(e,t)=>e&&t)}removePolicy(e,t,i){i.stopPropagation(),this.selectedApiPolicy=null;const a=this.apiPoliciesByPath[t][e].$$hashKey;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove this policy?",confirmButton:"Remove"}}).then(e=>{e&&(o.forEach(this.apiPoliciesByPath[t],(e,n)=>{if(e.$$hashKey===a)return this.apiPoliciesByPath[t].splice(n,1),!1}),this.savePaths())})}editPolicyDescription(e,t,i){i.stopPropagation(),this.selectedApiPolicy=null;const a=this.apiPoliciesByPath[t][e];this.$mdDialog.show({controller:"DialogEditPolicyController",controllerAs:"editPolicyDialogCtrl",template:n(413),clickOutsideToClose:!0,locals:{description:a.description}}).then(e=>{a.description=e,this.savePaths()},()=>{})}switchPolicyEnabled(e,t,n){n.stopPropagation(),this.selectedApiPolicy=null;const i=this.apiPoliciesByPath[t][e];i.enabled=!i.enabled,this.savePaths()}savePaths(){this.$scope.$parent.apiCtrl.api.paths=o.cloneDeep(this.apiPoliciesByPath),o.forEach(this.$scope.$parent.apiCtrl.api.paths,e=>{o.forEach(e,e=>{delete e.policyId,delete e.name,delete e.type,delete e.version,delete e.schema,o.forOwn(e,e=>{o.forOwn(e,e=>{o.isArray(e)&&o.remove(e,e=>void 0===e||""===e)})})})});const e=this.$scope.$parent.apiCtrl.api;return this.ApiService.update(e).then(e=>{this.NotificationService.show("API '"+e.data.name+"' saved"),this.pathsToCompare=this.generatePathsToCompare(),this.httpMethodsUpdated=!1,this.$rootScope.$broadcast("apiChangeSuccess",{api:e.data})})}showAddPathModal(e){this.$mdDialog.show({controller:"AddPoliciesPathController",controllerAs:"addPoliciesPathCtrl",template:n(681),parent:a.a.element(document.body),targetEvent:e,clickOutsideToClose:!0,locals:{paths:this.apiPoliciesByPath,rootCtrl:this}}).then(e=>{this.apiPoliciesByPath=e,this.savePaths()})}migrateApiToPolicyStudio(){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to migrate to Policy Studio?",msg:"The migration process will save the API definition, but it will not be deployed. You can still do a rollback from history.",confirmButton:"Yes, I want to migrate"}}).then(e=>{e&&this.ApiService.migrateApiToPolicyStudio(this.$scope.$parent.apiCtrl.api.id).then(e=>{this.$state.go("management.apis.detail.design.flows",{apiId:e.data.id},{reload:!0})})})}removePath(e){this.selectedApiPolicy={},this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove this path?",confirmButton:"Remove"}}).then(t=>{t&&(delete this.apiPoliciesByPath[e],this.pathsInitialized[e]=!1,this.savePaths())})}pathNotExists(e,t){return!e||""===e.trim()||(!(!t||this.clearPathParam(e)!==this.clearPathParam(this.sortedPaths()[t]))||!o.includes(this.pathsToCompare,this.clearPathParam(e)))}pathStartWithSlash(e){return!e||""===e.trim()||"/"===e[0]}clearPathParam(e){return"/"===e?"/":e.trim().replace(/(:.*?\/)|(:.*$)/g,":x/").replace(/\/+$/,"")}sortedPaths(){const e=o.keys(this.apiPoliciesByPath);return o.sortBy(e,e=>this.clearPathParam(e))}pathKeyPress(e,t,n,i){switch(e.keyCode){case 13:if(!t.$invalid){const e=this.sortedPaths()[i];this.apiPoliciesByPath[n]=this.apiPoliciesByPath[e],delete this.apiPoliciesByPath[e],this.savePaths()}break;case 27:this.restoreOldPath(i,t)}}restoreOldPath(e,t){t.$setViewValue(this.sortedPaths()[e]),t.$commitViewValue(),document.forms.editPathForm["path"+e].value=this.sortedPaths()[e]}checkEmptySchema(){this.$scope.policyJsonSchema&&0!==Object.keys(this.$scope.policyJsonSchema).length||(this.$scope.policyJsonSchema={type:"object",id:"empty",properties:{"":{}}}),this.httpMethodsUpdated=!1}}D.$inject=["ApiService","PolicyService","$mdDialog","NotificationService","$scope","dragularService","$q","$rootScope","StringService","UserService","$state"];var j=D;class k{constructor(e,t){this.$mdDialog=e,this.locals=t,this.paths=t.paths,this.rootCtrl=t.rootCtrl,this.canCopyFromRootPath=void 0!==this.paths["/"],this.newPath={path:"",copyFromRootPath:this.canCopyFromRootPath}}hide(){this.$mdDialog.cancel()}add(){this.newPath.copyFromRootPath?(this.paths[this.newPath.path]=o.cloneDeep(this.paths["/"]),o.forEach(this.paths[this.newPath.path],e=>{delete e.$$hashKey})):this.paths[this.newPath.path]=[],this.$mdDialog.hide(this.paths)}}k.$inject=["$mdDialog","locals"];var U=k;class M{constructor(e,t,n,i,a,o,s,r,l){this.ApiService=e,this.$mdSidenav=t,this.$mdDialog=n,this.ResourceService=i,this.NotificationService=a,this.$scope=o,this.$rootScope=s,this.resolvedResources=r,this.$timeout=l,this.creation=!0,this.resourceJsonSchemaForm=["*"],this.types=r.data}initState(){void 0!==this.resource?this.$scope.resourceEnabled=this.resource.enabled:this.$scope.resourceEnabled=!1}switchEnabled(){void 0===this.resource&&(this.resource={}),this.resource.enabled=this.$scope.resourceEnabled,this.updateApi()}showResourcePanel(e){this.$mdSidenav("resource-config").toggle(),e?(this.creation=!1,this.resource=e,this.resource.configuration||(this.resource.configuration={}),this.ResourceService.getSchema(this.resource.type).then(({data:e})=>(this.resourceJsonSchema=e,{schema:e}),e=>{if(404===e.status)return{schema:{}};this.NotificationService.showError("Unexpected error while loading resource schema for "+this.resource.type)})):(this.resourceJsonSchema={},this.creation=!0,this.resource={},this.resource.configuration={},this.resource.enabled=!0),this.initState()}closeResourcePanel(){this.$mdSidenav("resource-config").close()}onTypeChange(){this.resource.configuration={},this.ResourceService.getSchema(this.resource.type).then(({data:e})=>(this.resourceJsonSchema=e,{schema:e}),e=>{if(404===e.status)return this.resourceJsonSchema={},{schema:{}};this.NotificationService.showError("Unexpected error while loading resource schema for "+this.resource.type)})}deleteResource(e){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove this resource?",msg:"",confirmButton:"Remove"}}).then(t=>{t&&(this.$scope.$parent.apiCtrl.api.resources.splice(e,1),this.updateApi())})}saveResource(){delete this.resource.$$hashKey,this.creation&&this.$scope.$parent.apiCtrl.api.resources.push(this.resource),this.updateApi()}updateApi(){let e=this.$scope.$parent.apiCtrl.api;return this.ApiService.update(e).then(({data:t})=>{this.closeResourcePanel(),this.$rootScope.$broadcast("apiChangeSuccess",{api:t}),this.NotificationService.show("API '"+t.name+"' saved"),this.$timeout(()=>{e=t})})}getResourceTypeName(e){return o.find(this.types,{id:e}).name}}M.$inject=["ApiService","$mdSidenav","$mdDialog","ResourceService","NotificationService","$scope","$rootScope","resolvedResources","$timeout"];var F=M;function q(e,t,n){e.path=n,this.hide=function(){t.hide()},this.save=function(){t.hide(e.path)}}q.$inject=["$scope","$mdDialog","pathMapping"];var H=q;function G(e,t,n){e.docs=n,this.hide=function(){t.hide()},this.save=function(){t.hide(e.selectedDoc)}}G.$inject=["$scope","$mdDialog","docs"];var B,W,V,Y=G;class z{}class K{}!function(e){e.HEADER="Header",e.TOPFOOTER="TopFooter",e.FOOTER="Footer",e.ASIDE="Aside"}(B||(B={})),function(e){e.ASCIIDOC="ASCIIDOC",e.ASYNCAPI="ASYNCAPI",e.FOLDER="FOLDER",e.LINK="LINK",e.SWAGGER="SWAGGER",e.MARKDOWN="MARKDOWN",e.MARKDOWN_TEMPLATE="MARKDOWN_TEMPLATE"}(W||(W={})),function(e){e[e.SYSTEM_FOLDER=0]="SYSTEM_FOLDER",e[e.SYSTEM_FOLDER_WITH_FOLDERS=1]="SYSTEM_FOLDER_WITH_FOLDERS",e[e.FOLDER_IN_SYSTEM_FOLDER=2]="FOLDER_IN_SYSTEM_FOLDER",e[e.ROOT=3]="ROOT",e[e.FOLDER_IN_FOLDER=4]="FOLDER_IN_FOLDER"}(V||(V={}));class Q{constructor(e,t,n){this.$http=e,this.$q=t,this.Constants=n}buildPageList(e,t,n){const i=null==e?void 0:e.filter(e=>"ASCIIDOC"===e.type||"ASYNCAPI"===e.type||"MARKDOWN"===e.type||"SWAGGER"===e.type||"FOLDER"===e.type&&n!==V.FOLDER_IN_SYSTEM_FOLDER).sort((e,t)=>{let n=0;const i=e.parentPath+"/"+e.name,a=t.parentPath+"/"+t.name;return i>a?n=1:i<a&&(n=-1),n});return t&&(null==i||i.unshift({id:"root",name:"",type:"FOLDER",fullPath:""})),i}url(e,t,n){return e?`${this.Constants.env.baseURL}/apis/${e}/pages/`+(n?"_import":"")+(t||""):this.Constants.env.baseURL+"/portal/pages/"+(n?"_import":"")+(t||"")}supportedTypes(e){switch(e){case V.ROOT:return[W.ASCIIDOC,W.ASYNCAPI,W.SWAGGER,W.MARKDOWN,W.MARKDOWN_TEMPLATE,W.FOLDER];case V.SYSTEM_FOLDER:return[W.LINK];case V.SYSTEM_FOLDER_WITH_FOLDERS:return[W.FOLDER,W.LINK];case V.FOLDER_IN_FOLDER:return[W.ASCIIDOC,W.ASYNCAPI,W.SWAGGER,W.MARKDOWN,W.MARKDOWN_TEMPLATE,W.FOLDER];case V.FOLDER_IN_SYSTEM_FOLDER:return[W.LINK]}}getFolder(e,t,n){if(n){let i=t[n];return i||(i=e[n]),i}}getFolderSituation(e,t,n){if(!n)return V.ROOT;if(e[n])return B.TOPFOOTER===e[n].name?V.SYSTEM_FOLDER_WITH_FOLDERS:V.SYSTEM_FOLDER;if(t[n]){return e[t[n].parentId]?V.FOLDER_IN_SYSTEM_FOLDER:V.FOLDER_IN_FOLDER}}partialUpdate(e,t,n,i){const a={};return a[e]=t,this.$http.patch(this.url(i,n),a)}search(e,t,n){let i=this.url(t);if(e||n){const t=[];if(e){const n=Object.keys(e);null==n||n.forEach(n=>{const i=e[n];void 0!==i&&""!==i&&t.push(n+"="+i)})}n&&t.push("translated="+n),i+="?"+t.join("&")}return this.$http.get(i)}remove(e,t){return this.$http.delete(this.url(t,e))}create(e,t,n){return this.$http.post(this.url(t),e,n)}update(e,t,n){return this.$http.put(this.url(t,e.id),{name:e.name,description:e.description,order:e.order,content:e.content||"",source:e.source,published:e.published,visibility:e.visibility,homepage:e.homepage,configuration:e.configuration,attached_media:e.attached_media,parentId:e.parentId,accessControls:e.accessControls,excludedAccessControls:e.excludedAccessControls},n)}get(e,t,n,i){if(t){const a=this.url(e,t),o={};return n&&void 0!==n&&(o.portal=n),i&&(o.translated=i),this.$http.get(a,{params:o})}}getApiHomepage(e){const t=this.$q.defer();return this.$http.get(this.url(e),{params:{homepage:!0}}).then(n=>{n.data.length>0?this.get(e,n.data[0].id,!0).then(e=>t.resolve(e)):t.resolve({})}).catch(e=>t.reject(e)),t.promise}import(e,t){const n=new K;return n.type=e.type,n.published=e.published,n.lastContributor=e.lastContributor,n.source=e.source,n.configuration=e.configuration,n.excluded_groups=e.excluded_groups,n.excludedAccessControls=e.excludedAccessControls,n.accessControls=e.accessControls,this.$http.post(this.url(t,null,!0),n,{timeout:3e4})}fetch(e,t){return this.$http.post(this.url(t,e)+"/_fetch",null,{timeout:3e4})}fetchAll(e){return this.$http.post(this.url(e)+"_fetch",null,{timeout:3e4})}addMedia(e,t,n){return this.$http.post(this.url(n,t)+"/media",e,{headers:{"Content-Type":void 0}})}getMedia(e,t){return this.$http.get(this.url(t,e)+"/media")}}Q.$inject=["$http","$q","Constants"];class J{constructor(e,t,n,i,a,s,r,l,c,d,p){this.ApiService=e,this.resolvedApi=t,this.$mdSidenav=n,this.$mdEditDialog=i,this.$mdDialog=a,this.NotificationService=s,this.$scope=r,this.$rootScope=l,this.$state=d,this.ngIfMatchEtagInterceptor=p,this.api=this.$scope.$parent.apiCtrl.api,this.api.path_mappings=o.sortBy(this.api.path_mappings);const m=new z;m.type="SWAGGER",c.search(m,this.api.id).then(e=>{this.swaggerDocs=e.data}),this.$scope.$on("apiChangeSuccess",(e,t)=>{this.api=t.api})}update(){this.ApiService.update(this.api).then(e=>{this.onSave(e)},()=>{this.$state.reload()})}showSavePathMappingDialog(e){this.$mdDialog.show({controller:H,controllerAs:"$ctrl",template:n(682),clickOutsideToClose:!0,locals:{pathMapping:this.api.path_mappings[e]}}).then(t=>{if(t&&!o.includes(this.api.path_mappings,t)){const n=void 0===e?this.api.path_mappings.length:e;this.api.path_mappings[n]=t,this.update()}},()=>{})}showImportPathMappingDialog(){this.$mdDialog.show({controller:Y,controllerAs:"$ctrl",template:n(683),clickOutsideToClose:!0,locals:{docs:this.swaggerDocs}}).then(e=>{e&&this.ApiService.importPathMappings(this.api.id,e,this.api.gravitee).then(e=>{this.onSave(e)})},()=>{})}delete(e){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove mapping path ["+this.api.path_mappings[e]+"]?",msg:"",confirmButton:"Remove"}}).then(t=>{t&&(this.api.path_mappings.splice(e,1),this.update())})}onSave(e){this.api=e.data,this.api.path_mappings=o.sortBy(this.api.path_mappings),this.ngIfMatchEtagInterceptor.updateLastEtag("api",e.headers("etag")),this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api}),this.NotificationService.show("API '"+this.$scope.$parent.apiCtrl.api.name+"' saved")}}J.$inject=["ApiService","resolvedApi","$mdSidenav","$mdEditDialog","$mdDialog","NotificationService","$scope","$rootScope","DocumentationService","$state","ngIfMatchEtagInterceptor"];var X=J;class Z{constructor(e,t,n,i,a,s,r,l,c){this.ApiService=e,this.resolvedApi=t,this.$mdSidenav=n,this.$mdEditDialog=i,this.$mdDialog=a,this.NotificationService=s,this.$scope=r,this.$rootScope=l,this.ngIfMatchEtagInterceptor=c,this.selectedProperties={},this.dynamicPropertyProviders=[{id:"HTTP",name:"Custom (HTTP)"}],this.api=this.$scope.$parent.apiCtrl.api,this.$mdSidenav=n,this.$mdEditDialog=i,this.editor=void 0,this.joltSpecificationOptions={placeholder:"Edit your JOLT specification here.",lineWrapping:!0,lineNumbers:!0,allowDropFileTypes:!0,autoCloseTags:!0,mode:"javascript",controller:this},this.requestBodyOptions={lineWrapping:!0,lineNumbers:!0,allowDropFileTypes:!0,autoCloseTags:!0,controller:this},this._initialDynamicPropertyService=o.cloneDeep(this.api.services&&this.api.services["dynamic-property"]),this.dynamicPropertyService=o.cloneDeep(this._initialDynamicPropertyService),void 0!==this.dynamicPropertyService?this.$scope.dynamicPropertyEnabled=this.dynamicPropertyService.enabled:this.$scope.dynamicPropertyEnabled=!1,this.$scope.$on("apiChangeSuccess",(e,t)=>{this.api=t.api})}hasPropertiesDefined(){return this.api.properties&&Object.keys(this.api.properties).length>0}deleteProperty(e){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove property ["+e+"]?",msg:"",confirmButton:"Remove"}}).then(t=>{t&&(o.remove(this.api.properties,t=>t.key===e),this.update())})}showPropertyModal(){this.$mdDialog.show({controller:"DialogAddPropertyController",controllerAs:"dialogAddPropertyCtrl",template:n(684),clickOutsideToClose:!0}).then(e=>{void 0===this.api.properties&&(this.api.properties=[]),e&&(this.api.properties.push(e),this.update())})}updateSchedule(e){e.target.valid?(this.dynamicPropertyService.schedule=e.target.value,this.$scope.formDynamicProperties.$invalid=!1):this.$scope.formDynamicProperties.$invalid=!0,this.$scope.formDynamicProperties.$pristine=!1}update(){return this.api.services["dynamic-property"]=this.dynamicPropertyService,this.ApiService.update(this.api).then(e=>{this.api=e.data,this.ngIfMatchEtagInterceptor.updateLastEtag("api",e.headers("etag")),this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api}),this.NotificationService.show("API '"+this.$scope.$parent.apiCtrl.api.name+"' saved")})}editValue(e,t){e.stopPropagation(),this.$mdEditDialog.small({modelValue:t.value,placeholder:"Set property value",save:e=>{t.value=e.$modelValue,t.dynamic=!1,this.update()},targetEvent:e,validators:{"md-maxlength":160}})}switchEnabled(){void 0===this.dynamicPropertyService&&(this.dynamicPropertyService={}),this.dynamicPropertyService.enabled=this.$scope.dynamicPropertyEnabled,this.update()}open(){this.$mdSidenav("dynamic-properties-config").open().then(()=>{this.editor&&this.editor.setSize("100%","100%")})}close(){this.$mdSidenav("dynamic-properties-config").close()}codemirrorLoaded(e){this.controller.editor=e;this.controller.editor.getDoc().markClean()}showExpectedProviderOutput(){this.$mdDialog.show({controller:"DialogDynamicProviderHttpController",controllerAs:"ctrl",template:n(685),parent:a.a.element(document.body),clickOutsideToClose:!0})}deleteSelectedProperties(){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove selected properties?",msg:"",confirmButton:"Remove"}}).then(e=>{e&&(o.forEach(this.selectedProperties,(e,t)=>{e&&(o.remove(this.api.properties,e=>e.key===t),delete this.selectedProperties[t])}),this.update())})}toggleSelectAll(e){e?o.forEach(this.api.properties,e=>this.selectedProperties[e.key]=!0):this.selectedProperties={}}checkSelectAll(){this.selectAll=o.filter(this.selectedProperties,e=>e).length===Object.keys(this.api.properties).length}hasSelectedProperties(){return o.filter(this.selectedProperties,e=>e).length>0}reset(){this.dynamicPropertyService=o.cloneDeep(this._initialDynamicPropertyService),this.$scope.formDynamicProperties.$setPristine(),this.$scope.formDynamicProperties.$setUntouched()}getHttpMethods(){return["GET","DELETE","PATCH","POST","PUT","OPTIONS","TRACE","HEAD"]}addHTTPHeader(){void 0===this.dynamicPropertyService.configuration.headers&&(this.dynamicPropertyService.configuration.headers=[]),this.dynamicPropertyService.configuration.headers.push({name:"",value:""})}removeHTTPHeader(e){void 0!==this.dynamicPropertyService.configuration.headers&&this.dynamicPropertyService.configuration.headers.splice(e,1)}}Z.$inject=["ApiService","resolvedApi","$mdSidenav","$mdEditDialog","$mdDialog","NotificationService","$scope","$rootScope","ngIfMatchEtagInterceptor"];var ee=Z;class te{constructor(e){this.events=e.data,this.eventsTimeline=[],this.initTimeline(this.events)}initTimeline(e){o.forEach(e,e=>{const t=this.getEventTypeTimeline(e.type),n={event:e,badgeClass:t.badgeClass,badgeIconClass:t.icon,title:e.type,when:e.created_at,user:e.user};this.eventsTimeline.push(n)})}reloadEventsTimeline(e){this.eventsTimeline=[],this.initTimeline(e)}getEventTypeTimeline(e){const t={};switch(e){case"START_API":t.icon="av:play_arrow",t.badgeClass="info";break;case"STOP_API":t.icon="av:stop",t.badgeClass="danger";break;default:t.icon="action:check_circle",t.badgeClass="info"}return t}}te.$inject=["resolvedEvents"];var ne=te;n(444),n(250),n(695);const ie=n(686),ae=n(247),oe=[{id:"HTTP",name:"Custom (HTTP)",schema:{type:"object",properties:{method:{title:"HTTP Method",description:"HTTP method to invoke the endpoint.",type:"string",default:"GET",enum:["GET","POST","PUT","DELETE","PATCH","HEAD","CONNECT","OPTIONS","TRACE"]},url:{title:"Http service URL",description:"http://localhost",type:"string",pattern:"^(http://|https://)"},useSystemProxy:{title:"Use system proxy",description:"Use the system proxy configured by your administrator.",type:"boolean"},headers:{type:"array",title:"Request Headers",items:{type:"object",title:"Header",properties:{name:{title:"Name",type:"string"},value:{title:"Value",type:"string"}}}},body:{title:"Request body",type:"string","x-schema-form":{type:"codemirror",codemirrorOptions:{lineWrapping:!0,lineNumbers:!0,allowDropFileTypes:!0,autoCloseTags:!0}}},specification:{title:"Transformation (JOLT Specification)",type:"string","x-schema-form":{type:"codemirror",codemirrorOptions:{lineWrapping:!0,lineNumbers:!0,allowDropFileTypes:!0,autoCloseTags:!0,mode:"javascript"}}}},required:["url","specification"]},documentation:'= Custom (HTTP)\n\n=== How to ?\n\n 1. Set `Polling frequency interval` and `Time unit`\n2. Set the `HTTP service URL`\n 3. If the HTTP service doesn\'t return the expected output, add a JOLT `transformation` \n\n[source, json]\n----\n[\n  {\n    "key": 1,\n    "value": "https://north-europe.company.com/"\n  },\n  {\n    "key": 2,\n    "value": "https://north-europe.company.com/"\n  },\n  {\n    "key": 3,\n    "value": "https://south-asia.company.com/"\n  }\n]\n----\n'}];var se;!function(e){e.Diff="Diff",e.DiffWithMaster="DiffWithMaster",e.Payload="Payload",e.Design="Design"}(se||(se={}));class re{constructor(e,t,n,a,s,r,l,c,d,p){this.$mdDialog=e,this.$scope=t,this.$rootScope=n,this.$state=a,this.ApiService=s,this.NotificationService=r,this.resolvedEvents=l,this.PolicyService=c,this.ResourceService=d,this.FlowService=p,this.modes=se,this.api=JSON.parse(i.toJson(o.cloneDeep(this.$scope.$parent.apiCtrl.api))),this.events=l.data,this.eventsSelected=[],this.eventsTimeline=[],this.eventsToCompare=[],this.eventSelected={},this.mode=this.hasDesign()?se.Design:se.Payload,this.eventToCompareRequired=!1,this.eventTypes="PUBLISH_API",this.modeOptions=[{title:se.Design,id:se.Design},{title:se.Payload,id:se.Payload}]}$onInit(){this.studio=document.querySelector("gv-policy-studio"),this.hasDesign()&&Promise.all([this.PolicyService.list(!0,!0),this.ResourceService.list(!0,!0),this.ApiService.getFlowSchemaForm(),this.FlowService.getConfigurationSchema()]).then(([e,t,n,i])=>{this.studio.policies=e.data,this.studio.resourceTypes=t.data,this.studio.flowSchema=n.data,this.studio.configurationSchema=i.data,this.studio.propertyProviders=oe}),this.init(),this.initTimeline(this.events)}init(){this.$scope.$parent.apiCtrl.checkAPISynchronization(this.api),this.$scope.$on("apiChangeSuccess",(e,t)=>{this.$state.current.name.endsWith("history")&&(this.api=JSON.parse(i.toJson(o.cloneDeep(t.api))),this.ApiService.getApiEvents(this.api.id,this.eventTypes).then(e=>{this.events=e.data,this.reloadEventsTimeline(this.events)}))}),this.$scope.$on("checkAPISynchronizationSucceed",()=>{this.reloadEventsTimeline(this.events)})}setEventToStudio(e,t){this.studio.definition={version:t.version,flows:null!=t.flows?t.flows:[],resources:t.resources,plans:null!=t.plans?t.plans:[],properties:t.properties,flow_mode:t.flow_mode},this.studio.services=t.services||{}}initTimeline(e){this.eventsTimeline=e.map(e=>({event:e,badgeClass:"info",badgeIconClass:"action:check_circle",title:e.type,when:e.created_at,user:e.user,deploymentLabel:e.properties.deployment_label,deploymentNumber:e.properties.deployment_number}))}selectEvent(e){if(this.eventToCompareRequired)this.diff(e),this.selectEventToCompare(e);else{this.mode=this.hasDesign()?se.Design:se.Payload,this.apisSelected=[],this.eventsSelected=[],this.clearDataToCompare();const t=this.eventsSelected.indexOf(e);if(t>-1?this.eventsSelected.splice(t,1):this.eventsSelected.push(e),this.eventsSelected.length>0){const t=this.eventsSelected[0];this.eventSelectedPayload=JSON.parse(t.event.payload),this.eventSelectedPayloadDefinition=this.reorganizeEvent(this.eventSelectedPayload),this.setEventToStudio(e,this.eventSelectedPayloadDefinition)}}}selectEventToCompare(e){this.eventsToCompare.push(e)}clearDataToCompare(){this.eventsToCompare=[]}clearDataSelected(){this.eventsSelected=[]}isEventSelectedForComparaison(e){return this.eventsToCompare.indexOf(e)>-1}diffWithMaster(){if(this.mode===se.DiffWithMaster)this.mode=null,this.mode=se.Payload,this.clearDataToCompare();else{this.mode=null,this.mode=se.DiffWithMaster,this.eventToCompareRequired=!1,this.clearDataToCompare();const e=this.events[0];this.eventsSelected.length>0&&(this.eventsSelected[0].isCurrentAPI?(this.right=this.reorganizeEvent(JSON.parse(this.eventsSelected[0].event.payload)),this.left=this.reorganizeEvent(JSON.parse(e.payload))):(this.left=this.reorganizeEvent(JSON.parse(this.eventsSelected[0].event.payload)),this.right=this.reorganizeEvent(JSON.parse(e.payload))),this.updateDiffStats())}}computeLines(e){return e&&e.value?e.value.split("\n").length-1:0}updateDiffStats(){this.added=0,this.removed=0;ae.diffJson(this.left,this.right).forEach(e=>{e.added?this.added+=this.computeLines(e):e.removed&&(this.removed+=this.computeLines(e))})}hasDiff(){return this.mode===this.modes.Diff||this.mode===this.modes.DiffWithMaster}enableDiff(){this.clearDataToCompare(),this.eventToCompareRequired=!0}disableDiff(){this.eventToCompareRequired=!1}hasDesign(){return null!=this.api&&null!=this.api.gravitee&&"2.0.0"===this.api.gravitee}copyToClipboard(e){ie(JSON.stringify(this.eventSelectedPayloadDefinition,null,2));const t=e.target.icon;e.target.icon="communication:clipboard-check",setTimeout(()=>{e.target.icon=t},1e3)}toggleMode({detail:e}){!1===e?(this.clearDataToCompare(),this.eventToCompareRequired=!1,this.mode=se.Design):this.mode=se.Payload}diff(e){if(this.mode=se.Diff,this.eventsSelected.length>0){if(e.isCurrentAPI)this.left=this.reorganizeEvent(JSON.parse(this.eventsSelected[0].event.payload)),this.right=this.reorganizeEvent(JSON.parse(e.event.payload));else{const t=e.event.updated_at,n=this.eventsSelected[0].event.updated_at,i=this.reorganizeEvent(JSON.parse(this.eventsSelected[0].event.payload));t>n?(this.left=i,this.right=this.reorganizeEvent(JSON.parse(e.event.payload))):(this.left=this.reorganizeEvent(JSON.parse(e.event.payload)),this.right=i)}this.updateDiffStats()}this.disableDiff()}isEventSelected(e){return this.eventsSelected.indexOf(e)>-1}rollback(e){const t=JSON.parse(e.definition);t.id=this.api.id,delete t.deployed_at,t.description=e.description,t.visibility=e.visibility,this.ApiService.rollback(this.api.id,t).then(()=>{this.NotificationService.show("Api rollback !"),this.ApiService.get(this.api.id).then(e=>{this.$rootScope.$broadcast("apiChangeSuccess",{api:e.data})})})}showRollbackAPIConfirm(e,t){e.stopPropagation(),this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(184),clickOutsideToClose:!0,locals:{title:"Would you like to rollback your API?",confirmButton:"Rollback"}}).then(e=>{e&&this.rollback(t)})}stringifyCurrentApi(){const e=o.cloneDeep(this.api);return delete e.deployed_at,delete e.created_at,delete e.updated_at,delete e.visibility,delete e.state,delete e.permission,delete e.owner,delete e.picture_url,delete e.background_url,delete e.categories,delete e.groups,delete e.context_path,delete e.disable_membership_notifications,delete e.labels,delete e.entrypoints,delete e.lifecycle_state,delete e.path_mappings,delete e.tags,delete e.workflow_state,delete e.response_templates,e.flows&&o.isEmpty(e.flows)&&delete e.flows,e.plans&&o.isEmpty(e.plans)&&delete e.plans,e.resources&&o.isEmpty(e.resources)&&delete e.resources,e.services&&o.isEmpty(e.services)&&delete e.services,e.plans&&o.forEach(e.plans,e=>{delete e.characteristics,delete e.comment_message,delete e.comment_required,delete e.created_at,delete e.cross_id,delete e.description,delete e.excluded_groups,delete e.need_redeploy_at,delete e.general_conditions,delete e.order,delete e.published_at,delete e.type,delete e.updated_at,delete e.closed_at,delete e.validation}),JSON.stringify({definition:JSON.stringify(e)})}reloadEventsTimeline(e){this.clearDataSelected(),this.initTimeline(e),this.$scope.$parent.apiCtrl.apiIsSynchronized||this.$scope.$parent.apiCtrl.apiJustDeployed||this.eventsTimeline.unshift({event:{payload:this.stringifyCurrentApi()},badgeClass:"warning",badgeIconClass:"notification:sync",title:"TO_DEPLOY",isCurrentAPI:!0}),this.selectEvent(this.eventsTimeline[0])}reorganizeEvent(e){const t=JSON.parse(e.definition),n=Object.assign(Object.assign({},t),{name:t.name,version:t.version,description:null!=e.description?e.description:t.description,tags:t.tags,proxy:t.proxy,paths:t.paths,plans:t.plans,flows:t.flows,properties:t.properties,services:t.services,resources:t.resources,path_mappings:t.path_mappings,response_templates:t.response_templates});return null!=n.flow_mode&&(n.flow_mode=n.flow_mode.toLowerCase()),n}fetchPolicyDocumentation({detail:e}){const t=e.policy;this.PolicyService.getDocumentation(t.id).then(e=>{this.studio.documentation={content:e.data,image:t.icon,id:t.id}}).catch(()=>this.studio.documentation=null)}fetchResourceDocumentation(e){const{detail:{resourceType:t,target:n}}=e;this.ResourceService.getDocumentation(t.id).then(e=>{n.documentation={content:e.data,image:t.icon}}).catch(()=>n.documentation=null)}}re.$inject=["$mdDialog","$scope","$rootScope","$state","ApiService","NotificationService","resolvedEvents","PolicyService","ResourceService","FlowService"];var le=re;function ce(e,t){this.hide=function(){t.hide()},this.save=function(){const n={key:e.property.name,value:e.property.value};t.hide(n)}}ce.$inject=["$scope","$mdDialog"];var de=ce;function pe(e,t,n,i,a,s,r){r.list("API").then(t=>{e.roles=t}),e.api=n,e.members=i,e.usersSelected=[],e.userFilterFn=t=>-1===o.findIndex(e.members,{id:t.id}),e.hide=function(){t.cancel()},e.addMembers=function(){for(let t=0;t<e.usersSelected.length;t++){const n=e.usersSelected[t],i={id:n.id,reference:n.reference,role:e.role.name};a.addOrUpdateMember(e.api.id,i).then(()=>{s.show("User "+n.displayName+" has been added as a member.")}).catch(t=>{e.error=t})}t.hide(e.api)}}pe.$inject=["$scope","$mdDialog","api","members","ApiService","NotificationService","RoleService"];var me=pe;function ue(e,t,n){this.newRole=n,e.cancel=function(){t.cancel()},e.transferOwnership=function(){t.hide(!0)}}ue.$inject=["$scope","$mdDialog","newRole"];var he=ue;function ge(e,t,n){const i=new Date;e.minDate=i,e.maxDate=n?new Date(n):new Date(2099,11,31),e.expiration=p(i),this.hide=function(){t.cancel()},this.save=function(){t.hide(e.expiration?e.expiration.toDate():null)}}ge.$inject=["$scope","$mdDialog","maxEndDate"];var fe=ge;function be(e,t,n){e.description=n.description,this.hide=function(){t.cancel()},this.save=function(){t.hide(e.description)}}be.$inject=["$scope","$mdDialog","locals"];var ve=be;var ye={scope:{filecontent:"=",filename:"="},link:function(e,t){t.bind("change",t=>{const n=new FileReader,i=t.target.files[0];n.onload=function(t){e.$apply(()=>{e.filecontent=t.target.result,e.filename=i.name})},n.readAsText(i)})}};var Se={scope:{fileloader:"="},link:function(e,t){t.bind("change",t=>{e.fileloader=t.target.files[0],e.$apply()})}};class we{constructor(e,t){this.$mdToast=e,this.$state=t}show(e,t){const n=e.statusText||e,i=412===t;this.$mdToast.show(this.$mdToast.simple().action(i?"Refresh":"").textContent(i?"The API version is outdated and must be refreshed (current modifications will be lost)":n).position("bottom right").hideDelay(i?1e4:3e3).theme(t?"toast-error":"toast-success")).then(e=>{"ok"===e&&this.$state.go(this.$state.current,{},{reload:!0})})}showError(e,t){this.show(t||(e.data?Array.isArray(e.data)?e.data[0].message:e.data.message||("string"==typeof e.data?e.data:e.statusText):e),e.status||!0)}}we.$inject=["$mdToast","$state"];var Ce=we;class Ie{constructor(e,t){this.$http=e,this.Constants=t}list(e=!1,t=!1){const n=[];e&&n.push("schema"),t&&n.push("icon");let i=this.Constants.env.baseURL+"/connectors/";return n.length>0&&(i+="?"+n.map(e=>"expand="+e).join("&")),this.$http.get(i)}getSchema(e){return this.$http.get(`${this.Constants.env.baseURL}/connectors/${e}/schema`)}getDocumentation(e){return this.$http.get(`${this.Constants.env.baseURL}/connectors/${e}/documentation`)}}Ie.$inject=["$http","Constants"];var $e=Ie;class Ae{constructor(e,t){this.$http=e,this.Constants=t}list(e=!1,t=!1,n=!1){const i=[];e&&i.push("expand=schema"),t&&i.push("expand=icon"),n&&i.push("withResource=false");let a=this.Constants.env.baseURL+"/policies/";return i.length>0&&(a+="?"+i.join("&")),this.$http.get(a)}listSwaggerPolicies(){return this.$http.get(this.Constants.env.baseURL+"/policies/swagger")}getSchema(e){return this.$http.get(`${this.Constants.env.baseURL}/policies/${e}/schema`)}getDocumentation(e){return this.$http.get(`${this.Constants.env.baseURL}/policies/${e}/documentation`)}}Ae.$inject=["$http","Constants"];var Oe=Ae;class Te{constructor(e,t){this.$http=e,this.Constants=t}searchApis(e,t){const n=this.Constants.env.baseURL+"/portal/apis/_search?q="+e;return this.$http.post(n,{},t)}}Te.$inject=["$http","Constants"];var Re=Te;class _e{constructor(e,t){this.$http=e,this.Constants=t}list(e=!1,t=!1){const n=[];e&&n.push("expand=schema"),t&&n.push("expand=icon");let i=this.Constants.env.baseURL+"/resources/";return n.length>0&&(i+="?"+n.join("&")),this.$http.get(i)}getSchema(e){return this.$http.get(`${this.Constants.env.baseURL}/resources/${e}/schema`)}getDocumentation(e){return this.$http.get(`${this.Constants.env.baseURL}/resources/${e}/documentation`)}}_e.$inject=["$http","Constants"];var xe=_e;class Le{constructor(e,t){this.$http=e,this.Constants=t}list(e){const t=this.Constants.env.baseURL+"/fetchers/?expand=schema"+(e?"&import=true":"");return this.$http.get(t)}}Le.$inject=["$http","Constants"];var Pe=Le;class Ne{constructor(e,t){this.$http=e,this.Constants=t}list(){return this.$http.get(this.Constants.env.baseURL+"/notifiers/")}getSchema(e){return this.$http.get(this.Constants.env.baseURL+"/notifiers/"+e+"/schema")}}Ne.$inject=["$http","Constants"];var Ee=Ne;class De{constructor(e,t){this.$http=e,this.Constants=t}list(){const e=this.Constants.env.baseURL+"/services-discovery/";return this.$http.get(e)}getSchema(e){return this.$http.get(`${this.Constants.env.baseURL}/services-discovery/${e}/schema`)}}De.$inject=["$http","Constants"];var je=De;class ke{constructor(e,t,n,i,a,o,s,r,l,c,d,p){this.AuthenticationService=e,this.UserService=t,this.$state=n,this.Constants=i,this.$rootScope=a,this.RouterService=o,this.identityProviders=s,this.$window=r,this.$stateParams=l,this.$scope=c,this.ReCaptchaService=d,this.ngGioPendoService=p,this.user={},this._toDisabledMode=()=>{this.$scope.canBeDisabled=!0,this.$scope.$apply(),document.removeEventListener("click",this._toDisabledMode)},this.userCreationEnabled=i.org.settings.management.userCreation.enabled,this.localLoginDisabled=!i.org.settings.authentication.localLogin.enabled||!1,this.$state=n,this.$rootScope=a,this.$scope=c,c.canBeDisabled=!1}$onInit(){this.ReCaptchaService.displayBadge(),document.addEventListener("click",this._toDisabledMode)}$onDestroy(){document.removeEventListener("click",this._toDisabledMode)}authenticate(e){const t=this.AuthenticationService.nonce(32),n=this.getRedirectUri();this.$window.localStorage[t]=JSON.stringify({redirectUri:n});const i=o.find(this.identityProviders,{id:e});this.AuthenticationService.authenticate(i,t)}login(){this.ReCaptchaService.execute("login").then(()=>this.UserService.login(this.user).then(()=>{this.UserService.current().then(e=>{this.loginSuccess(e)})}).catch(()=>{this.user.username="",this.user.password=""}))}loginSuccess(e){this.ngGioPendoService.initialize({id:""+e.sourceId,email:""+e.email},{id:""+e.sourceId,userSource:e.source}),this.$rootScope.$broadcast("graviteeUserRefresh",{user:e});const t=this.getRedirectUri();if(t&&!t.includes("/newsletter"))this.$window.location.href=t;else{const e=this.RouterService.getLastRoute();e.from&&""!==e.from.name&&"logout"!==e.from.name&&"confirm"!==e.from.name&&"resetPassword"!==e.from.name?this.$state.go(e.from.name,e.fromParams):this.$state.go("management")}}getProviderBackGroundColor(e){return e.color?e.color:"OIDC"===e.type?"black":"GRAVITEEIO_AM"===e.type?"#86c3d0":""}getProviderColor(e){return"GRAVITEEIO_AM"===e.type?"#383E3F":"white"}getProviderStyle(e){return{"background-color":this.getProviderBackGroundColor(e),color:this.getProviderColor(e)}}getRedirectUri(){let e="";return this.$state.params.redirectUri&&(this.$state.params.redirectUri.toLowerCase().startsWith("http")?(e=this.$state.params.redirectUri,this.$state.params["#"]&&(e+="#"+this.$state.params["#"])):e="#!"+this.$state.params.redirectUri),e}}ke.$inject=["AuthenticationService","UserService","$state","Constants","$rootScope","RouterService","identityProviders","$window","$stateParams","$scope","ReCaptchaService","ngGioPendoService"];var Ue=ke;class Me{constructor(e,t,n,i,a){this.UserService=e,this.$state=t,this.$rootScope=n,this.$window=i,this.Constants=a}$onInit(){delete this.Constants.org.currentEnv,delete this.Constants.org.environments,this.UserService.logout().then(()=>{this.$state.go("login"),this.$rootScope.$broadcast("graviteeUserRefresh",{}),this.$rootScope.$broadcast("graviteeUserCancelScheduledServices");const e=this.$window.localStorage.getItem("user-logout-url");if(this.$window.localStorage.removeItem("user-logout-url"),this.reinitToDefaultOrganization(),null!=e){const t=window.location.origin+("/"===window.location.pathname?"":window.location.pathname);if(e.endsWith("target_url="))this.$window.location.href=e+encodeURIComponent(t)+"&post_logout_redirect_uri="+encodeURIComponent(t);else if(e.endsWith("post_logout_redirect_uri="))this.$window.location.href=e+encodeURIComponent(t);else{const n=e.indexOf("?")>-1?"&":"?";this.$window.location.href=e+n+"post_logout_redirect_uri="+encodeURIComponent(t)}}})}reinitToDefaultOrganization(){this.$window.localStorage.setItem("gv-last-organization-loaded","DEFAULT"),this.Constants.baseURL.endsWith("/")&&(this.Constants.baseURL=this.Constants.baseURL.slice(0,-1));const e=this.Constants.baseURL.indexOf("/organizations");e>=0&&(this.Constants.baseURL=this.Constants.baseURL.substr(0,e)),this.Constants.org.baseURL=this.Constants.baseURL+"/organizations/DEFAULT",this.Constants.env.baseURL=this.Constants.org.baseURL+"/environments/{:envId}"}}Me.$inject=["UserService","$state","$rootScope","$window","Constants"];const Fe={controller:Me},qe=n(247);var He={restrict:"AE",scope:{oldValue:"=",newValue:"="},link:(e,t)=>{e.$watch("oldValue",()=>{const n=e.oldValue,i=e.newValue;if(n&&i){t.html("");qe.diffJson(n,i).forEach(e=>{let n=null;n=e.added?"gv-diff-added":e.removed?"gv-diff-removed":"gv-diff-no-changes";const i=document.createElement("div");i.style.position="relative";const a=e.value.split("\n");a.pop(),a.forEach(e=>{const t=document.createElement("div");t.appendChild(document.createTextNode(e)),t.classList.add(n),i.appendChild(t)}),t.append(i)})}})}};var Ge={bindings:{tags:"<",tenants:"<",groups:"<"},template:n(696),controller:"ApiCreationController"};function Be(e){return"2.0.0"===e?"Use this version to enjoy a more intuitive interface to design":"Use the proven version you will be able to migrate later"}class We{constructor(e,t,n){this.policies=e,this.$state=t,this.$stateParams=n,this.definitionVersion="2.0.0",this.definitionVersion=["2.0.0","1.0.0"].includes(n.definitionVersion)?n.definitionVersion:"2.0.0"}cancelImport(){this.$state.go("management.apis.new")}}We.$inject=["policies","$state","$stateParams"];var Ve,Ye=We;!function(e){e.KEY_LESS="KEY_LESS",e.API_KEY="API_KEY",e.OAUTH2="OAUTH2",e.JWT="JWT"}(Ve||(Ve={}));class ze{constructor(e,t,n,i,a,o,s,r,l,c,d,p){this.$scope=e,this.$timeout=t,this.$mdDialog=n,this.$stateParams=i,this.$window=a,this.ApiService=o,this.NotificationService=s,this.UserService=r,this.$state=l,this.Constants=c,this.$rootScope=d,this.ngIfMatchEtagInterceptor=p,this.$onInit=()=>{this.attachableGroups=this.groups.filter(e=>null==e.apiPrimaryOwner);const e=this.UserService.getCurrentUserGroups();this.poGroups=this.groups.filter(t=>null!=t.apiPrimaryOwner&&e.some(e=>e===t.name))},this.api={gravitee:["2.0.0","1.0.0"].includes(i.definitionVersion)?i.definitionVersion:"2.0.0",proxy:{endpoints:[]},pages:[],plans:[],tags:[],groups:[]},this.Constants.org.settings.jupiterMode.enabled&&"never"!==this.Constants.org.settings.jupiterMode.isDefault?this.api.execution_mode="jupiter":this.api.execution_mode="v3",this.contextPathInvalid=!0,this.plan={characteristics:[]},this.pages={},this.securityTypes=[],this.Constants.env.settings.plan.security.apikey.enabled&&this.securityTypes.push({id:Ve.API_KEY,name:"API Key"}),this.Constants.env.settings.plan.security.keyless.enabled&&this.securityTypes.push({id:Ve.KEY_LESS,name:"Keyless (public)"}),this.rateLimitTimeUnits=["SECONDS","MINUTES"],this.quotaTimeUnits=["HOURS","DAYS","WEEKS","MONTHS"],this.methods=["GET","POST","PUT","DELETE","HEAD","PATCH","OPTIONS","TRACE","CONNECT"],this.resourceFiltering={whitelist:[]},this.initStepSettings(),this.initDocumentationSettings()}initStepSettings(){this.skippedStep=!1,this.apiSteps=this.steps().slice(0,2),this.vm={selectedStep:0,stepProgress:1,maxStep:5,showBusyText:!1,stepData:[{step:1,completed:!1,optional:!1,data:{}},{step:2,completed:!1,optional:!1,data:{}},{step:3,label:"Plan",completed:!1,optional:!0,data:{}},{step:4,label:"Documentation",completed:!1,optional:!0,data:{}},{step:5,label:"Confirmation",completed:!1,optional:!1,data:{}}]}}enableNextStep(){if(this.vm.selectedStep>=this.vm.maxStep)return;this.vm.selectedStep===this.vm.stepProgress-1&&(this.vm.stepProgress=this.vm.stepProgress+1);const e=this.vm.selectedStep+1;this.skippedStep?(this.apiSteps[e].badgeClass="disable",this.apiSteps[e].badgeIconClass="content:remove_circle",this.apiSteps[e].title=this.steps()[this.vm.selectedStep].title+" <em>skipped</em>",this.skippedStep=!1):(this.apiSteps[e].badgeClass="info",this.apiSteps[e].badgeIconClass="action:check_circle"),this.apiSteps[e+1]||this.apiSteps.push(this.steps()[e+1]),this.$timeout(()=>{this.vm.selectedStep=this.vm.selectedStep+1})}moveToPreviousStep(){this.vm.selectedStep>0?this.vm.selectedStep=this.vm.selectedStep-1:this.$state.go("management.apis.new")}selectStep(e){this.vm.selectedStep=e}submitCurrentStep(e){this.vm.showBusyText=!0,e.completed?(this.vm.showBusyText=!1,this.enableNextStep()):4!==this.vm.selectedStep&&(this.vm.showBusyText=!1,e.completed=!0,this.enableNextStep())}createAPI(e,t){o.forEach(this.api.pages,t=>{t.name||(t.name=t.fileName),delete t.fileName,t.published=e}),o.forEach(this.api.plans,t=>{t.status=e?"PUBLISHED":"STAGING"}),null!=this.api.groups&&(this.api.groups=this.api.groups.map(e=>e.name)),e&&(this.api.lifecycle_state="PUBLISHED"),this.ApiService.import(null,this.api,this.api.gravitee,!1).then(e=>(this.vm.showBusyText=!1,e)).then(e=>(t&&this.ApiService.askForReview(e.data).then(t=>{e.data.workflow_state="IN_REVIEW",this.ngIfMatchEtagInterceptor.updateLastEtag("api",t.headers("etag")),this.api=e.data,this.$rootScope.$broadcast("apiChangeSuccess",{api:e.data})}),e)).then(t=>(e?this.ApiService.deploy(t.data.id).then(e=>{this.ngIfMatchEtagInterceptor.updateLastEtag("api",e.headers("etag")),this.ApiService.start(t.data).then(()=>{this.NotificationService.show("API created, deployed and started"),this.$state.go("management.apis.detail.portal.general",{apiId:t.data.id})})}):(this.NotificationService.show("API created"),this.$state.go("management.apis.detail.portal.general",{apiId:t.data.id})),t)).catch(()=>{this.vm.showBusyText=!1})}validFirstStep(e){const t=`${this.api.name} (${this.api.version}) <code>${this.api.proxy.context_path}</code>`;if(this.contextPathInvalid){const n={context_path:this.api.proxy.context_path};this.ApiService.verify(n).then(()=>{this.contextPathInvalid=!1,this.submitCurrentStep(e),this.apiSteps[this.vm.selectedStep+1].title=t},()=>{this.contextPathInvalid=!0})}else this.submitCurrentStep(e),this.apiSteps[this.vm.selectedStep+1].title=t}onChangeContextPath(){this.contextPathInvalid=!0}selectEndpoint(){this.api.proxy.endpoints=[];const e={name:"default",target:this.endpoint,tenants:this.selectedTenants,inherit:!0};this.api.proxy.endpoints.push(e),this.apiSteps[this.vm.selectedStep].title=e.target}selectPlan(){if(this.plan.security===Ve.KEY_LESS&&(this.plan.validation="AUTO"),this.plan.validation||(this.plan.validation="MANUAL"),o.remove(this.resourceFiltering.whitelist,e=>!e.pattern),"1.0.0"===this.api.gravitee)this.plan.paths={"/":[]},this.resourceFiltering.whitelist.length&&this.plan.paths["/"].push({methods:this.methods,"resource-filtering":{whitelist:this.resourceFiltering.whitelist}}),this.rateLimit&&this.rateLimit.limit&&this.plan.paths["/"].push({methods:this.methods,"rate-limit":{rate:this.rateLimit}}),this.quota&&this.quota.limit&&this.plan.paths["/"].push({methods:this.methods,quota:{quota:this.quota,addHeaders:!0}});else{const e={"path-operator":{path:"/",operator:"STARTS_WITH"},condition:"",pre:[],post:[]};this.resourceFiltering.whitelist.length&&e.pre.push({name:"Resource Filtering",policy:"resource-filtering",configuration:{whitelist:this.resourceFiltering.whitelist}}),this.rateLimit&&this.rateLimit.limit&&e.pre.push({name:"Rate limit",policy:"rate-limit",configuration:{rate:this.rateLimit}}),this.quota&&this.quota.limit&&e.pre.push({name:"Quota",policy:"quota",configuration:{quota:this.quota,addHeaders:!0}}),this.plan.flows=[e]}this.api.plans=[this.plan],this.apiSteps[this.vm.selectedStep].title=`${this.plan.name} <code>${this.plan.security}</code><code>${this.plan.validation}</code>`}skipAddPlan(){this.api.plans=[],this.plan={},this.skippedStep=!0}resetRateLimit(){delete this.rateLimit}resetQuota(){delete this.quota}initDocumentationSettings(){this.$scope.$watch("newApiPageFile.content",e=>{if(e){const t={name:this.$scope.newApiPageFile.name,content:e,type:""};switch(t.name.split(".").pop().toUpperCase()){case"MD":t.type="MARKDOWN";break;case"YAML":case"YML":case"JSON":t.content.match(/.*"?(swagger|openapi)"?: *['"]?\d/)?t.type="SWAGGER":t.content.match(/.*"?asyncapi"?: *['"]?\d/)&&(t.type="ASYNCAPI");break;case"ADOC":t.type="ASCIIDOC"}t.type?this.selectFile(t):this.NotificationService.showError("Only Markdown, OpenAPI, AsyncAPI, and AsciiDoc files are supported")}})}selectDocumentation(){this.apiSteps[this.vm.selectedStep].title=this.api.pages.map(e=>e.name).join(" ")}selectFile(e){if(e&&!this.pageAlreadyExist(e.name)){const t={fileName:e.name,name:e.name,content:e.content,type:e.type,published:!1};this.api.pages.push(t)}}pageAlreadyExist(e){return o.some(this.api.pages,t=>t.fileName===e)}hasPage(){return this.api.pages&&this.api.pages.length>0}removePage(e){return this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Warning",msg:"Are you sure you want to remove this page?"}}).then(()=>{this.api.pages=this.api.pages.filter(t=>t.fileName!==e.fileName)})}skipDocumentation(){this.api.pages=[],this.skippedStep=!0}steps(){return[{badgeClass:"info",badgeIconClass:"action:check_circle",title:(e=this.api.gravitee,"2.0.0"===e?"Design studio":"Paths based"),content:Be(this.api.gravitee)},{badgeClass:"disable",badgeIconClass:"notification:sync",title:"General",content:"Name, version and context-path"},{badgeClass:"disable",badgeIconClass:"notification:sync",title:"Gateway",content:"Endpoint"},{badgeClass:"disable",badgeIconClass:"notification:sync",title:"Plan",content:"Name, security type and validation mode"},{badgeClass:"disable",badgeIconClass:"notification:sync",title:"Documentation",content:"Pages name"}];var e}}ze.$inject=["$scope","$timeout","$mdDialog","$stateParams","$window","ApiService","NotificationService","UserService","$state","Constants","$rootScope","ngIfMatchEtagInterceptor"];var Ke=ze;const Qe=e=>!!e.$untouched||e.$valid;var Je={require:{parent:"^apiCreation"},template:n(697),controller:["ApiPrimaryOwnerModeService",class{constructor(e){this.ApiPrimaryOwnerModeService=e,this.shouldDisplayHint=Qe,this.toggleAdvancedMode=()=>{this.advancedMode=!this.advancedMode,this.advancedMode||(this.parent.api.groups=[])},this.canUseAdvancedMode=()=>this.ApiPrimaryOwnerModeService.isHybrid()&&(this.parent.attachableGroups&&this.parent.attachableGroups.length>0||this.parent.poGroups&&this.parent.poGroups.length>0)||this.ApiPrimaryOwnerModeService.isGroupOnly()&&this.parent.attachableGroups&&this.parent.attachableGroups.length>0,this.advancedMode=!1,this.useGroupAsPrimaryOwner=this.ApiPrimaryOwnerModeService.isGroupOnly()}}]};var Xe={require:{parent:"^apiCreation"},template:n(698),controller:class{constructor(){this.shouldDisplayHint=Qe,this.toggleAdvancedMode=()=>{this.advancedMode=!this.advancedMode,this.advancedMode||(this.parent.api.tags=[],this.parent.selectedTenants=[])},this.advancedMode=!1}}};var Ze={require:{parent:"^apiCreation"},template:n(699),controller:class{constructor(){this.shouldDisplayHint=Qe}}};var et={require:{parent:"^apiCreation"},template:n(700)};var tt={require:{parent:"^apiCreation"},template:n(701),controller:["Constants",function(e){e.org.settings.documentation&&e.org.settings.documentation.url?this.url=e.org.settings.documentation.url:this.url="https://docs.gravitee.io"}]},nt=n(0),it=n(6),at=n(46),ot=n(161),st=n(122),rt=n(91),lt=n(1314),ct=n(33),dt=n(72),pt=n(129),mt=n(17);const ut=new nt.InjectionToken("UIRouterState");const ht={provide:ut,useFactory:function(e){return e.get("$state")},deps:["$injector"]},gt=new nt.InjectionToken("UIRouterStateParams");const ft={provide:gt,useFactory:function(e){return e.get("$stateParams")},deps:["$injector"]},bt=new nt.InjectionToken("CurrentUserService");const vt={provide:bt,useFactory:function(e){return e.get("UserService")},deps:["$injector"]},yt=new nt.InjectionToken("AjsRootScope");const St={provide:yt,useFactory:function(e){return e.get("$rootScope")},deps:["$injector"]},wt=new nt.InjectionToken("PortalSettingsService");const Ct={provide:wt,useFactory:function(e){return e.get("PortalConfigService")},deps:["$injector"]};var It,$t=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};!function(e){e.API_DESIGNER="api_designer",e.API_PROMOTION="api_promotion",e.DISCOVER_COCKPIT="discover_cockpit"}(It||(It={}));let At=class{addQueryParamsForAnalytics(e,t,n){let i=e;if(i.indexOf("?")>0?i+="&":i+="?",i+="utm_source=apim&utm_medium=InApp",i+="&utm_campaign="+t,t===It.DISCOVER_COCKPIT||t===It.API_DESIGNER){i+="&utm_term="+this.computeCockpitStatusForQueryParam(n)}return i}computeCockpitStatusForQueryParam(e){switch(e){case"PENDING":return"pending";case"ACCEPTED":return"registered";case"REJECTED":return"rejected";case"DELETED":return"removed";default:return"not_registered"}}};At=$t([Object(nt.Injectable)({providedIn:"root"})],At);var Ot,Tt=n(16),Rt=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},_t=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},xt=function(e,t){return function(n,i){t(n,i,e)}};let Lt=class{constructor(e,t){this.http=e,this.constants=t}get(){return this.http.get(this.constants.org.baseURL+"/installation")}};var Pt,Nt;Lt=Rt([Object(nt.Injectable)({providedIn:"root"}),xt(1,Object(nt.Inject)("Constants")),_t("design:paramtypes",["function"==typeof(Ot=void 0!==Tt.b&&Tt.b)?Ot:Object,"function"!=typeof!1&&Object])],Lt),function(e){e.HYBRID="HYBRID",e.USER="USER",e.GROUP="GROUP"}(Pt||(Pt={})),function(e){e.USER="USER",e.GROUP="GROUP"}(Nt||(Nt={}));class Et{constructor(e){this.Constants=e,this.isGroupOnly=()=>this.Constants.env.settings.api.primaryOwnerMode.toUpperCase()===Pt.GROUP,this.isUserOnly=()=>this.Constants.env.settings.api.primaryOwnerMode.toUpperCase()===Pt.USER,this.isHybrid=()=>this.Constants.env.settings.api.primaryOwnerMode.toUpperCase()===Pt.HYBRID}}Et.$inject=["Constants"];var Dt,jt,kt=Et;class Ut{constructor(){this.authenticated=!1}allowedTo(e){return!(!e||!this.userPermissions)&&(o.intersection(this.userPermissions,e).length>0||o.intersection(this.userEnvironmentPermissions,e).length>0||o.intersection(this.userApiPermissions,e).length>0||o.intersection(this.userApplicationPermissions,e).length>0)}allowedToAnd(e){if(!e||!this.userPermissions)return!1;const t=o.concat(this.userPermissions,this.userEnvironmentPermissions,this.userApiPermissions,this.userApplicationPermissions);return 0===o.difference(e,t).length}isOrganizationAdmin(){var e;return null===(e=this.roles)||void 0===e?void 0:e.some(e=>"ORGANIZATION"===e.scope&&"ADMIN"===e.name)}}!function(e){e.PRIMARY_OWNER="PRIMARY_OWNER",e.OWNER="OWNER",e.USER="USER"}(Dt||(Dt={})),function(e){e.API="API",e.APPLICATION="APPLICATION"}(jt||(jt={}));class Mt{constructor(e,t){this.member=e,this.previousMemberState=t}wasPrimaryOwner(){return!this.isNewMember()&&this.previousMemberState.roles[jt.API]===Dt.PRIMARY_OWNER}isPrimaryOwner(){return this.member.roles[jt.API]===Dt.PRIMARY_OWNER}isApiRoleUpdate(){return this.isNewMember()||this.previousMemberState.roles[jt.API]!==this.member.roles[jt.API]}isNewMember(){return!this.previousMemberState}getLastState(){return this.previousMemberState}getCurrentState(){return this.member}}class Ft{constructor(e){this.members=Object(o.cloneDeep)(e)}stateOf(e){return new Mt(Object(o.cloneDeep)(e),this.findByRef(e))}getPrimaryOwner(){return this.members.find(e=>e.roles[jt.API]===Dt.PRIMARY_OWNER)}hasPrimaryOwner(){return this.members.some(e=>e.roles[jt.API]===Dt.PRIMARY_OWNER)}findByRef(e){return this.members.find(t=>t.id===e.id)}findAll(){return this.members}add(e){this.members.push(Object(o.cloneDeep)(e))}isPrimaryOwnerDemotion(e){const t=this.stateOf(e);return t.isApiRoleUpdate()&&t.wasPrimaryOwner()}isPrimaryOwnerPromotion(e){const t=this.stateOf(e);return t.isApiRoleUpdate()&&t.isPrimaryOwner()&&this.hasPrimaryOwner()}isNewMember(e){return!this.findByRef(e)}sync(e){for(const t of e)this.syncOne(t)}syncOne(e){const t=this.findByRef(e);t?Object.assign(t,Object(o.cloneDeep)(e)):this.add(e)}}class qt{constructor(e,t,n,i,a,o,s,r,l,c,d,p,m,u){this.$http=e,this.$q=t,this.Constants=n,this.RoleService=i,this.PermPermissionStore=a,this.ApplicationService=o,this.ApiService=s,this.EnvironmentService=r,this.$location=l,this.$cookies=c,this.$window=d,this.StringService=p,this.Base64Service=m,this.$rootScope=u,this.isLogout=!1}list(e,t=1,n=10){let i=`${this.Constants.org.baseURL}/users/?page=${t}&size=${n}`;return e&&(i+="&q="+e),this.$http.get(i)}get(e){return this.$http.get(this.Constants.org.baseURL+"/users/"+e).then(e=>Object.assign(new Ut,e.data))}remove(e){return this.$http.delete(this.Constants.org.baseURL+"/users/"+e)}removeCurrentUser(){return this.$http.delete(this.Constants.org.baseURL+"/user/")}create(e){return this.$http.post(this.Constants.org.baseURL+"/users/",e)}register(e){return this.$http.post(this.Constants.org.baseURL+"/users/registration",e)}customUserFieldsToRegister(){return this.$http.get(this.Constants.org.baseURL+"/configuration/custom-user-fields")}finalizeRegistration(e){return this.$http.post(this.Constants.org.baseURL+"/users/registration/finalize",e)}finalizeResetPassword(e,t){return this.$http.post(`${this.Constants.org.baseURL}/users/${e}/changePassword`,t)}search(e){return this.$http.get(`${this.Constants.org.baseURL}/search/users/?q=${e}`)}isUserHasPermissions(e){return this.currentUser&&this.currentUser.allowedTo(e)}isUserHasAllPermissions(e){return this.currentUser&&this.currentUser.allowedToAnd(e)}refreshEnvironmentPermissions(){return this.EnvironmentService.getPermissions(this.Constants.org.currentEnv.id).then(e=>(this.currentUser.userEnvironmentPermissions=this.getEnvironmentPermissions(e),this.$q.resolve(this.currentUser)))}refreshCurrent(){return this.currentUser=null,this.current().then(e=>(this.$rootScope.$emit("graviteeUserRefresh",{user:e,refresh:!0}),e))}current(){if(this.currentUser&&this.currentUser.authenticated)return this.$q.resolve(this.currentUser);{const e=[this.$http.get(this.Constants.org.baseURL+"/user/",{silentCall:!0,forceSessionExpired:!0})],t=/applications\/([\w|-]+)/.exec(this.$location.path());this.Constants.org.currentEnv&&!this.isLogout&&t&&"create"!==t[1]&&e.push(this.ApplicationService.getPermissions(t[1]));const n=/apis\/([\w|-]+)/.exec(this.$location.path());this.Constants.org.currentEnv&&!this.isLogout&&n&&"new"!==n[1]&&e.push(this.ApiService.getPermissions(n[1]));const i=/environments\/([\w|-]+)/.exec(this.$location.path());return i&&i[1]&&e.push(this.EnvironmentService.getPermissions(i[1])),this.$q.all(e).then(e=>{this.currentUser=Object.assign(new Ut,e[0].data),this.currentUser.userPermissions=[],o.forEach(this.currentUser.roles,e=>{o.forEach(o.keys(e.permissions),t=>{o.forEach(e.permissions[t],n=>{if("ORGANIZATION"===e.scope){const i=e.scope+"-"+t+"-"+n;this.currentUser.userPermissions.push(o.toLower(i))}})})});const t=e[1];return t&&(this.currentUser.userEnvironmentPermissions=this.getEnvironmentPermissions(t),o.includes(t.config.url,"applications")?(this.currentUser.userApplicationPermissions=[],o.forEach(o.keys(t.data),e=>{o.forEach(t.data[e],t=>{const n="APPLICATION-"+e+"-"+t;this.currentUser.userApplicationPermissions.push(o.toLower(n))})})):o.includes(t.config.url,"apis")&&(this.currentUser.userApiPermissions=[],o.forEach(o.keys(t.data),e=>{o.forEach(t.data[e],t=>{const n="API-"+e+"-"+t;this.currentUser.userApiPermissions.push(o.toLower(n))})}))),this.reloadPermissions(),this.currentUser.authenticated=!0,this.$q.resolve(this.currentUser)}).catch(()=>(this.currentUser=new Ut,this.currentUser.authenticated=!1,this.$q.resolve(this.currentUser)))}}reloadPermissions(){const e=this.RoleService.listRights();this.RoleService.listScopes().then(t=>{const n=[];o.forEach(t,(t,i)=>{o.forEach(t,t=>{o.forEach(e,e=>{const a=i+"-"+t+"-"+e;n.push(o.toLower(a))})})}),this.PermPermissionStore.defineManyPermissions(n,e=>o.includes(this.currentUser.userPermissions,e)||o.includes(this.currentUser.userEnvironmentPermissions,e)||o.includes(this.currentUser.userApiPermissions,e)||o.includes(this.currentUser.userApplicationPermissions,e))})}isAuthenticated(){return void 0!==this.currentUser&&void 0!==this.currentUser.id}login(e){return this.$http.post(this.Constants.org.baseURL+"/user/login",{},{headers:{Authorization:"Basic "+this.Base64Service.encode(`${e.username}:${e.password}`)}})}logout(){return this.$http.post(this.Constants.org.baseURL+"/user/logout",{}).then(()=>{this.removeCurrentUserData()})}removeCurrentUserData(){this.currentUser=new Ut,this.currentUser.authenticated=!1,this.isLogout=!0,this.$window.localStorage.removeItem("satellizer_token"),this.$cookies.remove("Auth-Graviteeio-APIM"),this.$window.localStorage.removeItem("newsletterProposed")}currentUserPicture(){if(this.currentUser&&this.currentUser.id)return`${this.Constants.org.baseURL}/user/avatar?${this.StringService.hashCode(this.currentUser.id)}`}getUserAvatar(e){return this.Constants.org.baseURL+"/users/"+e+"/avatar"}getUserGroups(e){return this.$http.get(this.Constants.org.baseURL+"/users/"+e+"/groups")}getCurrentUserGroups(){return null!=this.currentUser&&null!=this.currentUser.groupsByEnvironment?this.currentUser.groupsByEnvironment[this.Constants.org.currentEnv.id]:[]}save(e){return this.$http.put(this.Constants.org.baseURL+"/user/",{username:e.username,picture:e.picture,newsletter:e.newsletter,email:e.email,firstname:e.firstname,lastname:e.lastname,customFields:e.customFields})}subscribeNewsletter(e){return this.$http.post(this.Constants.org.baseURL+"/user/newsletter/_subscribe",e)}getNewsletterTaglines(){return this.$http.get(this.Constants.org.baseURL+"/user/newsletter/taglines")}resetPassword(e){return this.$http.post(`${this.Constants.org.baseURL}/users/${e}/resetPassword`,{})}getMemberships(e,t){return this.$http.get(`${this.Constants.org.baseURL}/users/${e}/memberships?type=${t}`)}getCurrentUserTags(){return this.$http.get(this.Constants.org.baseURL+"/user/tags")}updateUserRoles(e,t,n,i){return this.$http.put(`${this.Constants.org.baseURL}/users/${e}/roles`,{user:e,referenceId:n,referenceType:t,roles:i})}processRegistration(e,t){return this.$http.post(`${this.Constants.org.baseURL}/users/${e}/_process`,t)}getEnvironmentPermissions(e){if(!e.config.url.includes("environments"))return[];const t=[];return e.data.forEach(e=>{Object.keys(e.permissions).forEach(n=>{e.permissions[n].forEach(e=>{const i=`ENVIRONMENT-${n}-${e}`.toLowerCase();t.push(i)})})}),t}isApiPrimaryOwner(e,t={}){return this.isDirectApiPrimaryOwner(e)||this.isApiPrimaryOwnerFromGroup(e,t)}isDirectApiPrimaryOwner(e){var t;return e.owner.type===Nt.USER&&(null===(t=this.currentUser)||void 0===t?void 0:t.id)===e.owner.id}isApiPrimaryOwnerFromGroup(e,t){return e.owner.type===Nt.GROUP&&t[e.owner.id]&&t[e.owner.id].some(e=>{var t;return e.roles[jt.API]===Dt.PRIMARY_OWNER&&e.id===(null===(t=this.currentUser)||void 0===t?void 0:t.id)})}}qt.$inject=["$http","$q","Constants","RoleService","PermPermissionStore","ApplicationService","ApiService","EnvironmentService","$location","$cookies","$window","StringService","Base64Service","$rootScope"];var Ht,Gt=qt,Bt=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Wt=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Vt=function(e,t){return function(n,i){t(n,i,e)}};let Yt=class{constructor(e){this.currentUserService=e}hasAnyMatching(e){return!(!e||!this.currentUserService.currentUser.userPermissions)&&(Object(o.intersection)(this.currentUserService.currentUser.userPermissions,e).length>0||Object(o.intersection)(this.currentUserService.currentUser.userEnvironmentPermissions,e).length>0||Object(o.intersection)(this.currentUserService.currentUser.userApiPermissions,e).length>0||Object(o.intersection)(this.currentUserService.currentUser.userApplicationPermissions,e).length>0)}};Yt=Bt([Object(nt.Injectable)({providedIn:"root"}),Vt(0,Object(nt.Inject)(bt)),Wt("design:paramtypes",["function"==typeof(Ht=void 0!==Gt&&Gt)?Ht:Object])],Yt);var zt,Kt=n(83),Qt=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Jt=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Xt=function(e,t){return function(n,i){t(n,i,e)}};let Zt=class{constructor(e,t){this.http=e,this.constants=t}list(e){let t=new Tt.e;return e.expandSchema&&(t=t.append("expand","schema")),e.expandIcon&&(t=t.append("expand","icon")),e.withoutResource&&(t=t.set("withResource",!1)),this.http.get(this.constants.env.baseURL+"/policies",{params:t})}listSwaggerPolicies(){return this.http.get(this.constants.env.baseURL+"/policies/swagger")}getSchema(e){return this.http.get(`${this.constants.env.baseURL}/policies/${e}/schema`)}getDocumentation(e){return this.http.get(`${this.constants.env.baseURL}/policies/${e}/documentation`,{responseType:"text"}).pipe(Object(Kt.a)(e=>e.toString()))}};Zt=Qt([Object(nt.Injectable)({providedIn:"root"}),Xt(1,Object(nt.Inject)("Constants")),Jt("design:paramtypes",["function"==typeof(zt=void 0!==Tt.b&&Tt.b)?zt:Object,"function"!=typeof!1&&Object])],Zt);var en,tn=n(49),nn=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},an=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let on=class{constructor(e){this.matSnackBar=e,this.defaultSnackBarOptions={duration:3e3,horizontalPosition:"end"}}success(e,t){return this.matSnackBar.open(e,t,Object.assign(Object.assign({},this.defaultSnackBarOptions),{panelClass:"gio-snack-bar-success"}))}error(e,t){return this.matSnackBar.open(e,t,Object.assign(Object.assign({},this.defaultSnackBarOptions),{panelClass:"gio-snack-bar-error"}))}};on=nn([Object(nt.Injectable)({providedIn:"root"}),an("design:paramtypes",["function"==typeof(en=void 0!==tn.a&&tn.a)?en:Object])],on);var sn,rn,ln=n(3),cn=n(24),dn=n(1671),pn=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},mn=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},un=function(e,t){return function(n,i){t(n,i,e)}};let hn=class{constructor(e,t,n){this.http=e,this.constants=t,this.ajsRootScope=n}get(e){return this.http.get(`${this.constants.env.baseURL}/apis/${e}`)}getFlowSchemaForm(){return this.http.get(this.constants.env.baseURL+"/apis/schema")}update(e){return this.http.put(`${this.constants.env.baseURL}/apis/${e.id}`,{version:e.version,description:e.description,proxy:e.proxy,paths:e.paths,flows:e.flows,plans:e.plans,visibility:e.visibility,name:e.name,services:e.services,properties:e.properties,tags:e.tags,picture:e.picture,picture_url:e.picture_url,background:e.background,background_url:e.background_url,resources:e.resources,categories:e.categories,groups:e.groups,labels:e.labels,path_mappings:e.path_mappings,response_templates:e.response_templates,lifecycle_state:e.lifecycle_state,disable_membership_notifications:e.disable_membership_notifications,flow_mode:e.flow_mode,gravitee:e.gravitee,execution_mode:e.execution_mode}).pipe(Object(Kt.a)(e=>(this.ajsRootScope.$broadcast("apiChangeSuccess",{api:o.cloneDeep(e)}),e)))}getAll(e={}){let t=this.constants.env.baseURL;return e.environmentId&&(t=`${this.constants.org.baseURL}/environments/${e.environmentId}`),this.http.get(t+"/apis",{params:Object.assign({},e.order?{order:e.order}:{})})}list(e,t,n=1,i=10){return this.http.post(this.constants.env.baseURL+"/apis/_search/_paged",null,{params:Object.assign({page:n,size:i,q:e||"*"},t?{order:t}:{})})}isAPISynchronized(e){return this.http.get(`${this.constants.env.baseURL}/apis/${e}/state`)}getQualityMetrics(e){return this.http.get(`${this.constants.env.baseURL}/apis/${e}/quality`)}askForReview(e,t){return this.http.post(`${this.constants.env.baseURL}/apis/${e}/reviews?action=ASK`,{message:t})}start(e){return this.http.post(this.constants.env.baseURL+"/apis/"+e+"?action=START",{})}stop(e){return this.http.post(this.constants.env.baseURL+"/apis/"+e+"?action=STOP",{})}delete(e){return this.http.delete(this.constants.env.baseURL+"/apis/"+e)}importApiDefinition(e,t,n,i){const a="graviteeUrl"===e,o={"Content-Type":a?"text/plain":"application/json"},s=a?"import-url":"import",r=n?"?definitionVersion="+n:"";return i?this.http.put(`${this.constants.env.baseURL}/apis/${i}/${s}${r}`,t,{headers:o}):this.http.post(`${this.constants.env.baseURL}/apis/${s}${r}`,t,{headers:o})}importSwaggerApi(e,t,n){const i=t?"?definitionVersion="+t:"";return n?this.http.put(`${this.constants.env.baseURL}/apis/${n}/import/swagger${i}`,e):this.http.post(`${this.constants.env.baseURL}/apis/import/swagger${i}`,e)}export(e,t,n){const i=[];return t&&t.length>0&&i.push("exclude="+t.join(",")),n&&i.push("version="+n),this.http.get(`${this.constants.env.baseURL}/apis/${e}/export${i?"?"+i.join("&"):""}`,{responseType:"blob"})}exportCrd(e){return this.http.get(`${this.constants.env.baseURL}/apis/${e}/crd`,{responseType:"blob"})}duplicate(e,t){return this.http.post(`${this.constants.env.baseURL}/apis/${e}/duplicate`,t)}contextPathValidator(e){return t=>{if(!t.value)return Object(dt.a)(null);const n=t.value;return n.length<3?Object(dt.a)({contextPath:"Context path has to be more than 3 characters long."}):e===n?Object(dt.a)(null):this.http.post(this.constants.env.baseURL+"/apis/verify",{context_path:n},{responseType:"text"}).pipe(Object(dn.a)(null),Object(lt.a)(e=>{let t="Context path is not valid.";try{t=JSON.parse(e.error).message}catch(e){}return Object(dt.a)({contextPath:t})}))}}versionValidator(){return e=>{if(!e.value)return null;return e.value.length>32?{version:"Maximum length is 32 characters."}:null}}migrateApiToPolicyStudio(e){return this.http.post(`${this.constants.env.baseURL}/apis/${e}/_migrate`,{})}};hn=pn([Object(nt.Injectable)({providedIn:"root"}),un(1,Object(nt.Inject)("Constants")),un(2,Object(nt.Inject)(yt)),mn("design:paramtypes",["function"==typeof(sn=void 0!==Tt.b&&Tt.b)?sn:Object,"function"!=typeof!1&&Object,"function"==typeof(rn=void 0!==i.IScope&&i.IScope)?rn:Object])],hn);var gn,fn,bn,vn=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},yn=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Sn=function(e,t){return function(n,i){t(n,i,e)}},wn=function(e,t,n,i){return new(n||(n=Promise))((function(a,o){function s(e){try{l(i.next(e))}catch(e){o(e)}}function r(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,r)}l((i=i.apply(e,t||[])).next())}))};const Cn=["yml","yaml","json","wsdl","xml"];let In=class{constructor(e,t,n,i){var a,o,s,r;this.dialogRef=e,this.apiService=n,this.snackBarService=i,this.tabLabels={UploadFile:"Upload a file",SwaggerOpenAPI:"Swagger / OpenAPI",ApiDefinition:"API definition",WSDL:"WSDL"},this.displayImportConfig=!1,this.policies=[],this.isUpdateMode=!1,this.filePickerValue=[],this.descriptorUrlForm=new ln.g,this.importPolicyPathsIntermediate=!1,this.unsubscribe$=new ct.a,this.policies=null!==(a=null==t?void 0:t.policies)&&void 0!==a?a:[],this.isUpdateMode=null!==(o=!!(null==t?void 0:t.apiId))&&void 0!==o&&o,this.updateModeApiId=null!==(s=null==t?void 0:t.apiId)&&void 0!==s?s:void 0,this.definitionVersion=null!==(r=null==t?void 0:t.definitionVersion)&&void 0!==r?r:"2.0.0",this.configsForm=new ln.i({importDocumentation:new ln.g(!1),importPathMapping:new ln.g(!1),importPolicyPaths:new ln.g(!1),importPolicies:new ln.i(this.policies.reduce((e,t)=>(e[t.id]=new ln.g(!1),e),{}))}),this.configsForm.get("importPolicyPaths").valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.importPolicyPathsIntermediate=!1,this.configsForm.get("importPolicies").patchValue(this.policies.reduce((t,n)=>(t[n.id]=e,t),{}),{emitEvent:!1})}),this.configsForm.get("importPolicies").valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{const t=Object.keys(e).filter(t=>e[t]).length;if(0===t||t===this.policies.length)return this.configsForm.get("importPolicyPaths").patchValue(0!==t,{emitEvent:!1}),void(this.importPolicyPathsIntermediate=!1);this.configsForm.get("importPolicyPaths").patchValue(!0,{emitEvent:!1}),this.importPolicyPathsIntermediate=!0})}get isImportValid(){var e;return!(!this.importType||!this.importFile&&!(null===(e=this.descriptorUrlForm)||void 0===e?void 0:e.value))}ngOnDestroy(){this.unsubscribe$.next(),this.unsubscribe$.unsubscribe()}onImportFile(e){return wn(this,void 0,void 0,(function*(){if(!e||1!==e.length)return void this.resetImportFile();const t=e[0];if(!(t instanceof cn.q))return;const n=t.name.split(".").pop().toLowerCase();if(!Cn.includes(n))return void this.resetImportFile("Invalid file format. Supported file formats: "+Cn.join(", "));const i=yield $n(t.file);switch(n){case"wsdl":case"xml":this.importType="WSDL";break;case"json":try{const e=JSON.parse(i);this.importType=An(e)?"SWAGGER":"GRAVITEE"}catch(e){this.resetImportFile("Invalid JSON file.")}break;case"yml":case"yaml":this.importType="SWAGGER";break;default:return void this.resetImportFile("Invalid file format.")}this.importType&&(this.importFile=t.file,this.importFileContent=i)}))}onSelectedTab(e){this.importType=void 0;const t=()=>{this.descriptorUrlForm||(this.descriptorUrlForm=new ln.g("",[ln.v.required]))};switch(e.tab.textLabel){case this.tabLabels.UploadFile:this.resetImportFile(),this.descriptorUrlForm=new ln.g;break;case this.tabLabels.SwaggerOpenAPI:this.importType="SWAGGER",t();break;case this.tabLabels.ApiDefinition:this.importType="GRAVITEE",t();break;case this.tabLabels.WSDL:this.importType="WSDL",t()}}hasSomeConfigPolicies(){const e=this.configsForm.value.importPolicies,t=this.configsForm.value.importPolicyPaths;return Object.keys(e).filter(t=>e[t]).length<this.policies.length&&t}onImport(){return wn(this,void 0,void 0,(function*(){const e=this.configsForm.value,t=!!this.importFile,n=t?this.importFileContent:this.descriptorUrlForm.value;if(!this.importFile&&!this.descriptorUrlForm.value)throw new Error("No file or url provided");let i;switch(this.importType){case"WSDL":i=this.apiService.importSwaggerApi({payload:n,type:t?"INLINE":"URL",format:"WSDL",with_documentation:e.importDocumentation,with_path_mapping:e.importPathMapping,with_policies:this.policies.filter(t=>e.importPolicies[t.id]).map(e=>e.id),with_policy_paths:e.importPolicyPaths},this.definitionVersion,this.updateModeApiId);break;case"SWAGGER":i=this.apiService.importSwaggerApi({payload:n,type:t?"INLINE":"URL",format:"API",with_documentation:e.importDocumentation,with_path_mapping:e.importPathMapping,with_policies:this.policies.filter(t=>e.importPolicies[t.id]).map(e=>e.id),with_policy_paths:e.importPolicyPaths},this.definitionVersion,this.updateModeApiId);break;case"GRAVITEE":i=this.apiService.importApiDefinition(t?"graviteeJson":"graviteeUrl",n,this.definitionVersion,this.updateModeApiId)}i.pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(()=>this.snackBarService.success("API imported successfully")),Object(lt.a)(({error:e})=>{var t;return this.snackBarService.error(null!==(t=e.message)&&void 0!==t?t:"An error occurred while importing the API"),pt.a})).subscribe(e=>{this.dialogRef.close(e.id)})}))}resetImportFile(e){e&&this.snackBarService.error(e),this.importFile=void 0,this.importType=void 0,this.filePickerValue=[]}};In=vn([Object(nt.Component)({selector:"gio-api-import-dialog",template:n(702),styles:[n(703)]}),Sn(1,Object(nt.Inject)(mt.a)),yn("design:paramtypes",["function"==typeof(gn=void 0!==mt.g&&mt.g)?gn:Object,Object,"function"==typeof(fn=void 0!==hn&&hn)?fn:Object,"function"==typeof(bn=void 0!==on&&on)?bn:Object])],In);const $n=e=>new Promise((t,n)=>{const i=new FileReader;i.onload=()=>{t(i.result)},i.onerror=n,i.readAsText(e)}),An=e=>e instanceof Object&&(Object.prototype.hasOwnProperty.call(e,"swagger")||Object.prototype.hasOwnProperty.call(e,"swaggerVersion")||Object.prototype.hasOwnProperty.call(e,"openapi"));var On,Tn,Rn,_n,xn,Ln,Pn,Nn=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},En=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Dn=function(e,t){return function(n,i){t(n,i,e)}};let jn=class{constructor(e,t,n,i,a,o,s,r){this.ajsState=e,this.constants=t,this.cockpitService=n,this.installationService=i,this.permissionService=a,this.policyService=o,this.snackBarService=s,this.matDialog=r,this.isLoading=!0,this.policies=[],this.unsubscribe$=new ct.a}get allowsPathBasedCreation(){var e,t,n;return null!==(n=null===(t=null===(e=this.constants.org.settings.management)||void 0===e?void 0:e.pathBasedApiCreation)||void 0===t?void 0:t.enabled)&&void 0!==n&&n}ngOnInit(){(this.permissionService.hasAnyMatching(["organization-installation-r"])?this.installationService.get():Object(dt.a)(void 0)).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(e=>{this.cockpitLink=this.getCockpitLink(e),this.isLoading=!1})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(),this.unsubscribe$.unsubscribe()}goToApiCreationWizard(e="2.0.0"){this.ajsState.go("management.apis.create",{definitionVersion:e})}goToApiImport(e="2.0.0"){this.policyService.listSwaggerPolicies().pipe(Object(at.a)(this.unsubscribe$),Object(st.a)(t=>this.matDialog.open(In,{data:{definitionVersion:e,policies:t},role:"alertdialog",id:"importApiDialog"}).afterClosed()),Object(rt.a)(e=>!!e),Object(ot.a)(e=>this.ajsState.go("management.apis.detail.portal.general",{apiId:e})),Object(lt.a)(e=>{var t,n;return this.snackBarService.error(null!==(n=null===(t=e.error)||void 0===t?void 0:t.message)&&void 0!==n?n:"An error occurred while importing the API."),pt.a})).subscribe()}getCockpitLink(e){var t;const n=null!==(t=null==e?void 0:e.cockpitURL)&&void 0!==t?t:"https://cockpit.gravitee.io";return this.cockpitService.addQueryParamsForAnalytics(n,It.API_DESIGNER,"ACCEPTED"===(null==e?void 0:e.additionalInformation.COCKPIT_INSTALLATION_STATUS)?"ACCEPTED":void 0)}};function kn(e,t,n){this.title=n.title,this.msg=n.msg,this.more=n.more,this.deploymentLabel="",this.confirmButton=n.confirmButton||"OK",this.cancelButton=n.cancelButton||"Cancel",this.cancel=function(){t.hide(!1)},this.confirm=()=>{t.hide(this.deploymentLabel)}}jn=Nn([Object(nt.Component)({selector:"api-creation-get-started",template:n(705),styles:[n(706)]}),Dn(0,Object(nt.Inject)(ut)),Dn(1,Object(nt.Inject)("Constants")),En("design:paramtypes",["function"==typeof(On=void 0!==it.StateService&&it.StateService)?On:Object,"function"!=typeof!1&&Object,"function"==typeof(Tn=void 0!==At&&At)?Tn:Object,"function"==typeof(Rn=void 0!==Lt&&Lt)?Rn:Object,"function"==typeof(_n=void 0!==Yt&&Yt)?_n:Object,"function"==typeof(xn=void 0!==Zt&&Zt)?xn:Object,"function"==typeof(Ln=void 0!==on&&on)?Ln:Object,"function"==typeof(Pn=void 0!==mt.b&&mt.b)?Pn:Object])],jn),kn.$inject=["$scope","$mdDialog","locals"];var Un=kn;var Mn={bindings:{plan:"<",subscribable:"<",unsubscribable:"<",onSubscribe:"&",onUnsubscribe:"&"},template:n(708),controller:["UserService",function(e){this.authenticated=e.isAuthenticated(),this.subscribe=function(){this.onSubscribe(this.plan)},this.unsubscribe=function(){this.onUnsubscribe(this.plan)}}]};class Fn{constructor(e,t,n,i,a,o){this.$scope=e,this.$state=t,this.$stateParams=n,this.$timeout=i,this.ApiService=a,this.NotificationService=o}isV2(){return this.ApiService.isV2(this.api)}$onInit(){this.isCreate=null==this.plan;const e=[{step:1,completed:!1,optional:!1,data:{}},{step:2,completed:!1,optional:!1,data:{}}];if(this.hasRestrictionStep()&&e.push({step:3,completed:!1,optional:!0,data:{}}),this.hasPoliciesStep()&&e.push({step:4,completed:!1,optional:!0,data:{}}),this.vm={selectedStep:0,stepProgress:1,maxStep:e.length,showBusyText:!1,stepData:e},this.plan||(this.plan={characteristics:[]}),this.plan.paths&&this.plan.paths["/"]||(this.plan.paths={"/":[]}),this.isV2()||(this.planPolicies=this.plan.paths["/"],this.planPolicies&&this.planPolicies.forEach(e=>{o.forEach(e,(t,n)=>{if("methods"!==n&&"enabled"!==n&&"description"!==n&&"$$hashKey"!==n){e.id=n;const t=this.policies.find(t=>t.id===e.id);t&&(e.name=t.name)}})})),"PRIVATE"===this.api.visibility)if(this.api.groups){const e=this.api.groups;this.groups=o.filter(this.groups,t=>e.indexOf(t.id)>-1)}else this.groups=[];this.refreshPlanExcludedGroupsNames()}hasRestrictionStep(){return this.isCreate||!this.isV2()}hasPoliciesStep(){return!this.isV2()}moveToNextStep(e){this.submitCurrentStep(e)}moveToPreviousStep(){this.vm.selectedStep>0&&(this.vm.selectedStep=this.vm.selectedStep-1)}selectStep(e){this.vm.selectedStep=e}submitCurrentStep(e){this.vm.showBusyText=!0,e.completed?(this.vm.showBusyText=!1,this.enableNextStep()):this.vm.selectedStep!==this.vm.maxStep&&(this.vm.showBusyText=!1,e.completed=!0,this.enableNextStep())}enableNextStep(){this.vm.selectedStep>=this.vm.maxStep||(this.vm.selectedStep===this.vm.stepProgress-1&&(this.vm.stepProgress=this.vm.stepProgress+1),this.$timeout(()=>this.vm.selectedStep=this.vm.selectedStep+1))}saveOrUpdate(){const e=Object.assign(Object.assign({},this.plan),{securityDefinition:JSON.stringify(this.plan.securityDefinition)});this.ApiService.savePlan(this.api,e).then(()=>{this.NotificationService.show(this.plan.name+" has been saved successfully"),this.$state.go("management.apis.detail.portal.plans.list",void 0===this.plan.id?{state:"STAGING"}:{}),this.$scope.$parent.apiCtrl.checkAPISynchronization({id:this.$stateParams.apiId})})}isTagDisabled(e){return!o.includes(this.userTags,e.id)||!o.includes(this.api.tags,e.id)}shouldNotEditConditions(){return"PUBLISHED"===this.plan.status||"DEPRECATED"===this.plan.status}refreshPlanExcludedGroupsNames(){var e;this.plan.excluded_groups_names=null===(e=this.plan.excluded_groups)||void 0===e?void 0:e.map(e=>{var t;return null===(t=this.groups.find(t=>t.id===e))||void 0===t?void 0:t.name})}}Fn.$inject=["$scope","$state","$stateParams","$timeout","ApiService","NotificationService"];var qn=Fn;var Hn={bindings:{api:"<",plan:"<",pages:"<",groups:"<",policies:"<",tags:"<",userTags:"<",resourceTypes:"<"},controller:"ApiEditPlanController",template:n(709)};var Gn={bindings:{plans:"<",api:"<",groups:"<"},controller:"ApiListPlansController",template:n(710)};class Bn{constructor(e,t,n,i,a,o,s,r,l){this.$scope=e,this.$rootScope=t,this.$state=n,this.$stateParams=i,this.$mdDialog=a,this.dragularService=o,this.NotificationService=s,this.UserService=r,this.ApiService=l,this.dndEnabled=r.isUserHasPermissions(["api-plan-u"]),this.statusFilters=["STAGING","PUBLISHED","DEPRECATED","CLOSED"],this.selectedStatus=["PUBLISHED"],this.countByStatus={}}$onInit(){const e=document.querySelector(".plans");if(this.dragularService([e],{moves:()=>this.dndEnabled,scope:this.$scope,containersModel:this.plans,nameSpace:"plan"}),this.$scope.$on("dragulardrop",(e,t,n,i,a,o,s,r)=>{const l=this.filteredPlans[o];l.order=r+1,this.ApiService.savePlan(this.api,l).then(()=>{this.list(),this.NotificationService.show("Plans have been reordered successfully")})}),this.$stateParams.state){const e=this.$stateParams.state.toUpperCase();o.includes(this.statusFilters,e)?this.changeFilter(e):this.applyFilters()}else this.applyFilters();this.isApiDeprecated="DEPRECATED"===this.api.lifecycle_state,this.creationEmptyMessage=this.isApiDeprecated?"The API is deprecated":"Start creating a plan",this.refreshPlansExcludedGroupsNames()}canDesign(e){return this.ApiService.isV2(this.api)&&"CLOSED"!==e.status}design(e){this.$state.go("management.apis.detail.design.flowsNg",{apiId:this.api.id,flows:e.id+"_0"})}list(){this.ApiService.getApiPlans(this.$stateParams.apiId).then(e=>{this.$scope.$applyAsync(()=>{this.plans.length=0,Array.prototype.push.apply(this.plans,e.data),this.refreshPlansExcludedGroupsNames(),this.applyFilters()})})}changeFilter(e){this.selectedStatus=e,this.dndEnabled="PUBLISHED"===e&&this.UserService.isUserHasPermissions(["api-plan-u"]),o.includes(this.selectedStatus,e)?o.pull(this.selectedStatus,e):this.selectedStatus.push(e),this.$state.transitionTo(this.$state.current,o.merge(this.$state.params,{state:e})),this.applyFilters()}applyFilters(){this.countPlansByStatus(),this.filteredPlans=o.sortBy(o.filter(this.plans,e=>o.includes(this.selectedStatus,e.status)),"order")}addPlan(){this.$state.go("management.apis.detail.portal.plans.new")}editPlan(e){this.$state.go("management.apis.detail.portal.plans.plan",{planId:e.id})}close(e){this.ApiService.getAllPlanSubscriptions(this.$stateParams.apiId,e.id).then(t=>{const i=t.data.page.size;let a="";e.security===Ve.KEY_LESS?a="A keyless plan may have consumers. <br/>By closing this plan you will remove free access to this API.":0===i?a="No subscription is associated to this plan. You can delete it safely.":i>0&&(a="There are <code>"+i+"</code> subscription(s) associated to this plan.<br/>By closing this plan, all relative active subscriptions will also be closed.");let o="Yes, close this plan.";0===i&&e.security===Ve.API_KEY&&(o="Yes, delete this plan"),this.$mdDialog.show({controller:"DialogConfirmAndValidateController",controllerAs:"ctrl",template:n(198),clickOutsideToClose:!0,locals:{title:'Would you like to close plan "'+e.name+'"?',warning:"This operation is irreversible.",msg:a,validationMessage:"Please, type in the name of the plan <code>"+e.name+"</code> to confirm.",validationValue:e.name,confirmButton:o}}).then(t=>{t&&this.ApiService.closePlan(this.api,e.id).then(()=>{this.NotificationService.show("Plan "+e.name+" has been closed"),this.$rootScope.$broadcast("planChangeSuccess",{state:"CLOSED"}),this.$scope.$parent.apiCtrl.checkAPISynchronization({id:this.$stateParams.apiId}),this.selectedStatus=["CLOSED"],this.list()})})})}deprecate(e){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:'Would you like to deprecate plan "'+e.name+'"?',msg:"By deprecating this plan, users will no more be able to subscribe to it.",confirmButton:"Deprecate"}}).then(t=>{t&&this.ApiService.deprecatePlan(this.api,e.id).then(()=>{this.NotificationService.show("Plan "+e.name+" has been deprecated"),this.$rootScope.$broadcast("planChangeSuccess",{state:"DEPRECATED"}),this.$scope.$parent.apiCtrl.checkAPISynchronization({id:this.$stateParams.apiId}),this.selectedStatus=["PUBLISHED"],this.list()})})}publish(e,t){this.$mdDialog.show({controller:"DialogPublishPlanController",template:n(711),parent:a.a.element(document.body),targetEvent:t,clickOutsideToClose:!0,locals:{plan:e}}).then(e=>{e&&this.ApiService.publishPlan(this.api,e.id).then(()=>{this.NotificationService.show("Plan "+e.name+" has been published"),this.$rootScope.$broadcast("planChangeSuccess",{state:"PUBLISHED"}),this.$scope.$parent.apiCtrl.checkAPISynchronization({id:this.$stateParams.apiId}),this.selectedStatus=["PUBLISHED"],this.list()})},()=>{})}countPlansByStatus(){this.countByStatus=o.countBy(this.plans,"status")}refreshPlansExcludedGroupsNames(){this.plans.forEach(e=>{var t;return e.excluded_groups_names=null===(t=e.excluded_groups)||void 0===t?void 0:t.map(e=>{var t;return null===(t=this.groups.find(t=>t.id===e))||void 0===t?void 0:t.name})})}}Bn.$inject=["$scope","$rootScope","$state","$stateParams","$mdDialog","dragularService","NotificationService","UserService","ApiService"];var Wn=Bn;var Vn={require:{parent:"^editPlan"},template:n(712),controller:function(){this.gotoNextStep=function(){this.parent.vm.stepData[0].data=this.plan,this.parent.moveToNextStep(this.parent.vm.stepData[0])}}};n(199),n(713);var Yn={require:{parent:"^editPlan"},template:n(714),controller:["PolicyService","Constants","ResourceService",class{constructor(e,t,n){this.PolicyService=e,this.ResourceService=n,this.securityTypes=o.filter([{id:Ve.OAUTH2,name:"OAuth2",policy:"oauth2"},{id:Ve.JWT,name:"JWT",policy:"jwt"},{id:Ve.API_KEY,name:"API Key",policy:"api-key"},{id:Ve.KEY_LESS,name:"Keyless (public)"}],e=>t.env.settings.plan.security[o.replace(e.id.toLowerCase(),"_","")].enabled)}$onInit(){this.parent.plan.security&&this.onSecurityTypeChange()}onSecurityDefinitionChange({detail:{values:e}}){this.parent.plan.securityDefinition=e}onFetchResources(e){if(null!=this.parent.resourceTypes&&null!=this.parent.api.resources){const{currentTarget:t,regexTypes:n}=e.detail,i=this.parent.api.resources.filter(e=>null==n||new RegExp(n).test(e.type)).map(e=>{const t=this.parent.resourceTypes.find(t=>t.id===e.type),n=document.createElement("gv-row"),i=t.icon?t.icon:null;return n.item={picture:i,name:e.name},{element:n,value:e.name,id:e.type}});t.options=i}}onSecurityTypeChange(){const e=o.find(this.securityTypes,{id:this.parent.plan.security});e&&e.policy?this.PolicyService.getSchema(e.policy).then(e=>{if(this.securitySchema=e.data,this.parent.plan.securityDefinition)try{this.parent.plan.securityDefinition=JSON.parse(this.parent.plan.securityDefinition)}catch(e){}else this.parent.plan.securityDefinition={}}):(this.securitySchema=void 0,this.parent.plan.securityDefinition={}),void 0===this.parent.plan.id&&(this.parent.plan.securityDefinition={})}gotoNextStep(){this.parent.vm.stepData[1].data=this.parent.plan,this.parent.hasRestrictionStep()?this.parent.moveToNextStep(this.parent.vm.stepData[1]):this.parent.saveOrUpdate()}}]},zn=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(i=Object.getOwnPropertySymbols(e);a<i.length;a++)t.indexOf(i[a])<0&&Object.prototype.propertyIsEnumerable.call(e,i[a])&&(n[i[a]]=e[i[a]])}return n};var Kn={require:{parent:"^editPlan"},template:n(715),controller:["PolicyService",class{constructor(e){this.PolicyService=e,this.methods=["GET","POST","PUT","DELETE","HEAD","PATCH","OPTIONS","TRACE","CONNECT"],this.policies=[{id:"rate-limit",title:"Rate Limiting",description:"Rate limit how many HTTP requests an application can make in a given period of seconds or minutes"},{id:"quota",title:"Quota",description:"Rate limit how many HTTP requests an application can make in a given period of hours, days or months"},{id:"resource-filtering",title:"Resource Filtering",description:"Restrict resources according to whitelist and / or blacklist rules"}]}$onInit(){o.each(this.policies,e=>{this.PolicyService.getSchema(e.id).then(t=>{if(e.schema=t.data,this.parent.isV2())e.model={};else{const t=this.parent.planPolicies.findIndex(t=>null!=t[e.id]);if(-1!==t){const n=this.parent.planPolicies.splice(t,1)[0];e.enabled=!0,e.model=n[e.id]}else e.model={}}})})}validate(){return!o.find(this.policies,e=>e.enabled&&e.form&&e.form.$invalid)}gotoNextStep(){if(this.parent.restrictionsPolicies=[],this.policies.filter(e=>e.enabled).map(e=>{const t={methods:this.methods,enabled:!0};return t[e.id]=e.model,t}).forEach(e=>this.parent.restrictionsPolicies.push(e)),this.parent.vm.stepData[2].data=this.parent.plan,this.parent.hasPoliciesStep())this.parent.moveToNextStep(this.parent.vm.stepData[2]);else{const e=this.parent.restrictionsPolicies.map(e=>{const{enabled:t,methods:n}=e,i=zn(e,["enabled","methods"]),a=Object.keys(i)[0],o=this.policies.find(e=>e.id===a);return{name:o.title,description:o.description,enabled:t,configuration:e[a],policy:a}});this.parent.plan.flows=[{"path-operator":{path:"/",operator:"STARTS_WITH"},enabled:!0,pre:e,post:[]}],delete this.parent.plan.paths,this.parent.saveOrUpdate()}}}]};var Qn,Jn={require:{parent:"^editPlan"},template:n(716),controller:["$mdDialog","PolicyService",class{constructor(e,t){this.$mdDialog=e,this.PolicyService=t}addPolicy(){this.editablePolicy=null;const e=this.parent.policies.find(e=>e.id===this.selectedPolicy),t={id:e.id,name:e.name,enabled:!0,description:e.description},n=this.parent.planPolicies.push(t);this.selectedPolicy=null,this.editPolicy(n-1)}getPolicyClass(e){const t=[],n=this.editablePolicy&&this.editablePolicy.$$hashKey===e.$$hashKey;return n&&t.push("gravitee-policy-card-selected"),n||e.enabled||t.push("gravitee-policy-card-disabled"),e.name||t.push("gravitee-policy-card-missed"),t.join(" ")}editPolicy(e,t){if(t&&t.stopPropagation(),this.editablePolicy===this.parent.planPolicies[e])this.editablePolicy=null;else{this.editablePolicy=this.parent.planPolicies[e];const t=this.editablePolicy&&this.editablePolicy[this.editablePolicy.id];this.policyDefinition=t||{},this.editablePolicy[this.editablePolicy.id]=this.policyDefinition,this.PolicyService.getSchema(this.editablePolicy.id).then(e=>{this.policySchema=e.data,this.policySchema&&0!==Object.keys(this.policySchema).length||(this.policySchema={type:"object",id:"empty",properties:{"":{}}})})}}editPolicyDescription(e,t,i){i.stopPropagation(),this.editablePolicy=null;const a=this.parent.planPolicies[e];this.$mdDialog.show({controller:"DialogEditPolicyController",controllerAs:"editPolicyDialogCtrl",template:n(413),clickOutsideToClose:!0,locals:{description:a.description}}).then(e=>a.description=e)}removePolicy(e,t,i){i.stopPropagation(),this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove this policy?",confirmButton:"Remove"}}).then(t=>{t&&(this.editablePolicy=null,this.parent.planPolicies.splice(e,1))})}switchPolicyEnabled(e,t,n){n.stopPropagation(),this.editablePolicy=null;const i=this.parent.planPolicies[e];i.enabled=!i.enabled}gotoNextStep(){const e=JSON.parse(JSON.stringify(this.parent.planPolicies));e.forEach(e=>{delete e.$$hashKey,delete e.id,delete e.name}),this.parent.plan.paths["/"]=this.parent.restrictionsPolicies.concat(e),this.parent.saveOrUpdate()}}]};!function(e){e.UNSPECIFIED="UNSPECIFIED",e.SHARED="SHARED",e.EXCLUSIVE="EXCLUSIVE"}(Qn||(Qn={}));const Xn=["ACCEPTED","PENDING","PAUSED"];class Zn{constructor(){this.status=Xn,this.page=1,this.size=10}}var ei={bindings:{api:"<",plans:"<",subscriptions:"<"},template:n(717),controller:["ApiService","ApplicationService","NotificationService","Constants","$mdDialog","$state","$rootScope","$timeout",class{constructor(e,t,n,i,a,o,s,r){this.ApiService=e,this.ApplicationService=t,this.NotificationService=n,this.Constants=i,this.$mdDialog=a,this.$state=o,this.$rootScope=s,this.$timeout=r,this.subscribers=null,this.subscribersSelected=null,this.query=new Zn,this.status={ACCEPTED:"Accepted",CLOSED:"Closed",PAUSED:"Paused",PENDING:"Pending",REJECTED:"Rejected"},this.onPaginate=this.onPaginate.bind(this),this.$state.params.status&&(Array.isArray(this.$state.params.status)?this.query.status=this.$state.params.status:this.query.status=this.$state.params.status.split(",")),this.$state.params.application&&(Array.isArray(this.$state.params.application)?this.query.applications=this.$state.params.application:this.query.applications=this.$state.params.application.split(",")),this.$state.params.plan&&(Array.isArray(this.$state.params.plan)?this.query.plans=this.$state.params.plan:this.query.plans=this.$state.params.plan.split(",")),this.$state.params.api_key&&(this.query.api_key=this.$state.params.api_key)}$onInit(){this.getSubscriptionAnalytics(),this.retrieveSelectedApplications(),this.doSearch()}onPaginate(e){this.query.page=e,this.doSearch()}clearFilters(){this.subscriptionsFiltersForm.$setPristine(),this.query=new Zn,this.doSearch()}search(){this.query.page=1,this.query.size=10,this.doSearch()}buildQuery(){let e="?page="+this.query.page+"&size="+this.query.size+"&";const t={};return void 0!==this.query.status&&(t.status=this.query.status.join(",")),void 0!==this.query.applications&&(t.application=this.query.applications.join(",")),void 0!==this.query.plans&&(t.plan=this.query.plans.join(",")),void 0!==this.query.api_key&&(t.api_key=this.query.api_key),o.mapKeys(t,(t,n)=>e+=n+"="+t+"&"),e}doSearch(){const e=this.buildQuery();this.$state.transitionTo(this.$state.current,o.merge(this.$state.params,{status:this.query.status?this.query.status.join(","):"",application:this.query.applications?this.query.applications.join(","):"",plan:this.query.plans?this.query.plans.join(","):"",page:this.query.page,size:this.query.size,api_key:this.query.api_key}),{notify:!1}),this.ApiService.getSubscriptions(this.api.id,e).then(e=>{this.subscriptions=e.data,this.getSubscriptionAnalytics()})}getSubscriptionAnalytics(){this.subscriptions.data&&this.subscriptions.data.length&&this.ApiService.analytics(this.api.id,{type:"date_histo",aggs:"field:subscription",interval:864e5,from:p().endOf("day").subtract(1,"months"),to:p().endOf("day")}).then(e=>{e.data.values&&e.data.values.length&&o.forEach(this.subscriptions.data,t=>{const n=o.find(e.data.values[0].buckets,e=>e.name===t.id);let i;i=n?n.data:e.data.values[0].buckets[0]&&e.data.values[0].buckets[0].data&&e.data.values[0].buckets[0].data.length?o.fill(Array(e.data.values[0].buckets[0].data.length),0):[0],t.chartData={series:[{data:i}]}})})}showAddSubscriptionModal(){this.ApiService.getPublishedApiPlans(this.api.id).then(e=>{const t=o.filter(e.data,e=>e.security!==Ve.KEY_LESS);this.$mdDialog.show({controller:"DialogSubscriptionCreateController",controllerAs:"dialogSubscriptionCreateController",template:n(718),clickOutsideToClose:!0,locals:{api:this.api,plans:t}}).then(e=>{e&&e.application&&e.plan&&this.$shouldPromptForKeyMode(e.application,e.plan).then(t=>{t?this.selectKeyMode().then(t=>this.ApplicationService.update(Object.assign(Object.assign({},e.application),{api_key_mode:t}))).then(()=>this.doSubscribe(e.application,e.plan,e.customApiKey)):this.doSubscribe(e.application,e.plan,e.customApiKey)})})})}exportAsCSV(){this.ApiService.exportSubscriptionsAsCSV(this.api.id,this.buildQuery()).then(e=>{const t=document.createElement("a");t.href="data:attachment/csv,"+encodeURIComponent(e.data),t.target="_self";let n="subscriptions-"+this.api.name+"-"+this.api.version+"-"+o.now();n=n.replace(/[\s]/gi,"-"),n=n.replace(/[^\w]/gi,"-"),t.download=n+".csv",document.getElementById("hidden-export-container").appendChild(t),this.$timeout(()=>{t.click()}),document.getElementById("hidden-export-container").removeChild(t)})}hasFilter(){return o.difference(Xn,this.query.status).length>0||o.difference(this.query.status,Xn).length>0||this.query.applications&&this.query.applications.length||this.query.plans&&this.query.plans.length||this.query.api_key}doSubscribe(e,t,n){this.ApiService.subscribe(this.api.id,e.id,t.id,n).then(e=>{const t=e.data;this.NotificationService.show("A new subscription has been created."),this.$state.go("management.apis.detail.portal.subscriptions.subscription",{subscriptionId:t.id},{reload:!0})})}selectKeyMode(){const e={controller:"ApiKeyModeChoiceDialogController",controllerAs:"$ctrl",template:n(251),clickOutsideToClose:!0};return this.$mdDialog.show(e)}$shouldPromptForKeyMode(e,t){return t.security===Ve.API_KEY&&this.allowsSharedApiKeys&&e.api_key_mode===Qn.UNSPECIFIED?this.$getApiKeySubscriptionsCount(e,t).then(e=>e>=1):Promise.resolve(!1)}$getApiKeySubscriptionsCount(e,t){return this.ApplicationService.listSubscriptions(e.id,"?expand=security").then(e=>e.data.data.filter(e=>e.security===Ve.API_KEY&&e.api!==t.api).length)}get allowsSharedApiKeys(){var e,t,n,i,a;return null===(a=null===(i=null===(n=null===(t=null===(e=this.Constants.env)||void 0===e?void 0:e.settings)||void 0===t?void 0:t.plan)||void 0===n?void 0:n.security)||void 0===i?void 0:i.sharedApiKey)||void 0===a?void 0:a.enabled}applicationSearchTermSearch(){this.ApiService.getSubscribers(this.api.id,this.applicationSearchTerm,1,40,["owner"]).then(e=>{this.subscribers=e.data}),this.retrieveSelectedApplications()}retrieveSelectedApplications(){const e=this.query.applications;e&&e.length>0&&this.ApplicationService.list(null,null,"active",e).then(e=>{this.subscribersSelected=e.data})}clearApplicationSearchTerm(){this.applicationSearchTerm=""}}]};var ti={bindings:{api:"<",subscription:"<"},template:n(719),controller:["$rootScope","$mdDialog","NotificationService","ApiService","$state","Constants",class{constructor(e,t,n,i,a,o){this.$rootScope=e,this.$mdDialog=t,this.NotificationService=n,this.ApiService=i,this.$state=a,this.Constants=o,this.backStateParams={application:a.params.application,plan:a.params.plan,status:a.params.status,page:a.params.page,size:a.params.size,api_key:a.params.api_key}}$onInit(){this.canUseCustomApiKey=this.Constants.env.settings.plan.security.customApiKey.enabled,this.listApiKeys(),this.getApiPlans()}listApiKeys(){this.subscription.plan.security===Ve.API_KEY&&this.ApiService.listApiKeys(this.api.id,this.subscription.id).then(e=>{this.keys=e.data})}close(){let e="<code>"+this.subscription.application.name+"</code> will not be able to consume <code>"+this.api.name+"</code> anymore.";this.subscription.plan.security!==Ve.API_KEY||this.hasSharedApiKeyMode||(e+="<br/>All Api-keys associated to this subscription will be closed and could not be used."),this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to close this subscription to "+this.subscription.plan.name+"?",msg:e,confirmButton:"Close the subscription"}}).then(e=>{e&&this.ApiService.closeSubscription(this.api.id,this.subscription.id).then(e=>{this.NotificationService.show("The subscription has been closed"),this.subscription=e.data,this.listApiKeys()})})}pause(){let e="The application will not be able to consume this API anymore.";this.subscription.plan.security!==Ve.API_KEY||this.hasSharedApiKeyMode||(e+="<br/>All Api-keys associated to this subscription will be paused and could not be used."),this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to pause this subscription?",msg:e,confirmButton:"Pause"}}).then(e=>{e&&this.ApiService.pauseSubscription(this.api.id,this.subscription.id).then(e=>{this.NotificationService.show("The subscription has been paused"),this.subscription=e.data,this.listApiKeys()})})}resume(){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to resume this subscription?",msg:"The application will again be able to consume your API.",confirmButton:"Resume"}}).then(e=>{e&&this.ApiService.resumeSubscription(this.api.id,this.subscription.id).then(e=>{this.NotificationService.show("The subscription has been resumed"),this.subscription=e.data,this.listApiKeys()})})}reject(){this.$mdDialog.show({controller:"DialogSubscriptionRejectController",controllerAs:"dialogSubscriptionRejectController",template:n(720),clickOutsideToClose:!0}).then(e=>{this.process({accepted:!1,reason:e})})}accept(){this.$mdDialog.show({controller:"DialogSubscriptionAcceptController",controllerAs:"$ctrl",template:n(721),clickOutsideToClose:!0,locals:{apiId:this.api.id,applicationId:this.subscription.application.id,canUseCustomApiKey:this.canUseCustomApiKey,sharedApiKeyMode:this.hasSharedApiKeyMode}}).then(e=>{e.accepted=!0,this.process(e)})}process(e){this.ApiService.processSubscription(this.api.id,this.subscription.id,e).then(t=>{this.NotificationService.show("The subscription has been "+(e.accepted?"accepted":"rejected")),this.subscription=t.data,this.$rootScope.$broadcast("graviteeUserTaskRefresh"),e.accepted&&this.listApiKeys()})}transferSubscription(e){this.ApiService.transferSubscription(this.api.id,this.subscription.id,e).then(e=>{this.NotificationService.show("The subscription has been successfully transferred"),this.subscription=e.data,this.getApiPlans()})}renewApiKey(){this.$mdDialog.show({controller:"DialogSubscriptionRenewController",controllerAs:"ctrl",template:n(722),clickOutsideToClose:!0,locals:{title:"Are you sure you want to renew your API Key?",msg:"Your previous API Key will be no longer valid in 2 hours!",customMessage:this.canUseCustomApiKey?"You can provide a custom API key here":null,confirmButton:"Renew",apiId:this.api.id,applicationId:this.subscription.application.id}}).then(e=>{e&&e.confirmed&&this.ApiService.renewApiKey(this.api.id,this.subscription.id,e.customValue).then(()=>{this.NotificationService.show("A new API Key has been generated"),this.listApiKeys()})})}revokeApiKey(e){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to revoke API Key '"+e.key+"'?",confirmButton:"Revoke"}}).then(t=>{t&&this.ApiService.revokeApiKey(this.api.id,this.subscription.id,e.id).then(()=>{this.NotificationService.show("API Key "+e.key+" has been revoked!"),this.listApiKeys()})})}expireApiKey(e){this.$mdDialog.show({controller:"DialogApiKeyExpirationController",controllerAs:"dialogApiKeyExpirationController",template:n(723),clickOutsideToClose:!0,locals:{maxEndDate:this.subscription.ending_at}}).then(t=>{e.expire_at=t,this.ApiService.updateApiKey(this.api.id,this.subscription.id,e).then(()=>{this.NotificationService.show("An expiration date has been defined for API Key."),this.listApiKeys()})})}reactivateApiKey(e){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(184),clickOutsideToClose:!0,locals:{title:"Are you sure you want to reactivate API Key '"+e.key+"'?",confirmButton:"Reactivate"}}).then(t=>{t&&this.ApiService.reactivateApiKey(this.api.id,this.subscription.id,e.id).then(()=>{this.NotificationService.show("API Key "+e.key+" has been reactivated!"),this.listApiKeys()})})}onCopyApiKeySuccess(e){this.NotificationService.show("API Key has been copied to clipboard"),e.clearSelection()}transfer(){this.$mdDialog.show({controller:"DialogSubscriptionTransferController",controllerAs:"$ctrl",template:n(724),clickOutsideToClose:!0,locals:{plans:this.transferablePlans}}).then(e=>{this.subscription.plan=e,this.transferSubscription(this.subscription)})}changeEndDate(){this.$mdDialog.show({controller:"DialogSubscriptionChangeEndDateController",controllerAs:"$ctrl",template:n(725),clickOutsideToClose:!0,locals:{subscription:this.subscription}}).then(e=>{this.subscription.ending_at=e,this.ApiService.updateSubscription(this.api.id,this.subscription).then(()=>{this.NotificationService.show("The end date has been modified."),this.listApiKeys()})})}isValid(e){return!e.revoked&&!e.expired}get hasSharedApiKeyMode(){var e,t;return(null===(t=null===(e=this.subscription)||void 0===e?void 0:e.application)||void 0===t?void 0:t.apiKeyMode)===Qn.SHARED}get apiKeysTitle(){return this.hasSharedApiKeyMode?"Shared API Key":"API Keys"}getApiPlans(){this.ApiService.getApiPlans(this.api.id,"PUBLISHED",this.subscription.plan.security).then(e=>{this.plans=e.data,this.transferablePlans=o.filter(e.data,e=>e.id!==this.subscription.plan.id)})}}]};class ni{}class ii{constructor(e,t){this.$http=e,this.Constants=t}getAnalyticsHttpTimeout(){return this.Constants.env.settings.analytics.clientTimeout}get(e){return this.$http.get(""+this.applicationURL(e))}getApplicationType(e){return this.$http.get(this.applicationURL(e)+"/configuration")}getMembers(e){return this.$http.get(this.applicationURL(e)+"/members")}addOrUpdateMember(e,t){return this.$http.post(`${this.Constants.env.baseURL}/applications/${e}/members`,t)}deleteMember(e,t){return this.$http.delete(this.applicationURL(e)+"/members?user="+t)}transferOwnership(e,t){return this.$http.post(this.applicationURL(e)+"/members/transfer_ownership",t)}list(e=[],t="",n="active",i){let a=`${this.Constants.env.baseURL}/applications/?status=${n}`;if(t&&""!==t.trim()&&(a+="&query="+t),i&&(a+="&"+i.map(e=>"ids="+e).join("&")),e&&e.length>0){a+="&"+e.map(e=>"exclude="+e).join("&")}return this.$http.get(a)}searchPage(e,t=1,n=100){return this.listPage(["picture"],e,t,n)}listPage(e=[],t="",n,i,a,o="active"){let s=`${this.Constants.env.baseURL}/applications/_paged?status=${o}`;if(""!==t.trim()&&(s+="&query="+t),null!=n&&(s+="&page="+n),null!=i&&(s+="&size="+i),null!=a&&(s+="&order="+a),e.length>0){s+="&"+e.map(e=>"exclude="+e).join("&")}return this.$http.get(s)}create(e){return this.$http.post(this.Constants.env.baseURL+"/applications/",e)}update(e){return this.$http.put(this.Constants.env.baseURL+"/applications/"+e.id,{name:e.name,description:e.description,domain:e.domain,groups:e.groups,settings:e.settings,picture:e.picture,picture_url:e.picture_url,disable_membership_notifications:e.disable_membership_notifications,api_key_mode:e.api_key_mode,background:e.background})}delete(e){return this.$http.delete(""+this.applicationURL(e))}search(e){return this.list(["picture"],e)}subscribe(e,t,n){let i;return i=n?{request:n}:"",this.$http.post(this.subscriptionsURL(e)+"?plan="+t,i)}listSubscriptions(e,t){let n=this.subscriptionsURL(e);return void 0!==t&&(n+=t),this.$http.get(n)}getSubscribedAPI(e){return this.$http.get(this.applicationURL(e)+"/subscribed")}getSubscription(e,t){return this.$http.get(this.subscriptionsURL(e)+t)}closeSubscription(e,t){return this.$http.delete(this.subscriptionsURL(e)+t)}listApiKeys(e,t){return t?this.$http.get(this.subscriptionsURL(e.id)+t.id+"/apikeys"):this.$http.get(this.applicationURL(e.id)+"/apikeys")}renewApiKey(e,t){return t?this.$http.post(this.subscriptionsURL(e.id)+t.id+"/apikeys/_renew",""):this.$http.post(this.applicationURL(e.id)+"/apikeys/_renew","")}revokeApiKey(e,t,n){return t?this.$http.delete(this.subscriptionsURL(e.id)+t.id+"/apikeys/"+n):this.$http.delete(this.applicationURL(e.id)+"/apikeys/"+n)}analytics(e,t){let n=this.Constants.env.baseURL+"/applications/"+e+"/analytics?";const i=Object.keys(t);return o.forEach(i,e=>{const i=t[e];void 0!==i&&""!==i&&(n+=e+"="+i+"&")}),this.$http.get(n,{timeout:this.getAnalyticsHttpTimeout()})}findLogs(e,t){return this.$http.get(this.buildURLWithQuery(this.cloneQuery(t),this.Constants.env.baseURL+"/applications/"+e+"/logs?"),{timeout:3e4})}exportLogsAsCSV(e,t){const n=this.cloneQuery(t);return n.page=1,n.size=1e4,this.$http.get(this.buildURLWithQuery(n,this.Constants.env.baseURL+"/applications/"+e+"/logs/export?"),{timeout:3e4})}getLog(e,t,n){return this.$http.get(this.Constants.env.baseURL+"/applications/"+e+"/logs/"+t+(n?"?timestamp="+n:""))}getPermissions(e){return this.$http.get(this.Constants.env.baseURL+"/applications/"+e+"/members/permissions")}renewClientSecret(e){return this.$http.post(`${this.Constants.env.baseURL}/applications/${e}/renew_secret`,{})}getType(e){let t="Simple";if(e.settings)if(e.settings.app&&e.settings.app.type)t=e.settings.app.type;else if(e.settings.oauth)switch(e.settings.oauth.application_type){case"backend_to_backend":t="Backend to backend";break;case"browser":t="Browser";break;case"native":t="Native";break;case"web":t="Web"}return t}listMetadata(e){return this.$http.get(this.applicationURL(e)+"/metadata")}createMetadata(e,t){return this.$http.post(this.applicationURL(e)+"/metadata",t)}updateMetadata(e,t){return this.$http.put(this.applicationURL(e)+"/metadata/"+t.key,t)}deleteMetadata(e,t){return this.$http.delete(this.applicationURL(e)+"/metadata/"+t)}applicationURL(e){return`${this.Constants.env.baseURL}/applications/${e}`}subscriptionsURL(e){return this.applicationURL(e)+"/subscriptions/"}buildURLWithQuery(e,t){const n=Object.keys(e);return o.forEach(n,n=>{const i=e[n];void 0!==i&&""!==i&&(t+=n+"="+i+"&")}),t}cloneQuery(e){const t=o.clone(e);return o.startsWith(t.field,"-")?(t.order=!1,t.field=t.field.substring(1)):t.order=!0,t}}ii.$inject=["$http","Constants"];var ai=ii;class oi{constructor(e,t){this.$http=e,this.Constants=t}getEnabledApplicationTypes(){return this.$http.get(this.Constants.env.baseURL+"/configuration/applications/types")}}oi.$inject=["$http","Constants"];var si=oi;var ri={bindings:{enabledApplicationTypes:"<",groups:"<"},template:n(726),controller:"ApplicationCreationController"},li=(n(200),function(e,t,n,i){return new(n||(n=Promise))((function(a,o){function s(e){try{l(i.next(e))}catch(e){o(e)}}function r(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,r)}l((i=i.apply(e,t||[])).next())}))});class ci{constructor(e,t,n,i,a,o,s){this.Constants=e,this.$state=t,this.$mdDialog=n,this.ApplicationService=i,this.NotificationService=a,this.$q=o,this.ApiService=s,this.selectedStep=0,this.selectedAPIs=[],this.selectedPlans=[],this.messageByPlan={},this.apis=[],this.steps=[{badgeClass:"disable",badgeIconClass:"notification:sync",title:"General",content:"Name and description",completed:!1},{badgeClass:"disable",badgeIconClass:"notification:sync",title:"Security",content:this.clientRegistrationEnabled()?"OIDC configuration":"Type and client id",completed:!1},{badgeClass:"disable",badgeIconClass:"notification:sync",title:"Subscriptions",content:"Subscribe to APIs",completed:!1}]}$onInit(){this.ApiService.list().then(e=>this.apis=e.data)}next(){this.steps[this.selectedStep].completed=!0,this.steps[this.selectedStep].badgeClass="info",this.steps[this.selectedStep].badgeIconClass="action:check_circle",this.steps[0].title=this.application.name,this.selectedStep>0&&(this.applicationType=this.ApplicationService.getType(this.application),this.steps[1].title=this.applicationType),this.goToStep(this.selectedStep+1)}previous(){0===this.selectedStep?this.$state.go("management.applications.list"):this.goToStep(this.selectedStep-1)}goToStep(e){this.selectedStep=e,this.steps[2].title=this.getReadableApiSubscriptions()}clickOnCreate(){this.shouldPromptForKeyMode()?this.selectKeyMode().then(e=>this.application.api_key_mode=e).then(()=>this.createApplication()):this.createApplication()}createApplication(){return li(this,void 0,void 0,(function*(){const{data:e}=yield this.ApplicationService.create(this.application);for(const t of this.selectedPlans)yield this.ApplicationService.subscribe(e.id,t.id,this.messageByPlan[t.id]);this.NotificationService.show("Application "+this.application.name+" has been created"),this.$state.go("management.applications.application.general",{applicationId:e.id},{reload:!0})}))}clientRegistrationEnabled(){return this.Constants.env.settings.application&&this.Constants.env.settings.application.registration&&this.Constants.env.settings.application.registration.enabled}isOAuthClient(){return this.application&&this.application.settings&&this.application.settings.oauth}onSubscribe(e,t){if(t.comment_required){const n=this.$mdDialog.prompt().title("Subscription message").placeholder(t.comment_message?t.comment_message:"Fill a message to the API owner").ariaLabel("Subscription message").required(!0).ok("Confirm").cancel("Cancel");this.$mdDialog.show(n).then(n=>{this.messageByPlan[t.id]=n,this.confirmSubscription(e,t)})}else this.confirmSubscription(e,t)}confirmSubscription(e,t){this.selectedAPIs.push(e),t.alreadySubscribed=!0,this.selectedPlans.push(t),this.steps[2].title=this.getReadableApiSubscriptions()}onUnsubscribe(e,t){t.alreadySubscribed=!1,o.remove(this.selectedPlans,{id:t.id});const n=o.findIndex(this.selectedAPIs,{id:e.id});this.selectedAPIs.splice(n,1),this.steps[2].title=this.getReadableApiSubscriptions()}getReadableApiSubscriptions(){const e=o.groupBy(this.selectedPlans,"api"),t=o.keys(e).length>1;return`Subscribed to API${t?"s:":""} `+o.map(e,(e,n)=>(t?"</br>- <code>":"<code>")+" "+o.find(this.selectedAPIs,e=>e.id===n).name+"</code> with plan <code>"+o.join(o.map(e,"name"),"</code>, ")+"</code>")+"."}shouldPromptForKeyMode(){const e=this.selectedPlans.filter(e=>e.security===Ve.API_KEY),t=o.uniqBy(e,"api");return this.allowsSharedApiKeys&&t.length===e.length&&e.length>1}selectKeyMode(){const e={controller:"ApiKeyModeChoiceDialogController",controllerAs:"$ctrl",template:n(251),clickOutsideToClose:!0};return this.$mdDialog.show(e)}get allowsSharedApiKeys(){var e,t,n,i,a;return null===(a=null===(i=null===(n=null===(t=null===(e=this.Constants.env)||void 0===e?void 0:e.settings)||void 0===t?void 0:t.plan)||void 0===n?void 0:n.security)||void 0===i?void 0:i.sharedApiKey)||void 0===a?void 0:a.enabled}}ci.$inject=["Constants","$state","$mdDialog","ApplicationService","NotificationService","$q","ApiService"];var di=ci;var pi={require:{parent:"^createApplication"},template:n(727),controller:class{constructor(){this.shouldDisplayHint=Qe}}};var mi={require:{parent:"^createApplication"},template:n(728),controller:"ApplicationCreationStep2Controller"};class ui{constructor(e){this.Constants=e}$onInit(){this.selectedType=this.parent.enabledApplicationTypes[0]}selectType(e){this.selectedType=e,this.selectedType.isOauth()?this.parent.application.settings={oauth:{application_type:this.selectedType.id,grant_types:this.selectedType.default_grant_types.map(e=>e.type),redirect_uris:[]}}:this.parent.application.settings={app:{}}}displaySimpleAppConfig(){return!this.selectedType.isOauth()}displayRedirectUris(){return this.selectedType.isOauth()&&this.selectedType.requires_redirect_uris}}ui.$inject=["Constants"];var hi=ui;var gi={require:{parent:"^createApplication"},template:n(729),controller:["ApiService","$scope",function(e,t){this.onSelectAPI=t=>{if(t){const n=this.getAuthorizedSecurity();e.getApiPlans(t.id,"PUBLISHED").then(e=>{const i=o.filter(e.data,e=>o.includes(n,e.security));this.plans=o.map(i,e=>{const t=o.find(this.parent.selectedPlans,{id:e.id});return t||e}),this.selectedAPI=t,this.refreshPlansExcludedGroupsNames()})}else delete this.plans,delete this.selectedAPI},this.getAuthorizedSecurity=()=>{const e=[Ve.API_KEY];return this.parent.application.settings&&(this.parent.application.settings.oauth||this.parent.application.settings.app&&this.parent.application.settings.app.client_id)&&e.push(Ve.JWT,Ve.OAUTH2),e},this.getSelectedAPIs=()=>{const e=o.uniqBy(this.parent.selectedAPIs,"id");return o.map(e,e=>{const t=o.filter(this.parent.selectedPlans,t=>-1!==t.apis.indexOf(e.id));e.plans=o.join(o.map(t,"name"),", ")}),e},t.$watch("$ctrl.parent.application.settings",()=>{this.parent.selectedAPIs=[],this.parent.selectedPlans=[],delete this.plans,delete this.selectedAPI,delete this.filterAPI},!0),this.refreshPlansExcludedGroupsNames=()=>{this.plans.forEach(e=>{var t;return e.excluded_groups_names=null===(t=e.excluded_groups)||void 0===t?void 0:t.map(e=>{var t;return null===(t=this.parent.groups.find(t=>t.id===e))||void 0===t?void 0:t.name})})}}]};var fi={require:{parent:"^createApplication"},template:n(730),controller:["Constants",function(e){e.env.settings.documentation&&e.env.settings.documentation.url?this.url=e.env.settings.documentation.url:this.url="https://docs.gravitee.io"}]};var bi={bindings:{application:"<"},controller:function(){this.$onInit=function(){this.hideSubscribeLink="ARCHIVED"===this.application.status}},template:n(731)};class vi{constructor(e,t,n,i,a){this.ApplicationService=e,this.NotificationService=t,this.$state=n,this.$scope=i,this.$mdDialog=a}$onInit(){this.application.groups||(this.application.groups=[]),this.$scope.$on("applicationPictureChangeSuccess",(e,t)=>{this.application.picture=t.image,this.$scope.formApplication.$setDirty()}),this.$scope.$on("applicationBackgroundChangeSuccess",(e,t)=>{this.application.background=t.image,this.$scope.formApplication.$setDirty()}),this.initialApplication=o.cloneDeep(this.application)}update(){this.ApplicationService.update(this.application).then(()=>{this.initialApplication=o.cloneDeep(this.application),this.$scope.formApplication.$setPristine(),this.NotificationService.show(this.application.name+" has been updated")})}delete(){this.ApplicationService.delete(this.application.id).then(()=>{this.NotificationService.show(this.application.name+" has been deleted"),this.$state.go("management.applications.list",{},{reload:!0})})}reset(){o.assign(this.application,this.initialApplication),this.$scope.formApplication.$setPristine()}isOAuthClient(){return"simple"!==this.application.type.toLowerCase()}showDeleteApplicationConfirm(e){e.stopPropagation(),this.$mdDialog.show({controller:"DialogConfirmAndValidateController",controllerAs:"ctrl",template:n(198),clickOutsideToClose:!0,locals:{title:"Would you like to delete your application?",warning:"This operation is irreversible.",msg:"You will no longer be able to access this application.",validationMessage:"Please, type in the name of the application <code>"+this.application.name+"</code> to confirm.",validationValue:this.application.name,confirmButton:"Yes, delete this application"}}).then(e=>{e&&this.delete()})}renewClientSecret(e){e.stopPropagation(),this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{msg:"By renewing the client secret, you will no longer be able to generate new access tokens and call APIs.",title:"Are you sure to renew the client secret?",confirmButton:"Renew"}}).then(e=>{e&&this.ApplicationService.renewClientSecret(this.application.id).then(e=>{this.NotificationService.show("Client secret has been renew"),this.application=e.data,this.initialApplication=o.cloneDeep(this.application),this.$scope.formApplication.$setPristine()})})}onCopyClientIdSuccess(e){this.NotificationService.show("ClientId has been copied to clipboard"),e.clearSelection()}onCopyClientSecretSuccess(e){this.NotificationService.show("ClientSecret has been copied to clipboard"),e.clearSelection()}}vi.$inject=["ApplicationService","NotificationService","$state","$scope","$mdDialog"];var yi=vi;var Si={bindings:{application:"<",groups:"<",applicationType:"<"},controller:"ApplicationGeneralController",template:n(732)};class wi{constructor(e,t,n,i,a,s,r){this.ApplicationService=e,this.NotificationService=t,this.$mdDialog=n,this.$state=i,this.RoleService=a,this.GroupService=s,this.UserService=r,this.usersSelected=[],a.list("APPLICATION").then(e=>{this.roles=e,this.newPORoles=o.filter(e,e=>"PRIMARY_OWNER"!==e.name),this.newPORole=o.find(e,e=>e.default)})}$onInit(){this.groupById=o.keyBy(this.resolvedGroups,"id"),this.displayGroups={},o.forEach(this.resolvedGroups,e=>{this.displayGroups[e.id]=!1}),this.groupMembers={},this.groupIdsWithMembers=[],this.application.groups&&o.forEach(this.application.groups,e=>{this.GroupService.getMembers(e).then(t=>{const n=o.filter(t.data,e=>e.roles.APPLICATION);n.length>0&&(this.groupMembers[e]=n,this.groupIdsWithMembers.push(e))})}),this.userFilterFn=e=>void 0===e.id||-1===o.findIndex(this.members,t=>t.id===e.id&&"PRIMARY_OWNER"===t.role),this.defaultUsersList=o.filter(this.members,e=>"PRIMARY_OWNER"!==e.role)}updateMember(e){e.role&&this.ApplicationService.addOrUpdateMember(this.application.id,o.pick(e,["id","reference","role"])).then(()=>{this.NotificationService.show(`Member ${e.displayName} has been updated with role ${e.role}`)})}deleteMember(e){const t=this.members.indexOf(e);this.ApplicationService.deleteMember(this.application.id,e.id).then(()=>{this.members.splice(t,1),this.NotificationService.show(e.displayName+" has been removed")})}showDeleteMemberConfirm(e,t){e.stopPropagation(),this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(184),clickOutsideToClose:!0,locals:{title:"Would you like to remove the member?",msg:"",confirmButton:"Remove"}}).then(e=>{e&&this.deleteMember(t)})}showAddMemberModal(e){this.$mdDialog.show({controller:"DialogAddMemberController",template:n(733),parent:i.element(document.body),targetEvent:e,clickOutsideToClose:!0,locals:{application:this.application,members:this.members}}).then(e=>{e&&this.$state.go("management.applications.application.members",{applicationId:this.application.id},{reload:!0})},()=>{})}getMembershipDisplay(e){return e.displayName?e.username?e.displayName+" ("+e.username+")":e.displayName:e.username}getMembershipAvatar(e){return e.id?this.UserService.getUserAvatar(e.id):"assets/default_photo.png"}showTransferOwnershipConfirm(e){this.$mdDialog.show({controller:"DialogTransferApplicationController",controllerAs:"$ctrl",template:n(734),parent:i.element(document.body),targetEvent:e,clickOutsideToClose:!0,locals:{newRole:this.newPORole}}).then(e=>{e&&this.transferOwnership(this.newPORole.name)},()=>{})}isAllowedToTransferOwnership(){return this.UserService.currentUser.isOrganizationAdmin()||this.UserService.currentUser.allowedTo(["api-member-u"])}toggleDisableMembershipNotifications(){this.ApplicationService.update(this.application).then(e=>{this.application=e.data,this.NotificationService.show("Application "+this.application.name+" has been updated")})}transferOwnership(e){const t={id:this.usersSelected[0].id,reference:this.usersSelected[0].reference,role:e};this.ApplicationService.transferOwnership(this.application.id,t).then(()=>{this.NotificationService.show("API ownership changed !"),this.$state.go("management.applications.list")})}}wi.$inject=["ApplicationService","NotificationService","$mdDialog","$state","RoleService","GroupService","UserService"];var Ci=wi;var Ii={bindings:{application:"<",members:"<",resolvedGroups:"<"},controller:"ApplicationMembersController",template:n(735)},$i=n(160);class Ai{}class Oi{constructor(){this.data=[],this.metadata={},this.page=new Ai}populate(e){this.data=e.data,this.metadata=e.metadata,this.page=e.page}}const Ti=["ACCEPTED","PENDING","PAUSED"];class Ri{constructor(){this.status=Ti}}class _i{constructor(e){this.$state=e,this.exclusiveSubscriptions=new Oi,this.sharedSubscriptions=new Oi,this.filter=new Ri,this.$filterEvent=new $i.a(new Ri),this.status={ACCEPTED:"Accepted",CLOSED:"Closed",PAUSED:"Paused",PENDING:"Pending",REJECTED:"Rejected"}}$onInit(){this.$state.params.status&&(Array.isArray(this.$state.params.status)?this.filter.status=this.$state.params.status:this.filter.status=this.$state.params.status.split(",")),this.$state.params.api&&(Array.isArray(this.$state.params.api)?this.filter.apis=this.$state.params.api:this.filter.apis=this.$state.params.api.split(",")),this.$state.params.api_key&&(this.filter.apiKey=this.$state.params.api_key),this.doFilter()}hasFilter(){return this.filter.apis&&this.filter.apis.length>0||!o.isEmpty(this.filter.apiKey)||o.difference(Ti,this.filter.status).length>0||o.difference(this.filter.status,Ti).length>0}areSharedApiKeysDisplayed(){return 0!==this.sharedSubscriptions.data.filter(e=>e.processed_at).length}clearFilter(){this.filter=new Ri,this.doFilter()}doFilter(){this.$state.transitionTo(this.$state.current,o.merge(this.$state.params,{status:this.filter.status?this.filter.status.join(","):"",api:this.filter.apis?this.filter.apis.join(","):"",api_key:this.filter.apiKey?this.filter.apiKey:""}),{notify:!1}),this.$filterEvent.next(this.filter)}}_i.$inject=["$state"];var xi=_i;var Li={bindings:{application:"<",subscribers:"<"},controller:"ApplicationSubscriptionsController",template:n(736)};var Pi={bindings:{application:"<",subscription:"<"},template:n(737),controller:["$mdDialog","NotificationService","ApplicationService","$state",class{constructor(e,t,n,i){this.$mdDialog=e,this.NotificationService=t,this.ApplicationService=n,this.$state=i,this.$listApiKeysEvent=new ct.a,this.backStateParams=i.params}close(){let e="The application will not be able to consume this API anymore.";this.subscription.plan.security===Ve.API_KEY&&this.application.api_key_mode!==Qn.SHARED&&(e+="<br/>All Api-keys associated to this subscription will be closed and could not be used."),this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to close this subscription?",msg:e,confirmButton:"Close"}}).then(e=>{e&&this.ApplicationService.closeSubscription(this.application.id,this.subscription.id).then(e=>{this.NotificationService.show("The subscription has been closed"),this.subscription=e.data,this.$listApiKeysEvent.next()})})}}]};class Ni{constructor(e,t,n){this.ApplicationService=e,this.DashboardService=t,this.$state=n}$onInit(){this.DashboardService.list("APPLICATION",!0).then(e=>{this.dashboards=o.filter(e.data,"enabled");const t=this.$state.params.dashboard;t?(this.dashboard=o.find(this.dashboards,{id:t}),this.dashboard||(delete this.$state.params.dashboard,this.$state.go(this.$state.current))):this.dashboard=this.dashboards[0],o.forEach(this.dashboards,e=>{e.definition&&(e.definition=JSON.parse(e.definition)),o.forEach(e.definition,e=>{o.merge(e,{root:this.application.id,chart:{service:{caller:this.ApplicationService,function:this.ApplicationService.analytics}}})})})})}onDashboardChanged(){this.$state.transitionTo(this.$state.current,o.merge(this.$state.params,{dashboard:this.dashboard.id}),{reload:!0})}viewLogs(){this.$state.transitionTo("management.applications.application.logs.list",this.$state.params)}}Ni.$inject=["ApplicationService","DashboardService","$state"];var Ei=Ni;var Di={bindings:{application:"<",dashboards:"<"},controller:"ApplicationAnalyticsController",template:n(738)};class ji{constructor(e,t,n){this.ApplicationService=e,this.$state=t,this.$scope=n,this.ApplicationService=e,this.onPaginate=this.onPaginate.bind(this),this.query=new ni,this.query.page=this.$state.params.page||1,this.query.size=this.$state.params.size||15}$onInit(){this.query.from=this.$state.params.from,this.query.to=this.$state.params.to,this.query.query=this.$state.params.q,this.query.field="-@timestamp",this.$scope.$watch("$ctrl.query.field",e=>{e&&this.init&&this.refresh()}),this.metadata={apis:this.apis.data}}timeframeChange(e){this.init=!0,this.query.from=e.from,this.query.to=e.to,this.query.page=this.$state.params.page||1,this.refresh()}onPaginate(e){this.query.page=e,this.refresh()}refresh(){this.$state.transitionTo(this.$state.current,{applicationId:this.application.id,page:this.query.page,size:this.query.size,from:this.query.from,to:this.query.to,q:this.query.query},{notify:!1}),this.ApplicationService.findLogs(this.application.id,this.query).then(e=>{this.logs=e.data})}filtersChange(e){this.query.page=this.$state.params.page||1,this.query.query=e,this.refresh()}exportAsCSV(){this.ApplicationService.exportLogsAsCSV(this.application.id,this.query).then(e=>{const t=document.createElement("a");t.href="data:attachment/csv,"+e.data,t.target="_self";let n="logs-"+this.application.name+"-"+o.now();n=n.replace(/[\s]/gi,"-"),n=n.replace(/[^\w]/gi,"-"),t.download=n+".csv",t.click(),document.body.removeChild(t)})}}ji.$inject=["ApplicationService","$state","$scope"];var ki=ji;var Ui={bindings:{application:"<",apis:"<"},controller:"ApplicationLogsController",template:n(739)};var Mi={bindings:{log:"<"},controller:["$state","NotificationService","Constants",function(e,t,n){this.Constants=n,this.NotificationService=t,this.backStateParams={from:e.params.from,to:e.params.to,q:e.params.q,page:e.params.page,size:e.params.size},this.getMimeType=function(e){if(void 0!==e.headers["Content-Type"]){return e.headers["Content-Type"][0].split(";",1)[0]}return null},this.onCopyBodySuccess=function(e){this.NotificationService.show("Body has been copied to clipboard"),e.clearSelection()}}],template:n(740)};function Fi(e,t,n,i,a,s,r){r.list("APPLICATION").then(t=>{e.roles=t}),e.application=n,e.members=i,e.usersSelected=[],e.userFilterFn=t=>-1===o.findIndex(e.members,{id:t.id}),e.hide=function(){t.cancel()},e.addMembers=function(){for(let t=0;t<e.usersSelected.length;t++){const n=e.usersSelected[t],i={id:n.id,reference:n.reference,role:e.role.name};a.addOrUpdateMember(e.application.id,i).then(()=>{s.show("User "+n.displayName+" has been added as a member.")}).catch(t=>{e.error=t})}t.hide(e.application)}}Fi.$inject=["$scope","$mdDialog","application","members","ApplicationService","NotificationService","RoleService"];var qi=Fi;function Hi(e,t,n){this.newRole=n,e.cancel=function(){t.cancel()},e.transferOwnership=function(){t.hide(!0)}}Hi.$inject=["$scope","$mdDialog","newRole"];var Gi=Hi;class Bi{constructor(e,t){this.$http=e,this.Constants=t}search(e,t,n,i,a){return void 0===e&&(e=!1),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===a&&(a=100),this.$http.get(`${this.Constants.env.baseURL}/instances/?includeStopped=${e}&from=${t}&to=${n}&page=${i}&size=${a}`)}get(e){return this.$http.get(this.Constants.env.baseURL+"/instances/"+e)}getMonitoringData(e,t){return this.$http.get(this.Constants.env.baseURL+"/instances/"+e+"/monitoring/"+t)}}Bi.$inject=["$http","Constants"];var Wi=Bi;class Vi{constructor(e,t,n){this.$scope=e,this.InstancesService=t,this.$state=n}$onInit(){this.query={limit:10,page:1},this.searchInstances=this.searchInstances.bind(this),this.searchGatewayInstances="",this._displayEmptyMode=0===this.instances.content.length,this.$scope.showHistory=!1,this.$scope.switchDisplayInstances=()=>{if(this.instances.content=[],this.$scope.showHistory=!this.$scope.showHistory,this.$scope.showHistory){const e=Date.now();this.$state.params.from=e-864e5,this.$state.params.to=e+6e4}else this.searchInstances()}}getOSIcon(e){if(e){const t=e.toLowerCase();if(t.indexOf("mac")>=0)return"apple";if(t.indexOf("nix")>=0||t.indexOf("nux")>=0||t.indexOf("aix")>=0)return"desktop_windows";if(t.indexOf("win")>=0)return"windows"}return"desktop_windows"}onTimeframeChange(e){this.lastFrom=e.from,this.lastTo=e.to,this.searchInstances()}displayEmptyMode(){return 0===this.instances.length}searchInstances(){this.InstancesService.search(this.$scope.showHistory,this.$scope.showHistory?this.lastFrom:0,this.$scope.showHistory?this.lastTo:0,this.$scope.showHistory?this.query.page-1:0,this.$scope.showHistory?this.query.limit:100).then(e=>{this.instances=e.data,this._displayEmptyMode=0===this.instances.content.length})}}Vi.$inject=["$scope","InstancesService","$state"];var Yi=Vi;var zi={bindings:{instances:"<"},controller:"InstancesController",template:n(741)};var Ki={template:n(742),bindings:{widget:"<",updateMode:"<",globalQuery:"<",customTimeframe:"<"},controller:["$scope","$state","AnalyticsService","eventService","ApiService",function(e,t,n,i,a){this.$state=t,this.AnalyticsService=n,this.eventService=i,this.ApiService=a,e.$on("gridster-resized",()=>{e.$broadcast("onWidgetResize")}),this.$onChanges=t=>{t.customTimeframe&&t.customTimeframe.currentValue&&(this.customTimeframe=t.customTimeframe.currentValue,this.changeTimeframe(this.customTimeframe),setTimeout(()=>{e.$broadcast("onWidgetResize")},100))},e.$on("onTimeframeChange",(e,t)=>{this.changeTimeframe(t)});const s=e.$on("onQueryFilterChange",()=>{this.widget.chart&&this.widget.chart.request&&this.reload()});e.$on("$destroy",s),this.changeTimeframe=e=>{if(this.widget.chart&&this.widget.chart.request){let t;this.widget.chart.request.query&&(t=this.widget.chart.request.query),o.assignIn(this.widget.chart.request,{interval:e.interval,from:e.from,to:e.to,query:t}),this.reload()}},this.reload=()=>{this.fetchData=!0;const e=o.cloneDeep(this.widget.chart.request);let t=this.widget.chart.request.field;this.widget.chart.request.aggs&&this.widget.chart.request.aggs.includes("field:")&&(t=this.widget.chart.request.aggs.replace("field:",""));const n=this.AnalyticsService.getQueryFilters();if(n){let i;i=Object.keys(n).find(e=>e===t)?Object.keys(n).filter(n=>e.ranges||n!==t):Object.keys(n),e.query=[e.query,i.map(e=>`(${e}:${n[e].map(t=>this.AnalyticsService.buildQueryParam(t,e)).join(" OR ")})`)].reduce((e,t)=>e.concat(t),[]).filter(e=>e).join(" AND ")}this.globalQuery&&(e.query?o.includes(e.query,this.globalQuery)||(e.query+=" AND "+this.globalQuery):e.query=this.globalQuery);const i=[this.widget.root,e];this.widget.root||i.splice(0,1),this.widget.chart.service.function.apply(this.widget.chart.service.caller,i).then(t=>{if(this.results=t.data,"line"===this.widget.chart.type){if(t.data.timestamp)return this.$state.params.apiId?this.ApiService.searchApiEvents(["PUBLISH_API"],this.$state.params.apiId,t.data.timestamp.from,t.data.timestamp.to,0,10).then(e=>{this.results.events=e.data}):this.eventService.search(["PUBLISH_API"],[],t.data.timestamp.from,t.data.timestamp.to,0,10).then(e=>{this.results.events=e.data})}else if(this.widget.chart.percent)return delete e.query,e.type="count",this.widget.chart.service.function.apply(this.widget.chart.service.caller,i).then(e=>{o.forEach(this.results.values,(t,n)=>{this.results.values[n]=t+"/"+o.round(t/e.data.hits*100,2)})})}).finally(()=>this.fetchData=!1)},this.delete=()=>{e.$emit("onWidgetDelete",this.widget)},this.getIconFromType=()=>{switch(this.widget.chart.type){case"line":return"multiline_chart";case"map":return"map";case"pie":return"pie_chart";case"stats":return"bubble_chart";case"table":return"view_list";default:return"insert_chart"}}}]};var Qi={template:n(743),bindings:{data:"<"},require:{parent:"^gvWidget"},controller:["$scope","$state","AnalyticsService",function(e,t,n){this.AnalyticsService=n,this.$scope=e,this.$state=t,this.selected=[],this.$onInit=function(){this.widget=this.parent.widget},this.$onChanges=e=>{if(e.data){const t=e.data.currentValue;this.paging=1,this.results=o.map(t.values,(e,n)=>{let i;if(o.includes(e,"/")){const t=e.split("/");e=parseInt(t[0],10),i=parseFloat(t[1])}const a={key:n,value:e,percent:i,metadata:t&&t.metadata?Object.assign(Object.assign({},t.metadata[n]),{order:+t.metadata[n].order}):void 0},s=this.widget||this.parent.widget;if(s){const e=this.AnalyticsService.getQueryFilters();if(e){const t=e[s.chart.request.field];t&&t.includes(n)&&setTimeout(()=>{this.selected.push(a)})}}return a})}},this.selectItem=e=>{this.updateQuery(e,!0)},this.deselectItem=e=>{this.updateQuery(e,!1)},this.updateQuery=(e,t)=>{this.$scope.$emit("filterItemChange",{widget:this.widget.$uid,field:this.widget.chart.request.field,fieldLabel:this.widget.chart.request.fieldLabel,key:e.key,name:e.metadata.name,mode:t?"add":"remove"})},this.isClickable=function(e){return!("management.dashboard.analytics"!==t.current.name&&"management.dashboard.home"!==t.current.name||e.metadata.unknown||"api"!==this.widget.chart.request.field&&"application"!==this.widget.chart.request.field)},this.goto=function(e){"management.dashboard.analytics"!==t.current.name&&"management.dashboard.home"!==t.current.name||("api"===this.widget.chart.request.field?this.$state.go("management.apis.detail.analytics.overview",{apiId:e,from:this.widget.chart.request.from,to:this.widget.chart.request.to,q:this.widget.chart.request.query}):"application"===this.widget.chart.request.field&&this.$state.go("management.applications.application.analytics",{applicationId:e,from:this.widget.chart.request.from,to:this.widget.chart.request.to,q:this.widget.chart.request.query}))}}]};n(445);var Ji={template:n(744),bindings:{data:"<"},require:{parent:"^gvWidget"},controller:["$scope","$element","$rootScope","$state","AnalyticsService","eventService",function(e,t,n,i,a,o){this.AnalyticsService=a,this.eventService=o,this.$scope=e,this.$onInit=()=>{this.widget=this.parent.widget},this.$onChanges=n=>{if(n.data){const i=n.data.currentValue;this.series={values:[]},this.gvChartLine=t.children()[0],i.values&&i.values.length>0||i.events&&i.events.content&&i.events.content.length>0?(this.prepareData(i),this.gvChartLine.setAttribute("series",JSON.stringify(this.series)),this.gvChartLine.setAttribute("options",JSON.stringify(this.options)),this.gvChartLine.addEventListener("gv-chart-line:zoom",this.onZoom.bind(this)),this.gvChartLine.addEventListener("gv-chart-line:select",this.onSelect.bind(this)),e.$on("onWidgetResize",this.onResize.bind(this))):(this.gvChartLine.setAttribute("options",JSON.stringify([{}])),this.gvChartLine.setAttribute("series",JSON.stringify([{}])))}},this.prepareData=e=>{const t=e.timestamp;this.events=e.events&&e.events.content;const n=[];e.values.forEach((t,i)=>{let a=this.parent.widget.chart.labels?this.parent.widget.chart.labels[i]:"";if(0===t.buckets.length){const t=(e.timestamp.to-e.timestamp.from)/e.timestamp.interval;n.push(a),this.series.values.push({name:a,data:Array(t).fill(0),labelPrefix:a,id:a,visible:!0})}else{let e=this.parent.widget.chart.request.field;this.parent.widget.chart.request.aggs&&this.parent.widget.chart.request.aggs.includes("field:")&&(e=this.parent.widget.chart.request.aggs.replace("field:",""));const o=this.AnalyticsService.getQueryFilters();t.buckets.forEach(s=>{if(s){let r=this.parent.widget.chart.request.aggs.split("%3B")[i].includes("field:");("1"===s.name||s.name.match("^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"))&&(r=!1),(!a||t.metadata&&t.metadata[s.name])&&(a=t.metadata[s.name].name);const l=r?s.name:a;n.push(l),this.series.values.push({name:l,data:s.data,labelPrefix:r?a:"",id:s.name,visible:!o||!o[e]||o[e].includes(s.name)})}}),n.sort()}}),this.series.values.forEach(e=>{e.legendIndex=n.indexOf(e.name)}),this.options={labelPrefix:"HTTP Status",pointStart:t.from,pointInterval:t.interval,stacking:this.parent.widget.chart.stacked?"normal":null,plotLines:(this.events||[]).map(e=>({color:"rgba(223, 169, 65, 0.4)",width:2,value:e.created_at,label:{useHTML:!0,text:`\n                  <div style="\n                        background-color: var(--gv-theme-font-color-dark, #262626);\n                        color: white;\n                        padding: 5px;\n                        border-radius: 2px;\n                        z-index: 99;\n                        visibility: hidden;">\n                    <span>Deployment #${e.properties.deployment_number}</span>\n                    <br>\n                    <span>${e.properties.deployment_label||""}</span>\n                  </div>`,rotation:0,style:{visibility:"hidden"}}}))}},this.onZoom=e=>{n.$broadcast("timeframeZoom",{from:Math.floor(e.detail.from),to:Math.round(e.detail.to)})},this.onSelect=e=>{const t=e.detail.chart.series[e.detail.index];if(this.parent.widget.chart.selectable){const e=this.parent.widget.chart.request.query;e&&e.includes(t.name)?this.updateQuery(t,!1):this.updateQuery(t,!0)}else this.series.values.forEach(e=>{e.name===t.name&&(e.visible=!t.visible)}),this.gvChartLine.setAttribute("series",JSON.stringify(this.series))},this.onResize=()=>{this.options=Object.assign(Object.assign({},this.options),{height:this.gvChartLine.offsetHeight,width:this.gvChartLine.offsetWidth}),this.gvChartLine.setAttribute("options",JSON.stringify(this.options))},this.updateQuery=(e,t)=>{this.widget&&e.userOptions&&this.$scope.$emit("filterItemChange",{widget:this.widget.$uid,field:this.widget.chart.request.aggs.split(":")[1],key:e.userOptions.id,name:e.name,mode:t?"add":"remove"})}}]};n(1305);var Xi={template:n(745),bindings:{data:"<"},require:{parent:"^gvWidget"},controller:["$scope","$element",function(e,t){this.$onInit=()=>{e.$on("onWidgetResize",this.onResize.bind(this))},this.$onChanges=function(e){if(e.data){this.gvChartPie=t.children()[0],this.options={name:this.parent.widget.title,data:Object.keys(e.data.currentValue.values||{}).map((e,t)=>({name:this.parent.widget.chart.labels?this.parent.widget.chart.labels[t]:e,color:this.parent.widget.chart.colors[t]}))};const n={values:e.data.currentValue?e.data.currentValue.values:{}};this.gvChartPie.setAttribute("series",JSON.stringify(n)),this.gvChartPie.setAttribute("options",JSON.stringify(this.options))}},this.onResize=()=>{this.options=Object.assign(Object.assign({},this.options),{height:this.gvChartPie.offsetHeight,width:this.gvChartPie.offsetWidth}),this.gvChartPie.setAttribute("options",JSON.stringify(this.options))}}]};n(1306);var Zi={template:n(747),bindings:{data:"<"},require:{parent:"^gvWidget"},controller:["$scope","$element",function(e,t){this.options={name:"Number of API requests",excludedKeys:["Unknown"]},this.$onInit=()=>{e.$on("onWidgetResize",this.onResize.bind(this))},this.$onChanges=function(e){if(this.gvChartMap=t.children()[0],e.data){const t={values:e.data.currentValue?e.data.currentValue.values:[]};this.gvChartMap.setAttribute("series",JSON.stringify(t)),this.gvChartMap.setAttribute("options",JSON.stringify(this.options))}},this.onResize=()=>{this.options=Object.assign(Object.assign({},this.options),{height:this.gvChartMap.offsetHeight,width:this.gvChartMap.offsetWidth}),this.gvChartMap.setAttribute("options",JSON.stringify(this.options))}}]};n(1307);var ea={template:n(748),bindings:{data:"<"},require:{parent:"^gvWidget"},controller:["$scope","$element",function(e,t){this.$onInit=()=>{this.chartData=o.cloneDeep(this.parent.widget.chart.data),n()};const n=()=>{const e=t.children()[0],n={};Object.values(this.data).some(e=>0!==e)&&this.chartData.forEach(e=>{n[e.key]=this.data[e.key]});const i=this.chartData.map(e=>({key:e.key,unit:e.unit,color:e.color,label:e.label,fallback:e.fallback&&e.fallback.map(e=>({key:e.key,label:e.label}))}));e.setAttribute("stats",JSON.stringify(n)),e.setAttribute("options",JSON.stringify(i))}}]};var ta={template:n(749),bindings:{chart:"<"},controller:["DashboardService",function(e){this.fields=e.getIndexedFields(),this.projections=o.concat({label:"Hits",value:"_count",type:"count"},e.getAverageableFields()),this.projectionOrders=[{label:"Desc",value:"-"},{label:"Asc",value:""}],this.$onInit=()=>{if(this.chart.request||o.merge(this.chart,{request:{type:"group_by",field:this.fields[0].value},columns:[],paging:5}),this.chart.request.field.startsWith("custom")?(this.field=this.chart.request.field.substr("custom.".length),this.isCustomField=!0):(this.field=this.chart.request.field,this.isCustomField=!1),this.chart.request.order){const e=this.chart.request.order.split(":"),t=e[0],n=e[1];"-"===t.charAt(0)?(this.order="-",this.aggregate=t.substring(1)):(this.order="",this.aggregate=t),this.projection=n||"_count"}else this.order="-",this.aggregate="avg",this.projection="_count";this.onFieldChanged(),this.onProjectionChanged()},this.onFieldChanged=()=>{this.isCustomField?this.chart.request.field="custom."+this.field:this.chart.request.field=this.field;const e=o.find(this.fields,e=>e.value===this.field);this.chart.columns[0]=e?e.label:this.field},this.onProjectionChanged=()=>{this.chart.columns[1]=o.find(this.projections,e=>e.value===this.projection).label,this.projection?(this.chart.request.order=this.order+this.aggregate+":"+this.projection,"_count"!==this.projection&&(this.chart.percent=!1)):delete this.chart.request.order}}]};var na={template:n(750),bindings:{chart:"<"},controller:["DashboardService",function(e){this.fields=e.getAggregateFields(),this.$onInit=()=>{this.data=[],this.chart.request?this.chart.request.aggs&&!this.chart.request.aggs.startsWith("field:custom")&&(this.data=this.chart.request.aggs.split("%3B")):o.merge(this.chart,{request:{type:"date_histo",aggs:""},labels:[]}),this.chart.request.aggs.startsWith("field:custom")?(this.field=this.chart.request.aggs.substr("field:custom.".length),this.isCustomField=!0):(this.field="",this.isCustomField=!1)},this.onFieldChanged=()=>{this.chart.request.aggs="field:custom."+this.field,this.chart.labels.push(this.field)},this.onDataChanged=()=>{this.chart.request.aggs="",this.chart.labels=[];const e=o.last(this.data);o.forEach(this.data,t=>{this.chart.request.aggs+=t+(e===t?"":"%3B"),this.chart.labels.push(o.find(this.fields,e=>e.aggValue===t).label)})}}]};var ia={template:n(751),bindings:{chart:"<"},controller:function(){this.$onInit=()=>{this.chart.request||o.merge(this.chart,{request:{type:"group_by",field:"geoip.city_name"}})}}};var aa={template:n(752),bindings:{chart:"<"},controller:["DashboardService",function(e){this.fields=e.getNumericFields(),this.$onInit=()=>{if(this.data=[],this.chart.request){if(this.chart.request.ranges){const e=this.chart.request.ranges.split("%3B");let t=0;o.forEach(e,e=>{e&&this.data.push({min:parseInt(e.split(":")[0],10),max:parseInt(e.split(":")[1],10),label:this.chart.labels[t],color:this.chart.colors[t++]})})}}else o.merge(this.chart,{request:{type:"group_by",field:this.fields[0].value,ranges:""},labels:[],colors:[]});this.chart.request.field.startsWith("custom")?(this.field=this.chart.request.field.substr("custom.".length),this.isCustomField=!0):(this.field=this.chart.request.field,this.isCustomField=!1)},this.onFieldChanged=()=>{this.chart.request.field="custom."+this.field},this.onDataChanged=()=>{this.chart.request.ranges="",this.chart.labels=[],this.chart.colors=[];const e=o.last(this.data);o.forEach(this.data,t=>{this.chart.request.ranges+=t.min+":"+t.max+(e===t?"":"%3B"),this.chart.labels.push(t.label),this.chart.colors.push(t.color)})},this.addData=()=>{this.data.push({}),this.onDataChanged()},this.removeData=e=>{o.remove(this.data,e),this.onDataChanged()}}]};class oa{constructor(e){this.DashboardService=e,this.fields=this.DashboardService.getAverageableFields(),this.selectedStatsKeys=[]}$onInit(){if(!this.chart.data){const e=this.fields[0];Object(o.merge)(this.chart,{request:{type:"stats",field:e.value},data:oa.getStatsAccordingToFieldType(e.type)})}this.selectedField=this.fields.find(e=>e.value===this.chart.request.field),this.availableStats=oa.getStatsAccordingToFieldType(this.selectedField.type),this.selectedStatsKeys=this.chart.data.map(e=>e.key)}onFieldChanged(){this.chart.request.field=this.selectedField.value,this.availableStats=oa.getStatsAccordingToFieldType(this.selectedField.type),this.selectedStatsKeys=this.availableStats.map(e=>e.key),this.onStatsChanged()}onStatsChanged(){this.chart.data=this.availableStats.filter(e=>{var t;return(null!==(t=this.selectedStatsKeys)&&void 0!==t?t:[]).includes(e.key)})}static getStatsAccordingToFieldType(e){return"duration"===e?[{key:"min",label:"min",unit:"ms",color:"#66bb6a"},{key:"max",label:"max",unit:"ms",color:"#ef5350"},{key:"avg",label:"avg",unit:"ms",color:"#42a5f5"},{key:"rps",label:"requests per second",color:"#ff8f2d",fallback:[{key:"rpm",label:"requests per minute"},{key:"rph",label:"requests per hour"}]},{key:"count",label:"total",color:"black"}]:"length"===e?[{key:"min",label:"min",unit:"byte",color:"#66bb6a"},{key:"max",label:"max",unit:"byte",color:"#ef5350"},{key:"avg",label:"avg",unit:"byte",color:"#42a5f5"}]:[]}}oa.$inject=["DashboardService"];var sa={template:n(753),bindings:{chart:"<"},controller:oa};var ra={template:n(754),bindings:{model:"<",accessLogs:"<",onFilterChange:"&",onTimeframeChange:"&",onViewLogClick:"&",updateMode:"<",customTimeframe:"<"},controller:["$scope",function(e){this.initialEventCounter=2,this.initialTimeFrame=void 0,this.initialQuery=void 0,this.dashboardOptions={margins:[10,10],columns:6,swapping:!1,draggable:{enable:!0,handle:"md-card-title"},resizable:{enabled:!0,stop:function(){e.$broadcast("onWidgetResize")}},rowHeight:330},this.timeframeChange=function(t){this.initialEventCounter>0&&this.initialEventCounter--,0===this.initialEventCounter?(e.$broadcast("onTimeframeChange",t),this.onTimeframeChange&&this.onTimeframeChange({timeframe:t}),this.initialQuery&&(e.$broadcast("onQueryFilterChange",{query:this.initialQuery,source:void 0}),this.onFilterChange&&this.onFilterChange({query:this.initialQuery}),delete this.initialQuery)):this.initialTimeFrame=t},this.queryFilterChange=function(t,n){this.initialEventCounter>0&&this.initialEventCounter--,0===this.initialEventCounter?(e.$broadcast("onQueryFilterChange",{query:t,source:n}),this.onFilterChange&&this.onFilterChange({query:t}),this.initialTimeFrame&&(e.$broadcast("onTimeframeChange",this.initialTimeFrame),this.onTimeframeChange&&this.onTimeframeChange({timeframe:this.initialTimeFrame}),delete this.initialTimeFrame)):this.initialQuery=t},this.viewLogs=function(){this.onViewLogClick&&this.onViewLogClick()},this.$onInit=()=>{this.model&&o.each(this.model.definition,e=>{e.$uid=this.guid()})},this.guid=function(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()},e.$on("onWidgetDelete",(e,t)=>{o.remove(this.model.definition,t)})}]};var la={bindings:{onFilterChange:"&"},template:n(755),controller:"DashboardFilterController",require:{parent:"^gvDashboard"}},ca=function(e,t,n,i){return new(n||(n=Promise))((function(a,o){function s(e){try{l(i.next(e))}catch(e){o(e)}}function r(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,r)}l((i=i.apply(e,t||[])).next())}))};class da{constructor(e,t,n,i){this.$rootScope=e,this.$state=t,this.AnalyticsService=n,this.$timeout=i,this.fields={},this.filters=[],this.filterItemChangeListener=e.$on("filterItemChange",(e,t)=>{"add"===t.mode?this.addFieldFilter(t):"remove"===t.mode&&this.removeFieldFilter(t)})}$onDestroy(){this.filterItemChangeListener()}$onInit(){const e=this.AnalyticsService.getQueryFilters();e?this.decodeQueryFilters(e):this.onFilterChange({query:void 0,widget:this.lastSource})}addFieldFilter(e,t=!0){const n=this.fields[e.field]||{filters:{}};n.filters[e.key]={value:e.name,onRemove:void 0!==e.events&&e.events.remove};const i=(e.fieldLabel?e.fieldLabel:e.field)+" = '"+e.name+"'",a="("+o.map(o.keys(n.filters),t=>e.field.includes("path")||e.field.includes("host")?e.field+':\\"'+t+'\\"':e.field+":"+t).join(" OR ")+")";this.filters.push({source:e.widget,key:e.field+"_"+e.key,label:i}),this.filters=o.uniqBy(this.filters,"key"),n.query=a,this.fields[e.field]=n,this.lastSource=e.widget,t&&this.createAndSendQuery(e.silent)}removeFieldFilter(e){this.removeFilter(e.field,e.key,e.silent)}deleteChips(e){const t=e.key.lastIndexOf("_");this.lastSource=e.source,this.removeFilter(e.key.substring(0,t),e.key.substring(t+1),!1)}removeFilter(e,t,n){const i=o.remove(this.filters,n=>n.key===e+"_"+t);i.length>0&&(this.lastSource=i[0].source);const a=this.fields[e]||{filters:{}},s=a.filters[t];s&&(delete a.filters[t],s.onRemove&&!n&&s.onRemove(t)),(0===Object.keys(a.filters).length||o.isEmpty(a.filters))&&delete a.filters,o.isEmpty(a.filters)?delete this.fields[e]:(a.query="("+o.map(o.keys(a.filters),t=>e.includes("path")||e.includes("host")?e+':\\"'+t+'\\"':e+":"+t).join(" OR ")+")",this.fields[e]=a),this.createAndSendQuery(n)}createAndSendQuery(e){const t=Object.keys(this.fields).map(e=>this.fields[e].query).join(" AND ");e||this.$timeout(()=>ca(this,void 0,void 0,(function*(){yield this.$state.transitionTo(this.$state.current,o.merge(this.$state.params,{q:t}),{notify:!1}),this.onFilterChange({query:t,widget:this.lastSource})})))}decodeQueryFilters(e){let t;Object.keys(e).forEach(n=>{const i=n;e[n].forEach(e=>{const n={};n.key=e,n.name=e,n.field=i,n.fieldLabel=i,this.addFieldFilter(n,!1),t=n})}),this.createAndSendQuery(t.silent)}}da.$inject=["$rootScope","$state","AnalyticsService","$timeout"];var pa=da;var ma={template:n(756),controller:"DashboardTimeframeController",bindings:{onTimeframeChange:"&"},require:{parent:"^gvDashboard"}},ua=function(e,t,n,i){return new(n||(n=Promise))((function(a,o){function s(e){try{l(i.next(e))}catch(e){o(e)}}function r(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,r)}l((i=i.apply(e,t||[])).next())}))};class ha{constructor(e,t,n,i,a){this.$scope=e,this.$rootScope=t,this.$state=n,this.$timeout=i,this.$interval=a,this.displayModes=[{field:"",key:"",label:"All"},{key:"endpoint",field:"_exists_",label:"Only hits to the backend endpoint"},{key:"endpoint",field:"!_exists_",label:"Without hits to the backend endpoint"}],this.displayMode=this.displayModes[0],this.arIntervals=[{interval:-1,label:"Auto-refresh disabled"},{interval:5e3,label:"Each 5 seconds"},{interval:1e4,label:"Each 10 seconds"},{interval:3e4,label:"Each 30 seconds"}],this.autoRefreshInterval=this.arIntervals[0].interval,this.timeframes=[{id:"5m",title:"Last 5m",range:3e5,interval:1e4},{id:"30m",title:" 30m",range:18e5,interval:15e3},{id:"1h",title:" 1h",range:36e5,interval:3e4},{id:"3h",title:" 3h",range:108e5,interval:6e4},{id:"6h",title:" 6h",range:216e5,interval:12e4},{id:"12h",title:" 12h",range:432e5,interval:3e5},{id:"1d",title:"1d",range:864e5,interval:6e5},{id:"3d",title:"3d",range:2592e5,interval:18e5},{id:"7d",title:"7d",range:6048e5,interval:36e5},{id:"14d",title:"14d",range:12096e5,interval:108e5},{id:"30d",title:"30d",range:2592e6,interval:216e5},{id:"90d",title:"90d",range:7776e6,interval:432e5}],this.unRegisterTimeframeZoom=this.$rootScope.$on("timeframeZoom",(e,t)=>{const n=t.to-t.from;let i=o.findLast(this.timeframes,e=>e.range<n);i||(i=this.timeframes[0]),this.update({interval:i.interval,from:t.from,to:t.to})}),this.$scope.$on("$destroy",()=>{this.stopAutoRefresh()})}$onInit(){this.$state.params.from&&this.$state.params.to?this.update({from:this.$state.params.from,to:this.$state.params.to}):this.setTimeframe(this.$state.params.timeframe||"5m",!0)}$onDestroy(){this.unRegisterTimeframeZoom()}updateTimeframe(e){e&&this.$timeout(()=>ua(this,void 0,void 0,(function*(){yield this.$state.transitionTo(this.$state.current,o.merge(this.$state.params,{timestamp:"",timeframe:e}),{notify:!1}),this.setTimeframe(e,!0)})))}setTimestamp(e){const t=m.a.unix(e),n=Math.floor(t.startOf("day").valueOf()/1e3),i=Math.floor(t.endOf("day").valueOf()/1e3);this.update({interval:3e5,from:1e3*n,to:1e3*i})}setTimeframe(e,t){if(this.timeframe=o.find(this.timeframes,t=>t.id===e),t){const e=Date.now();this.update({interval:this.timeframe.interval,from:e-this.timeframe.range,to:e})}}refresh(){const e=Date.now();this.update({interval:this.timeframe.interval,from:e-this.timeframe.range,to:e})}autoRefreshChange(){this.stopAutoRefresh(),-1!==this.autoRefreshInterval&&(this.currentInterval=this.$interval(()=>this.refresh(),this.autoRefreshInterval))}stopAutoRefresh(){i.isDefined(this.currentInterval)&&(this.$interval.cancel(this.currentInterval),this.currentInterval=void 0)}update(e){const t={interval:parseInt(e.interval,10),from:parseInt(e.from,10),to:parseInt(e.to,10)},n=t.to-t.from,i=o.findLast(this.timeframes,e=>e.range<=n);this.timeframe=i||this.timeframes[0],this.$timeout(()=>{const e={interval:this.timeframe.interval,from:t.from,to:t.to};this.onTimeframeChange({timeframe:e})},200),this.current={interval:this.timeframe.interval,intervalLabel:m.a.duration(this.timeframe.interval).humanize(),from:t.from,to:t.to},this.$timeout(()=>ua(this,void 0,void 0,(function*(){yield this.$state.transitionTo(this.$state.current,o.merge(this.$state.params,this.current))}))),this.pickerStartDate=m()(t.from),this.pickerEndDate=m()(t.to)}updateRangeDate(){const e=1e3*this.pickerStartDate.startOf("minute").unix(),t=1e3*this.pickerEndDate.endOf("minute").unix(),n=t-e;let i=o.findLast(this.timeframes,e=>e.range<n);i||(i=this.timeframes[0]),this.update({interval:i.interval,from:e,to:t})}updateDisplayMode(){o.forEach(this.displayModes,e=>{this.$scope.$emit("filterItemChange",{field:e.field,key:e.key,mode:"remove",silent:!(!this.displayMode.field&&o.last(this.displayModes)===e)})}),this.displayMode.field&&this.$scope.$emit("filterItemChange",{field:this.displayMode.field,fieldLabel:"Display mode",key:this.displayMode.key,name:this.displayMode.label,mode:"add",events:{remove:()=>{this.displayMode=this.displayModes[0]}}})}}ha.$inject=["$scope","$rootScope","$state","$timeout","$interval"];var ga=ha;var fa={template:n(757),controller:"ContextualDocController"};class ba{constructor(e,t,n,i,a){this.$transitions=e,this.$http=t,this.$state=n,this.$window=i,this.$rootScope=a,this.isOpen=!0,this.page={},this.contextualDocVisibilityKey="gv-contextual-doc-visibility",window.pendo&&window.pendo.isReady()?this.isOpen=!1:(null!==i.localStorage.getItem(this.contextualDocVisibilityKey)?(this.isOpen=JSON.parse(i.localStorage.getItem(this.contextualDocVisibilityKey)),this.$rootScope.helpDisplayed=this.isOpen):this.setDocumentationVisibility(),this.changeDocumentationPage(n.current),e.onFinish({},e=>{this.changeDocumentationPage(e.to())}))}$onInit(){window.pendo&&window.pendo.isReady()?this.isOpen=!1:this.openContextualDocumentationListener=this.$rootScope.$on("openContextualDocumentation",()=>{this.openDocumentation(),this.changeDocumentationPage(this.$state.current)})}$onDestroy(){this.openContextualDocumentationListener()}openDocumentation(){this.isOpen=!this.isOpen,this.setDocumentationVisibility(),this.$rootScope.$broadcast("onWidgetResize")}changeDocumentationPage(e){this.isOpen&&e.data&&e.data.docs&&this.$http.get(`./docs/${e.data.docs.page}.md`).then(e=>{this.page.content=r.marked.parse(e.data)})}setDocumentationVisibility(){this.$window.localStorage.setItem(this.contextualDocVisibilityKey,this.isOpen),this.$rootScope.helpDisplayed=this.isOpen}}ba.$inject=["$transitions","$http","$state","$window","$rootScope"];var va=ba;class ya{constructor(e,t,n,i,a,s,r,l,c,d){this.ApiService=e,this.resolvedApi=t,this.plans=n,this.applications=i,this.tenants=a,this.$scope=s,this.Constants=r,this.$state=l,this.$timeout=c,this.AnalyticsService=d,this.ApiService=e,this.$scope=s,this.$state=l,this.api=t.data,this.metadata={applications:i.data,plans:n.data};void 0!==o.chain(this.api.proxy.groups).map(e=>e.endpoints).find(e=>o.has(e,"tenants"))&&(this.metadata.tenants=a.data),this.onPaginate=this.onPaginate.bind(this),this.query=this.AnalyticsService.buildQueryFromState(this.$state),this.$scope.$watch("logsCtrl.query.field",e=>{e&&this.init&&this.refresh()})}timeframeChange(e){this.init=!0,this.query.from=e.from,this.query.to=e.to,this.query.page=this.$state.params.page||1,this.refresh()}onPaginate(e){this.query.page=e,this.refresh()}refresh(){this.$state.transitionTo(this.$state.current,{apiId:this.api.id,page:this.query.page,size:this.query.size,from:this.query.from,to:this.query.to,q:this.query.query},{notify:!1}),this.ApiService.findLogs(this.api.id,this.query).then(e=>{this.logs=e.data,this.AnalyticsService.setFetchedLogs(e.data.logs)})}getMetadata(e){return this.logs.metadata[e]}filtersChange(e){this.query.page=this.$state.params.page||1,this.query.query=e,this.refresh()}exportAsCSV(){this.ApiService.exportLogsAsCSV(this.api.id,this.query).then(e=>{const t=document.createElement("a");t.href="data:attachment/csv,"+encodeURIComponent(e.data),t.target="_self";let n="logs-"+this.api.name+"-"+this.api.version+"-"+o.now();n=n.replace(/[\s]/gi,"-"),n=n.replace(/[^\w]/gi,"-"),t.download=n+".csv",document.getElementById("hidden-export-container").appendChild(t),this.$timeout(()=>{t.click()}),document.getElementById("hidden-export-container").removeChild(t)})}}ya.$inject=["ApiService","resolvedApi","plans","applications","tenants","$scope","Constants","$state","$timeout","AnalyticsService"];var Sa=ya;var wa={template:n(758),controller:"LogsTimeframeController",bindings:{onTimeframeChange:"&"}},Ca=function(e,t,n,i){return new(n||(n=Promise))((function(a,o){function s(e){try{l(i.next(e))}catch(e){o(e)}}function r(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,r)}l((i=i.apply(e,t||[])).next())}))};class Ia{constructor(e,t,n,i){this.$scope=e,this.$rootScope=t,this.$state=n,this.$timeout=i,this.timeframes=[{id:"5m",title:"Last 5m",range:3e5,interval:1e4},{id:"30m",title:" 30m",range:18e5,interval:15e3},{id:"1h",title:" 1h",range:36e5,interval:3e4},{id:"3h",title:" 3h",range:108e5,interval:6e4},{id:"6h",title:" 6h",range:216e5,interval:12e4},{id:"12h",title:" 12h",range:432e5,interval:3e5},{id:"1d",title:"1d",range:864e5,interval:6e5},{id:"3d",title:"3d",range:2592e5,interval:18e5},{id:"7d",title:"7d",range:6048e5,interval:36e5},{id:"14d",title:"14d",range:12096e5,interval:108e5},{id:"30d",title:"30d",range:2592e6,interval:216e5},{id:"90d",title:"90d",range:7776e6,interval:432e5}],this.unRegisterTimeframeZoom=this.$rootScope.$on("timeframeZoom",(e,t)=>{const n=t.to-t.from;let i=o.findLast(this.timeframes,e=>e.range<n);i||(i=this.timeframes[0]),this.update({interval:i.interval,from:t.from,to:t.to})})}$onInit(){this.$state.params.from&&this.$state.params.to?this.update({from:this.$state.params.from,to:this.$state.params.to}):this.setTimeframe(this.$state.params.timeframe||"5m",!0)}$onDestroy(){this.unRegisterTimeframeZoom()}updateTimeframe(e){e&&this.$timeout(()=>Ca(this,void 0,void 0,(function*(){yield this.$state.transitionTo(this.$state.current,o.merge(this.$state.params,{timestamp:"",timeframe:e}),{notify:!1}),this.setTimeframe(e,!0)})))}setTimestamp(e){const t=m.a.unix(e),n=Math.floor(t.startOf("day").valueOf()/1e3),i=Math.floor(t.endOf("day").valueOf()/1e3);this.update({interval:3e5,from:1e3*n,to:1e3*i})}setTimeframe(e,t){if(this.timeframe=o.find(this.timeframes,t=>t.id===e),t){const e=Date.now();this.update({interval:this.timeframe.interval,from:e-this.timeframe.range,to:e})}}update(e){const t={interval:parseInt(e.interval,10),from:parseInt(e.from,10),to:parseInt(e.to,10)},n=t.to-t.from,i=o.findLast(this.timeframes,e=>e.range<=n);this.timeframe=i||this.timeframes[0],this.$timeout(()=>{const e={interval:this.timeframe.interval,from:t.from,to:t.to};this.onTimeframeChange({timeframe:e})},200),this.current={interval:this.timeframe.interval,intervalLabel:m.a.duration(this.timeframe.interval).humanize(),from:t.from,to:t.to},this.$timeout(()=>Ca(this,void 0,void 0,(function*(){yield this.$state.transitionTo(this.$state.current,o.merge(this.$state.params,this.current),{notify:!1})}))),this.pickerStartDate=m()(t.from),this.pickerEndDate=m()(t.to)}updateRangeDate(){const e=1e3*this.pickerStartDate.startOf("minute").unix(),t=1e3*this.pickerEndDate.endOf("minute").unix(),n=t-e;let i=o.findLast(this.timeframes,e=>e.range<n);i||(i=this.timeframes[0]),this.update({interval:i.interval,from:e,to:t})}}Ia.$inject=["$scope","$rootScope","$state","$timeout"];var $a=Ia;var Aa={template:n(759),controller:"LogsFiltersController",bindings:{onFiltersChange:"&",metadata:"<",context:"@",api:"<"}};class Oa{constructor(e,t,n,i){this.$scope=e,this.$state=t,this.$timeout=n,this.$log=i,this.filters={},this.methods={0:"OTHER",1:"CONNECT",2:"DELETE",3:"GET",4:"HEAD",5:"OPTIONS",6:"PATCH",7:"POST",8:"PUT",9:"TRACE"},this.responseTimes={"[0 TO 100]":"0 to 100ms","[100 TO 200]":"100 to 200ms","[200 TO 300]":"200 to 300ms","[300 TO 400]":"300 to 400ms","[400 TO 500]":"400 to 500ms","[500 TO 1000]":"500 to 1000ms","[1000 TO 2000]":"1000 to 2000ms","[2000 TO 5000]":"2000 to 5000ms","[5000 TO *]":"> 5000ms"},this.httpStatus={100:"CONTINUE",101:"SWITCHING PROTOCOLS",102:"PROCESSING",200:"OK",201:"CREATED",202:"ACCEPTED",203:"NON AUTHORITATIVE INFORMATION",204:"NO CONTENT",205:"RESET CONTENT",206:"PARTIAL CONTENT",207:"MULTI STATUS",300:"MULTIPLE CHOICES",301:"MOVED PERMANENTLY",302:"FOUND",303:"SEE OTHER",304:"NOT MODIFIED",305:"USE PROXY",307:"TEMPORARY REDIRECT",400:"BAD REQUEST",401:"UNAUTHORIZED",402:"PAYMENT REQUIRED",403:"FORBIDDEN",404:"NOT FOUND",405:"METHOD NOT ALLOWED",406:"NOT ACCEPTABLE",407:"PROXY AUTHENTICATION REQUIRED",408:"REQUEST TIMEOUT",409:"CONFLICT",410:"GONE",411:"LENGTH REQUIRED",412:"PRECONDITION FAILED",413:"REQUEST ENTITY TOO LARGE",414:"REQUEST URI TOO LONG",415:"UNSUPPORTED MEDIA TYPE",416:"REQUESTED RANGE NOT SATISFIABLE",417:"EXPECTATION FAILED",422:"UNPROCESSABLE ENTITY",423:"LOCKED",424:"FAILED DEPENDENCY",429:"TOO MANY REQUESTS",500:"INTERNAL SERVER ERROR",501:"NOT IMPLEMENTED",502:"BAD GATEWAY",503:"SERVICE UNAVAILABLE",504:"GATEWAY TIMEOUT",505:"HTTP VERSION NOT SUPPORTED",507:"INSUFFICIENT STORAGE"},this.fields={responseTime:"response-time",id:"_id"},this.displayModes=[{field:"",key:"",label:"All"},{key:"endpoint",field:"_exists_",label:"Only hits to the backend endpoint"},{key:"endpoint",field:"!_exists_",label:"Without hits to the backend endpoint"}],this.$scope=e}static convert(e){return"("+e.join(" OR ")+")"}$onInit(){const e=this.$state.params.q;e&&(this.decodeQueryFilters(e),o.forEach(this.displayModes,e=>{this.filters[e.field]&&(this.displayMode=e)}),this.displayMode||(this.displayMode=this.displayModes[0])),"platform"!==this.context&&"api"!==this.context||this.metadata.applications.push({id:"1",name:"Unknown application"}),"platform"!==this.context&&"application"!==this.context||this.metadata.apis.push({id:"1",name:"Unknown API"})}search(){const e=this.buildQuery(this.filters);this.$state.transitionTo(this.$state.current,o.merge(this.$state.params,{q:e}),{notify:!1}),this.$timeout(()=>{this.onFiltersChange({filters:e})})}clearFilters(){this.$scope.logsFiltersForm.$setPristine(),this.filters={},this.search()}hasFilters(){return!o.isEmpty(this.filters)&&!this.isEmpty(this.filters)}updateDisplayMode(){o.forEach(this.displayModes,e=>{delete this.filters[e.field]}),delete this.filters[this.displayMode.field],this.displayMode.field&&(this.filters[this.displayMode.field]=this.displayMode.key)}decodeQueryFilters(e){const t=e.split("AND");for(let e=0;e<t.length;e++){const n=t[e].replace(/[()]/g,""),i=n.split(":")[0].trim(),a=n.substring(n.indexOf(":")+1).split("OR").map(e=>e.trim());switch(i){case"api":this.filters.api=a;break;case"application":this.filters.application=a;break;case"path":{const e=a[0].replace(/\\"/g,"");this.api?this.filters.uri=this.api.proxy.virtual_hosts[0].path+e:this.filters.uri=e;break}case"uri":this.filters.uri=a[0].replace(/\*|\\\\/g,"");break;case"plan":this.filters.plan=a;break;case"response-time":this.filters.responseTime=a;break;case"method":this.filters.method=a;break;case"status":this.filters.status=a;break;case"_id":this.filters.id=a[0];break;case"transaction":this.filters.transaction=a[0];break;case"tenant":this.filters.tenant=a;break;case"_exists_":this.filters._exists_=a;break;case"!_exists_":this.filters["!_exists_"]=a;break;case"body":this.filters.body=a[0].replace(/\*/g,"");break;case"endpoint":this.filters.endpoint=a[0].replace(/\*|\\\\/g,"");break;case"remote-address":this.filters["remote-address"]=a;break;case"host":this.filters.host=a[0].replace(/\\"/g,"");break;default:this.$log.error("unknown filter: ",i)}}}isEmpty(e){for(const t in e){const n=e[t];if(void 0!==n&&n.length>0)return!1}return!0}buildQuery(e){let t="";const n=o.filter(Object.keys(e),t=>void 0!==e[t]&&e[t].length>0);let i=0;return o.forEach(n,a=>{let o=e[a];"uri"!==a||o.startsWith("/")||(o="/"+o),("string"==typeof o||o instanceof String)&&(o=o.replace(/(\+|-|=|&{2}|\|{2}|>|<|!|\(|\)|{|}|\[|]|\^|"|~|\?|:|\\|\/)/g,"\\\\$1")),"uri"!==a||o.endsWith("*")||(o+="*"),"body"===a&&(o="*"+o+"*");const s=o.constructor===Array&&o.length>1?Oa.convert(o):o;t+=this.map(a,this.fields,!0)+":"+s,i+1<n.length&&(t+=" AND "),i++}),t}map(e,t,n){let i=null;return i=n?t[e]:t[o.filter(Object.keys(t),t=>t.toLowerCase().includes(e.toLowerCase())).pop()],i||e}}Oa.$inject=["$scope","$state","$timeout","$log"];var Ta=Oa;n(252);class Ra{constructor(e,t,n,i,a){this.Constants=e,this.$state=t,this.NotificationService=n,this.AnalyticsService=i,this.ApiService=a,this.backStateParams={from:t.params.from,to:t.params.to,q:t.params.q,page:t.params.page,size:t.params.size}}static headersAsList(e){if(e){e.headersAsList=[];for(const t in e.headers)if(e.headers.hasOwnProperty(t))for(const n in e.headers[t])e.headers[t].hasOwnProperty(n)&&e.headersAsList.push([t,e.headers[t][n]]);e.headersAsList.sort(([e],[t])=>e.localeCompare(t))}}$onInit(){if(null!=this.log.clientRequest&&(Ra.headersAsList(this.log.clientRequest),this.log.clientRequest=Object.assign(Object.assign({},this.log.clientRequest),{queryParams:this.extractQueryParams(this.log.clientRequest.uri)})),null!=this.log.proxyRequest&&(Ra.headersAsList(this.log.proxyRequest),this.log.proxyRequest=Object.assign(Object.assign({},this.log.proxyRequest),{queryParams:this.extractQueryParams(this.log.proxyRequest.uri)})),null!=this.log.clientResponse&&Ra.headersAsList(this.log.clientResponse),null!=this.log.proxyResponse&&Ra.headersAsList(this.log.proxyResponse),this.AnalyticsService.getFetchedLogs())this.fillPreviousNext();else{const e=this.AnalyticsService.buildQueryFromState(this.$state);this.ApiService.findLogs(this.$state.params.apiId,e).then(e=>{this.AnalyticsService.setFetchedLogs(e.data.logs),this.fillPreviousNext()})}}codeMirrorOptions(e){if(e){return{lineNumbers:!0,lineWrapping:!0,matchBrackets:!0,mode:this.getMimeType(e)}}return{lineNumbers:!0,mode:"text/x-java"}}goToLog(e){this.$state.transitionTo(this.$state.current,Object.assign(Object.assign({},this.$state.params),{logId:e}),{notify:!1}),this.ApiService.getLog(this.$state.params.apiId,e,this.$state.params.timestamp).then(e=>{this.log=e.data,this.$onInit()})}fillPreviousNext(){const e=this.AnalyticsService.getFetchedLogs();for(let t=0;t<e.length;t++)if(e[t]===this.$state.params.logId){this.previousLog=e[t-1],this.nextLog=e[t+1];break}}getMimeType(e){if(e.headers){let t;if(e.headers["content-type"]?t=e.headers["content-type"][0]:e.headers["Content-Type"]&&(t=e.headers["Content-Type"][0]),t){const e=t.split(";",1)[0];return e.includes("json")||e.includes("javascript")?"javascript":e.includes("xml")?"xml":e}}return null}extractQueryParams(e){if(!e.includes("?"))return[];const t=e.slice(e.indexOf("?")+1).split("&").map(e=>e.split("=")).reduce((e,[t,n])=>{const i=e[t]||[];return e[t]=[...i,n],e},{});return Object(o.toPairs)(t).map(([e,t])=>({key:e,value:1===t.length?t[0]:`[ ${t.join(", ")} ]`}))}onCopyBodySuccess(){this.NotificationService.show("Body has been copied to clipboard")}}Ra.$inject=["Constants","$state","NotificationService","AnalyticsService","ApiService"];const _a={controller:Ra,bindings:{log:"<"},template:n(760)};class xa{constructor(e,t,n){this.title=e,this.id=t,this.statement=n}}class La{constructor(e,t,n){this.type=e,this.operator=t,this.value=n}toCondition(){if("logging-duration"===this.type.id){const e=p().add(p.duration(this.param1,this.param2)).valueOf();return`${this.type.statement} <= ${e}l`}if("logging-end-date"===this.type.id){const e=this.param1.valueOf();return`${this.type.statement} <= ${e}l`}return"request-header"!==this.type.id&&"request-param"!==this.type.id?`${this.type.statement} ${this.operator} '${this.value}'`:`${this.type.statement}['${this.param1}'] != null && ${this.type.statement}['${this.param1}'][0] ${this.operator} '${this.value}'`}isValid(){switch(this.type.id){case"logging-duration":return!Object(o.isNil)(this.param1)&&!Object(o.isNil)(this.param2);case"logging-end-date":return!Object(o.isNil)(this.param1);case"request-header":case"request-param":return!(Object(o.isNil)(this.param1)||Object(o.isNil)(this.value)||""===this.value||Object(o.isNil)(this.operator)||Object(o.isNil)(this.type.statement));default:return!Object(o.isNil)(this.value)&&""!==this.value&&!Object(o.isNil)(this.operator)&&!Object(o.isNil)(this.type.statement)}}}class Pa{constructor(e,t,n){this.selectedType=null,this.conditions=[],this.methods=["GET","POST","PUT","DELETE","PATCH","HEAD","OPTIONS"],this.timeUnits=["SECONDS","MINUTES","HOURS","DAYS"],this.types=[new xa("","",""),new xa("Plan","plan","#context.attributes.plan"),new xa("Application","application","#context.attributes.application"),new xa("Request header","request-header","#request.headers"),new xa("Request query-parameter","request-param","#request.params"),new xa("HTTP Method","request-method","#request.method"),new xa("Request IP","request-remote-address","#request.remoteAddress"),new xa("Duration","logging-duration","#request.timestamp"),new xa("End date","logging-end-date","#request.timestamp")],this.$mdDialog=e,this.plans=t,this.subscribers=n}addCondition(){const e=this.types.find(e=>e.id===this.selectedType);void 0!==e?this.conditions.push(new La(e,"==","")):this.selectedType=null}removeCondition(e){this.conditions.splice(e,1)}hide(){this.$mdDialog.hide()}isValid(){return this.conditions.every(e=>e.isValid())}save(){const e=this.conditions.map(e=>e.toCondition()).join(" && ");this.$mdDialog.hide(e)}}Pa.$inject=["$mdDialog","plans","subscribers"];n(761),n(762),n(429);class Na{constructor(e,t,n,i,a,s,r,l,c){this.ApiService=e,this.NotificationService=t,this.$mdDialog=n,this.$stateParams=i,this.$rootScope=a,this.$scope=s,this.Constants=r,this.spelGrammar=l,this.ngIfMatchEtagInterceptor=c,this.defaultLogging={mode:"CLIENT_PROXY",content:"HEADERS_PAYLOADS",scope:"REQUEST_RESPONSE"},this.initialApi=o.cloneDeep(this.$scope.$parent.apiCtrl.api),this.api=o.cloneDeep(this.$scope.$parent.apiCtrl.api),this.spelGrammar=l.data,this.enabled=this.api.proxy.logging&&"NONE"!==this.api.proxy.logging.mode,this.initLogging(this.enabled),this.maxDuration=r.org.settings.logging.maxDurationMillis,this.$scope.loggingModes=[{title:"Client & proxy",id:"CLIENT_PROXY",icon:"home:earth",description:"to log content for the client and the gateway"},{title:"Client only",id:"CLIENT",icon:"communication:shield-user",description:"to log content between the client and the gateway"},{title:"Proxy only",id:"PROXY",icon:"communication:shield-thunder",description:"to log content between the gateway and the backend"}],this.$scope.contentModes=[{title:"Headers & payloads",id:"HEADERS_PAYLOADS",icon:"finance:selected-file",description:"to log headers and payloads"},{title:"Headers only",id:"HEADERS",icon:"finance:file",description:"to log headers without payloads"},{title:"Payloads only",id:"PAYLOADS",icon:"communication:clipboard-list",description:"to log payloads without headers"}],this.$scope.scopeModes=[{title:"Request & Response",id:"REQUEST_RESPONSE",icon:"navigation:exchange",description:"to log request and response"},{title:"Request only",id:"REQUEST",icon:"navigation:right-2",description:"to log request content only"},{title:"Response only",id:"RESPONSE",icon:"navigation:left-2",description:"to log response content only"}],this.$scope.$on("apiChangeSuccess",(e,t)=>{this.api=t.api,this.enabled="NONE"!==this.api.proxy.logging.mode})}initLogging(e){if(null==this.api.proxy.logging&&(this.api.proxy.logging={}),e){const e=Object.assign(Object.assign({},this.defaultLogging),this.initialApi.proxy.logging),{mode:t,scope:n,content:i}=e;this.api.proxy.logging.mode="NONE"!==t?t:this.defaultLogging.mode,this.api.proxy.logging.scope="NONE"!==n?n:this.defaultLogging.scope,this.api.proxy.logging.content="NONE"!==i?i:this.defaultLogging.content}else this.api.proxy.logging.mode="NONE",this.api.proxy.logging.scope="NONE",this.api.proxy.logging.content="NONE"}switchMode({detail:e}){this.initLogging(e)}update(){this.enabled||(this.api.proxy.logging.mode="NONE"),null!=this.api.proxy.logging.condition&&""===this.api.proxy.logging.condition.trim()&&delete this.api.proxy.logging.condition,this.ApiService.update(this.api).then(e=>{this.NotificationService.show("Logging configuration has been updated"),this.api=e.data,this.ngIfMatchEtagInterceptor.updateLastEtag("api",e.headers("etag")),this.initialApi=o.cloneDeep(e.data),this.$scope.formLogging.$setPristine(),this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api})})}reset(){this.api=o.cloneDeep(this.initialApi),this.enabled="NONE"!==this.api.proxy.logging.mode,this.initLogging(this.enabled),this.$scope.formLogging&&(this.$scope.formLogging.$setPristine(),this.$scope.formLogging.$setUntouched())}clearCondition(){this.api.proxy.logging.condition="",this.$scope.formLogging.$setDirty()}hasCondition(){return null!=this.api.proxy.logging.condition&&""!==this.api.proxy.logging.condition}showConditionEditor(){this.$mdDialog.show({controller:Pa,controllerAs:"$ctrl",template:n(763),clickOutsideToClose:!0,resolve:{subscribers:["$stateParams","ApiService",(e,t)=>t.getSubscribers(e.apiId).then(e=>e.data)],plans:["$stateParams","ApiService",(e,t)=>t.getApiPlans(e.apiId,"published,deprecated").then(e=>e.data)]}}).then(e=>{e&&(this.api.proxy.logging.condition=`{${e}}`,this.$scope.formLogging.$setDirty())},()=>{})}}Na.$inject=["ApiService","NotificationService","$mdDialog","$stateParams","$rootScope","$scope","Constants","spelGrammar","ngIfMatchEtagInterceptor"];var Ea=Na;class Da{constructor(e){this.Theme=e}}Da.$inject=["Theme"];var ja={restrict:"A",link:function(e,t,n,i){if(n.gvThemeElement){const e=n.gvThemeElement.split(".");let a=i.Theme;e.forEach(e=>{a=a[e]}),t.css(a)}},controller:Da};class ka{constructor(e,t,n){this.$http=e,this.Constants=t,this.$q=n}analytics(e){let t=this.Constants.env.baseURL+"/analytics?";const n=Object.keys(e);return o.forEach(n,n=>{const i=e[n];void 0!==i&&(t+=n+"="+i+"&")}),this.$http.get(t,{timeout:this.getAnalyticsHttpTimeout()})}getAnalyticsHttpTimeout(){return this.Constants.env.settings.analytics.clientTimeout}list(){return this.$http.get(this.Constants.org.baseURL+"/environments")}getCurrent(){return this.$http.get(this.Constants.env.baseURL)}listEnvironmentIdentities(e){return this.$http.get(`${this.Constants.org.baseURL}/environments/${e}/identities`)}updateEnvironmentIdentities(e,t){return this.$http.put(`${this.Constants.org.baseURL}/environments/${e}/identities`,t)}getPermissions(e){return this.$http.get(`${this.Constants.org.baseURL}/environments/permissions?idOrHrid=${e}`)}getFirstHridOrElseId(e){return e&&e.hrids&&e.hrids.length>0?e.hrids[0]:e&&e.id}isSameEnvironment(e,t){return e&&(e.id===t||e.hrids&&e.hrids.includes(t))}getEnvironmentFromHridOrId(e,t){return null==e?void 0:e.find(e=>e.id===t||e.hrids&&e.hrids.includes(t))}}ka.$inject=["$http","Constants","$q"];var Ua=ka;class Ma{constructor(e,t){this.$http=e,this.Constants=t}listSocialIdentityProviders(){return this.$http.get(this.Constants.org.baseURL+"/social-identities")}listOrganizationIdentities(){return this.$http.get(this.Constants.org.baseURL+"/identities")}updateOrganizationIdentities(e){return this.$http.put(this.Constants.org.baseURL+"/identities",e)}update(e){return this.$http.put(""+this.Constants.org.baseURL,e)}get(){return this.$http.get(""+this.Constants.org.baseURL)}}Ma.$inject=["$http","Constants"];var Fa=Ma;class qa{constructor(e,t){this.$http=e,this.Constants=t}getInstallationInformation(){return this.$http.get(this.Constants.org.baseURL+"/installation/")}}qa.$inject=["$http","Constants"];var Ha=qa;var Ga={template:n(764),controller:"ErrorController",bindings:{error:"<"}};var Ba=class{constructor(){this.$onChanges=function(e){if(null!=e.error&&null!=this.error){this.title=this.error.title||"";try{this.messages=JSON.parse(this.error.message)}catch(e){Array.isArray(this.error.message)?this.messages=this.error.message:this.messages=[this.error.message]}}else this.title=null,this.messages=null},this.hasErrors=function(){return null!=this.title||null!=this.messages&&this.messages.length>0}}},Wa=n(174);class Va{constructor(e){this.$scope=e,e.imgError=function(){document.querySelector("#avatar_"+e.imageId).classList.remove("show");const t=document.querySelector("#jdenticon_"+e.imageId);t.classList.add("show"),e.noDefaultImage?(t.title="No image defined",t.innerHTML="No image defined"):(t.title=e.imageName,t.innerHTML=Wa.toSvg(e.imageName,e.imageWidth?e.imageWidth:110,{backColor:"#FFF"})),e.$apply()},e.imgLoad=function(){document.querySelector("#avatar_"+e.imageId).classList.add("show"),document.querySelector("#jdenticon_"+e.imageId).classList.remove("show"),e.$apply()}}getSource(){return this.$scope.image?this.$scope.image:this.$scope.imageUrl||this.$scope.imageDefault||""}}Va.$inject=["$scope"];var Ya=class{constructor(){return{restrict:"E",require:"gvThemeElement",scope:{image:"<",imageDefault:"=",imageUrl:"<",imageBorderRadius:"@",imageName:"=",imageWidth:"=",imageId:"=",imageTheme:"<",noDefaultImage:"="},template:n(765),controller:Va,controllerAs:"identityPictureCtrl"}}};class za{constructor(e,t,n,i){this.$rootScope=e,this.$scope=t,this.Upload=n,this.NotificationService=i,t.maxSize="1MB",null==t.accept&&(t.accept="image/*"),null==t.changeLabel&&(t.changeLabel="Change picture"),null==t.deleteLabel&&(t.deleteLabel="Delete")}selectImage(e,t){if(e&&this.Upload.base64DataUrl(e).then(e=>{e&&(this.$scope.imageOriginal||(this.$scope.imageOriginal=this.$scope.image),this.$scope.image=e,this.$scope.imageForm&&this.$scope.imageForm.$setDirty(),this.$scope.successEventName&&this.$rootScope.$broadcast(this.$scope.successEventName,{image:e}))}),t&&t.length>0){const e=t[0];"maxSize"===e.$error?this.NotificationService.showError(`Image "${e.name}" exceeds the maximum authorized size (${this.$scope.maxSize})`):this.NotificationService.showError(`File is not valid (error: ${e.$error})`)}}onDelete(){this.$scope.image=null,this.$scope.imageUrl=null,this.$scope.successEventName&&this.$rootScope.$broadcast(this.$scope.successEventName,{image:this.$scope.image,imageUrl:this.$scope.imageUrl}),this.$scope.imageForm&&this.$scope.imageForm.$setDirty()}isDefaultImage(){const e=document.querySelector("#jdenticon_"+this.$scope.imageId);if(e)return e.classList.contains("show")}}za.$inject=["$rootScope","$scope","Upload","NotificationService"];var Ka=class{constructor(){return{restrict:"E",require:"graviteeIdentityPicture",scope:{image:"=",imageId:"=",imageClass:"@",imageDefault:"=",imageOriginal:"=?",imageForm:"=",imageUrl:"=",imageBorderRadius:"@",imageName:"=",noDefaultImage:"=",changeLabel:"@",deleteLabel:"@",canDelete:"=",successEventName:"@",checkeredBackground:"<",accept:"@"},template:n(766),controller:za,controllerAs:"imgCtrl"}}};class Qa{constructor(e,t){this.$http=e,this.Constants=t}search(e,t,n,i,a,o){return this.$http.get(`${this.Constants.env.baseURL}/platform/events?type=${e}&api_ids=${t}&from=${n}&to=${i}&page=${a}&size=${o}`)}findById(e,t){return this.$http.get(`${this.Constants.env.baseURL}/apis/${e}/events/${t}`).then(e=>e.data)}}Qa.$inject=["$http","Constants"];class Ja{}class Xa{constructor(e,t,n){this.$http=e,this.Constants=t,this.$stateParams=n}analytics(e){let t=this.Constants.env.baseURL+"/platform/analytics?";const n=Object.keys(e);return o.forEach(n,n=>{const i=e[n];void 0!==i&&(t+=n+"="+i+"&")}),this.$http.get(t,{timeout:this.getAnalyticsHttpTimeout()})}getAnalyticsHttpTimeout(){return this.Constants.env.settings.analytics.clientTimeout}findLogs(e){return this.$http.get(this.buildURLWithQuery(this.cloneQuery(e),this.Constants.env.baseURL+"/platform/logs?"),{timeout:3e4})}exportLogsAsCSV(e){const t=this.cloneQuery(e);return t.page=1,t.size=1e4,this.$http.get(this.buildURLWithQuery(t,this.Constants.env.baseURL+"/platform/logs/export?"),{timeout:3e4})}getLog(e,t){return this.$http.get(this.Constants.env.baseURL+"/platform/logs/"+e+(t?"?timestamp="+t:""))}getQueryFilters(){const e=this.$stateParams.q;if(e){const t={};return e.split(/\s(OR|AND)\s/).forEach(e=>{if(e.includes(":")){const n=this.cleanParam(e.substring(0,e.indexOf(":"))),i=this.cleanParam(e.substring(e.indexOf(":")+1));t[n]?t[n].push(i):t[n]=[i]}}),t}return null}buildQueryParam(e,t){return e="body"===t?"*"+e+"*":e,"?"!==(e="uri"===t?e+"*":e)&&(e=(e='\\"'+e+'\\"').replace(/\//g,"\\\\/")),e}buildQueryFromState(e){const t=new Ja;return t.page=e.params.page||1,t.size=e.params.size||15,t.from=e.params.from,t.to=e.params.to,t.query=e.params.q,t.field="-@timestamp",t}setFetchedLogs(e){this.logs=e.map(e=>e.id)}getFetchedLogs(){return this.logs}buildURLWithQuery(e,t){const n=Object.keys(e);return o.forEach(n,n=>{const i=e[n];void 0!==i&&""!==i&&(t+=n+"="+i+"&")}),t}cloneQuery(e){const t=o.clone(e);return o.startsWith(t.field,"-")?(t.order=!1,t.field=t.field.substring(1)):t.order=!0,t}cleanParam(e){return e.replace("%20"," ").replace(/[()]/g,"").replace(/[\\"]/g,"")}}Xa.$inject=["$http","Constants","$stateParams"];var Za=Xa;class eo{constructor(e,t,n,i,a,s,r,l){this.eventService=e,this.AnalyticsService=t,this.ApiService=n,this.ApplicationService=i,this.$scope=a,this.Constants=s,this.$state=r,this.dashboards=l,this.eventLabels={},this.eventTypes=[],this.selectedAPIs=[],this.selectedApplications=[],this.selectedEventTypes=[],this.dashboards=o.filter(this.dashboards,"enabled");const c=this.$state.params.dashboard;c?(this.dashboard=o.find(this.dashboards,{id:c}),this.dashboard||(delete this.$state.params.dashboard,this.$state.go(this.$state.current))):this.dashboard=this.dashboards[0],o.forEach(this.dashboards,e=>{e.definition&&(e.definition=JSON.parse(e.definition)),o.forEach(e.definition,e=>{o.merge(e,{chart:{service:{caller:this.AnalyticsService,function:this.AnalyticsService.analytics}}})})}),this.eventLabels.start_api="Start",this.eventLabels.stop_api="Stop",this.eventLabels.publish_api="Deploy",this.eventLabels.unpublish_api="Undeploy",this.eventTypes=["START_API","STOP_API","PUBLISH_API","UNPUBLISH_API"],this.initPagination(),this.searchEvents=this.searchEvents.bind(this)}onDashboardChanged(e){this.$state.transitionTo(this.$state.current,o.merge(this.$state.params,{dashboard:e}),{reload:!0})}onTimeframeChange(e){this.lastFrom=e.from,this.lastTo=e.to,this.dashboard===this.dashboards[0]&&this.searchEvents()}selectEvent(e){const t=this.selectedEventTypes.indexOf(e);t>-1?this.selectedEventTypes.splice(t,1):this.selectedEventTypes.push(e),this.searchEvents()}searchEvents(){const e=this.selectedAPIs.map(e=>e.id).join(",");let t=this.eventTypes;this.selectedEventTypes.length>0&&(t=this.selectedEventTypes.join(",")),this.$scope.eventsFetchData=!0,this.eventService.search(t,e,this.lastFrom,this.lastTo,this.query.page-1,this.query.limit).then(e=>{this.events=e.data,this.$scope.eventsFetchData=!1})}initPagination(){this.query={limit:10,page:1}}getEventLabel(e){return this.eventLabels[e]}viewLogs(){this.$state.transitionTo("management.logs",this.$state.params)}}eo.$inject=["eventService","AnalyticsService","ApiService","ApplicationService","$scope","Constants","$state","dashboards"];var to=eo;class no{constructor(e,t,n,i){this.AnalyticsService=e,this.Constants=t,this.$state=n,this.$scope=i,this.onPaginate=this.onPaginate.bind(this),this.query=new Ja,this.query.page=this.$state.params.page||1,this.query.size=this.$state.params.size||15}$onInit(){this.query.from=this.$state.params.from,this.query.to=this.$state.params.to,this.query.query=this.$state.params.q,this.query.field="-@timestamp",this.$scope.$watch("$ctrl.query.field",e=>{e&&this.init&&this.refresh()}),this.metadata={apis:this.apis.data,applications:this.applications.data}}timeframeChange(e){this.init=!0,this.query.from=e.from,this.query.to=e.to,this.query.page=this.$state.params.page||1,this.refresh()}onPaginate(e){this.query.page=e,this.refresh()}refresh(){this.$state.transitionTo(this.$state.current,{page:this.query.page,size:this.query.size,from:this.query.from,to:this.query.to,q:this.query.query},{notify:!1}),this.AnalyticsService.findLogs(this.query).then(e=>{this.logs=e.data})}filtersChange(e){this.query.page=this.$state.params.page||1,this.query.query=e,this.refresh()}exportAsCSV(){this.AnalyticsService.exportLogsAsCSV(this.query).then(e=>{const t=document.createElement("a");t.href="data:attachment/csv,"+e.data,t.target="_self";let n="logs-platform-"+o.now();n=n.replace(/[\s]/gi,"-"),n=n.replace(/[^\w]/gi,"-"),t.download=n+".csv",t.click(),document.body.removeChild(t)})}}no.$inject=["AnalyticsService","Constants","$state","$scope"];var io=no;var ao={bindings:{applications:"<",apis:"<"},controller:"PlatformLogsController",template:n(767)};var oo={bindings:{log:"<"},controller:["$state","NotificationService","Constants",function(e,t,n){this.Constants=n,this.NotificationService=t,this.$onInit=()=>{this.headersAsList(this.log.clientRequest),this.headersAsList(this.log.proxyRequest),this.headersAsList(this.log.clientResponse),this.headersAsList(this.log.proxyResponse)},this.headersAsList=e=>{if(e){e.headersAsList=[];for(const t in e.headers)if(e.headers.hasOwnProperty(t))for(const n in e.headers[t])e.headers[t].hasOwnProperty(n)&&e.headersAsList.push([t,e.headers[t][n]])}},this.backStateParams={from:e.params.from,to:e.params.to,q:e.params.q,page:e.params.page,size:e.params.size},this.getMimeType=function(e){if(void 0!==e.headers["Content-Type"]){return e.headers["Content-Type"][0].split(";",1)[0]}return null},this.onCopyBodySuccess=function(e){this.NotificationService.show("Body has been copied to clipboard"),e.clearSelection()}}],template:n(768)};class so{constructor(e,t,n,i,a,s,r,l){this.CategoryService=e,this.NotificationService=t,this.$q=n,this.$mdDialog=i,this.$state=a,this.PortalSettingsService=s,this.$rootScope=l,this.providedConfigurationMessage="Configuration provided by the system",this.$rootScope=l,this.settings=o.cloneDeep(r.env.settings),this.Constants=r,this.categoriesToUpdate=[]}$onInit(){this.categories=o.sortBy(this.categories,"order"),o.forEach(this.categories,(e,t)=>{e.order=t})}toggleVisibility(e){e.hidden=!e.hidden,this.CategoryService.update(e).then(()=>{this.NotificationService.show("Category "+e.name+" has been saved.")})}upward(e){e>0&&this.reorder(e,e-1)}downward(e){e<o.size(this.categories)-1&&this.reorder(e,e+1)}toggleDisplayMode(){this.PortalSettingsService.save(this.settings).then(e=>{o.merge(this.Constants.env.settings,e.data),this.NotificationService.show("Display mode saved!")})}deleteCategory(e){this.$mdDialog.show({controller:"DeleteCategoryDialogController",template:n(769),locals:{category:e}}).then(t=>{t&&this.CategoryService.delete(e).then(()=>{this.NotificationService.show("Category '"+e.name+"' deleted with success"),o.remove(this.categories,e)})})}isReadonlySetting(e){return this.PortalSettingsService.isReadonly(this.settings,e)}reorder(e,t){this.categories[e].order=t,this.categories[t].order=e,this.categories=o.sortBy(this.categories,"order"),this.categoriesToUpdate.push(this.categories[e]),this.categoriesToUpdate.push(this.categories[t]),this.save()}save(){this.CategoryService.updateCategories(this.categoriesToUpdate).then(()=>{this.NotificationService.show("Categories saved with success"),this.categoriesToUpdate=[]})}}so.$inject=["CategoryService","NotificationService","$q","$mdDialog","$state","PortalSettingsService","Constants","$rootScope"];var ro=so;class lo{constructor(e,t,n,i,a,o,s,r,l){this.ApiService=e,this.CategoryService=t,this.NotificationService=n,this.$q=i,this.$filter=a,this.$state=o,this.$location=s,this.$mdDialog=r,this.$scope=l,this.searchText="",this.createMode=!1,this.formChanged=!1,this.createMode=s.path().endsWith("new")}$onInit(){this.addedAPIs=[],this.selectedAPIs=this.categoryApis?this.categoryApis.slice(0):[],this.$scope.$on("categoryPictureChangeSuccess",(e,t)=>{this.category.picture=t.image,this.formChanged=!0}),this.$scope.$on("categoryBackgroundChangeSuccess",(e,t)=>{this.category.background=t.image,this.formChanged=!0}),this.pages=this.pages.sort((e,t)=>{let n=0;const i=e.parentPath+"/"+e.name,a=t.parentPath+"/"+t.name;return i>a?n=1:i<a&&(n=-1),n}),this.pages&&this.pages.length>0&&this.pages.unshift({}),this.$scope.$on("apiPictureChangeSuccess",(e,t)=>{this.category||(this.category={}),this.category.picture=t.image,this.formChanged=!0}),this.initialCategory=o.cloneDeep(this.category)}reset(){this.category=o.cloneDeep(this.initialCategory),this.formChanged=!1,this.categoryForm&&(this.categoryForm.$setPristine(),this.categoryForm.$setUntouched())}save(){(this.createMode?this.CategoryService.create(this.category):this.CategoryService.update(this.category)).then(e=>{const t=e.data,n=this.addedAPIs.map(e=>{const n=e.categories||[];return n.push(t.id),e.categories=n,this.ApiService.update(e)});this.$q.all(n).then(()=>{this.NotificationService.show("Category "+t.name+" has been saved."),this.$state.go("management.settings.categories.category",{categoryId:t.key},{reload:!0})})})}searchAPI(e){if(this.allApis){const t=o.filter(this.allApis,e=>!this.selectedAPIs.some(t=>t.id===e.id));return this.$filter("filter")(t,e)}return this.ApiService.list().then(t=>{const n=t.data;this.allApis=n;const i=o.filter(n,e=>!this.selectedAPIs.some(t=>t.id===e.id));return this.$filter("filter")(i,e)})}selectedApiChange(e){e&&this.ApiService.get(e.id).then(e=>{this.addedAPIs.push(e.data),this.selectedAPIs.push(e.data)}),this.searchText="",this.formChanged=!0,setTimeout(()=>{document.getElementById("new-category-apis-autocomplete-id").blur()},0)}removeApi(e){this.$mdDialog.show({controller:"DeleteAPICategoryDialogController",template:n(770),locals:{api:e}}).then(t=>{t&&(this.categoryApis&&this.categoryApis.some(t=>t.id===e.id)?this.ApiService.get(e.id).then(t=>{const n=t.data;o.remove(n.categories,e=>e===this.category.key),this.ApiService.update(n).then(()=>{this.NotificationService.show("API '"+e.name+"' detached with success"),o.remove(this.selectedAPIs,e),o.remove(this.categoryApis,e)})}):o.remove(this.selectedAPIs,e))})}toggleHighlightAPI(e){this.category.highlightApi=e.id,this.categoryForm.$setDirty()}toggleVisibility(){this.category.hidden=!this.category.hidden,this.formChanged=!0}isHighlightApi(e){return this.category&&this.category.highlightApi===e.id}getApis(){return this.selectedAPIs}}lo.$inject=["ApiService","CategoryService","NotificationService","$q","$filter","$state","$location","$mdDialog","$scope"];var co=lo;class po{constructor(e,t){this.$http=e,this.Constants=t}list(e){const t=e?"?include="+e.join(","):"";return this.$http.get(this.Constants.env.baseURL+"/configuration/categories/"+t)}get(e){return this.$http.get(this.Constants.env.baseURL+"/configuration/categories/"+e)}create(e){return this.$http.post(this.Constants.env.baseURL+"/configuration/categories/",e)}update(e){return this.$http.put(this.Constants.env.baseURL+"/configuration/categories/"+e.id,e)}updateCategories(e){if(e&&e.length)return this.$http.put(this.Constants.env.baseURL+"/configuration/categories/",e)}delete(e){return this.$http.delete(this.Constants.env.baseURL+"/configuration/categories/"+e.id)}}po.$inject=["$http","Constants"];var mo=po;function uo(e,t,n){e.category=n.name,e.cancel=function(){t.cancel()},e.ok=function(){t.hide(!0)}}uo.$inject=["$scope","$mdDialog","category"];var ho=uo;function go(e,t,n){e.api=n.name,e.cancel=function(){t.cancel()},e.ok=function(){t.hide(!0)}}go.$inject=["$scope","$mdDialog","api"];var fo=go;bo.$inject=["$mdDialog","group","defaultApiRole","defaultApplicationRole","apiRoles","applicationRoles","canChangeDefaultApiRole","canChangeDefaultApplicationRole","isApiRoleDisabled"];function bo(e,t,n,i,a,s,r,l,c){var d;this.group=t,this.apiRoles=a,this.applicationRoles=s,this.defaultApiRole=n,this.defaultApplicationRole=i,this.usersSelected=[],this.defaultApiRole=n||(null===(d=o.find(a,{default:!0}))||void 0===d?void 0:d.name),this.defaultApplicationRole=i||o.find(s,{default:!0}).name,this.canChangeDefaultApiRole=r,this.canChangeDefaultApplicationRole=l,this.isApiRoleDisabled=c,this.hide=()=>{e.cancel()},this.addMembers=()=>{const t=[];for(let e=0;e<this.usersSelected.length;e++){const n=this.usersSelected[e],i={id:n.id,reference:n.reference,displayName:n.firstname&&n.lastname?n.firstname+" "+n.lastname:n.username,roles:{API:this.defaultApiRole,APPLICATION:this.defaultApplicationRole}};t.push(i)}e.hide(t)},this.invalid=()=>!this.defaultApiRole&&!this.defaultApplicationRole||0===this.usersSelected.length,this.hasPrimaryOwner=()=>this.defaultApiRole===Dt.PRIMARY_OWNER&&this.usersSelected.length>0}var vo=bo;class yo{constructor(e,t,n,i){this.UserService=e,this.$scope=t,this.NotificationService=n,this.ReCaptchaService=i,this.user={},this.fields=[],this.UserService=e,this.$scope=t,this.NotificationService=n,this.ReCaptchaService=i}$onInit(){this.ReCaptchaService.displayBadge(),this.UserService.customUserFieldsToRegister().then(e=>this.fields=e.data)}register(){const e=this.$scope,t=this.NotificationService;this.ReCaptchaService.execute("register").then(()=>this.UserService.register(this.user)).then(()=>{e.formRegistration.$setPristine(),t.show("Thank you for registering, you will receive an e-mail confirmation in few minutes")},e=>{t.showError(e)})}}yo.$inject=["UserService","$scope","NotificationService","ReCaptchaService"];var So=yo;class wo{constructor(e,t,n,i,a,o){o.displayBadge(),t.params.token||t.go("management");try{e.isTokenExpired(t.params.token)?n.error="Your registration is expired!":(n.user=e.decodeToken(t.params.token),n.user.firstname&&(n.registrationMode=!0))}catch(e){n.error=e.toString()}n.confirmRegistration=function(){o.execute("finalizeRegistration").then(()=>{i.finalizeRegistration({token:t.params.token,password:n.confirmPassword,firstname:n.user.firstname,lastname:n.user.lastname}).then(()=>{n.formConfirm.$setPristine(),a.show("Your account has been created successfully, you can now login..."),t.go("login")})})},n.isInvalidPassword=function(){return n.confirmPassword&&n.user.password&&n.confirmPassword!==n.user.password}}}wo.$inject=["jwtHelper","$state","$scope","UserService","NotificationService","ReCaptchaService"];var Co=wo;class Io{constructor(e,t,n,i,a,o){o.displayBadge(),t.params.token||t.go("management");try{e.isTokenExpired(t.params.token)?n.error="Your token is expired!":n.user=e.decodeToken(t.params.token)}catch(e){n.error=e.toString()}n.changePassword=function(){o.execute("finalizeResetPassword").then(()=>{i.finalizeResetPassword(n.user.sub,{token:t.params.token,password:n.confirmPassword,firstname:n.user.firstname,lastname:n.user.lastname}).then(()=>{n.formConfirm.$setPristine(),a.show("Your password has been initialized successfully, you can now login..."),t.go("login")})})},n.isInvalidPassword=function(){return n.confirmPassword&&n.user.password&&n.confirmPassword!==n.user.password}}}Io.$inject=["jwtHelper","$state","$scope","UserService","NotificationService","ReCaptchaService"];var $o=Io;class Ao{constructor(e,t){this.$http=e,this.Constants=t}list(e,t){let n=this.Constants.env.baseURL+"/subscriptions/";return e&&(n+="?plan="+e),t&&(n+=(e?"&":"?")+"application="+t),this.$http.get(n)}}Ao.$inject=["$http","Constants"];var Oo=Ao;function To(e,t){this.hide=function(){t.cancel()},this.save=function(){t.hide(e.reason)}}To.$inject=["$scope","$mdDialog"];var Ro=To;class _o{constructor(e,t,n,i,a){this.apiId=e,this.applicationId=t,this.canUseCustomApiKey=n,this.sharedApiKeyMode=i,this.$mdDialog=a,this.onApiKeyValueChange=e=>{this.customApiKey=e.customApiKey,this.customApiKeyInputState=e.customApiKeyInputState},this.now=m()().toDate(),this.onApiKeyValueChange=this.onApiKeyValueChange.bind(this)}hide(){this.$mdDialog.cancel()}save(){this.$mdDialog.hide({starting_at:this.startingAt,ending_at:this.endingAt,reason:this.reason,customApiKey:this.customApiKey})}}_o.$inject=["apiId","applicationId","canUseCustomApiKey","sharedApiKeyMode","$mdDialog"];var xo=_o;function Lo(e,t,n,i,a,s){this.api=n,this.plans=t,this.selectedApp=null,this.selectedPlan=null,this.selectedPlanCustomApiKey=null,this.plansWithSubscriptions=[],this.customApiKeyInputState=null,this.$onInit=()=>{this.canUseCustomApiKey=s.env.settings.plan.security.customApiKey.enabled},this.hide=function(){e.cancel()},this.save=function(){this.selectedApp&&this.selectedPlan&&e.hide({application:this.selectedApp,plan:this.selectedPlan,customApiKey:this.selectedPlanCustomApiKey})},this.planAlreadyHaveSubscriptions=function(e){return o.indexOf(this.plansWithSubscriptions,e)>-1},this.planIsApiKey=e=>null!=this.plans.find(t=>t.security===Ve.API_KEY&&t.id===e),this.selectedItemChange=function(){this.plansWithSubscriptions=[],this.selectedPlanApiKey=null,this.selectedApp&&a.getSubscriptions(this.api.id,"?application="+this.selectedApp.id+"&status=pending,accepted").then(e=>{this.plansWithSubscriptions=o.map(e.data.data,e=>e.plan),this.selectedPlan&&this.planAlreadyHaveSubscriptions(this.selectedPlan.id)&&(this.selectedPlan=null)})},this.searchApplication=function(e){return i.searchPage(e).then(e=>e.data.data)},this.hasGeneralConditions=function(e){return void 0!==e.general_conditions&&null!==e.general_conditions},this.atLeastOnePlanWithGeneralConditions=function(){return null!=this.plans.find(e=>void 0!==e.general_conditions&&""!==e.general_conditions)},this.onApiKeyValueChange=e=>{this.selectedPlanCustomApiKey=e.customApiKey,this.customApiKeyInputState=e.customApiKeyInputState}}Lo.$inject=["$mdDialog","plans","api","ApplicationService","ApiService","Constants"];var Po=Lo;function No(e,t,n){this.plans=n,this.hide=function(){t.cancel()},this.save=function(){t.hide(this.plan)},this.hasGeneralConditions=function(e){return void 0!==e.general_conditions&&null!==e.general_conditions},this.atLeastOnePlanWithGeneralConditions=function(){return null!=this.plans.find(e=>void 0!==e.general_conditions&&""!==e.general_conditions)}}No.$inject=["$scope","$mdDialog","plans"];var Eo=No;function Do(e,t,n){this.subscription=n,this.endDate=n.endingAt,this.now=new Date,this.hide=function(){t.cancel()},this.save=function(){t.hide(this.endDate?this.endDate.toDate():null)}}Do.$inject=["$scope","$mdDialog","subscription"];var jo=Do;function ko(e,t,n){e.title=n.title,e.msg=n.msg,e.customMessage=n.customMessage,e.confirmButton=n.confirmButton||"OK",e.cancelButton=n.cancelButton||"Cancel",e.apiId=n.apiId,e.applicationId=n.applicationId,this.selectedPlanCustomApiKey=null,this.customValue="",this.customApiKeyInputState=null,this.cancel=function(){t.hide({confirmed:!1})},this.confirm=()=>{this.customValue?t.hide({confirmed:!0,customValue:this.customValue}):t.hide({confirmed:!0})},this.onApiKeyValueChange=e=>{this.customValue=e.customApiKey,this.customApiKeyInputState=e.customApiKeyInputState}}ko.$inject=["$scope","$mdDialog","locals"];var Uo=ko;var Mo=class{constructor(){return{restrict:"E",scope:{icon:"@icon",model:"@model",message:"@message",subMessage:"@subMessage",createMode:"=",fill:"@fill"},transclude:!0,template:n(771)}}};function Fo(e,t,n){e.plan=n,e.hide=function(){t.cancel()},e.publish=function(){t.hide(e.plan)}}Fo.$inject=["$scope","$mdDialog","plan"];var qo=Fo;class Ho{constructor(e,t){this.$http=e,this.Constants=t}list(){return this.$http.get(this.Constants.org.baseURL+"/configuration/tags/")}get(e){return this.$http.get(this.Constants.org.baseURL+"/configuration/tags/"+e)}create(e){if(e)return this.$http.post(this.Constants.org.baseURL+"/configuration/tags/",e)}update(e){if(e&&e.id)return this.$http.put(this.Constants.org.baseURL+"/configuration/tags/"+e.id,e)}delete(e){if(e)return this.$http.delete(this.Constants.org.baseURL+"/configuration/tags/"+e.id)}}Ho.$inject=["$http","Constants"];var Go=Ho;class Bo{constructor(e,t,n,i,a,o){this.MetadataService=e,this.NotificationService=t,this.$mdDialog=n,this.UserService=i,this.$rootScope=a,this.$state=o,this.$rootScope=a,o.params.apiId?this.referenceType="API":o.params.applicationId&&(this.referenceType="Application");const s=this.referenceType?this.referenceType.toLowerCase():"environment";this.canCreate=this.UserService.isUserHasPermissions([s+"-metadata-c"]),this.canUpdate=this.UserService.isUserHasPermissions([s+"-metadata-u"]),this.canDelete=this.UserService.isUserHasPermissions([s+"-metadata-d"])}newMetadata(){this.$mdDialog.show({controller:"NewMetadataDialogController",controllerAs:"$ctrl",template:n(430),locals:{metadataFormats:this.metadataFormats}}).then(e=>{this.NotificationService.show(`Metadata '${e.name}' created with success`),this.$state.reload()}).catch(()=>{})}updateMetadata(e){this.$mdDialog.show({controller:"UpdateMetadataDialogController",controllerAs:"$ctrl",template:n(430),locals:{metadata:o.clone(e),metadataFormats:this.metadataFormats}}).then(e=>{this.NotificationService.show(`Metadata '${e.name}' updated with success`),this.$state.reload()}).catch(()=>{})}deleteMetadata(e){this.$mdDialog.show({controller:"DeleteMetadataDialogController",controllerAs:"$ctrl",template:n(772),locals:{metadata:e}}).then(t=>{t&&(this.NotificationService.show("Metadata '"+e.name+"' deleted with success"),this.$state.reload())}).catch(()=>{})}metadataDeletable(e){return!this.referenceType||this.referenceType&&void 0!==e.value}}Bo.$inject=["MetadataService","NotificationService","$mdDialog","UserService","$rootScope","$state"];var Wo=Bo;class Vo{constructor(e,t){this.$http=e,this.Constants=t}listFormats(){return["STRING","NUMERIC","BOOLEAN","DATE","MAIL","URL"]}list(){return this.$http.get(this.Constants.env.baseURL+"/configuration/metadata/")}create(e){return this.$http.post(this.Constants.env.baseURL+"/configuration/metadata/",e)}update(e){return this.$http.put(this.Constants.env.baseURL+"/configuration/metadata/",e)}delete(e){return this.$http.delete(this.Constants.env.baseURL+"/configuration/metadata/"+e.key)}}Vo.$inject=["$http","Constants"];var Yo=Vo;function zo(e,t,n,i,a,o){o.apiId?(this.referenceType="API",this.referenceId=o.apiId):o.applicationId&&(this.referenceType="APPLICATION",this.referenceId=o.applicationId),this.metadataName=a.name,this.cancel=()=>{i.cancel()},this.delete=()=>{o.apiId?t.deleteMetadata(o.apiId,a.key).then(()=>{i.hide(!0)}):o.applicationId?n.deleteMetadata(o.applicationId,a.key).then(()=>{i.hide(!0)}):e.delete(a).then(()=>{i.hide(!0)})}}zo.$inject=["MetadataService","ApiService","ApplicationService","$mdDialog","metadata","$stateParams"];var Ko=zo;function Qo(e,t,n,i,a,o){o.apiId?(this.referenceType="API",this.referenceId=o.apiId):o.applicationId&&(this.referenceType="APPLICATION",this.referenceId=o.applicationId),this.metadata={},this.metadataFormats=a,this.metadataFormats&&this.metadataFormats.length&&(this.metadata.format=this.metadataFormats[0]),this.cancel=function(){i.cancel()},this.save=()=>{o.apiId?t.createMetadata(o.apiId,this.metadata).then(e=>{i.hide(e.data)}):o.applicationId?n.createMetadata(o.applicationId,this.metadata).then(e=>{i.hide(e.data)}):e.create(this.metadata).then(e=>{i.hide(e.data)})}}Qo.$inject=["MetadataService","ApiService","ApplicationService","$mdDialog","metadataFormats","$stateParams"];var Jo=Qo;function Xo(e,t,n,i,a,o,s){s.apiId?(this.referenceType="API",this.referenceId=s.apiId):s.applicationId&&(this.referenceType="APPLICATION",this.referenceId=s.applicationId),this.metadata=a,"DATE"===a.format&&(a.value=a.value?new Date(a.value):null,a.defaultValue&&(a.defaultValue=new Date(a.defaultValue))),this.metadataFormats=o,this.cancel=function(){i.cancel()},this.save=()=>{s.apiId?t.updateMetadata(s.apiId,this.metadata).then(e=>{i.hide(e.data)}):s.applicationId?n.updateMetadata(s.applicationId,this.metadata).then(e=>{i.hide(e.data)}):e.update(this.metadata).then(e=>{i.hide(e.data)})}}Xo.$inject=["MetadataService","ApiService","ApplicationService","$mdDialog","metadata","metadataFormats","$stateParams"];var Zo=Xo,es=n(57),ts=n(227);n(431);class ns{constructor(e){this.$window=e}}ns.$inject=["$window"];var is=class{constructor(){return{restrict:"E",template:"<div></div>",scope:{options:"=",type:"@",zoom:"=",height:"=",width:"="},controller:ns,link:function(e,t,n,i){es.setOptions({time:{useUTC:!1}});const s=t[0];let r;function l(){setTimeout(()=>{c(r,s)},100)}function c(n,i){if(n){(n=o.merge(n,{lang:{noData:"<code>No data to display</code>"},noData:{useHTML:!0}})).title?(n.title.style={fontWeight:"bold",fontSize:"12px",fontFamily:'"Helvetica Neue",Helvetica,Arial,sans-serif'},n.title.align="left"):n.title={text:""},n.yAxis=o.merge(n.yAxis,{title:{text:""}});const a=t.parent().parent()[0],s=t.parent()[0];if(n.chart=o.merge(n.chart,{type:e.type,height:e.height||s.height||a.height,width:e.width||s.clientWidth||a.clientWidth}),e.zoom&&(n.chart.zoomType="x"),n.credits={enabled:!1},n.series=o.sortBy(n.series,"name"),o.forEach(n.series,e=>{e.data=o.sortBy(e.data,"name")}),e.type&&e.type.startsWith("area"))n.tooltip={formatter:function(){const e=Math.trunc(this.points.filter(e=>e.y).length/10),t=n.dateFormat||"%A, %b %d, %H:%M";let i="<div><b>"+es.dateFormat(t,this.x)+"</b></div>";if(i+='<div class="'+(e>=2?"gv-tooltip gv-tooltip-"+(e>5?5:e):"")+'">',o.filter(this.points,e=>0!==e.y).length){let t=0;o.forEach(this.points,n=>{if(n.y){const a=" "+(n.series.options.labelPrefix?n.series.options.labelPrefix+" "+n.series.name:n.series.name);e<2&&t++>0&&(i+="<br />"),i+='<span style="margin: 1px 5px;"><span style="color:'+n.color+'">●</span>'+a+": <b>"+(n.series.options.decimalFormat?es.numberFormat(n.y,2):n.y)+(n.series.options.labelSuffix?n.series.options.labelSuffix:"")+"</b></span>"}})}return i+="</div>",i},shared:!0,useHTML:!0},n.plotOptions=o.merge(n.plotOptions,{series:{marker:{enabled:!1},fillOpacity:.1}}),e.type&&e.type.startsWith("area")&&(n.xAxis=o.merge(n.xAxis,{crosshair:!0}));else if(e.type&&"solidgauge"===e.type)n=o.merge(n,{pane:{background:{innerRadius:"80%",outerRadius:"100%"}},tooltip:{enabled:!1},yAxis:{showFirstLabel:!1,showLastLabel:!1,min:0,max:100,stops:[[.1,"#55BF3B"],[.5,"#DDDF0D"],[.9,"#DF5353"]],minorTickInterval:null,tickAmount:2},plotOptions:{solidgauge:{innerRadius:"80%",outerRadius:"100%",dataLabels:{y:30,borderWidth:0,useHTML:!0}}},series:[{dataLabels:{format:'<div style="text-align:center"><span style="font-size:25px;color:'+(es.theme&&es.theme.contrastTextColor||"black")+'">{y}%</span><br/><span style="font-size:12px;color:silver;">'+n.series[0].name+"</span></div>"}}]});else if(e.type&&"column"===e.type)e.stacked&&(n.plotOptions={column:{stacking:"normal"}});else if(e.type&&"sparkline"===e.type){const e=o.max(n.series[0].data);n=o.merge(n,{chart:{backgroundColor:null,borderWidth:0,type:"area",margin:[0,0,2,0],skipClone:!0},title:{text:""},credits:{enabled:!1},xAxis:{labels:{enabled:!1},title:{text:null},startOnTick:!1,endOnTick:!1,tickPositions:[]},yAxis:{max:0===e?1:e,endOnTick:!1,startOnTick:!1,labels:{enabled:!1},title:{text:null},tickPositions:[0]},legend:{enabled:!1},tooltip:{hideDelay:0,outside:!0,shared:!0,headerFormat:"",pointFormat:"<b>{point.y}</b> hits"},plotOptions:{series:{animation:!1,lineWidth:2,shadow:!1,states:{hover:{lineWidth:2}},marker:{enabled:!1,radius:1,states:{hover:{radius:2}}},fillOpacity:.25},column:{negativeColor:"#910000",borderColor:"silver"}}})}"map"===e.type?ts.mapChart(i,o.cloneDeep(n)):es.chart(i,o.cloneDeep(n))}}e.type&&e.type.startsWith("area")&&(t.bind("mousemove touchmove touchstart",e=>{let t,n,i,a;for(n=0;n<es.charts.length;n++)t=es.charts[n],t&&t.pointer&&(i=e.originalEvent?t.pointer.normalize(e.originalEvent):t.pointer.normalize(e),a=o.map(t.series,e=>e.searchPoint(i,!0)),a=o.filter(a,e=>e),e.points=a,a.length&&a[0]&&a[0].series.area&&a[0].highlight(e))}),es.Pointer.prototype.reset=function(){let e;for(let t=0;t<es.charts.length;t++)e=es.charts[t],e&&(e.tooltip&&e.tooltip.hide(this),e.xAxis[0]&&e.xAxis[0].hideCrosshair())},es.Point.prototype.highlight=function(e){e.points.length&&(this.onMouseOver(),this.series.chart.tooltip.refresh(e.points),this.series.chart.xAxis[0].drawCrosshair(e,this))}),e.$watch("options",e=>{setTimeout(()=>{c(e,s),r=e})}),a.a.element(i.$window).bind("resize",()=>{l()}),e.$on("onWidgetResize",()=>{l()})}}}};class as{constructor(e,t,n){this.$scope=e,this.$q=t,this.Constants=n}}as.$inject=["$scope","$q","Constants"];var os=class{constructor(){return{restrict:"A",controller:as,link:function(e,t,n,i){n.$observe("ngSrc",()=>{if(n.graviteeUserAvatar){const e=i.$q.defer(),a=new Image;return a.onerror=function(){e.resolve(!1),t.attr("src","assets/default_photo.png")},a.onload=function(){e.resolve(!0)},a.src=i.Constants.org.baseURL+"/users/"+n.graviteeUserAvatar+"/avatar",e.promise}t.attr("src","assets/default_photo.png")})}}}};function ss(e,t,n,i,a){e.title=n.title,e.confirmButton=n.confirmButton||"OK",e.cancelButton=n.cancelButton||"Cancel",this.cancel=function(){t.hide(!1)},this.confirm=function(){e.selectedFile&&e.selectedFile.size>i.env.settings.portal.uploadMedia.maxSizeInOctet?a.showError("file uploaded to big, you're limited at "+i.env.settings.portal.uploadMedia.maxSizeInOctet+" bytes"):t.hide({file:e.selectedFile,filename:e.filename})}}ss.$inject=["$scope","$mdDialog","locals","Constants","NotificationService"];var rs=ss;function ls(e,t,n){e.title=n.title,e.msg=n.msg,e.confirmButton=n.confirmButton||"OK",e.cancelButton=n.cancelButton||"Cancel",this.cancel=function(){t.hide(!1)},this.confirm=function(){t.hide(!0)}}ls.$inject=["$scope","$mdDialog","locals"];var cs=ls;function ds(e,t,n){e.title=n.title,e.msg=n.msg,e.warning=n.warning,e.validationMessage=n.validationMessage,e.confirmButton=n.confirmButton,e.validationValue=n.validationValue,e.confirmValue="",this.cancel=function(){t.hide(!1)},this.confirm=function(){t.hide(!0)}}ds.$inject=["$scope","$mdDialog","locals"];var ps=ds;function ms(e){this.cancel=e.cancel,this.codeMirrorOptions={lineWrapping:!1,lineNumbers:!0,mode:"javascript",readOnly:!0,controller:this},this.codemirrorLoaded=function(e){this.controller.editor=e;this.controller.editor.getDoc().markClean()},this.specificationExample=JSON.stringify([{key:1,value:"https://north-europe.company.com/"},{key:2,value:"https://north-europe.company.com/"},{key:3,value:"https://south-asia.company.com/"}],null,2)}ms.$inject=["$mdDialog"];var us=ms;class hs{constructor(e,t){this.$http=e,this.Constants=t}list(){return this.$http.get(this.Constants.org.baseURL+"/configuration/tenants/")}create(e){if(e&&e.length)return this.$http.post(this.Constants.org.baseURL+"/configuration/tenants/",e)}update(e){if(e&&e.length)return this.$http.put(this.Constants.org.baseURL+"/configuration/tenants/",e)}delete(e){if(e)return this.$http.delete(this.Constants.org.baseURL+"/configuration/tenants/"+e.id)}}hs.$inject=["$http","Constants"];var gs=hs;var fs={bindings:{categories:"<"},controller:"CategoriesController",template:n(773)};var bs={bindings:{category:"<",categoryApis:"<",pages:"<"},controller:"CategoryController",template:n(774)};var vs={bindings:{metadata:"<",metadataFormats:"<"},controller:"MetadataController",template:n(775)};var ys={restrict:"A",require:"ngModel",scope:{format:"=gvMetadataFormat",ngPattern:"="},link:function(e){e.$watch("format",t=>{switch(t){case"NUMERIC":e.ngPattern=/^((\${.+})|\d+(\.\d{1,2})?)$/;break;case"URL":e.ngPattern=/^((\$\{.+\})|(https?:\/\/)?([\da-z.-]+)\.([a-z.]{2,6})\b([-a-zA-Z0-9()@:%_+.~#?&//=]*))$/;break;case"MAIL":e.ngPattern=/^((\${.+})|(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,})))$/;break;case"STRING":delete e.ngPattern}})}};class Ss{constructor(e,t,n){this.$http=e,this.Constants=t,this.$q=n}listRights(){return["c","r","u","d"]}listScopes(){return this.fetchScopes().then(e=>e)}listPermissionsByScope(e){return this.fetchScopes().then(t=>t[e])}isUserRoleManagement(e){return"ORGANIZATION"===e}get(e,t){return this.$http.get(this.Constants.org.baseURL+"/configuration/rolescopes/"+e+"/roles/"+t).then(e=>{const t=e.data;return t.scope=o.toUpper(t.scope),t})}list(e){return this.$http.get(this.Constants.org.baseURL+"/configuration/rolescopes/"+e+"/roles").then(e=>o.map(e.data,e=>(e.scope=o.toUpper(e.scope),e)))}create(e){return this.$http.post(this.Constants.org.baseURL+"/configuration/rolescopes/"+e.scope+"/roles",e).then(e=>{const t=e.data;return t.scope=o.toUpper(t.scope),t})}update(e){return this.$http.put(this.Constants.org.baseURL+"/configuration/rolescopes/"+e.scope+"/roles/"+e.name,e).then(e=>{const t=e.data;return t.scope=o.toUpper(t.scope),t})}delete(e){return this.$http.delete(this.Constants.org.baseURL+"/configuration/rolescopes/"+e.scope+"/roles/"+e.name)}listUsers(e,t){return this.$http.get(this.Constants.org.baseURL+"/configuration/rolescopes/"+e+"/roles/"+t+"/users").then(e=>e.data)}deleteUser(e,t){return this.$http.delete(this.Constants.org.baseURL+"/configuration/rolescopes/"+e.scope+"/roles/"+e.name+"/users/"+t)}addRole(e,t,n){return this.$http.post(`${this.Constants.org.baseURL}/configuration/rolescopes/${e}/roles/${t}/users`,n)}fetchScopes(){return this.permissionsByScope?this.$q.resolve(this.permissionsByScope):this.$http.get(this.Constants.org.baseURL+"/configuration/rolescopes/").then(e=>(this.permissionsByScope=e.data,this.permissionsByScope))}}Ss.$inject=["$http","Constants","$q"];var ws=Ss;class Cs{constructor({name:e,id:t,description:n,requires_redirect_uris:i,allowed_grant_types:a,default_grant_types:o,mandatory_grant_types:s}){this.id=t,this.name=e,this.description=n,this.requires_redirect_uris=i,this.allowed_grant_types=a,this.default_grant_types=o,this.mandatory_grant_types=s,this.icon=this.getIcon()}isOauth(){return"simple"!==this.id.toLowerCase()}isGrantTypeMandatory(e){return this.mandatory_grant_types&&-1!==o.indexOf(this.mandatory_grant_types,e.type)}getIcon(){switch(this.id.toUpperCase()){case"BROWSER":return"computer";case"WEB":return"language";case"NATIVE":return"phone_android";case"BACKEND_TO_BACKEND":return"share";default:return"pan_tool"}}}As.$inject=["$stateProvider"];var Is,$s=As;function As(e){e.state("management.applications",{abstract:!0,template:'<div flex layout="column" ui-view></div>',url:"/applications"}).state("management.applications.list",{url:"/?q&page&status&size&order",component:"ngEnvApplicationList",params:{page:{value:"1",dynamic:!0},q:{dynamic:!0},size:{value:"10",dynamic:!0},status:{value:"ACTIVE",dynamic:!0},order:{dynamic:!0}},data:{useAngularMaterial:!0,perms:{only:["environment-application-r"]},docs:{page:"management-applications"}}}).state("management.applications.create",{url:"/create",component:"createApplication",resolve:{enabledApplicationTypes:["ApplicationTypesService",e=>e.getEnabledApplicationTypes().then(e=>e.data.map(e=>new Cs(e)))],groups:["GroupService",e=>e.list().then(e=>e.data)]},data:{perms:{only:["environment-application-c"]},docs:{page:"management-create-application"}}}).state("management.applications.application",{abstract:!0,url:"/:applicationId",template:n(776),controller:["application",function(e){this.application=e}],controllerAs:"$ctrl",resolve:{application:["$stateParams","ApplicationService","$state","EnvironmentService","Constants",(e,t,n,i,a)=>t.get(e.applicationId).then(e=>e.data).catch(e=>{e&&e.interceptorFuture&&n.go("management.applications.list",{environmentId:i.getFirstHridOrElseId(a.org.currentEnv.id)})})],applicationType:["$stateParams","ApplicationService",(e,t)=>t.getApplicationType(e.applicationId).then(e=>e.data).catch(e=>{e&&e.interceptorFuture&&e.interceptorFuture.cancel()})],resolvedApplicationPermissions:["$stateParams","ApplicationService",(e,t)=>t.getPermissions(e.applicationId).catch(e=>{e&&e.interceptorFuture&&e.interceptorFuture.cancel()})],onEnter:["UserService","resolvedApplicationPermissions",function(e,t){e.currentUser.userApplicationPermissions=[],t&&t.data&&o.forEach(o.keys(t.data),n=>{o.forEach(t.data[n],t=>{const i="APPLICATION-"+n+"-"+t;e.currentUser.userApplicationPermissions.push(o.toLower(i))})}),e.reloadPermissions()}]}}).state("management.applications.application.general",{url:"/",component:"applicationGeneral",data:{perms:{only:["application-definition-r"]},docs:{page:"management-application"}},resolve:{groups:["UserService","GroupService",(e,t)=>t.list().then(e=>o.filter(e.data,"manageable"))]}}).state("management.applications.application.metadata",{url:"/metadata",component:"metadata",resolve:{metadataFormats:["MetadataService",e=>e.listFormats()],metadata:["$stateParams","ApplicationService",function(e,t){return t.listMetadata(e.applicationId).then(e=>e.data)}]},data:{perms:{only:["application-metadata-r"]},docs:{page:"management-application-metadata"}}}).state("management.applications.application.subscriptions",{abstract:!0,url:"/subscriptions",template:"<div ui-view></div>"}).state("management.applications.application.subscriptions.list",{url:"?page&size&:shared_page&:shared_size&:api&:status&:api_key",component:"applicationSubscriptions",resolve:{subscribers:["$stateParams","ApplicationService",(e,t)=>t.getSubscribedAPI(e.applicationId).then(e=>e.data)]},data:{perms:{only:["application-subscription-r"]},docs:{page:"management-application-subscriptions"}},params:{status:{type:"string",dynamic:!0},api:{type:"string",dynamic:!0},page:{type:"int",value:1,dynamic:!0},size:{type:"int",value:10,dynamic:!0},shared_page:{type:"int",value:1,dynamic:!0},shared_size:{type:"int",value:10,dynamic:!0},api_key:{type:"string",dynamic:!0}}}).state("management.applications.application.subscriptions.subscription",{url:"/:subscriptionId?page&size&:shared_page&:shared_size&:api&:status&:api_key",component:"applicationSubscription",resolve:{subscription:["$stateParams","ApplicationService",(e,t)=>t.getSubscription(e.applicationId,e.subscriptionId).then(e=>e.data)]},data:{perms:{only:["application-subscription-r"]},docs:{page:"management-application-subscriptions"}},params:{status:{type:"string",dynamic:!0},api:{type:"string",dynamic:!0},page:{type:"int",value:1,dynamic:!0},size:{type:"int",value:10,dynamic:!0},shared_page:{type:"int",value:1,dynamic:!0},shared_size:{type:"int",value:10,dynamic:!0},api_key:{type:"string",dynamic:!0}}}).state("management.applications.application.subscriptions.subscribe",{url:"/subscribe",component:"applicationSubscribe",resolve:{groups:["GroupService",e=>e.list().then(e=>e.data)],subscriptions:["$stateParams","ApplicationService",(e,t)=>t.listSubscriptions(e.applicationId,"?expand=security").then(e=>e.data)]},data:{perms:{only:["application-subscription-r"]}}}).state("management.applications.application.members",{url:"/members",component:"applicationMembers",resolve:{members:["$stateParams","ApplicationService",(e,t)=>t.getMembers(e.applicationId).then(e=>e.data)],resolvedGroups:["GroupService",e=>e.list().then(e=>e.data)]},data:{perms:{only:["application-member-r"]},docs:{page:"management-application-members"}}}).state("management.applications.application.analytics",{url:"/analytics?from&to&q&dashboard",component:"applicationAnalytics",resolve:{},data:{perms:{only:["application-analytics-r"]},docs:{page:"management-application-analytics"}},params:{from:{type:"int",dynamic:!0},to:{type:"int",dynamic:!0},q:{type:"string",dynamic:!0},dashboard:{type:"string",dynamic:!0}}}).state("management.applications.application.logs",{abstract:!0,url:"/logs"}).state("management.applications.application.logs.list",{url:"?from&to&q&page&size",component:"applicationLogs",data:{perms:{only:["application-log-r"]},docs:{page:"management-application-logs"}},params:{from:{type:"int",dynamic:!0},to:{type:"int",dynamic:!0},q:{type:"string",dynamic:!0},page:{type:"int",dynamic:!0},size:{type:"int",dynamic:!0}},resolve:{apis:["$stateParams","ApplicationService",(e,t)=>t.getSubscribedAPI(e.applicationId)]}}).state("management.applications.application.logs.log",{url:"/:logId?timestamp&from&to&q&page&size",component:"applicationLog",resolve:{log:["$stateParams","ApplicationService",(e,t)=>t.getLog(e.applicationId,e.logId,e.timestamp).then(e=>e.data)]},data:{perms:{only:["application-log-r"]}}})}!function(e){e[e.API=0]="API",e[e.APPLICATION=1]="APPLICATION",e[e.PORTAL=2]="PORTAL"}(Is||(Is={}));var Os,Ts,Rs=n(48);!function(e){e[e.API=0]="API",e[e.APPLICATION=1]="APPLICATION",e[e.ENVIRONMENT=2]="ENVIRONMENT"}(Os||(Os={})),function(e){e.STRING="STRING",e.THRESHOLD="THRESHOLD",e.THRESHOLD_RANGE="THRESHOLD_RANGE",e.RATE="RATE",e.FREQUENCY="FREQUENCY",e.THRESHOLD_ACCUMULATE="THRESHOLD_ACCUMULATE",e.COMPARE="COMPARE",e.STRING_COMPARE="STRING_COMPARE"}(Ts||(Ts={}));class _s{constructor(e,t){this.key=e,this.name=t}}class xs{constructor(e,t){this.key=e,this.value=t}}class Ls{constructor(e,t,n,i,a,o){this.supportPropertyProjection=!1,this.key=e,this.name=t,this.conditions=n,this.supportPropertyProjection=i,this.scopes=a,this.loader=o}static filterByScope(e,t){return e.filter(e=>void 0===e.scopes||-1!==e.scopes.indexOf(t))}}class Ps{constructor(e,t,n,i,a,o,s){this.name=e,this.severity=t,this.source=n,this.description=i,this.type=a,this.reference_type=o,this.reference_id=s}}class Ns{constructor(e,t){this.type=e,this.description=t}}Ns.STRICT_COUNT=new Ns("STRICT_COUNT","N consecutive true evaluations"),Ns.RELAXED_COUNT=new Ns("RELAXED_COUNT","N true evaluations out of M total evaluations"),Ns.RELAXED_TIME=new Ns("RELAXED_TIME","N true evaluations in T time"),Ns.STRICT_TIME=new Ns("STRICT_TIME","Only true evaluations for at least T time"),Ns.MODES=[Ns.STRICT_COUNT,Ns.RELAXED_COUNT,Ns.RELAXED_TIME,Ns.STRICT_TIME];class Es{constructor(e,t){this.type=e,this.name=t}}class Ds extends Es{constructor(){super(Ds.TYPE,"Threshold")}getOperators(){return Ds.OPERATORS}}Ds.TYPE="THRESHOLD",Ds.LT=new _s("LT","less than"),Ds.LTE=new _s("LTE","less than or equals to"),Ds.GTE=new _s("GTE","greater than or equals to"),Ds.GT=new _s("GT","greater than"),Ds.OPERATORS=[Ds.LT,Ds.LTE,Ds.GTE,Ds.GT];class js extends Es{constructor(){super(js.TYPE,"Rate")}getOperators(){return js.OPERATORS}}js.TYPE="RATE",js.LT=new _s("LT","less than"),js.LTE=new _s("LTE","less than or equals to"),js.GTE=new _s("GTE","greater than or equals to"),js.GT=new _s("GT","greater than"),js.OPERATORS=[js.LT,js.LTE,js.GTE,js.GT];class ks extends Es{constructor(){super(ks.TYPE,"Frequency")}getOperators(){return ks.OPERATORS}}ks.TYPE="FREQUENCY",ks.LT=new _s("LT","less than"),ks.LTE=new _s("LTE","less than or equals to"),ks.GTE=new _s("GTE","greater than or equals to"),ks.GT=new _s("GT","greater than"),ks.OPERATORS=[ks.LT,ks.LTE,ks.GTE,ks.GT];class Us{constructor(e,t){this.key=e,this.name=t}}class Ms extends Es{constructor(){super(Ms.TYPE,"Aggregation")}getOperators(){return Ms.OPERATORS}}Ms.TYPE="AGGREGATION",Ms.LT=new _s("LT","less than"),Ms.LTE=new _s("LTE","less than or equals to"),Ms.GTE=new _s("GTE","greater than or equals to"),Ms.GT=new _s("GT","greater than"),Ms.OPERATORS=[Ms.LT,Ms.LTE,Ms.GTE,Ms.GT],Ms.FUNCTIONS=[new Us("COUNT","count"),new Us("AVG","average"),new Us("MIN","min"),new Us("MAX","max"),new Us("P50","50th percentile"),new Us("P90","90th percentile"),new Us("P95","95th percentile"),new Us("P99","99th percentile")];class Fs extends Es{constructor(){super(Fs.TYPE,"Threshold Range")}getOperators(){return Fs.OPERATORS}}Fs.TYPE="THRESHOLD_RANGE",Fs.BETWEEN=new _s("BETWEEN","between"),Fs.OPERATORS=[Fs.BETWEEN];class qs extends Es{constructor(){super(qs.TYPE,"Compare")}getOperators(){return qs.OPERATORS}}qs.TYPE="COMPARE",qs.LT=new _s("LT","less than"),qs.LTE=new _s("LTE","less than or equals to"),qs.GTE=new _s("GTE","greater than or equals to"),qs.GT=new _s("GT","greater than"),qs.OPERATORS=[qs.LT,qs.LTE,qs.GTE,qs.GT];class Hs extends Es{constructor(){super(Hs.TYPE,"String")}getOperators(){return Hs.OPERATORS}}Hs.TYPE="STRING",Hs.EQUALS=new _s("EQUALS","equals to"),Hs.NOT_EQUALS=new _s("NOT_EQUALS","not equals to"),Hs.STARTS_WITH=new _s("STARTS_WITH","starts with"),Hs.ENDS_WITH=new _s("ENDS_WITH","ends with"),Hs.CONTAINS=new _s("CONTAINS","contains"),Hs.MATCHES=new _s("MATCHES","matches"),Hs.OPERATORS=[Hs.EQUALS,Hs.NOT_EQUALS,Hs.STARTS_WITH,Hs.ENDS_WITH,Hs.CONTAINS,Hs.MATCHES];class Gs extends Es{constructor(){super(Gs.TYPE,"String Compare")}getOperators(){return Gs.OPERATORS}}Gs.TYPE="STRING_COMPARE",Gs.EQUALS=new _s("EQUALS","equals to"),Gs.NOT_EQUALS=new _s("NOT_EQUALS","not equals to"),Gs.STARTS_WITH=new _s("STARTS_WITH","starts with"),Gs.ENDS_WITH=new _s("ENDS_WITH","ends with"),Gs.CONTAINS=new _s("CONTAINS","contains"),Gs.MATCHES=new _s("MATCHES","matches"),Gs.OPERATORS=[Gs.EQUALS,Gs.NOT_EQUALS,Gs.STARTS_WITH,Gs.ENDS_WITH,Gs.CONTAINS,Gs.MATCHES];class Bs{constructor(e,t){this.key=e,this.name=t}}Bs.SECONDS=new Bs("SECONDS","Seconds"),Bs.MINUTES=new Bs("MINUTES","Minutes"),Bs.HOURS=new Bs("HOURS","Hours"),Bs.TIME_UNITS=[Bs.SECONDS,Bs.MINUTES,Bs.HOURS];class Ws{static findByType(e){return Ws.CONDITIONS.find(t=>t.type===e)}}Ws.THRESHOLD=new Ds,Ws.THRESHOLD_RANGE=new Fs,Ws.STRING=new Hs,Ws.RATE=new js,Ws.FREQUENCY=new ks,Ws.COMPARE=new qs,Ws.STRING_COMPARE=new Gs,Ws.CONDITIONS=[Ws.THRESHOLD,Ws.THRESHOLD_RANGE,Ws.STRING,Ws.RATE,Ws.FREQUENCY,Ws.COMPARE,Ws.STRING_COMPARE];class Vs{constructor(e){this.days=e.days,this.beginHour=e.beginHour,this.endHour=e.endHour,this.zoneId=e.zoneId}equals({days:e,beginHour:t,endHour:n}){return Object(Rs.c)(e,this.days,!0)&&this.beginHour===t&&this.endHour===n}}zs.$inject=["$stateProvider"];var Ys=zs;function zs(e){e.state("management.applications.application.notifications",{url:"/notifications",component:"notificationsComponent",data:{perms:{only:["application-notification-r","application-alert-r"]}},resolve:{resolvedHookScope:()=>Is.APPLICATION,resolvedHooks:["NotificationSettingsService",e=>e.getHooks(Is.APPLICATION).then(e=>e.data)],resolvedNotifiers:["NotificationSettingsService","$stateParams",(e,t)=>e.getNotifiers(Is.APPLICATION,t.applicationId).then(e=>e.data)],notificationSettings:["NotificationSettingsService","$stateParams",(e,t)=>e.getNotificationSettings(Is.APPLICATION,t.applicationId).then(e=>e.data)],alerts:["AlertService","$stateParams",(e,t)=>e.listAlerts(Os.APPLICATION,!0,t.applicationId).then(e=>e.data)]}}).state("management.applications.application.notifications.notification",{url:"/:notificationId",component:"notificationSettingsComponent",data:{menu:null,docs:{page:"management-application-notifications"},perms:{only:["application-notification-r"]}}})}Qs.$inject=["$stateProvider"];var Ks=Qs;function Qs(e){e.state("management.apis",{abstract:!0,template:'<div flex layout="column" ui-view></div>',url:"/apis"}).state("management.apis.detail",{abstract:!0,url:"/:apiId",template:n(777),controller:"ApiAdminController",controllerAs:"apiCtrl",resolve:{resolvedApiState:["$stateParams","ApiService",function(e,t){return t.isAPISynchronized(e.apiId)}],resolvedApi:["$stateParams","ApiService","$state","Constants","EnvironmentService",function(e,t,n,i,a){return t.get(e.apiId).catch(e=>{e&&e.interceptorFuture&&n.go("management.apis.list",{environmentId:a.getFirstHridOrElseId(i.org.currentEnv.id)})})}],resolvedCategories:["CategoryService",e=>e.list().then(e=>e.data)],resolvedGroups:["GroupService",e=>e.list().then(e=>e.data)],resolvedApiGroups:["$stateParams","ApiService","UserService",(e,t,n)=>{if(n.isUserHasPermissions(["api-member-r"]))return t.getGroupsWithMembers(e.apiId).then(e=>e.data)}],resolvedTags:["TagService",e=>e.list().then(e=>e.data)],resolvedTenants:()=>[],resolvedApiPermissions:["ApiService","$stateParams",(e,t)=>e.getPermissions(t.apiId).catch(e=>{e&&e.interceptorFuture&&e.interceptorFuture.cancel()})],onEnter:["UserService","resolvedApiPermissions",function(e,t){e.currentUser.userApiPermissions=[],t&&t.data&&o.forEach(o.keys(t.data),n=>{o.forEach(t.data[n],t=>{const i="API-"+n+"-"+t;e.currentUser.userApiPermissions.push(o.toLower(i))})}),e.reloadPermissions()}],userTags:["UserService",e=>e.getCurrentUserTags().then(e=>e.data)]}}).state("management.apis.new",{url:"/new",component:"ngApiCreationGetStartedComponent",data:{useAngularMaterial:!0,perms:{only:["environment-api-c"]},docs:{page:"management-apis-create"}}}).state("management.apis.new-import",{url:"/new/import/:definitionVersion",template:n(778),controller:"NewApiImportController",controllerAs:"$ctrl",resolve:{policies:["PolicyService",e=>e.listSwaggerPolicies().then(e=>e.data)]},data:{perms:{only:["environment-api-c"]},docs:{page:"management-apis-create"}}}).state("management.apis.create",{url:"/new/create/:definitionVersion",component:"apiCreation",resolve:{groups:["GroupService",e=>e.list().then(e=>e.data)],tenants:["TenantService",e=>e.list().then(e=>e.data)],tags:["TagService",e=>e.list().then(e=>e.data)]},data:{perms:{only:["environment-api-c"]},docs:{page:"management-apis-create-steps"}}}).state("management.apis.ng-list",{url:"/?q&page&size&order",component:"ngApiList",data:{useAngularMaterial:!0,docs:{page:"management-apis"},ncyBreadcrumb:{label:"APIs"}},params:{page:{value:"1",dynamic:!0},q:{dynamic:!0},size:{value:"10",dynamic:!0},order:{dynamic:!0}}})}Xs.$inject=["$stateProvider"];var Js=Xs;function Xs(e){e.state("management.apis.detail.analytics",{abstract:!0}).state("management.apis.detail.analytics.overview",{url:"/analytics?from&to&q&dashboard",template:n(779),controller:"ApiAnalyticsController",controllerAs:"analyticsCtrl",resolve:{dashboards:["DashboardService",e=>e.list("API").then(e=>e.data)]},data:{perms:{only:["api-analytics-r"]},docs:{page:"management-api-analytics"}},params:{from:{type:"int",dynamic:!0},to:{type:"int",dynamic:!0},q:{type:"string",dynamic:!0},dashboard:{type:"string",dynamic:!0}}}).state("management.apis.detail.analytics.logs",{abstract:!0,url:"/logs"}).state("management.apis.detail.analytics.logs.list",{url:"?from&to&q&page&size",template:n(780),controller:"ApiLogsController",controllerAs:"logsCtrl",data:{perms:{only:["api-log-r"]},docs:{page:"management-api-logs"}},params:{from:{type:"int",dynamic:!0},to:{type:"int",dynamic:!0},q:{type:"string",dynamic:!0},page:{type:"int",dynamic:!0},size:{type:"int",dynamic:!0}},resolve:{plans:["$stateParams","ApiService",(e,t)=>t.getApiPlans(e.apiId)],applications:["$stateParams","ApiService",(e,t)=>t.getSubscribers(e.apiId,null,null,null,["owner"])],tenants:["TenantService",e=>e.list()]}}).state("management.apis.detail.analytics.logs.loggingconfigure",{url:"/configure",template:n(781),controller:"ApiLoggingConfigurationController",controllerAs:"loggingCtrl",data:{perms:{only:["api-log-u"]},docs:{page:"management-api-logging-configuration"}},resolve:{spelGrammar:["SpelService",e=>e.getGrammar()]}}).state("management.apis.detail.analytics.logs.log",{url:"/:logId?timestamp&from&to&q&page&size",component:"log",resolve:{log:["$stateParams","ApiService",(e,t)=>t.getLog(e.apiId,e.logId,e.timestamp).then(e=>e.data)]},data:{perms:{only:["api-log-r"]},docs:{page:"management-api-log"}}}).state("management.apis.detail.analytics.pathMappings",{url:"/path-mappings",template:n(782),controller:"ApiPathMappingsController",controllerAs:"apiPathMappingCtrl",data:{perms:{only:["api-definition-r"]},docs:{page:"management-api-pathMappings"}}}).state("management.apis.detail.analytics.alerts",{url:"/analytics/alerts",template:n(783),controller:"ApiAlertsDashboardController",controllerAs:"$ctrl",resolve:{configuredAlerts:["AlertService","$stateParams",(e,t)=>e.listAlerts(Os.API,!1,t.apiId).then(e=>e.data)],alertingStatus:["AlertService","$stateParams",(e,t)=>e.getStatus(Os.API,t.apiId).then(e=>e.data)]},data:{perms:{only:["api-alert-r"]},docs:{page:"management-api-alerts"}}})}er.$inject=["$stateProvider"];var Zs=er;function er(e){e.state("management.apis.detail.audit",{abstract:!0}).state("management.apis.detail.audit.general",{url:"/audit",template:n(784),controller:"ApiAuditController",controllerAs:"auditCtrl",data:{perms:{only:["api-audit-r"]},docs:{page:"management-api-audit"}},resolve:{resolvedEvents:["AuditService","$stateParams",(e,t)=>e.listEvents(t.apiId).then(e=>e.data)]}}).state("management.apis.detail.audit.history",{url:"/history",template:n(785),controller:"ApiHistoryController",controllerAs:"apiHistoryCtrl",resolve:{resolvedEvents:["$stateParams","ApiService",function(e,t){return t.getApiEvents(e.apiId,"PUBLISH_API")}]},data:{perms:{only:["api-event-r"]},docs:{page:"management-api-history"}}}).state("management.apis.detail.audit.events",{url:"/events",template:n(786),controller:"ApiEventsController",controllerAs:"apiEventsCtrl",resolve:{resolvedEvents:["$stateParams","ApiService",function(e,t){return t.getApiEvents(e.apiId,"START_API,STOP_API")}]},data:{perms:{only:["api-event-r"]},docs:{page:"management-api-events"}}})}nr.$inject=["$stateProvider"];var tr=nr;function nr(e){e.state("management.apis.detail.design",{abstract:!0}).state("management.apis.detail.design.policies",{url:"/policies",template:n(787),controller:"ApiPoliciesController",controllerAs:"apiPoliciesCtrl",resolve:{resolvedTenants:["TenantService",e=>e.list()]},apiDefinition:{version:"1.0.0",redirect:"management.apis.detail.design.flowsNg"},data:{perms:{only:["api-definition-r"]},docs:{page:"management-api-policies"}}}).state("management.apis.detail.design.resources",{url:"/resources",template:n(788),controller:"ApiResourcesController",controllerAs:"apiResourcesCtrl",resolve:{resolvedResources:["ResourceService",e=>e.list()]},apiDefinition:{version:"1.0.0",redirect:"management.apis.detail.design.flowsNg"},data:{perms:{only:["api-definition-r"]},docs:{page:"management-api-resources"}}}).state("management.apis.detail.design.properties",{url:"/properties",template:n(789),controller:"ApiPropertiesController",controllerAs:"apiPropertiesCtrl",apiDefinition:{version:"1.0.0",redirect:"management.apis.detail.design.flowsNg"},data:{perms:{only:["api-definition-r"]},docs:{page:"management-api-properties"}}})}ar.$inject=["$stateProvider"];var ir=ar;function ar(e){e.state("management.apis.detail.proxy",{}).state("management.apis.detail.proxy.entrypoints",{url:"/proxy",component:"ngApiProxyEntrypoints",data:{useAngularMaterial:!0,perms:{only:["api-definition-r","api-health-r"]},docs:{page:"management-api-proxy"}}}).state("management.apis.detail.proxy.cors",{url:"/cors",component:"ngApiProxyCors",data:{useAngularMaterial:!0,perms:{only:["api-definition-r"]},docs:{page:"management-api-proxy"}}}).state("management.apis.detail.proxy.deployments",{url:"/deployments",component:"ngApiProxyDeployments",data:{useAngularMaterial:!0,perms:{only:["api-definition-r"]},docs:{page:"management-api-proxy"}}}).state("management.apis.detail.proxy.failover",{url:"/failover",component:"ngApiProxyFailover",data:{useAngularMaterial:!0,perms:{only:["api-definition-r"]},docs:{page:"management-api-proxy-failover"}}}).state("management.apis.detail.proxy.endpoints",{url:"/endpoints",component:"ngApiProxyEndpointList",data:{useAngularMaterial:!0,perms:{only:["api-definition-r"]},docs:{page:"management-api-proxy-endpoint"}}}).state("management.apis.detail.proxy.endpoint",{url:"/groups/:groupName/endpoints/:endpointName",component:"ngApiProxyGroupEndpointEdit",data:{useAngularMaterial:!0,perms:{only:["api-definition-r"]},docs:{page:"management-api-proxy-endpoints"}}}).state("management.apis.detail.proxy.group",{url:"/groups/:groupName",component:"ngApiProxyGroupEdit",data:{useAngularMaterial:!0,perms:{only:["api-definition-r"]},docs:{page:"management-api-proxy-group"}}}).state("management.apis.detail.proxy.healthCheckDashboard",{abstract:!0,url:"/healthcheck-dashboard",template:n(790)}).state("management.apis.detail.proxy.healthCheckDashboard.visualize",{url:"?from&to&page&size",template:n(791),controller:"ApiHealthCheckController",controllerAs:"healthCheckCtrl",data:{perms:{only:["api-health-r"]},docs:{page:"management-api-health-check"}},params:{from:{type:"int",dynamic:!0},to:{type:"int",dynamic:!0},page:{type:"int",dynamic:!0},size:{type:"int",dynamic:!0}}}).state("management.apis.detail.proxy.healthCheckDashboard.log",{url:"/logs/:log",template:n(792),controller:"ApiHealthCheckLogController",controllerAs:"healthCheckLogCtrl",resolve:{resolvedLog:["$stateParams","ApiService",(e,t)=>t.getHealthLog(e.apiId,e.log)]},data:{perms:{only:["api-health-r"]}}}).state("management.apis.detail.proxy.healthcheck",{url:"/healthcheck",component:"ngApiProxyHealthCheck",data:{useAngularMaterial:!0,perms:{only:["api-health-c"]},docs:{page:"management-api-health-check-configure"}}}).state("management.apis.detail.proxy.responsetemplates",{abstract:!0,url:"/responsetemplates"}).state("management.apis.detail.proxy.responsetemplates.list",{url:"",component:"ngApiProxyResponseTemplatesList",data:{useAngularMaterial:!0,perms:{only:["api-response_templates-r"]},docs:{page:"management-api-proxy-response-templates"}}}).state("management.apis.detail.proxy.responsetemplates.new",{url:"/",component:"ngApiProxyResponseTemplatesEdit",data:{useAngularMaterial:!0,perms:{only:["api-response_templates-c","api-response_templates-r","api-response_templates-u"]},docs:{page:"management-api-proxy-response-template"}}}).state("management.apis.detail.proxy.responsetemplates.edit",{url:"/:responseTemplateId",component:"ngApiProxyResponseTemplatesEdit",data:{useAngularMaterial:!0,perms:{only:["api-response_templates-c","api-response_templates-r","api-response_templates-u"]},docs:{page:"management-api-proxy-response-template"}}})}sr.$inject=["$stateProvider"];var or=sr;function sr(e){e.state("management.apis.detail.portal",{resolve:{qualityRules:["QualityRuleService",e=>e.list().then(e=>e.data)]}}).state("management.apis.detail.portal.general",{url:"/portal",component:"ngApiPortalDetails",data:{useAngularMaterial:!0,docs:{page:"management-api"}}}).state("management.apis.detail.portal.ng-plans",{url:"/ng-plans",component:"ngApiPortalPlanList",data:{useAngularMaterial:!0,perms:{only:["api-plan-r"]},docs:{page:"management-api-plans"}}}).state("management.apis.detail.portal.ng-plans.list",{url:"?status",component:"ngApiPortalPlanList",data:{useAngularMaterial:!0,perms:{only:["api-plan-r"]},docs:{page:"management-api-plans"}},params:{status:{type:"string",dynamic:!0}}}).state("management.apis.detail.portal.plan",{url:"/plan"}).state("management.apis.detail.portal.plan.new",{url:"/new",component:"ngApiPortalPlanEdit",data:{perms:{only:["api-plan-c"]},docs:{page:"management-api-plans-wizard"}}}).state("management.apis.detail.portal.plans",{abstract:!0,url:"/plans",template:'<div layout="column"><div ui-view></div></div>',resolve:{api:["$stateParams","ApiService",(e,t)=>t.get(e.apiId).then(e=>e.data)]}}).state("management.apis.detail.portal.plans.list",{url:"?state",component:"listPlans",resolve:{plans:["$stateParams","ApiService",(e,t)=>t.getApiPlans(e.apiId).then(e=>e.data)],groups:["GroupService",e=>e.list().then(e=>e.data)]},data:{perms:{only:["api-plan-r"]},docs:{page:"management-api-plans"}},params:{state:{type:"string",dynamic:!0}}}).state("management.apis.detail.portal.plans.new",{url:"/new",component:"editPlan",resolve:{groups:["GroupService",e=>e.list().then(e=>e.data)],policies:["PolicyService",e=>e.list().then(e=>e.data)],resourceTypes:["ResourceService",e=>e.list(!1,!0).then(e=>e.data)],tags:["TagService",e=>e.list().then(e=>e.data)],userTags:["UserService",e=>e.getCurrentUserTags().then(e=>e.data)],pages:["DocumentationService","$stateParams",(e,t)=>{const n=new z;return n.type="MARKDOWN",n.api=t.apiId,e.search(n,t.apiId).then(e=>e.data)}]},data:{perms:{only:["api-plan-c"]},docs:{page:"management-api-plans-wizard"}}}).state("management.apis.detail.portal.plans.plan",{url:"/:planId/edit",component:"editPlan",resolve:{plan:["$stateParams","ApiService",(e,t)=>t.getApiPlan(e.apiId,e.planId).then(e=>e.data)],groups:["GroupService",e=>e.list().then(e=>e.data)],policies:["PolicyService",e=>e.list().then(e=>e.data)],resourceTypes:["ResourceService",e=>e.list(!1,!0).then(e=>e.data)],tags:["TagService",e=>e.list().then(e=>e.data)],userTags:["UserService",e=>e.getCurrentUserTags().then(e=>e.data)],pages:["DocumentationService","$stateParams",(e,t)=>{const n=new z;return n.type="MARKDOWN",n.api=t.apiId,e.search(n,t.apiId).then(e=>e.data)}]},data:{perms:{only:["api-plan-u"]},docs:{page:"management-api-plans-wizard"}}}).state("management.apis.detail.portal.subscriptions",{abstract:!0,url:"/subscriptions",template:'<div layout="column"><div ui-view></div></div>',resolve:{api:["$stateParams","ApiService",(e,t)=>t.get(e.apiId).then(e=>e.data)]}}).state("management.apis.detail.portal.subscriptions.list",{url:"?page&size&:application&:status&:plan&:api_key",component:"apiSubscriptions",resolve:{subscriptions:["$stateParams","ApiService",(e,t)=>{let n="?page="+e.page+"&size="+e.size;return e.status&&(n+="&status="+e.status),e.application&&(n+="&application="+e.application),e.plan&&(n+="&plan="+e.plan),e.api_key&&(n+="&api_key="+e.api_key),t.getSubscriptions(e.apiId,n).then(e=>e.data)}],plans:["$stateParams","ApiService",(e,t)=>t.getApiPlans(e.apiId).then(e=>e.data)]},data:{perms:{only:["api-subscription-r"]},docs:{page:"management-api-subscriptions"}},params:{status:{type:"string",dynamic:!0},application:{type:"string",dynamic:!0},plan:{type:"string",dynamic:!0},page:{type:"int",value:1,dynamic:!0},size:{type:"int",value:10,dynamic:!0},api_key:{type:"string",dynamic:!0}}}).state("management.apis.detail.portal.subscriptions.subscription",{url:"/:subscriptionId?:page&:size&:application&:status&:plan&:api_key",component:"apiSubscription",resolve:{subscription:["$stateParams","ApiService",(e,t)=>t.getSubscription(e.apiId,e.subscriptionId).then(e=>e.data)]},data:{perms:{only:["api-subscription-r"]},docs:{page:"management-api-subscriptions"}},params:{status:{type:"string",dynamic:!0},application:{type:"string",dynamic:!0},plan:{type:"string",dynamic:!0},page:{type:"int",value:1,dynamic:!0},size:{type:"int",value:10,dynamic:!0},api_key:{type:"string",dynamic:!0}}}).state("management.apis.detail.portal.members",{url:"/members",template:n(793),controller:"ApiMembersController",controllerAs:"apiMembersCtrl",resolve:{resolvedMembers:["$stateParams","ApiService",function(e,t){return t.getMembers(e.apiId)}]},data:{perms:{only:["api-member-r"]},docs:{page:"management-api-members"}}}).state("management.apis.detail.portal.groups",{url:"/groups",template:n(794),controller:"ApiPortalController",controllerAs:"portalCtrl",data:{perms:{only:["api-member-r"]},docs:{page:"management-api-members"}}}).state("management.apis.detail.portal.transferownership",{url:"/transferownership",template:n(795),controller:"ApiTransferOwnershipController",controllerAs:"apiTransferOwnershipCtrl",resolve:{resolvedMembers:["$stateParams","ApiService",function(e,t){return t.getMembers(e.apiId)}]},data:{perms:{only:["api-member-r"]},docs:{page:"management-api-members"}}}).state("management.apis.detail.portal.metadata",{url:"/metadata",component:"metadata",resolve:{metadataFormats:["MetadataService",e=>e.listFormats()],metadata:["$stateParams","ApiService",function(e,t){return t.listApiMetadata(e.apiId).then(e=>e.data)}]},data:{perms:{only:["api-metadata-r"]},docs:{page:"management-api-metadata"}}}).state("management.apis.detail.portal.documentation",{url:"/documentation?:parent",component:"documentationManagement",resolve:{pages:["DocumentationService","$stateParams",(e,t)=>{const n=new z;return t.parent&&""!==t.parent?n.parent=t.parent:n.root=!0,e.search(n,t.apiId).then(e=>e.data)}],folders:["DocumentationService","$stateParams",(e,t)=>{const n=new z;return n.type="FOLDER",e.search(n,t.apiId).then(e=>e.data)}],systemFolders:["DocumentationService","$stateParams",(e,t)=>{const n=new z;return n.type="SYSTEM_FOLDER",e.search(n,t.apiId).then(e=>e.data)}]},data:{docs:{page:"management-api-documentation"},perms:{only:["api-documentation-r"]}},params:{parent:{type:"string",value:"",squash:!1}}}).state("management.apis.detail.portal.newdocumentation",{url:"/documentation/new?:type&:parent",component:"newPage",resolve:{resolvedFetchers:["FetcherService",e=>e.list().then(e=>e.data)],folders:["DocumentationService","$stateParams",(e,t)=>{const n=new z;return n.type="FOLDER",e.search(n,t.apiId).then(e=>e.data)}],systemFolders:["DocumentationService","$stateParams",(e,t)=>{const n=new z;return n.type="SYSTEM_FOLDER",e.search(n,t.apiId).then(e=>e.data)}],pageResources:["DocumentationService","$stateParams",(e,t)=>{if("LINK"===t.type){const n=new z;return e.search(n,t.apiId).then(e=>e.data)}}],categoryResources:["CategoryService","$stateParams",(e,t)=>{if("LINK"===t.type)return e.list().then(e=>e.data)}],pagesToLink:["DocumentationService","$stateParams",(e,t)=>{if("MARKDOWN"===t.type||"MARKDOWN_TEMPLATE"===t.type){const n=new z;return n.homepage=!1,n.published=!0,e.search(n,t.apiId).then(e=>e.data.filter(e=>"MARKDOWN"===e.type.toUpperCase()||"SWAGGER"===e.type.toUpperCase()||"ASCIIDOC"===e.type.toUpperCase()||"ASYNCAPI"===e.type.toUpperCase()))}}]},data:{docs:{page:"management-api-documentation"},perms:{only:["api-documentation-c"]}},params:{type:{type:"string",value:"",squash:!1},parent:{type:"string",value:"",squash:!1}}}).state("management.apis.detail.portal.importdocumentation",{url:"/documentation/import",component:"importPages",resolve:{resolvedFetchers:["FetcherService",e=>e.list(!0).then(e=>e.data)],resolvedRootPage:["DocumentationService","$stateParams",(e,t)=>{const n=new z;return n.type="ROOT",e.search(n,t.apiId).then(e=>e.data&&e.data.length>0?e.data[0]:null)}]},data:{docs:{page:"management-api-documentation"},perms:{only:["api-documentation-c"]}}}).state("management.apis.detail.portal.editdocumentation",{url:"/documentation/:pageId?:tab&type",component:"editPage",resolve:{resolvedPage:["DocumentationService","$stateParams",(e,t)=>e.get(t.apiId,t.pageId).then(e=>e.data)],resolvedGroups:["GroupService",e=>e.list().then(e=>e.data)],resolvedFetchers:["FetcherService",e=>e.list().then(e=>e.data)],folders:["DocumentationService","$stateParams",(e,t)=>{const n=new z;return n.type="FOLDER",e.search(n,t.apiId).then(e=>e.data)}],systemFolders:["DocumentationService","$stateParams",(e,t)=>{const n=new z;return n.type="SYSTEM_FOLDER",e.search(n,t.apiId).then(e=>e.data)}],pageResources:["DocumentationService","$stateParams",(e,t)=>{if("LINK"===t.type){const n=new z;return e.search(n,t.apiId).then(e=>e.data)}}],categoryResources:["CategoryService","$stateParams",(e,t)=>{if("LINK"===t.type)return e.list().then(e=>e.data)}],pagesToLink:["DocumentationService","$stateParams",(e,t)=>{if("MARKDOWN"===t.type||"MARKDOWN_TEMPLATE"===t.type){const n=new z;return n.homepage=!1,n.published=!0,e.search(n,t.apiId).then(e=>e.data.filter(e=>("MARKDOWN"===e.type.toUpperCase()||"SWAGGER"===e.type.toUpperCase()||"ASCIIDOC"===e.type.toUpperCase()||"ASYNCAPI"===e.type.toUpperCase())&&e.id!==t.pageId))}}],attachedResources:["DocumentationService","$stateParams",(e,t)=>{if("MARKDOWN"===t.type||"ASCIIDOC"===t.type||"ASYNCAPI"===t.type)return e.getMedia(t.pageId,t.apiId).then(e=>e.data)}]},data:{docs:{page:"management-api-documentation"},perms:{only:["api-documentation-r"]}},params:{pageId:{type:"string",value:"",squash:!1}}})}lr.$inject=["$stateProvider"];var rr=lr;function lr(e){e.state("management.apis.detail.notifications",{url:"/notifications",component:"notificationsComponent",data:{perms:{only:["api-notification-r"]}},resolve:{resolvedHookScope:()=>Is.API,resolvedHooks:["NotificationSettingsService",e=>e.getHooks(Is.API).then(e=>e.data)],resolvedNotifiers:["NotificationSettingsService","$stateParams",(e,t)=>e.getNotifiers(Is.API,t.apiId).then(e=>e.data)],notificationSettings:["NotificationSettingsService","$stateParams",(e,t)=>e.getNotificationSettings(Is.API,t.apiId).then(e=>e.data)],api:["$stateParams","ApiService",function(e,t){return t.get(e.apiId).then(e=>e.data)}],plans:["$stateParams","ApiService",function(e,t){return t.getPublishedApiPlans(e.apiId).then(e=>e.data)}]}}).state("management.apis.detail.notifications.notification",{url:"/:notificationId",component:"notificationSettingsComponent",data:{docs:{page:"management-api-notifications"},perms:{only:["api-notification-r"]}}}).state("management.apis.detail.alerts",{abstract:!0,url:"/alerts"}).state("management.apis.detail.alerts.list",{url:"/",component:"alertsComponent",data:{perms:{only:["api-alert-r"]},docs:{page:"management-alerts"}},resolve:{alerts:["AlertService","$stateParams",(e,t)=>e.listAlerts(Os.API,!0,t.apiId).then(e=>e.data)],status:["AlertService","$stateParams",(e,t)=>e.getStatus(Os.API,t.apiId).then(e=>e.data)],notifiers:["NotifierService",e=>e.list().then(e=>e.data)]}}).state("management.apis.detail.alerts.alertnew",{url:"/create",component:"alertComponent",data:{docs:{page:"management-alerts"},perms:{only:["api-alert-c"]}},resolve:{alerts:["AlertService","$stateParams",(e,t)=>e.listAlerts(Os.API,!0,t.apiId).then(e=>e.data)],status:["AlertService","$stateParams",(e,t)=>e.getStatus(Os.API,t.apiId).then(e=>e.data)],notifiers:["NotifierService",e=>e.list().then(e=>e.data)],mode:()=>"create"}}).state("management.apis.detail.alerts.alert",{url:"/:alertId?:tab",component:"alertComponent",data:{docs:{page:"management-alerts"},perms:{only:["api-alert-r"]}},resolve:{alerts:["AlertService","$stateParams",(e,t)=>e.listAlerts(Os.API,!0,t.apiId).then(e=>e.data)],status:["AlertService","$stateParams",(e,t)=>e.getStatus(Os.API,t.apiId).then(e=>e.data)],notifiers:["NotifierService",e=>e.list().then(e=>e.data)],mode:()=>"detail"}})}dr.$inject=["$stateProvider"];var cr=dr;function dr(e){e.state("management.settings",{abstract:!0,url:"/settings",template:n(432),data:{perms:{only:["environment-category-r","environment-metadata-r","environment-top_apis-r","environment-group-r","environment-tag-c","environment-tenant-c","environment-group-c","environment-documentation-c","environment-tag-u","environment-tenant-u","environment-group-u","environment-documentation-u","environment-tag-d","environment-tenant-d","environment-group-d","environment-documentation-d","environment-api_header-r"]}}}).state("management.settings.analytics",{abstract:!0,url:"/analytics"}).state("management.settings.analytics.list",{url:"",component:"analyticsSettings",resolve:{dashboardsPlatform:["DashboardService",e=>e.list("PLATFORM").then(e=>e.data)],dashboardsApi:["DashboardService",e=>e.list("API").then(e=>e.data)],dashboardsApplication:["DashboardService",e=>e.list("APPLICATION").then(e=>e.data)]},data:{menu:null,docs:{page:"management-configuration-analytics"},perms:{only:["environment-settings-r"]}}}).state("management.settings.analytics.dashboardnew",{url:"/dashboard/:type/new",component:"dashboard",data:{menu:null,docs:{page:"management-configuration-dashboard"},perms:{only:["environment-dashboard-c"]}}}).state("management.settings.analytics.dashboard",{url:"/dashboard/:type/:dashboardId",component:"dashboard",resolve:{dashboard:["DashboardService","$stateParams",(e,t)=>e.get(t.dashboardId).then(e=>e.data)]},data:{menu:null,docs:{page:"management-configuration-dashboard"},perms:{only:["environment-dashboard-u"]}}}).state("management.settings.apiPortalHeader",{url:"/apiportalheader",component:"configApiPortalHeader",resolve:{apiPortalHeaders:["ApiHeaderService",e=>e.list().then(e=>e.data)],settings:["PortalSettingsService",e=>e.get().then(e=>e.data)]},data:{menu:null,docs:{page:"management-configuration-apiportalheader"},perms:{only:["environment-api_header-r"]}}}).state("management.settings.apiQuality",{abstract:!0,url:"/apiquality"}).state("management.settings.apiQuality.list",{url:"",component:"configApiQuality",resolve:{qualityRules:["QualityRuleService",e=>e.list().then(e=>e.data)]},data:{menu:null,docs:{page:"management-configuration-apiquality"},perms:{only:["environment-settings-r"]}}}).state("management.settings.apiQuality.qualityRulenew",{url:"/new",component:"qualityRule",data:{menu:null,docs:{page:"management-configuration-apiquality"},perms:{only:["environment-quality_rule-c"]}}}).state("management.settings.apiQuality.qualityRule",{url:"/:qualityRuleId",component:"qualityRule",resolve:{qualityRule:["QualityRuleService","$stateParams",(e,t)=>e.get(t.qualityRuleId).then(e=>e.data)]},data:{menu:null,docs:{page:"management-configuration-apiquality"},perms:{only:["environment-quality_rule-u"]}}}).state("management.settings.environment",{abstract:!0,url:"/environment"}).state("management.settings.environment.identityproviders",{url:"/identity-providers",component:"identityProviders",resolve:{target:()=>"ENVIRONMENT",targetId:["Constants",e=>e.org.currentEnv.id],identityProviders:["IdentityProviderService",e=>e.list().then(e=>e)],identities:["EnvironmentService","Constants",(e,t)=>e.listEnvironmentIdentities(t.org.currentEnv.id).then(e=>e.data)],settings:["PortalSettingsService",e=>e.get().then(e=>e.data)]},data:{menu:null,docs:{page:"management-configuration-identityproviders"},perms:{only:["environment-identity_provider_activation-r"]}}}).state("management.settings.categories",{abstract:!0,url:"/categories"}).state("management.settings.categories.list",{url:"",component:"categories",resolve:{categories:["CategoryService",e=>e.list(["total-apis"]).then(e=>e.data)]},data:{menu:null,docs:{page:"management-configuration-categories"},perms:{only:["environment-category-r"]}}}).state("management.settings.categories.create",{url:"/new",component:"category",resolve:{pages:["DocumentationService",e=>{const t=new z;return t.type="MARKDOWN",t.published=!0,e.search(t).then(e=>e.data)}]},data:{menu:null,docs:{page:"management-configuration-categories"},perms:{only:["environment-category-c"]}}}).state("management.settings.categories.category",{url:"/:categoryId",component:"category",resolve:{category:["CategoryService","$stateParams",(e,t)=>e.get(t.categoryId).then(e=>e.data)],categoryApis:["ApiService","$stateParams",(e,t)=>e.list(t.categoryId).then(e=>e.data)],pages:["DocumentationService",e=>{const t=new z;return t.type="MARKDOWN",t.published=!0,e.search(t).then(e=>e.data)}]},data:{menu:null,docs:{page:"management-configuration-categories"},perms:{only:["environment-category-u","environment-category-d"]}}}).state("management.settings.clientregistrationproviders",{abstract:!0,url:"/client-registration"}).state("management.settings.clientregistrationproviders.list",{url:"/",component:"clientRegistrationProviders",resolve:{clientRegistrationProviders:["ClientRegistrationProviderService",e=>e.list().then(e=>e)],settings:["PortalSettingsService",e=>e.get().then(e=>e.data)]},data:{menu:null,docs:{page:"management-configuration-client-registration-providers"},perms:{only:["environment-client_registration_provider-r"]}}}).state("management.settings.clientregistrationproviders.create",{url:"/new",component:"clientRegistrationProvider",data:{menu:null,docs:{page:"management-configuration-client-registration-provider"},perms:{only:["environment-client_registration_provider-c"]}}}).state("management.settings.clientregistrationproviders.clientregistrationprovider",{url:"/:id",component:"clientRegistrationProvider",resolve:{clientRegistrationProvider:["ClientRegistrationProviderService","$stateParams",(e,t)=>e.get(t.id).then(e=>e)]},data:{menu:null,docs:{page:"management-configuration-client-registration-provider"},perms:{only:["environment-client_registration_provider-r","environment-client_registration_provider-u","environment-client_registration_provider-d"]}}}).state("management.settings.documentation",{abstract:!0,url:"/pages"}).state("management.settings.documentation.list",{url:"?:parent",component:"documentationManagement",resolve:{pages:["DocumentationService","$stateParams",(e,t)=>{const n=new z;return t.parent&&""!==t.parent?n.parent=t.parent:n.root=!0,e.search(n).then(e=>e.data)}],folders:["DocumentationService",e=>{const t=new z;return t.type="FOLDER",e.search(t).then(e=>e.data)}],systemFolders:["DocumentationService",e=>{const t=new z;return t.type="SYSTEM_FOLDER",e.search(t).then(e=>e.data)}]},data:{menu:null,docs:{page:"management-configuration-portal-pages"},perms:{only:["environment-documentation-r"]}},params:{parent:{type:"string",value:"",squash:!1}}}).state("management.settings.documentation.new",{url:"/new?type&:parent",component:"newPage",resolve:{resolvedFetchers:["FetcherService",e=>e.list().then(e=>e.data)],pagesToLink:["DocumentationService","$stateParams",(e,t)=>{if("MARKDOWN"===t.type||"MARKDOWN_TEMPLATE"===t.type){const t=new z;return t.homepage=!1,t.published=!0,e.search(t).then(e=>e.data.filter(e=>"MARKDOWN"===e.type.toUpperCase()||"SWAGGER"===e.type.toUpperCase()||"ASCIIDOC"===e.type.toUpperCase()||"ASYNCAPI"===e.type.toUpperCase()))}}],folders:["DocumentationService",e=>{const t=new z;return t.type="FOLDER",e.search(t).then(e=>e.data)}],systemFolders:["DocumentationService",e=>{const t=new z;return t.type="SYSTEM_FOLDER",e.search(t).then(e=>e.data)}],pageResources:["DocumentationService","$stateParams",(e,t)=>{if("LINK"===t.type){const t=new z;return e.search(t).then(e=>e.data)}}],categoryResources:["CategoryService","$stateParams",(e,t)=>{if("LINK"===t.type)return e.list().then(e=>e.data)}]},data:{menu:null,docs:{page:"management-configuration-portal-pages"},perms:{only:["environment-documentation-c"]}},params:{type:{type:"string",value:"",squash:!1},parent:{type:"string",value:"",squash:!1}}}).state("management.settings.documentation.import",{url:"/import",component:"importPages",resolve:{resolvedFetchers:["FetcherService",e=>e.list(!0).then(e=>e.data)],resolvedRootPage:["DocumentationService",e=>{const t=new z;return t.type="ROOT",e.search(t).then(e=>e.data&&e.data.length>0?e.data[0]:null)}]},data:{menu:null,docs:{page:"management-configuration-portal-pages"},perms:{only:["environment-documentation-c"]}}}).state("management.settings.documentation.edit",{url:"/:pageId?:tab&type",component:"editPage",resolve:{resolvedPage:["DocumentationService","$stateParams",(e,t)=>e.get(null,t.pageId).then(e=>e.data)],resolvedGroups:["GroupService",e=>e.list().then(e=>e.data)],resolvedFetchers:["FetcherService",e=>e.list().then(e=>e.data)],pagesToLink:["DocumentationService","$stateParams",(e,t)=>{if("MARKDOWN"===t.type||"MARKDOWN_TEMPLATE"===t.type){const n=new z;return n.homepage=!1,n.published=!0,e.search(n).then(e=>e.data.filter(e=>("MARKDOWN"===e.type.toUpperCase()||"SWAGGER"===e.type.toUpperCase()||"ASCIIDOC"===e.type.toUpperCase()||"ASYNCAPI"===e.type.toUpperCase())&&e.id!==t.pageId))}}],folders:["DocumentationService",e=>{const t=new z;return t.type="FOLDER",e.search(t).then(e=>e.data)}],systemFolders:["DocumentationService",e=>{const t=new z;return t.type="SYSTEM_FOLDER",e.search(t).then(e=>e.data)}],pageResources:["DocumentationService","$stateParams",(e,t)=>{if("LINK"===t.type){const t=new z;return e.search(t).then(e=>e.data)}}],categoryResources:["CategoryService","$stateParams",(e,t)=>{if("LINK"===t.type)return e.list().then(e=>e.data)}],attachedResources:["DocumentationService","$stateParams",(e,t)=>{if("MARKDOWN"===t.type||"ASCIIDOC"===t.type||"ASYNCAPI"===t.type)return e.getMedia(t.pageId,null).then(e=>e.data)}]},data:{menu:null,docs:{page:"management-configuration-portal-pages"},perms:{only:["environment-documentation-u"]}},params:{pageId:{type:"string",value:"",squash:!1}}}).state("management.settings.metadata",{url:"/metadata",component:"metadata",resolve:{metadata:["MetadataService",e=>e.list().then(e=>e.data)],metadataFormats:["MetadataService",e=>e.listFormats()]},data:{menu:null,docs:{page:"management-configuration-metadata"},perms:{only:["environment-metadata-r"]}}}).state("management.settings.portal",{url:"/portal",component:"portalSettings",resolve:{tags:["TagService",e=>e.list().then(e=>e.data)],settings:["PortalSettingsService",e=>e.get().then(e=>e.data)]},data:{menu:null,docs:{page:"management-configuration-portal"},perms:{only:["environment-settings-r"]}}}).state("management.settings.theme",{url:"/theme",component:"theme",resolve:{},data:{menu:null,docs:{page:"management-configuration-portal-theme"},perms:{only:["environment-theme-r"]}}}).state("management.settings.top-apis",{url:"/top-apis",component:"topApis",resolve:{topApis:["TopApiService",e=>e.list().then(e=>e.data)]},data:{menu:null,docs:{page:"management-configuration-top_apis"},perms:{only:["environment-top_apis-r"]}}}).state("management.settings.api_logging",{url:"/api_logging",component:"apiLogging",resolve:{settings:["ConsoleSettingsService",e=>e.get().then(e=>e.data)]},data:{menu:null,docs:{page:"management-configuration-apilogging"},perms:{only:["organization-settings-r"]}}}).state("management.settings.dictionaries",{abstract:!0,url:"/dictionaries"}).state("management.settings.dictionaries.list",{url:"/",component:"dictionaries",resolve:{dictionaries:["DictionaryService",e=>e.list().then(e=>e.data)]},data:{menu:null,docs:{page:"management-configuration-dictionaries"},perms:{only:["environment-dictionary-r"]}}}).state("management.settings.dictionaries.new",{url:"/new",component:"dictionary",data:{menu:null,docs:{page:"management-configuration-dictionary"},perms:{only:["environment-dictionary-c"]}}}).state("management.settings.dictionaries.dictionary",{url:"/:dictionaryId",component:"dictionary",resolve:{dictionary:["DictionaryService","$stateParams",(e,t)=>e.get(t.dictionaryId).then(e=>e.data)]},data:{menu:null,docs:{page:"management-configuration-dictionary"},perms:{only:["environment-dictionary-c","environment-dictionary-r","environment-dictionary-u","environment-dictionary-d"]}}}).state("management.settings.tags",{url:"/tags",component:"moved",resolve:{destinationName:()=>"Organization > Tags",permissions:()=>["organization-tag-r"],goTo:()=>"organization.settings.ng-tags",destinationIcon:()=>"settings_applications"},data:{menu:null,docs:{page:"management-configuration-sharding-tags"},perms:{only:["environment-tag-r"]}}}).state("management.settings.tenants",{url:"/tenants",component:"moved",resolve:{destinationName:()=>"Organization > Tenants",permissions:()=>["organization-tenant-r"],goTo:()=>"organization.settings.ng-tenants",destinationIcon:()=>"settings_applications"},data:{menu:null,docs:{page:"management-configuration-tenants"},perms:{only:["environment-tenant-r"]}}}).state("management.settings.customUserFields",{url:"/custom-user-fields",component:"customUserFields",resolve:{fields:["CustomUserFieldsService",e=>e.list().then(e=>e.data)],fieldFormats:["CustomUserFieldsService",e=>e.listFormats()],predefinedKeys:["CustomUserFieldsService",e=>e.listPredefinedKeys()]},data:{menu:null,docs:{page:"management-configuration-custom-user-fields"},perms:{only:["organization-custom_user_fields-r"]}}}).state("management.settings.groups",{abstract:!0,url:"/groups"}).state("management.settings.groups.list",{url:"/",component:"groups",resolve:{groups:["GroupService",e=>e.list().then(e=>o.filter(e.data,"manageable"))]},data:{menu:null,docs:{page:"management-configuration-groups"},perms:{only:["environment-group-r"]}}}).state("management.settings.groups.create",{url:"/new",component:"group",resolve:{tags:["TagService",e=>e.list().then(e=>e.data)]},data:{menu:null,docs:{page:"management-configuration-group"},perms:{only:["environment-group-r"]}}}).state("management.settings.groups.group",{url:"/:groupId",component:"group",resolve:{group:["GroupService","$stateParams",(e,t)=>e.get(t.groupId).then(e=>e.data)],apiRoles:["RoleService",e=>e.list("API").then(e=>[{scope:"API",name:"",system:!1}].concat(e))],applicationRoles:["RoleService",e=>e.list("APPLICATION").then(e=>[{scope:"APPLICATION",name:"",system:!1}].concat(e))],invitations:["GroupService","$stateParams",(e,t)=>e.getInvitations(t.groupId).then(e=>e.data)],tags:["TagService",e=>e.list().then(e=>e.data)]},data:{menu:null,docs:{page:"management-configuration-group"},perms:{only:["environment-group-r"]}}})}mr.$inject=["$stateProvider"];var pr=mr;function mr(e){e.state("management.settings.notifications",{url:"/notifications",component:"notificationsComponent",data:{perms:{only:["environment-notification-r"]}},resolve:{resolvedHookScope:()=>Is.PORTAL,resolvedHooks:["NotificationSettingsService",e=>e.getHooks(Is.PORTAL).then(e=>e.data)],resolvedNotifiers:["NotificationSettingsService",e=>e.getNotifiers(Is.PORTAL,null).then(e=>e.data)],notificationSettings:["NotificationSettingsService",e=>e.getNotificationSettings(Is.PORTAL,null).then(e=>e.data)]}}).state("management.settings.notifications.notification",{url:"/:notificationId",component:"notificationSettingsComponent",data:{menu:null,docs:{page:"management-configuration-notifications"},perms:{only:["environment-notification-r"]}}}).state("management.settings.alerts",{abstract:!0,url:"/alerts"}).state("management.settings.alerts.list",{url:"/",component:"alertsComponent",data:{perms:{only:["environment-alert-r"]},docs:{page:"management-alerts"}},resolve:{alerts:["AlertService",e=>e.listAlerts(Os.ENVIRONMENT).then(e=>e.data)],status:["AlertService","$stateParams",(e,t)=>e.getStatus(Os.ENVIRONMENT,t.apiId).then(e=>e.data)],notifiers:["NotifierService",e=>e.list().then(e=>e.data)],mode:()=>"detail"}}).state("management.settings.alerts.alertnew",{url:"/create",component:"alertComponent",data:{menu:null,docs:{page:"management-alerts"},perms:{only:["environment-alert-c"]}},resolve:{alerts:["AlertService",e=>e.listAlerts(Os.ENVIRONMENT).then(e=>e.data)],status:["AlertService","$stateParams",(e,t)=>e.getStatus(Os.ENVIRONMENT,t.apiId).then(e=>e.data)],notifiers:["NotifierService",e=>e.list().then(e=>e.data)],mode:()=>"create"}}).state("management.settings.alerts.alert",{url:"/:alertId?:tab",component:"alertComponent",data:{menu:null,docs:{page:"management-alerts"},perms:{only:["environment-alert-r"]}},resolve:{alerts:["AlertService",e=>e.listAlerts(Os.ENVIRONMENT).then(e=>e.data)],status:["AlertService","$stateParams",(e,t)=>e.getStatus(Os.ENVIRONMENT,t.apiId).then(e=>e.data)],notifiers:["NotifierService",e=>e.list().then(e=>e.data)]}})}class ur{constructor(e,t,n,i,a,o,s,r){this.UserService=e,this.NotificationService=t,this.$state=n,this.$scope=i,this.$rootScope=a,this.TokenService=o,this.$mdDialog=s,this.Constants=r,this.fields=[],this.groups=""}$onInit(){if(this.UserService.customUserFieldsToRegister().then(e=>this.fields=e.data),!this.user||this.user&&void 0===this.user.id)this.$state.go("login",{},{reload:!0,inherit:!1});else if(this.originalPicture=this.getUserPicture(),this.user.picture_url=this.getUserPicture(),this.TokenService.list().then(e=>{this.tokens=e.data}),this.user.groupsByEnvironment){const e=Object.keys(this.user.groupsByEnvironment);1===e.length?this.groups=Object.values(this.user.groupsByEnvironment)[0].join(" - "):this.groups=e.map(e=>`[${this.Constants.org.environments.find(t=>t.id===e).name}] ${this.user.groupsByEnvironment[e].join("/")}`).join(" - ")}else this.groups="-"}save(){this.UserService.save(this.user).then(e=>{this.user=e.data,this.user.picture_url=this.getUserPicture(),this.$rootScope.$broadcast("graviteeUserRefresh",{user:this.user,refresh:!0}),this.$scope.formUser.$setPristine(),this.NotificationService.show("User has been updated successfully")})}canDeleteMyAccount(){return!this.user.primaryOwner}deleteMyAccount(){return this.$mdDialog.show({controller:"DialogConfirmAndValidateController",controllerAs:"ctrl",template:n(198),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete your account ?",warning:"This operation is irreversible.",msg:"After removing your account, you will be automatically logout.",validationMessage:"Please, type in your username <code>"+this.user.displayName+"</code> to confirm.",validationValue:this.user.displayName,confirmButton:"Yes, delete my account"}}).then(e=>{if(e)return this.UserService.removeCurrentUser().then(()=>{this.$state.go("logout"),this.NotificationService.show("You have been successfully deleted")})})}cancel(){delete this.user.picture,delete this.user.picture_url,this.$state.reload()}getUserPicture(){return this.UserService.currentUserPicture()}isInternalUser(){return"gravitee"===this.user.source||"memory"===this.user.source}generateToken(){this.$mdDialog.show({controller:"DialogGenerateTokenController",controllerAs:"ctrl",template:n(796),clickOutsideToClose:!1,escapeToClose:!1,locals:{msg:"Any applications or scripts using this token will no longer be able to access the Gravitee.io management API. You cannot undo this action.",title:"Generate Personal Access Token"}}).then(e=>{e&&this.$state.reload()})}revoke(e){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{msg:"Any applications or scripts using this token will no longer be able to access the Gravitee.io management API. You cannot undo this action.",title:'Are you sure you want to revoke the token "'+e.name+'"?',confirmButton:"Revoke"}}).then(t=>{t&&this.TokenService.revoke(e).then(()=>{this.NotificationService.show('Token "'+e.name+'" has been revoked.'),this.$state.reload()})})}}ur.$inject=["UserService","NotificationService","$state","$scope","$rootScope","TokenService","$mdDialog","Constants"];var hr=ur;var gr={bindings:{user:"<"},controller:"UserController",template:n(797)};class fr{constructor(e,t,n){this.$state=e,this.UserService=t,this.ngTaskService=n,this.unsubscribe$=new ct.a}$onInit(){this.ngTaskService.getTasks().pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.tasks=e})}$onDestroy(){this.unsubscribe$.next(),this.unsubscribe$.unsubscribe()}taskMessage(e){switch(e.type){case"SUBSCRIPTION_APPROVAL":{const t=this.tasks.metadata[e.data.application].name,n=this.tasks.metadata[e.data.plan].name,i=this.tasks.metadata[e.data.plan].api;return`The application <code>${t}</code> requested a subscription for API <code>${this.tasks.metadata[i].name}</code> (plan: ${n})`}case"IN_REVIEW":return`The API <code>${this.tasks.metadata[e.data.referenceId].name}</code> is ready to be reviewed`;case"REQUEST_FOR_CHANGES":{let t=`The API <code>${this.tasks.metadata[e.data.referenceId].name}</code> has been reviewed and some changes are requested by the reviewer`;return e.data.comment&&(t+=": "+e.data.comment),t}case"USER_REGISTRATION_APPROVAL":return`The registration of the user <strong>${e.data.displayName}</strong> has to be validated`;default:return"Unknown task"}}title(e){switch(e.type){case"SUBSCRIPTION_APPROVAL":return"Subscription";case"IN_REVIEW":case"REQUEST_FOR_CHANGES":return"API Review";case"USER_REGISTRATION_APPROVAL":return"User Registration"}}go(e){switch(e.type){case"SUBSCRIPTION_APPROVAL":this.$state.go("management.apis.detail.portal.subscriptions.subscription",{apiId:e.data.api,subscriptionId:e.data.id});break;case"IN_REVIEW":case"REQUEST_FOR_CHANGES":this.$state.go("management.apis.detail.portal.general",{apiId:e.data.referenceId});break;case"USER_REGISTRATION_APPROVAL":this.$state.go("organization.settings.ng-user",{userId:e.data.id})}}icon(e){switch(e.type){case"SUBSCRIPTION_APPROVAL":return"communication:vpn_key";case"IN_REVIEW":case"REQUEST_FOR_CHANGES":return"maps:rate_review";case"USER_REGISTRATION_APPROVAL":return"general:user";case"PROMOTION_APPROVAL":return"maps:rocket";default:return""}}actionLabel(e){switch(e.type){case"SUBSCRIPTION_APPROVAL":return"Validate";case"IN_REVIEW":return"Review";case"REQUEST_FOR_CHANGES":return"Make changes";case"USER_REGISTRATION_APPROVAL":return"Validate";default:return"Details"}}removeTask(e){this.tasks.data=this.tasks.data.filter(t=>t!==e)}}fr.$inject=["$state","UserService","ngTaskService"];const br={template:n(798),controller:fr};class vr{constructor(e,t){this.$mdDialog=e,this.promotionService=t}openRejectDialog(){return this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Reject Promotion Request",msg:"After having rejected this promotion you will not be able to accept it without asking the author to create a new promotion"}}).then(e=>{e&&this.promotionService.processPromotion(this.task.data.promotionId,!1).then(()=>this.taskHandled())})}openAcceptDialog(){const e=this.task.data.isApiUpdate?`Since the API <code>${this.task.data.apiName}</code> has already been promoted to <strong>${this.task.data.targetEnvironmentName}</strong> environment, accepting this promotion will update it.`:`Accepting this promotion will create a new API in <strong>${this.task.data.targetEnvironmentName}</strong> environment.`;return this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(184),clickOutsideToClose:!0,locals:{title:"Accept Promotion Request",msg:e}}).then(e=>{e&&this.promotionService.processPromotion(this.task.data.promotionId,!0).then(()=>this.taskHandled())})}}vr.$inject=["$mdDialog","promotionService"];const yr={template:n(799),bindings:{task:"<",taskHandled:"&"},controller:vr};var Sr={bindings:{notificationSettings:"<",api:"<",application:"<"},template:n(800),controller:["Constants","$state",function(e,t){this.$onInit=()=>{t.go("^.notifications.notification",{notificationId:"portal"})}}]};class wr{constructor(){}}var Cr={bindings:{resolvedHookScope:"<",resolvedHooks:"<",resolvedNotifiers:"<",notificationSettings:"="},template:n(801),controller:["$state","NotificationSettingsService","NotificationService","$mdDialog","$timeout","$rootScope",function(e,t,i,a,s,r){this.$rootScope=r,this.$mdDialog=a,this.$onInit=()=>{this.hooksByCategory=o.groupBy(this.resolvedHooks,"category"),this.hooksCategories=o.keysIn(this.hooksByCategory),this.selectNotificationSetting(o.find(this.notificationSettings,{id:e.params.notificationId})||this.notificationSettings[0]),e.params.apiId?this.currentReferenceId=e.params.apiId:e.params.applicationId?this.currentReferenceId=e.params.applicationId:this.currentReferenceId="DEFAULT"},this.selectNotificationSetting=(t,n)=>{this.selectedNotificationSetting=t,this.hookStatus={},o.forEach(this.resolvedHooks,e=>{this.hookStatus[e.id]=this.selectedNotificationSetting.hooks.indexOf(e.id)>=0}),this.selectedNotificationSetting.notifier?this.selectedNotifier=o.filter(this.resolvedNotifiers,{id:this.selectedNotificationSetting.notifier})[0]:this.selectedNotifier=void 0,s(()=>{e.params.notificationId=this.selectedNotificationSetting.id||"portal",e.transitionTo(e.current,e.params,{reload:n})})},this.save=()=>{const e=new wr;e.id=this.selectedNotificationSetting.id,e.name=this.selectedNotificationSetting.name,e.config_type=this.selectedNotificationSetting.config_type,e.referenceType=this.selectedNotificationSetting.referenceType,e.referenceId=this.selectedNotificationSetting.referenceId,this.selectedNotifier&&(e.notifier=this.selectedNotifier.id),e.config=this.selectedNotificationSetting.config,e.useSystemProxy=this.selectedNotificationSetting.useSystemProxy,e.hooks=[],o.forEach(this.hookStatus,(t,n)=>{t&&e.hooks.push(n)}),t.update(e).then(e=>{const t=o.findIndex(this.notificationSettings,{id:e.data.id});t<0?this.notificationSettings[0]=e.data:this.notificationSettings[t]=e.data,i.show("Notifications saved with success"),this.formNotification.$setPristine()})},this.delete=()=>{const e=this.$mdDialog.confirm({title:"Warning",textContent:"Are you sure you want to remove this notification?",ok:"OK",cancel:"Cancel"});this.$mdDialog.show(e).then(()=>{t.delete(this.resolvedHookScope,this.selectedNotificationSetting.referenceId,this.selectedNotificationSetting.id).then(()=>{i.show("Notification deleted with success"),this.notificationSettings=o.filter(this.notificationSettings,e=>this.selectedNotificationSetting.id!==e.id),this.selectNotificationSetting(this.notificationSettings[0],!0)})})},this.addDialog=()=>{this.$mdDialog.show({controller:"DialogAddNotificationSettingsController",controllerAs:"dialogAddNotificationSettingsController",template:n(802),clickOutsideToClose:!0,notifiers:this.resolvedNotifiers}).then(e=>{const n=new wr;switch(n.name=e.name,n.config_type="GENERIC",n.referenceId=this.currentReferenceId,n.notifier=e.notifierId,n.hooks=[],this.resolvedHookScope){case Is.APPLICATION:n.referenceType="APPLICATION";break;case Is.API:n.referenceType="API";break;case Is.PORTAL:n.referenceType="PORTAL"}t.create(n).then(e=>{this.notificationSettings.push(e.data),this.selectNotificationSetting(e.data)})})},this.validate=()=>"PORTAL"===this.selectedNotificationSetting.config_type||this.selectedNotificationSetting.config&&""!==this.selectedNotificationSetting.config}]};class Ir{constructor(e,t){this.$http=e,this.Constants=t}getHooks(e){switch(e){case Is.APPLICATION:return this.$http.get(this.Constants.env.baseURL+"/applications/hooks");case Is.API:return this.$http.get(this.Constants.env.baseURL+"/apis/hooks");case Is.PORTAL:return this.$http.get(this.Constants.env.baseURL+"/configuration/hooks")}}getNotifiers(e,t){switch(e){case Is.APPLICATION:return this.$http.get(this.Constants.env.baseURL+"/applications/"+t+"/notifiers");case Is.API:return this.$http.get(this.Constants.env.baseURL+"/apis/"+t+"/notifiers");case Is.PORTAL:return this.$http.get(this.Constants.env.baseURL+"/configuration/notifiers")}}getNotificationSettings(e,t){switch(e){case Is.APPLICATION:return this.$http.get(this.Constants.env.baseURL+"/applications/"+t+"/notificationsettings");case Is.API:return this.$http.get(this.Constants.env.baseURL+"/apis/"+t+"/notificationsettings");case Is.PORTAL:return this.$http.get(this.Constants.env.baseURL+"/configuration/notificationsettings")}}delete(e,t,n){switch(e){case Is.APPLICATION:return this.$http.delete(this.Constants.env.baseURL+"/applications/"+t+"/notificationsettings/"+n);case Is.API:return this.$http.delete(this.Constants.env.baseURL+"/apis/"+t+"/notificationsettings/"+n);case Is.PORTAL:return this.$http.delete(this.Constants.env.baseURL+"/configuration/notificationsettings/"+n)}}update(e){const t=e.id?e.id:"";return"API"===e.referenceType?this.$http.put(this.Constants.env.baseURL+"/apis/"+e.referenceId+"/notificationsettings/"+t,e):"APPLICATION"===e.referenceType?this.$http.put(this.Constants.env.baseURL+"/applications/"+e.referenceId+"/notificationsettings/"+t,e):"PORTAL"===e.referenceType?this.$http.put(this.Constants.env.baseURL+"/configuration/notificationsettings/"+t,e):void 0}create(e){return"API"===e.referenceType?this.$http.post(this.Constants.env.baseURL+"/apis/"+e.referenceId+"/notificationsettings",e):"APPLICATION"===e.referenceType?this.$http.post(this.Constants.env.baseURL+"/applications/"+e.referenceId+"/notificationsettings",e):"PORTAL"===e.referenceType?this.$http.post(this.Constants.env.baseURL+"/configuration/notificationsettings",e):void 0}}Ir.$inject=["$http","Constants"];var $r=Ir;class Ar{constructor(e,t){this.$http=e,this.Constants=t}getNotificationTemplates(e,t){return this.$http.get(this.Constants.org.baseURL+"/configuration/notification-templates/",{params:{hook:e,scope:t}})}getNotificationTemplate(e){return this.$http.get(this.Constants.org.baseURL+"/configuration/notification-templates/"+e)}create(e){return this.$http.post(this.Constants.org.baseURL+"/configuration/notification-templates/",e)}update(e){return this.$http.put(this.Constants.org.baseURL+"/configuration/notification-templates/"+e.id,e)}}Ar.$inject=["$http","Constants"];var Or=Ar;class Tr{constructor(e,t,n,i,a){this.NotificationService=e,this.DocumentationService=t,this.$state=n,this.$scope=i,this.$mdDialog=a,this.apiId=n.params.apiId}$onInit(){this.pages=this.filterROOTAndSystemPages(this.pages),this.rootDir=this.$state.params.parent,this.foldersById=o.keyBy(this.folders,"id"),this.systemFoldersById=o.keyBy(this.systemFolders,"id"),this.currentFolder=this.getFolder(this.rootDir);const e=this.DocumentationService.getFolderSituation(this.systemFoldersById,this.foldersById,this.rootDir);this.supportedTypes=this.DocumentationService.supportedTypes(e).filter(e=>!this.apiId||e!==W.MARKDOWN_TEMPLATE).map(e=>({type:e,tooltip:e.replace("_"," ")})),this.breadcrumb=this.generateBreadcrumb(),this.$scope.renameFolder=!1,this.$scope.translateFolder=!1}isFolder(e){return W.FOLDER===e}isLink(e){return W.LINK===e}isSwagger(e){return W.SWAGGER===e}isMarkdown(e){return W.MARKDOWN===e}isPage(e){return this.isMarkdown(e)||this.isSwagger(e)}isMarkdownTemplate(e){return W.MARKDOWN_TEMPLATE===e}canCreateShortCut(e,t){return"ASCIIDOC"===t||"ASYNCAPI"===t||"SWAGGER"===t||"MARKDOWN"===t||"FOLDER"===t&&this.DocumentationService.getFolderSituation(this.systemFoldersById,this.foldersById,e)!==V.FOLDER_IN_SYSTEM_FOLDER}filterROOTAndSystemPages(e){return o.filter(e,e=>"ROOT"!==e.type&&"SYSTEM_FOLDER"!==e.type&&"TRANSLATION"!==e.type)}toggleRenameFolder(){this.$scope.renameFolder=!this.$scope.renameFolder,this.$scope.renameFolder&&(this.newFolderName=this.breadcrumb[this.breadcrumb.length-1].name)}renameFolder(){this.DocumentationService.partialUpdate("name",this.newFolderName,this.rootDir,this.apiId).then(e=>{this.NotificationService.show("Folder "+this.newFolderName+" has been changed with success"),this.breadcrumb[this.breadcrumb.length-1].name=e.data.name,this.toggleRenameFolder()})}changeFolderVisibility(){this.DocumentationService.partialUpdate("visibility","PRIVATE"===this.currentFolder.visibility?"PUBLIC":"PRIVATE",this.rootDir,this.apiId).then(e=>{this.NotificationService.show("Folder is now "+e.data.visibility),this.currentFolder.visibility=e.data.visibility})}generateBreadcrumb(){const e=[];return this.rootDir&&this.addParentToBreadcrumb(this.rootDir,e),e.push({id:"",name:"~"}),e.reverse()}getFolder(e){if(e){let t=this.foldersById[e];return t||(t=this.systemFoldersById[e]),t}}createShortCut(e){this.$mdDialog.show({controller:"SelectFolderDialogController",controllerAs:"ctrl",template:n(433),clickOutsideToClose:!0,locals:{title:'Create shortcut for "'+e.name+'" in...',folders:this.generateCreateShortCutFolder()}}).then(t=>{if(t){const n={name:e.name,content:e.id,parentId:t,type:"LINK",published:e.published,visibility:e.visibility,configuration:{resourceType:"page",isFolder:"FOLDER"===e.type,inherit:"true"}};this.DocumentationService.create(n,this.apiId).then(()=>{this.NotificationService.show('"Link to '+e.name+'" has been created with success'),this.refresh()})}})}generateCreateShortCutFolder(){const e=[];if(!this.folders&&!this.systemFolders)return e;return o.concat(this.folders,this.systemFolders).forEach(t=>{const n=this.DocumentationService.getFolderSituation(this.systemFoldersById,this.foldersById,t.id);if(n===V.SYSTEM_FOLDER||n===V.SYSTEM_FOLDER_WITH_FOLDERS||n===V.FOLDER_IN_SYSTEM_FOLDER){const n=this.getFolderPath(t.id);n&&e.push({id:t.id,path:n})}}),o.orderBy(e,["path"],["asc"])}moveToFolder(e){this.$mdDialog.show({controller:"SelectFolderDialogController",controllerAs:"ctrl",template:n(433),clickOutsideToClose:!0,locals:{title:'Move "'+e.name+'" to...',folders:this.generateMoveToFolder(e.id,e.type)}}).then(t=>{t&&this.DocumentationService.partialUpdate("parentId",-1===t?"":t,e.id,this.apiId).then(()=>{this.NotificationService.show('"'+e.name+'" has been moved with success'),this.refresh()})})}generateMoveToFolder(e,t){const n=[];if(!this.folders&&!this.systemFolders)return n;const i=o.concat(this.folders,this.systemFolders),a=this.canCreateShortCut(e,t);return a&&n.push({id:-1,path:"/"}),i.forEach(i=>{const o=this.DocumentationService.getFolderSituation(this.systemFoldersById,this.foldersById,i.id);if(a&&(o===V.ROOT||o===V.FOLDER_IN_FOLDER)||!a&&("FOLDER"===t&&o===V.SYSTEM_FOLDER_WITH_FOLDERS||"FOLDER"!==t&&(o===V.SYSTEM_FOLDER||o===V.SYSTEM_FOLDER_WITH_FOLDERS||o===V.FOLDER_IN_SYSTEM_FOLDER))){const t=this.getFolderPath(i.id,e);t&&n.push({id:i.id,path:t})}}),o.orderBy(n,["path"],["asc"])}getFolderPath(e,t){const n=[],i=this.getFolder(e);if(n.push(i.name),this.getFolderParentName(e,n,t),0!==n.length)return"/ "+o.reduceRight(n,(e,t)=>e+" / "+t)}getFolderParentName(e,t,n){const i=this.getFolder(e);if(e===n||i.parentId&&n===i.parentId)t.length=0;else if(i.parentId){const e=this.getFolder(i.parentId);e&&(t.push(e.name),this.getFolderParentName(i.parentId,t,n))}}addParentToBreadcrumb(e,t){const n=this.getFolder(e);n&&(t.push(n),n.parentId&&this.addParentToBreadcrumb(n.parentId,t))}refresh(){const e=new z;this.rootDir?e.parent=this.rootDir:e.root=!0,this.DocumentationService.search(e,this.apiId).then(e=>this.pages=this.filterROOTAndSystemPages(e.data))}refreshCurrentFolder(){this.rootDir&&(this.DocumentationService.get(this.apiId,this.rootDir).then(e=>this.currentFolder=e.data),delete this.currentTranslation)}togglePublish(e){e.generalConditions?this.NotificationService.showError("Page "+e.name+" is used as general conditions"):this.DocumentationService.partialUpdate("published",!e.published,e.id,this.apiId).then(()=>{e.published=!e.published;const t=this.isMarkdownTemplate(e.type)?"Template "+e.name+" has been made "+(e.published?"":"un")+"available with success":"Page "+e.name+" has been "+(e.published?"":"un")+"published with success";this.NotificationService.show(t)})}upward(e){e.order=e.order-1,this.DocumentationService.partialUpdate("order",e.order,e.id,this.apiId).then(()=>{this.NotificationService.show("Page "+e.name+" order has been changed with success"),this.refresh()})}downward(e){e.order=e.order+1,this.DocumentationService.partialUpdate("order",e.order,e.id,this.apiId).then(()=>{this.NotificationService.show("Page "+e.name+" order has been changed with success"),this.refresh()})}remove(e){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:'Would you like to remove "'+e.name+'"?',msg:"LINK"!==e.type?"All related links will also be removed.":"",confirmButton:"Remove"}}).then(t=>{t&&this.DocumentationService.remove(e.id,this.apiId).then(()=>{this.NotificationService.show("Page "+e.name+" has been removed"),this.refresh(),this.refreshCurrentFolder(),this.currentTranslation.id===e.id&&delete this.currentTranslation})})}newPage(e){this.apiId?this.$state.go("management.apis.detail.portal.newdocumentation",{type:e,parent:this.rootDir}):this.$state.go("management.settings.documentation.new",{type:e,parent:this.rootDir})}openUrl(e){return"FOLDER"===e.type||"SYSTEM_FOLDER"===e.type?this.apiId?this.$state.go("management.apis.detail.portal.documentation",{apiId:this.apiId,type:e.type,parent:e.id}):this.$state.go("management.settings.documentation.list",{parent:e.id}):this.apiId?this.$state.go("management.apis.detail.portal.editdocumentation",{apiId:this.apiId,type:e.type,pageId:e.id}):this.$state.go("management.settings.documentation.edit",{pageId:e.id,type:e.type,tab:"content"})}importPages(){this.apiId?this.$state.go("management.apis.detail.portal.importdocumentation",{apiId:this.apiId}):this.$state.go("management.settings.documentation.import")}fetch(){this.fetchAllInProgress=!0,this.DocumentationService.fetchAll(this.apiId).then(()=>{this.refresh(),this.NotificationService.show("Pages has been successfully fetched")}).finally(()=>{this.fetchAllInProgress=!1})}hasExternalDoc(){return this.pages.filter(e=>Object.prototype.hasOwnProperty.call(e,"source")).length>0}toggleTranslateFolder(){this.$scope.translateFolder=!this.$scope.translateFolder}saveFolderTranslation(){this.currentTranslation.id?this.DocumentationService.update(this.currentTranslation,this.apiId).then(()=>{this.NotificationService.show("'"+this.currentTranslation.name+"' has been updated"),this.refreshCurrentFolder()}):this.DocumentationService.create(this.currentTranslation,this.apiId).then(e=>{const t=e.data;this.NotificationService.show("'"+t.name+"' has been created"),this.refreshCurrentFolder()})}selectTranslation(e){this.currentTranslation=e}addTranslation(){this.currentTranslation={type:"TRANSLATION",parentId:this.currentFolder.id}}}Tr.$inject=["NotificationService","DocumentationService","$state","$scope","$mdDialog"];const Rr={bindings:{pages:"<",folders:"<",systemFolders:"<"},template:n(803),controller:Tr};class _r{constructor(e){this.$scope=e}$onInit(){const e=this.fetchers.find(e=>{var t,n;return e.id===(null===(n=null===(t=this.page)||void 0===t?void 0:t.source)||void 0===n?void 0:n.type)});this.$scope.fetcherJsonSchema=a.a.fromJson(null==e?void 0:e.schema)||Lr,this.fetcherJsonSchemaForm=["*"]}configureFetcher(e){var t,n;this.page.source||(this.page.source={}),this.page.source={type:e.id,configuration:(null===(n=null===(t=this.page)||void 0===t?void 0:t.source)||void 0===n?void 0:n.configuration)||{}},this.$scope.fetcherJsonSchema=a.a.fromJson(e.schema)}}_r.$inject=["$scope"];const xr={bindings:{fetchers:"=",page:"=",title:"<",withPublishOption:"<"},template:n(804),controller:_r},Lr={type:"object",id:"empty",properties:{"":{}}};class Pr{constructor(e,t,n,i,a,o){this.NotificationService=e,this.DocumentationService=t,this.UserService=n,this.$mdDialog=i,this.$state=a,this.$scope=o,this.apiId=a.params.apiId,this.tabs=[{id:0,name:"content",isUnavailable:()=>!1},{id:1,name:"translations",isUnavailable:()=>this.isMarkdownTemplate()},{id:2,name:"config",isUnavailable:()=>this.isLink()},{id:3,name:"fetchers",isUnavailable:()=>this.isLink()},{id:4,name:"access-control",isUnavailable:()=>!1},{id:5,name:"attached-resources",isUnavailable:()=>this.isMarkdownTemplate()||this.isLink()}],this.error=null,this.$scope.rename=!1,this.$scope.acls={groups:[],roles:[]}}$onInit(){this.page=this.resolvedPage,this.tabs=this.tabs.filter(e=>!e.isUnavailable());const e=this.tabs.findIndex(e=>e.name===this.$state.params.tab);this.selectedTab=e>-1?e:0,this.currentTab=this.tabs[this.selectedTab].name,this.resolvedPage.messages&&this.resolvedPage.messages.length>0&&(this.error={title:"Validation messages",message:this.resolvedPage.messages}),this.groups=this.resolvedGroups,this.foldersById=o.keyBy(this.folders,"id"),this.systemFoldersById=o.keyBy(this.systemFolders,"id");const t=this.DocumentationService.getFolderSituation(this.systemFoldersById,this.foldersById,this.page.parentId);this.pageList=this.DocumentationService.buildPageList(this.pageResources,!0,t),this.pagesToLink=this.DocumentationService.buildPageList(this.pagesToLink,!1,t),this.DocumentationService.supportedTypes(t).indexOf(this.page.type)<0&&this.$state.go("management.settings.documentation.list"),this.initEditor(),this.apiId?this.canUpdate=this.UserService.isUserHasPermissions(["api-documentation-u"]):this.canUpdate=this.UserService.isUserHasPermissions(["environment-documentation-u"]),"SWAGGER"===this.page.type&&(this.page.configuration||(this.page.configuration={}))}isFolder(){return W.FOLDER===this.page.type}isLink(){return W.LINK===this.page.type}isSwagger(){return W.SWAGGER===this.page.type}isMarkdown(){return W.MARKDOWN===this.page.type}isMarkdownTemplate(){return W.MARKDOWN_TEMPLATE===this.page.type}isAsciiDoc(){return W.ASCIIDOC===this.page.type}isAsyncApi(){return W.ASYNCAPI===this.page.type}initEditor(){this.$scope.editorReadonly=!1,null!=this.page.source&&null!=this.page.source.type&&this.resolvedFetchers.forEach(e=>{e.id===this.page.source.type&&(this.$scope.fetcherJsonSchema=a.a.fromJson(e.schema),this.$scope.editorReadonly=!0)})}removeFetcher(){this.page.source=null,this.$scope.fetcherJsonSchema=Lr}save(){this.error=null,this.DocumentationService.update(this.page,this.apiId).then(e=>{e.data.messages&&e.data.messages.length>0?this.NotificationService.showError("'"+this.page.name+"' has been updated (with validation errors - check the bottom of the page for details)"):this.NotificationService.show("'"+this.page.name+"' has been updated"),this.apiId?this.$state.go("management.apis.detail.portal.editdocumentation",{pageId:this.page.id,tab:this.currentTab},{reload:!0}):this.$state.go("management.settings.documentation.edit",{pageId:this.page.id,type:this.page.type,tab:this.currentTab},{reload:!0})}).catch(e=>{this.error=Object.assign(Object.assign({},e.data),{title:"Sorry, unable to update page"})})}saveTranslation(){this.$scope.$broadcast("saveTranslation")}cancel(){this.apiId?this.$state.go("management.apis.detail.portal.documentation",{apiId:this.apiId,parent:this.page.parentId}):this.$state.go("management.settings.documentation.list",{parent:this.page.parentId})}reset(){this.apiId?this.$state.go("management.apis.detail.portal.editdocumentation",{pageId:this.page.id},{reload:!0}):this.$state.go("management.settings.documentation.edit",{pageId:this.page.id,type:this.page.type},{reload:!0})}toggleRename(){this.$scope.rename=!this.$scope.rename,this.$scope.rename&&(this.newName=this.page.name)}rename(){this.DocumentationService.partialUpdate("name",this.newName,this.page.id,this.apiId).then(()=>{this.NotificationService.show("'"+this.page.name+"' has been renamed to '"+this.newName+"'"),this.page.name=this.newName,this.toggleRename()})}goToExternalSource(){this.selectedTab=3}selectTab(e){this.changeTab(e),this.apiId?this.$state.transitionTo("management.apis.detail.portal.editdocumentation",{apiId:this.apiId,type:this.page.type,pageId:this.page.id,tab:this.currentTab},{notify:!1}):this.$state.transitionTo("management.settings.documentation.edit",{pageId:this.page.id,type:this.page.type,tab:this.currentTab},{notify:!1})}changeTab(e){this.selectedTab=this.tabs.findIndex(t=>t.id===e),this.currentTab=this.tabs[this.selectedTab].name}fetch(){this.DocumentationService.fetch(this.page.id,this.apiId).then(()=>{this.NotificationService.show("'"+this.page.name+"' has been successfully fetched"),this.reset()})}getBannerMessage(){return this.isMarkdownTemplate()?"This page is not available for users yet":"This page is not published yet and will not be visible to other users"}}Pr.$inject=["NotificationService","DocumentationService","UserService","$mdDialog","$state","$scope"];const Nr={bindings:{resolvedPage:"<",resolvedGroups:"<",resolvedFetchers:"<",pagesToLink:"<",folders:"<",systemFolders:"<",pageResources:"<",categoryResources:"<",attachedResources:"<"},template:n(805),controller:Pr};class Er{constructor(e){this.DocumentationService=e}checkIfFolder(){if(this.page.content)if("root"===this.page.content)this.page.configuration.isFolder=!0,this.page.configuration.inherit="false";else{const e=this.DocumentationService.getFolder(this.systemFoldersById,this.foldersById,this.page.content);this.page.configuration.isFolder=!!e}}onChangeLinkType(){delete this.page.content,delete this.page.configuration.isFolder,"external"===this.page.configuration.resourceType?(delete this.page.configuration.inherit,this.page.translations&&this.page.translations.forEach(e=>delete e.content)):this.page.configuration.inherit||(this.page.configuration.inherit="true")}updateLinkName(e){"true"===this.page.configuration.inherit&&""!==e&&(this.page.name=e)}updateLinkNameWithPageId(e){const t=this.pageList.find(t=>t.id===e);t&&this.updateLinkName(t.name)}updateLinkNameWithCategoryId(e){const t=this.categoryResources.find(t=>t.id===e);t&&this.updateLinkName(t.name)}}Er.$inject=["DocumentationService"];const Dr={bindings:{categoryResources:"<",foldersById:"<",page:"<",pageList:"<",systemFoldersById:"<"},template:n(806),controller:Er};class jr{constructor(e,t){this.RoleService=e,this.$scope=t}$onInit(){var e,t;const n=this.isApiPage?"API":"ENVIRONMENT";this.RoleService.list(n).then(e=>{this.roles=e}),this.$scope.acls={isPrivate:"PRIVATE"===this.page.visibility,groups:null===(e=this.page.accessControls)||void 0===e?void 0:e.filter(e=>"GROUP"===e.referenceType).map(e=>e.referenceId),roles:null===(t=this.page.accessControls)||void 0===t?void 0:t.filter(e=>"ROLE"===e.referenceType).map(e=>e.referenceId),excludedAccessControls:this.page.excludedAccessControls},this.$scope.$watch("acls",()=>{var e,t;this.page.visibility=this.$scope.acls.isPrivate?"PRIVATE":"PUBLIC",this.page.excludedAccessControls=this.$scope.acls.excludedAccessControls,this.page.accessControls=[null===(e=this.$scope.acls.groups)||void 0===e?void 0:e.map(e=>({referenceId:e,referenceType:"GROUP"})),null===(t=this.$scope.acls.roles)||void 0===t?void 0:t.map(e=>({referenceId:e,referenceType:"ROLE"}))].filter(e=>null!=e).reduce((e,t)=>e.concat(t),[])},!0)}}jr.$inject=["RoleService","$scope"];const kr={bindings:{page:"<",groups:"<",roles:"<",isApiPage:"<"},template:n(807),controller:jr};class Ur{constructor(e,t,i){this.$mdDialog=e,this.DocumentationService=t,this.NotificationService=i,this.removeAttachedResource=e=>{this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:'Would you like to remove "'+e.fileName+'"?',confirmButton:"Remove"}}).then(t=>{t&&(this.page.attached_media=this.page.attached_media.filter(t=>!(t.mediaHash===e.hash&&t.mediaName===e.fileName&&t.attachedAt===e.createAt)),this.DocumentationService.update(this.page,this.apiId).then(()=>this.onSave()).then(()=>this.NotificationService.show(e.fileName+" has been removed from page")))})}}addAttachedResource(){this.$mdDialog.show({controller:"FileChooserDialogController",controllerAs:"ctrl",template:n(808),clickOutsideToClose:!0,locals:{title:"Select a file to attach",confirmButton:"Add"}}).then(e=>{if(e.file){const t=new FormData;let n=e.file.name;e.filename&&(n=e.filename),t.append("file",e.file),t.append("fileName",n),this.DocumentationService.addMedia(t,this.page.id,this.apiId).then(()=>this.onSave()).then(()=>this.NotificationService.show(n+" has been attached"))}})}}Ur.$inject=["$mdDialog","DocumentationService","NotificationService"];const Mr={bindings:{apiId:"<",attachedResources:"<",page:"=",onSave:"&"},template:n(809),controller:Ur};class Fr{constructor(e){this.Constants=e,this.shouldShowOpenApiDocFormat=!1}isSwagger(){return W.SWAGGER===this.page.type}isMarkdownTemplate(){return W.MARKDOWN_TEMPLATE===this.page.type}$onInit(){this.settings=this.Constants.env.settings,this.shouldShowOpenApiDocFormat=this.settings&&this.settings.openAPIDocViewer&&this.settings.openAPIDocViewer.openAPIDocType.swagger.enabled&&this.settings.openAPIDocViewer.openAPIDocType.redoc.enabled,"SWAGGER"!==this.page.type||this.page.configuration.viewer||this.settings&&this.settings.openAPIDocViewer&&(this.page.configuration.viewer=this.settings.openAPIDocViewer.openAPIDocType.defaultType)}openApiFormatLabel(e){return this.settings&&this.settings.openAPIDocViewer&&e===this.settings.openAPIDocViewer.openAPIDocType.defaultType?e+" (Default)":e}toggleEntrypointAsServer(){void 0===this.page.configuration.entrypointsAsServers&&(this.page.configuration.entrypointAsBasePath="true")}usedAsGeneralConditions(){return this.page.generalConditions}}Fr.$inject=["Constants"];const qr={bindings:{page:"="},template:n(810),controller:Fr};class Hr{constructor(e){this.$scope=e}isAsciiDoc(){return W.ASCIIDOC===this.pageType}isAsyncApi(){return W.ASYNCAPI===this.pageType}isSwagger(){return W.SWAGGER===this.pageType}isMarkdown(){return W.MARKDOWN===this.pageType}isMarkdownTemplate(){return W.MARKDOWN_TEMPLATE===this.pageType}$onInit(){this.pageType||(this.pageType=this.page.type),this.codeMirrorOptions={lineWrapping:!0,lineNumbers:!0,readOnly:this.$scope.editorReadonly},this.isSwagger()&&(this.codeMirrorOptions.mode="json"),this.isAsciiDoc()&&(this.codeMirrorOptions.mode="asciidoc")}}Hr.$inject=["$scope"];const Gr={bindings:{canUpdate:"<",newPage:"<",page:"<",pagesToLink:"<",pageType:"<"},template:n(811),controller:Hr};class Br{constructor(e,t,n,i){this.$mdDialog=e,this.$scope=t,this.DocumentationService=n,this.NotificationService=i}$onInit(){this.$scope.$on("saveTranslation",()=>{this.saveTranslation()})}selectTranslation(e){this.currentTranslation=e,this.currentTranslation.configuration.inheritContent||(this.currentTranslation.configuration.inheritContent="true")}addTranslation(){this.currentTranslation={type:"TRANSLATION",parentId:this.page.id,configuration:{}},this.page.type!==W.MARKDOWN&&this.page.type!==W.SWAGGER&&this.page.type!==W.LINK&&this.page.type!==W.ASCIIDOC&&this.page.type!==W.ASYNCAPI||(this.currentTranslation.configuration.inheritContent="true")}refreshTranslations(){this.DocumentationService.get(this.apiId,this.page.id).then(e=>this.page.translations=e.data.translations),delete this.currentTranslation}removeTranslation(e){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:'Would you like to remove "'+e.name+'"?',confirmButton:"Remove"}}).then(t=>{t&&this.DocumentationService.remove(e.id,this.apiId).then(()=>{this.NotificationService.show("Translation "+e.name+" has been removed"),this.refreshTranslations()})})}saveTranslation(){!this.page.configuration||"page"!==this.page.configuration.resourceType&&"category"!==this.page.configuration.resourceType||(this.currentTranslation.content=this.page.content),this.currentTranslation.id?this.DocumentationService.update(this.currentTranslation,this.apiId).then(()=>{this.NotificationService.show("'"+this.currentTranslation.name+"' has been updated"),this.refreshTranslations()}):this.DocumentationService.create(this.currentTranslation,this.apiId).then(e=>{const t=e.data;this.NotificationService.show("'"+t.name+"' has been created"),this.refreshTranslations()})}updateTranslationContent(){"false"!==this.currentTranslation.configuration.inheritContent||this.currentTranslation.content&&""!==this.currentTranslation.content||(this.currentTranslation.content=this.page.content),"true"===this.currentTranslation.configuration.inheritContent&&delete this.currentTranslation.content}}Br.$inject=["$mdDialog","$scope","DocumentationService","NotificationService"];const Wr={bindings:{apiId:"<",canUpdate:"<",currentTranslation:"=",pagesToLink:"<",page:"<"},template:n(812),controller:Br};const Vr={bindings:{page:"=",onSave:"&"},template:n(813),controller:class{save(){this.onSave()}}};class Yr{constructor(e,t,n,i){this.NotificationService=e,this.DocumentationService=t,this.$state=n,this.$scope=i,this.apiId=this.$state.params.apiId}$onInit(){this.page=this.resolvedRootPage||{name:"root",type:"ROOT"},this.fetchers=this.resolvedFetchers,o.isNil(this.page.source)||o.isNil(this.page.source.type)||o.forEach(this.fetchers,e=>{e.id===this.page.source.type&&(this.$scope.fetcherJsonSchema=a.a.fromJson(e.schema))})}import(){this.importInProgress=!0,this.page.name="import",this.DocumentationService.import(this.page,this.apiId).then(e=>{this.page.id?e.data.messages&&e.data.messages.length>0?this.NotificationService.showError("'"+e.data.length+"' elements has been updated (with validation errors - check the bottom of the page for details)"):this.NotificationService.show("'"+e.data.length+"' elements has been updated."):e.data.messages&&e.data.messages.length>0?this.NotificationService.showError("'"+e.data.length+"' elements has been created (with validation errors - check the bottom of the page for details)"):this.NotificationService.show("'"+e.data.length+"' elements has been created."),this.apiId?this.$state.go("management.apis.detail.portal.documentation",{apiId:this.apiId}):this.$state.go("management.settings.documentation.list")}).finally(()=>{this.importInProgress=!1})}cancel(){this.apiId?this.$state.go("management.apis.detail.portal.documentation",{apiId:this.apiId}):this.$state.go("management.settings.documentation.list")}}Yr.$inject=["NotificationService","DocumentationService","$state","$scope"];const zr={bindings:{resolvedFetchers:"<",resolvedRootPage:"<"},template:n(814),controller:Yr};class Kr{constructor(e){this.DocumentationService=e}checkIfFolder(){if(this.page.content)if("root"===this.page.content)this.page.configuration.isFolder=!0,this.page.configuration.inherit="false";else{const e=this.DocumentationService.getFolder(this.systemFoldersById,this.foldersById,this.page.content);this.page.configuration.isFolder=!!e}}onChangeLinkType(){delete this.page.content,delete this.page.configuration.isFolder,"external"===this.page.configuration.resourceType||this.page.configuration.inherit||(this.page.configuration.inherit="true")}save(){this.onSave()}updateLinkName(e){this.page.name&&""!==this.page.name&&"true"!==this.page.configuration.inherit&&""!==e||(this.page.name=e)}}Kr.$inject=["DocumentationService"];const Qr={bindings:{categoryResources:"<",foldersById:"<",page:"=",pageList:"<",onSave:"&",systemFoldersById:"<"},template:n(815),controller:Kr};class Jr{constructor(e,t,n,i,a){this.NotificationService=e,this.DocumentationService=t,this.Constants=n,this.$state=i,this.$scope=a,this.apiId=this.$state.params.apiId,this.error=null,this.page={name:"",type:this.$state.params.type,parentId:this.$state.params.parent,visibility:"PUBLIC"},this.$scope.getContentMode="inline"}$onInit(){this.foldersById=o.keyBy(this.folders,"id"),this.systemFoldersById=o.keyBy(this.systemFolders,"id");const e=this.DocumentationService.getFolderSituation(this.systemFoldersById,this.foldersById,this.page.parentId);this.pageList=this.DocumentationService.buildPageList(this.pageResources,!0,e),this.pagesToLink=this.DocumentationService.buildPageList(this.pagesToLink,!1,e),this.DocumentationService.supportedTypes(e).indexOf(this.page.type)<0&&this.$state.go("management.settings.documentation.list",{parent:this.$state.params.parent});const t=new z;t.type=W.MARKDOWN_TEMPLATE,t.published=!0,t.translated=!0,this.DocumentationService.search(t,null).then(e=>{this.templates=e.data});const n=this.Constants.env.settings;"SWAGGER"===this.page.type&&n&&n.openAPIDocViewer&&(this.page.configuration={viewer:n.openAPIDocViewer.openAPIDocType.defaultType})}getPageName(){switch(this.page.type){case W.ASCIIDOC:return"New AsciiDoc";case W.ASYNCAPI:return"New AsyncApi";case W.FOLDER:return"New Folder";case W.LINK:return"New Link";case W.MARKDOWN_TEMPLATE:return"New Markdown Template";case W.MARKDOWN:return"New Markdown Page";case W.SWAGGER:return"New Swagger Template";default:return"New Page"}}isFolder(){return W.FOLDER===this.page.type}isLink(){return W.LINK===this.page.type}isSwagger(){return W.SWAGGER===this.page.type}isMarkdown(){return W.MARKDOWN===this.page.type}isMarkdownTemplate(){return W.MARKDOWN_TEMPLATE===this.page.type}onChangeMarkdownTemplate(){this.selectedTemplate.type&&(this.page=Object.assign(Object.assign({},this.page),{content:this.selectedTemplate.content}))}save(e){return this.error=null,this.DocumentationService.create(this.page,this.apiId).then(t=>{const n=t.data;n.messages&&n.messages.length>0?this.NotificationService.showError("'"+n.name+"' has been created (with validation errors - check the bottom of the page for details)"):this.NotificationService.show("'"+n.name+"' has been created"),e?this.gotoParent():this.gotoEdit(n)}).catch(e=>{this.error=Object.assign(Object.assign({},e.data),{title:"Sorry, unable to create page"})})}changeContentMode(e){"fetcher"===e?this.page.source={configuration:{}}:delete this.page.source,this.error=null}cancel(){this.gotoParent()}gotoParent(){this.apiId?this.$state.go("management.apis.detail.portal.documentation",{apiId:this.apiId,parent:this.$state.params.parent}):this.$state.go("management.settings.documentation.list",{parent:this.$state.params.parent})}gotoEdit(e){this.apiId?this.$state.go("management.apis.detail.portal.editdocumentation",{apiId:this.apiId,pageId:e.id,type:e.type}):this.$state.go("management.settings.documentation.edit",{pageId:e.id,type:e.type})}}Jr.$inject=["NotificationService","DocumentationService","Constants","$state","$scope"];const Xr={bindings:{resolvedFetchers:"<",folders:"<",systemFolders:"<",pageResources:"<",categoryResources:"<",pagesToLink:"<"},template:n(816),controller:Jr};n(817);const Zr={template:n(818),bindings:{pageContent:"<"},controller:class{}};n(819);const el={template:n(820),bindings:{pageContent:"<"},controller:class{}};var tl=n(459);class nl{constructor(e,t,n,i,a){this.$http=e,this.Constants=t,this.$state=n,this.$mdDialog=i,this.NotificationService=a}$onChanges(){const e=this.page&&this.page.content?this.page.content:"";let t;t=this.$state.params.apiId?this.Constants.env.baseURL+"/apis/"+this.$state.params.apiId+"/media/":this.Constants.env.baseURL+"/portal/media/",t.includes("{:envId}")&&(t=t.replace("{:envId}",this.Constants.org.currentEnv.id));const i=["heading","bold","italic","strike","divider","hr","quote","divider","ul","ol","task","indent","outdent","divider","table","link","divider","code","codeblock"];this.Constants.env.settings.portal.uploadMedia.enabled&&i.splice(15,0,"image");const a=n(822);this.tuiEditor&&this.tuiEditor.remove(),this.tuiEditor=new a(Object.assign({el:document.querySelector("#editSection"),initialEditType:"markdown",previewStyle:"vertical",initialValue:e,useDefaultHTMLSanitizer:!1,height:"500px",usageStatistics:!1,exts:["table","scrollSync"],toolbarItems:i,events:{change:()=>{this.page.content=this.tuiEditor.getMarkdown()}},hooks:{addImageBlobHook:(e,n)=>{const i=new FormData;return i.append("file",e),e.size>this.Constants.env.settings.portal.uploadMedia.maxSizeInOctet?(this.NotificationService.showError(`File uploaded is too big, you're limited at ${this.Constants.env.settings.portal.uploadMedia.maxSizeInOctet} bytes`),!1):(this.$http.post(t+"upload",i,{headers:{"Content-Type":void 0}}).then(i=>{n(t+i.data,e.name)}),!1)}},plugins:[[tl,{hljs:c}]]},this.options)),this.tuiEditor.eventManager.addEventType("addLinkToPage");this.tuiEditor.getUI().getToolbar().insertItem(this.Constants.env.settings.portal.uploadMedia.enabled?17:16,{type:"button",options:{event:"addLinkToPage",tooltip:"Insert page link",style:"background-image: url('assets/logo_file.svg');  background-size: 20px 20px;"}}),this.tuiEditor.eventManager.listen("addLinkToPage",()=>{this.$mdDialog.show({controller:"SelectPageDialogController",controllerAs:"ctrl",template:n(823),clickOutsideToClose:!0,locals:{pages:this.pagesToLink,title:"Create a link to a page"}}).then(e=>{if(e)if(this.$state.params.apiId){const t=`[${e.name}](/#!/apis/${this.$state.params.apiId}/documentation/${e.id})`;this.tuiEditor.insertText(t)}else{const t=`[${e.name}](/#!/settings/pages/${e.id})`;this.tuiEditor.insertText(t)}})})}}nl.$inject=["$http","Constants","$state","$mdDialog","NotificationService"];const il={template:n(824),bindings:{page:"<",options:"<",pagesToLink:"<"},controller:nl};const al={template:n(825),bindings:{page:"<"},controller:class{$onInit(){this.htmlContent=r.marked.parse(this.page.content)}}};var ol=n(244),sl=n(264);const rl=ol.Schema.create(ol.FAILSAFE_SCHEMA,[]),ll=function(){return{statePlugins:{spec:{wrapSelectors:{allowTryItOutFor:()=>()=>!1}}}}};class cl{constructor(e,t,n,i){this.Constants=e,this.UserService=t,this.$state=n,this.$window=i,this.cfg={dom_id:"#swagger-container",presets:[sl.SwaggerUIBundle.presets.apis],layout:"BaseLayout",requestInterceptor:e=>(e.loadSpec&&(e.credentials="include"),e)}}tryItEnabled(){var e,t;return"true"===(null===(e=this.pageConfiguration)||void 0===e?void 0:e.tryIt)&&(this.UserService.isAuthenticated()||"true"===(null===(t=this.pageConfiguration)||void 0===t?void 0:t.tryItAnonymous))}loadContent(){let e={};try{e=a.a.fromJson(this.pageContent)}catch(t){e=ol.safeLoad(this.pageContent,{schema:rl})}return e}loadOauth2RedirectUrl(){return this.$window.location.origin+this.$window.location.pathname+("/"!==this.$window.location.pathname.substr(-1)?"/":"")+"swagger-oauth2-redirect.html"}loadPlugins(){const e=[];return this.tryItEnabled()||e.push(ll),e}$onChanges(){var e,t,n,i,a,s,r;const l=this.loadPlugins(),c=this.loadContent(),d=this.loadOauth2RedirectUrl(),p=Object.assign({},this.cfg,{plugins:l,spec:c,oauth2RedirectUrl:d});if("true"===(null===(e=this.pageConfiguration)||void 0===e?void 0:e.showURL)){let e="";e=this.$state.params.apiId?`${this.Constants.env.baseURL}/apis/${this.$state.params.apiId}/pages/${this.$state.params.pageId}/content`:`${this.Constants.env.baseURL}/portal/pages/${this.$state.params.pageId}/content`,e.includes("{:envId}")&&(e=e.replace("{:envId}",this.Constants.org.currentEnv.id)),p.url=e,p.spec=void 0}p.docExpansion=null!==(n=null===(t=this.pageConfiguration)||void 0===t?void 0:t.docExpansion)&&void 0!==n?n:"none",p.displayOperationId="true"===(null===(i=this.pageConfiguration)||void 0===i?void 0:i.displayOperationId),p.filter="true"===(null===(a=this.pageConfiguration)||void 0===a?void 0:a.enableFiltering),p.showExtensions="true"===(null===(s=this.pageConfiguration)||void 0===s?void 0:s.showExtensions),p.showCommonExtensions="true"===(null===(r=this.pageConfiguration)||void 0===r?void 0:r.showCommonExtensions),p.maxDisplayedTags=o.isNaN(Number(this.pageConfiguration.maxDisplayedTags))||"-1"===this.pageConfiguration.maxDisplayedTags?void 0:Number(this.pageConfiguration.maxDisplayedTags);const m=Object(sl.SwaggerUIBundle)(o.merge(p,{onComplete:()=>{m.initOAuth({clientId:"",scopeSeparator:" "})}}))}}cl.$inject=["Constants","UserService","$state","$window"];const dl={template:n(853),bindings:{pageConfiguration:"<",pageContent:"<",edit:"<"},controller:cl};i.module("gravitee-component-documentation",[]);const pl=i.module("gravitee-component-documentation");pl.component("documentationManagement",Rr),pl.component("gvNewFolder",Vr),pl.component("gvNewLink",Qr),pl.component("gvEditLinkContent",Dr),pl.component("editPage",Nr),pl.component("gvEditPageAcls",kr),pl.component("gvEditPageAttachedResources",Mr),pl.component("gvEditPageContent",Gr),pl.component("gvEditPageConfiguration",qr),pl.component("gvEditPageFetchers",xr),pl.component("gvEditPageTranslations",Wr),pl.component("importPages",zr),pl.component("newPage",Xr),pl.component("gvPageAsciiDoc",Zr),pl.component("gvPageAsyncApi",el),pl.component("gvPageEditorMarkdown",il),pl.component("gvPageMarkdown",al),pl.component("gvPageSwagger",dl);class ml{constructor(e,t,n,i,a,o,s){this.ApiService=e,this.$scope=t,this.$rootScope=n,this.$state=i,this.$q=a,this.UserService=o,this.$window=s,this.api=this.$scope.$parent.apiCtrl.api,this.gateway={availabilities:{},responsetimes:{}},this.endpoint={availabilities:{},responsetimes:{}},this.onPaginate=this.onPaginate.bind(this),this.query=new v,this.query.size=this.$state.params.size?this.$state.params.size:10,this.query.page=this.$state.params.page?this.$state.params.page:1,this.query.from=this.$state.params.from,this.query.to=this.$state.params.to,s.localStorage.lastHealthCheckQuery=JSON.stringify(this.query),this.updateChart()}timeframeChange(e){this.query.from=e.from,this.query.to=e.to,this.updateChart()}updateChart(){this.ApiService.apiHealth(this.api.id,"availability").then(e=>{this.endpoint.availabilities.data=e.data}),this.ApiService.apiHealth(this.api.id,"response_time").then(e=>{this.endpoint.responsetimes.data=e.data}),this.displayGatewayHC()&&(this.ApiService.apiHealth(this.api.id,"availability","gateway").then(e=>{this.gateway.availabilities.data=e.data}),this.ApiService.apiHealth(this.api.id,"response_time","gateway").then(e=>{this.gateway.responsetimes.data=e.data})),this.refresh()}onPaginate(e){this.query.page=e,this.refresh()}refresh(){this.$window.localStorage.lastHealthCheckQuery=JSON.stringify(this.query),this.$state.transitionTo(this.$state.current,{apiId:this.api.id,page:this.query.page,size:this.query.size,from:this.query.from,to:this.query.to},{notify:!1}),this.ApiService.apiHealthLogs(this.api.id,this.query).then(e=>{this.logs=e.data}),this.ApiService.apiHealthLogs(this.api.id,o.assign({transition:!0},this.query)).then(e=>{this.transitionLogs=e.data});const e=this.query.from||p().subtract(1,"days").valueOf(),t=this.query.to||p().valueOf(),n=Math.floor((t-e)/24),i=[this.ApiService.apiHealthAverage(this.api.id,{from:e,to:t,interval:n,type:"RESPONSE_TIME"}),this.ApiService.apiHealthAverage(this.api.id,{from:e,to:t,interval:n,type:"AVAILABILITY"})];this.$q.all(i).then(e=>{let t=0;const n=[];o.forEach(e,e=>{const i=e.data.values;i&&i.length>0&&o.forEach(i,e=>{o.forEach(e.buckets,e=>{if(e){const i=0==t;n.push({name:"Average of "+(i?"response time":"availability"),data:e.data,color:i?"#337AB7":"#5CB85C",type:i?"area":"column",labelSuffix:i?"ms":"%",decimalFormat:!i,yAxis:t,zones:i?[]:[{value:80,color:"#D9534F"},{value:95,color:"#F0AD4E"},{color:"#5CB85C"}]})}})}),t++});const i=e[0]&&e[0].data&&e[0].data.timestamp;this.chartData={plotOptions:{series:{pointStart:i&&i.from,pointInterval:i&&i.interval}},series:n,xAxis:{type:"datetime",dateTimeLabelFormats:{month:"%e. %b",year:"%b"}},yAxis:[{labels:{format:"{value}ms"},title:{text:"Response time"}},{title:{text:"Availability"},labels:{format:"{value}%"},max:100,opposite:!0}],chart:{events:{selection:e=>{e.resetSelection||(this.query.from=Math.floor(e.xAxis[0].min),this.query.to=Math.floor(e.xAxis[0].max),this.$rootScope.$broadcast("timeframeZoom",{from:this.query.from,to:this.query.to}),this.refresh())}}}}})}getEndpointStatus(e){switch(e){case 3:return"UP";case 2:return"TRANSITIONALLY_UP";case 1:return"TRANSITIONALLY_DOWN";case 0:return"DOWN";default:return"-"}}viewLog(e){this.$state.go("management.apis.detail.proxy.healthCheckDashboard.log",e)}displayGatewayHC(){return this.UserService.currentUser.isOrganizationAdmin()}}ml.$inject=["ApiService","$scope","$rootScope","$state","$q","UserService","$window"];var ul=ml;var hl={template:n(854),bindings:{value:"<"}};class gl{constructor(e,t,n,i){this.$scope=e,this.resolvedLog=t,this.$state=n,this.$window=i,this.api=this.$scope.$parent.apiCtrl.api,this.log=t.data}getMimeType(e){if(void 0!==e.headers&&void 0!==e.headers["Content-Type"]){return e.headers["Content-Type"][0].split(";",1)[0]}return null}backToHealthcheck(){const e=JSON.parse(this.$window.localStorage.lastHealthCheckQuery);this.$state.go("management.apis.detail.proxy.healthCheckDashboard.visualize",{page:e.page,size:e.size,from:e.from,to:e.to})}}gl.$inject=["$scope","resolvedLog","$state","$window"];var fl=gl;var bl={template:n(855),bindings:{availability:"<",responsetime:"<"}};class vl{}class yl{constructor(e,t){this.$http=e,this.Constants=t}create(e){if(e)return this.$http.post(this.Constants.env.baseURL+"/platform/tickets",e)}search(e){return this.$http.get(this.buildURLWithQuery(e,this.Constants.env.baseURL+"/platform/tickets?"))}getTicket(e){return this.$http.get(`${this.Constants.env.baseURL}/platform/tickets/${e}`)}buildURLWithQuery(e,t){const n=Object.keys(e);return o.forEach(n,n=>{const i=e[n];void 0!==i&&""!==i&&(t+=n+"="+i+"&")}),t}}yl.$inject=["$http","Constants"];var Sl=yl;class wl{constructor(e,t,n,i,a,s){this.TicketService=e,this.NotificationService=t,this.UserService=n,this.ApiService=i,this.ApplicationService=a,this.$stateParams=s,this.stateParams=s,(this.isAuthenticated=n.isAuthenticated())&&(this.userHasAnEmail=!!n.currentUser.email,i.list().then(e=>this.apis=e.data).then(e=>{if(s.apiId){o.find(e,{id:s.apiId})&&(this.ticket={api:s.apiId})}}),a.list(["picture"]).then(e=>this.applications=e.data))}create(){this.TicketService.create(this.ticket).then(()=>{this.NotificationService.show("Support ticket has been created successfully"),this.formTicket.$setPristine(),this.formTicket.$setUntouched(),this.ticket={}})}}wl.$inject=["TicketService","NotificationService","UserService","ApiService","ApplicationService","$stateParams"];var Cl=wl;class Il{constructor(){this.mgmt=!1,this.api=null,this.application=null,this.event=null}}class $l{constructor(e,t){this.$http=e,this.Constants=t}list(e,t){let n;return n=t?this.Constants.env.baseURL+"/apis/"+t+"/audit?":this.Constants.env.baseURL+"/audit?",o.forEach(e,(e,t)=>{null!=e&&""!==e&&(n+=t+"="+(e instanceof Date?e.getTime():e)+"&")}),this.$http.get(n)}listEvents(e){let t;return t=e?this.Constants.env.baseURL+"/apis/"+e+"/audit/events":this.Constants.env.baseURL+"/audit/events",this.$http.get(t)}}$l.$inject=["$http","Constants"];var Al=$l;class Ol{constructor(e,t,n){this.resolvedEvents=e,this.$scope=t,this.$state=n,this.$scope.api=this.$state.params.apiId,this.$scope.apis=[{id:this.$state.params.apiId}],this.$scope.applications=[],this.$scope.events=e}}Ol.$inject=["resolvedEvents","$scope","$state"];var Tl=Ol;var Rl={template:n(856),bindings:{api:"<",apis:"<",applications:"<",events:"<"},controller:["AuditService",function(e){this.$onInit=()=>{this.events=o.map(this.events,e=>e.toUpperCase()),this.query=new Il,this.onPaginate=this.onPaginate.bind(this),e.list(null,this.api).then(e=>this.handleAuditResponseData(e.data)),this.queryLogType="all"},this.handleAuditResponseData=e=>{this.auditLogs=e.content,this.metadata=e.metadata,this.enhanceAuditLogs(this.auditLogs),this.query.page=e.pageNumber,this.result={size:e.pageElements,total:e.totalElements}},this.enhanceAuditLogs=e=>{o.forEach(e,e=>{e.prettyPatch=JSON.stringify(JSON.parse(e.patch),null,"  "),e.displayPatch=!1,e.displayProperties=!1})},this.onPaginate=()=>{e.list(this.query,this.api).then(e=>{this.handleAuditResponseData(e.data)})},this.getNameByReference=e=>this.metadata[e.type+":"+e.id+":name"]?this.metadata[e.type+":"+e.id+":name"]:e.id,this.getDisplayableProperties=e=>o.mapValues(e,(e,t)=>this.metadata[t+":"+e+":name"]),this.onOrgEnvFilterChange=()=>{"env"===this.queryLogType?(this.query.orgLog=!1,this.query.envLog=!0):"org"===this.queryLogType?(this.query.orgLog=!0,this.query.envLog=!1):(this.query.orgLog=!1,this.query.envLog=!1)},this.search=()=>{this.query.page=1,this.query.mgmt&&(this.query.api=null,this.query.application=null),e.list(this.query,this.api).then(e=>{this.handleAuditResponseData(e.data)})}}]};var _l={template:n(432),controller:["$rootScope","$state",function(e,t){this.$state=t}]};n(857);var xl={template:n(858),controller:["$rootScope","$state","UserService","Constants","$transitions",function(e,t,n,i,a){this.$state=t,this.Constants=i,this.settingsMenu={organizationIdentityProviders:{perm:n.isUserHasAllPermissions(["organization-identity_provider-r","organization-identity_provider_activation-r"]),goTo:"organization.settings.ng-identityproviders"},consoleSettings:{perm:n.isUserHasPermissions(["organization-settings-r"]),goTo:"organization.settings.ng-console"},audit:{perm:n.isUserHasPermissions(["organization-audit-r"]),goTo:"organization.settings.ng-audit"},users:{perm:n.isUserHasPermissions(["organization-user-r"]),goTo:"organization.settings.ng-users"},roles:{perm:n.isUserHasPermissions(["organization-role-c","organization-role-u","organization-role-d"]),goTo:"organization.settings.ng-roles"},tags:{perm:n.isUserHasPermissions(["organization-tag-c","organization-tag-u","organization-tag-d"]),goTo:"organization.settings.ng-tags"},tenants:{perm:n.isUserHasPermissions(["organization-tenant-c","organization-tenant-u","organization-tenant-d"]),goTo:"organization.settings.ng-tenants"},policies:{perm:n.isUserHasPermissions(["organization-policies-c","organization-policies-u","organization-policies-d"]),goTo:"organization.settings.ng-policies"},notificationTemplates:{perm:n.isUserHasPermissions(["organization-notification_templates-r"]),goTo:"organization.settings.ng-notificationTemplates"},cockpit:{perm:n.isUserHasPermissions(["organization-installation-r"]),goTo:"organization.settings.ng-cockpit"}};const s=()=>{for(const e of o.keys(this.settingsMenu))if(this.settingsMenu[e].perm)return this.settingsMenu[e].goTo};a.onBefore({},e=>{if("organization.settings"===e.to().name)return e.router.stateService.target(s())}),this.$onInit=()=>{"organization.settings"===t.current.name&&t.go(s())}}]};class Ll{constructor(e,t){this.$http=e,this.Constants=t}save(e){return this.$http.post(this.Constants.org.baseURL+"/settings/",e)}get(){return this.$http.get(this.Constants.org.baseURL+"/settings/")}getConsole(){return this.$http.get(this.Constants.org.baseURL+"/console")}isReadonly(e,t){return!!(e&&e.metadata&&e.metadata.readonly)&&e.metadata.readonly.some(e=>e===t)}}Ll.$inject=["$http","Constants"];var Pl=Ll;class Nl{constructor(e,t){this.$http=e,this.Constants=t}save(e){return this.$http.post(this.Constants.env.baseURL+"/settings/",e)}get(){return this.$http.get(this.Constants.env.baseURL+"/settings/")}isReadonly(e,t){return!!(e&&e.metadata&&e.metadata.readonly)&&e.metadata.readonly.some(e=>e===t)}}Nl.$inject=["$http","Constants"];var El=Nl;class Dl{constructor(e,t){this.$http=e,this.Constants=t}get(){return this.$http.get(this.Constants.env.baseURL+"/portal/")}}Dl.$inject=["$http","Constants"];var jl=Dl;var kl={bindings:{settings:"<"},controller:"ApiLoggingController",template:n(859)};class Ul{constructor(e,t){this.ConsoleSettingsService=e,this.NotificationService=t,this.providedConfigurationMessage="Configuration provided by the system"}save(){this.ConsoleSettingsService.save(this.settings).then(()=>{this.NotificationService.show("API logging saved"),this.formApiLogging.$setPristine()})}isReadonlySetting(e){return this.ConsoleSettingsService.isReadonly(this.settings,e)}}Ul.$inject=["ConsoleSettingsService","NotificationService"];var Ml=Ul;var Fl,ql={bindings:{groups:"<"},template:n(860),controller:["GroupService","UserService","NotificationService","$mdDialog","$state","$rootScope",function(e,t,i,a,s,r){this.$rootScope=r,this.create=()=>{s.go("management.settings.groups.create")},this.removeGroup=(t,s,r)=>{t.stopPropagation(),a.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:'Would you like to remove the group "'+r+'"?',confirmButton:"Remove"}}).then(t=>{t&&e.remove(s).then(()=>{i.show("Group "+r+" has been deleted."),e.list().then(e=>{this.groups=o.filter(e.data,"manageable"),this.initEventRules()})})})},this.saveEventRules=t=>{t.manageable&&(e.updateEventRules(t,this.apiByDefault[t.id],this.applicationByDefault[t.id]),e.update(t).then(()=>{i.show("Group "+t.name+" has been updated.")}))},this.selectGroupUrl=e=>e.manageable?s.go("management.settings.groups.group",{groupId:e.id}):null,this.hasEvent=(e,t)=>e.event_rules&&-1!==e.event_rules.findIndex(e=>e.event===t)}]};!function(e){e.DELETE_PRIMARY_OWNER="DELETE_PRIMARY_OWNER",e.DEMOTE_PRIMARY_OWNER="DEMOTE_PRIMARY_OWNER",e.PROMOTE_NEW_PRIMARY_OWNER="PROMOTE_NEW_PRIMARY_OWNER"}(Fl||(Fl={}));class Hl{constructor(e,t,n,i,a){this.$mdDialog=e,this.primaryOwner=t,this.members=n,this.group=i,this.transferType=a,this.usersSelected=[],this.userFilterFn=this.userFilterFn.bind(this)}hide(){this.$mdDialog.cancel()}addMembers(){const[e]=this.usersSelected;this.$mdDialog.hide({newPrimaryOwnerRef:e,primaryOwner:this.primaryOwner})}userFilterFn(e){return e.id!==this.primaryOwner.id&&this.members.some(t=>t.id===e.id)}isInvalid(){return!this.isPromotion()&&1!==this.usersSelected.length}isRemoval(){return this.transferType===Fl.DELETE_PRIMARY_OWNER}isPromotion(){return this.transferType===Fl.PROMOTE_NEW_PRIMARY_OWNER}}Hl.$inject=["$mdDialog","primaryOwner","members","group","transferType"];var Gl=Hl;var Bl={bindings:{group:"<",apiRoles:"<",applicationRoles:"<",invitations:"<",tags:"<"},template:n(861),controller:["GroupService","NotificationService","$mdDialog","$state","$scope","UserService","$rootScope",function(e,t,i,a,s,r,l){this.$rootScope=l,this.$onInit=()=>{var t;this.updateMode=void 0!==this.group&&void 0!==this.group.id,this.membersLoaded=!1,this.defaultPageSize=10,this.membersPageQuery={page:a.params.page?parseInt(a.params.page,10):1,size:this.defaultPageSize},this.updateMode?e.getMembers(null===(t=this.group)||void 0===t?void 0:t.id).then(e=>{this.membershipState=new Ft(e.data),this.getMembersPage(!0)}):(this.group={},this.group.lock_api_role=!1,this.group.lock_application_role=!1,this.group.disable_membership_notifications=!1),s.groupApis=[],s.groupApplications=[],s.currentTab="users",this.group.roles&&(this.selectedApiRole=this.group.roles.API,this.selectedApplicationRole=this.group.roles.APPLICATION),this.apiByDefault=this.group.event_rules&&-1!==this.group.event_rules.findIndex(e=>"API_CREATE"===e.event),this.applicationByDefault=this.group.event_rules&&-1!==this.group.event_rules.findIndex(e=>"APPLICATION_CREATE"===e.event),this.loadGroupApis()},this.updateRole=n=>{this.membershipState.isPrimaryOwnerDemotion(n)?this.demotePrimaryOwner(this.membershipState.stateOf(n)):this.membershipState.isPrimaryOwnerPromotion(n)?this.promoteNewPrimaryOwner(this.membershipState.stateOf(n)):e.addOrUpdateMember(this.group.id,[n]).then(()=>{t.show("Member successfully updated"),a.reload()})},this.associateToApis=()=>{e.associate(this.group.id,"api").then(()=>{a.reload(),t.show("Group '"+this.group.name+"' has been associated to all APIs")})},this.associateToApplications=()=>{e.associate(this.group.id,"application").then(()=>{a.reload(),t.show("Group '"+this.group.name+"' has been associated to all applications")})},this.update=()=>{if(e.updateEventRules(this.group,this.apiByDefault,this.applicationByDefault),this.updateMode){const n={};this.selectedApiRole?n.API=this.selectedApiRole:delete n.API,this.selectedApplicationRole?n.APPLICATION=this.selectedApplicationRole:delete n.APPLICATION,this.group.roles=n,e.update(this.group).then(e=>{this.group=e.data,this.$onInit(),s.formGroup.$setPristine(),t.show("Group '"+this.group.name+"' has been updated")})}else e.create(this.group).then(e=>{a.go("management.settings.groups.group",{groupId:e.data.id},{reload:!0}),t.show("Group '"+this.group.name+"' has been created")})},this.onPaginate=e=>{this.getMembersPage(!0,{page:e,size:this.defaultPageSize})},this.removeUser=(e,t)=>{e.stopPropagation();this.membershipState.stateOf(t).wasPrimaryOwner()?this.showTransferOwnershipModal(t,Fl.DELETE_PRIMARY_OWNER).then(({newPrimaryOwnerRef:e,primaryOwner:t})=>{this.deleteMember(t).then(()=>{const t=this.membershipState.findByRef(e);t.roles.API="PRIMARY_OWNER",this.updateRole(t)})}):i.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{msg:"",title:'Are you sure you want to remove the user "'+t.displayName+'"?',confirmButton:"Remove"}}).then(e=>{e&&this.deleteMember(t)})},this.showAddMemberModal=()=>{i.show({controller:"DialogAddGroupMemberController",controllerAs:"$ctrl",template:n(862),clickOutsideToClose:!0,locals:{defaultApiRole:this.selectedApiRole,defaultApplicationRole:this.selectedApplicationRole,group:this.group,apiRoles:this.apiRoles,applicationRoles:this.applicationRoles,canChangeDefaultApiRole:this.canChangeDefaultApiRole,canChangeDefaultApplicationRole:this.canChangeDefaultApplicationRole,isApiRoleDisabled:this.isApiRoleDisabled}}).then((n=[])=>{n.length>0&&(this.membershipState.isPrimaryOwnerPromotion(n[0])?this.promoteNewPrimaryOwner(this.membershipState.stateOf(n[0])):e.addOrUpdateMember(this.group.id,n).then(()=>{t.show("Member(s) successfully added"),n.filter(e=>this.membershipState.isPrimaryOwnerDemotion(e)).forEach(e=>this.demotePrimaryOwner(this.membershipState.stateOf(e)))}).finally(()=>this.getMembersPage()))},()=>{})},this.showTransferOwnershipModal=(e,t)=>{const a=this.membershipState.findAll();return i.show({controller:"DialogTransferOwnershipController",controllerAs:"$ctrl",template:n(863),clickOutsideToClose:!0,locals:{transferType:t,members:a,primaryOwner:e,group:this.group}})},this.demotePrimaryOwner=n=>{this.showTransferOwnershipModal(n.getLastState(),Fl.DEMOTE_PRIMARY_OWNER).then(({newPrimaryOwnerRef:i})=>{const a=this.membershipState.findByRef(i),o=n.getCurrentState();a.roles.API="PRIMARY_OWNER",e.addOrUpdateMember(this.group.id,[o,a]).then(()=>{t.show("Member successfully updated")}).finally(()=>this.getMembersPage())},()=>this.getMembersPage())},this.promoteNewPrimaryOwner=n=>{this.showTransferOwnershipModal(this.membershipState.getPrimaryOwner(),Fl.PROMOTE_NEW_PRIMARY_OWNER).then(()=>{const i=this.membershipState.getPrimaryOwner(),a=n.getCurrentState();i.roles[jt.API]=Dt.OWNER,a.roles[jt.API]=Dt.PRIMARY_OWNER,e.addOrUpdateMember(this.group.id,[i,a]).then(()=>{t.show("Member successfully updated")}).finally(()=>this.getMembersPage())},()=>this.getMembersPage())},this.deleteMember=n=>e.deleteMember(this.group.id,n.id).then(()=>(t.show("Member "+n.displayName+" has been successfully removed"),1===this.members.length&&this.membersPageQuery.page>0&&--this.membersPageQuery.page,this.getMembersPage().then(()=>{this.group.apiPrimaryOwner===n.id&&delete this.group.apiPrimaryOwner}))),this.getMembersPage=(t=!1,n={})=>(this.membersLoaded=!t,e.getMembers(this.group.id,Object.assign(this.membersPageQuery,n)).then(e=>{this.membersPage=e.data,this.membersPageQuery.page=this.membersPage.page.current,this.members=this.membersPage.data,this.membershipState.sync(this.members)}).finally(()=>{this.membersLoaded=!0})),this.loadGroupApis=()=>{e.getMemberships(this.group.id,"api").then(e=>{s.groupApis=o.sortBy(e.data,"name")})},this.loadGroupApplications=()=>{e.getMemberships(this.group.id,"application").then(e=>{s.groupApplications=o.sortBy(e.data,"name")})},this.reset=()=>{a.reload()},this.canChangeDefaultApiRole=()=>this.isSuperAdmin()||!this.group.lock_api_role,this.canChangeDefaultApplicationRole=()=>this.isSuperAdmin()||!this.group.lock_application_role,this.canAddMembers=()=>{if(this.isSuperAdmin())return!0;if(this.group.manageable){const e=(this.members?this.members.length:0)+(this.invitations?this.invitations.length:0);return!this.group.max_invitation||e<this.group.max_invitation}return!1},this.isSuperAdmin=()=>r.isUserHasPermissions(["environment-group-u"]),this.canSave=()=>!this.updateMode||this.group.manageable,this.updateInvitation=n=>{e.updateInvitation(this.group.id,n).then(()=>{t.show("Invitation successfully updated"),a.reload()})},this.showInviteMemberModal=()=>{i.show({controller:["$mdDialog","group","apiRoles","applicationRoles","defaultApiRole","defaultApplicationRole","canChangeDefaultApiRole","canChangeDefaultApplicationRole","isApiRoleDisabled",function(e,t,n,i,a,o,s,r,l){this.group=t,this.group.api_role=t.api_role||a,this.group.application_role=t.application_role||o,this.apiRoles=n,this.applicationRoles=i,this.canChangeDefaultApiRole=s,this.canChangeDefaultApplicationRole=r,this.isApiRoleDisabled=l,this.hide=function(){e.hide()},this.save=function(){e.hide(this.email)}}],controllerAs:"$ctrl",template:n(864),clickOutsideToClose:!0,locals:{defaultApiRole:this.selectedApiRole,defaultApplicationRole:this.selectedApplicationRole,group:this.group,apiRoles:this.apiRoles,applicationRoles:this.applicationRoles,canChangeDefaultApiRole:this.canChangeDefaultApiRole,canChangeDefaultApplicationRole:this.canChangeDefaultApplicationRole,isApiRoleDisabled:this.isApiRoleDisabled}}).then(n=>{n&&e.inviteMember(this.group,n).then(e=>{e.data.id?t.show("Invitation successfully sent"):t.show("Member successfully added"),a.reload()})})},this.removeInvitation=(o,s)=>{o.stopPropagation(),i.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{msg:"",title:'Are you sure you want to remove the invitation for "'+s.email+'"?',confirmButton:"Remove"}}).then(n=>{n&&e.deleteInvitation(this.group.id,s.id).then(()=>{t.show("Invitation for "+s.email+" has been successfully removed"),a.reload()})})},this.hasGroupAdmin=()=>{let e=!1;return o.forEach(this.members,t=>{t.roles.GROUP&&"ADMIN"===t.roles.GROUP&&(e=!0)}),e},this.isApiRoleDisabled=e=>e.system&&"PRIMARY_OWNER"!==e.name}]};class Wl{constructor(e,t){this.$http=e,this.Constants=t}static _mapToEntity(e){return{name:e.name,roles:e.roles,event_rules:e.event_rules,max_invitation:e.max_invitation,lock_api_role:e.lock_api_role,lock_application_role:e.lock_application_role,system_invitation:e.system_invitation,email_invitation:e.email_invitation,disable_membership_notifications:e.disable_membership_notifications}}get(e){return this.$http.get(`${this.Constants.env.baseURL}/configuration/groups/${e}`)}list(){return this.$http.get(this.Constants.env.baseURL+"/configuration/groups")}listByOrganization(){return this.$http.get(this.Constants.org.baseURL+"/groups")}getMembers(e,t,n){let i=`${this.Constants.env.baseURL}/configuration/groups/${e}/members`;return null!=t&&(i+="/_paged"),(n=n||{}).params=Object.assign({},t),this.$http.get(i,n)}create(e){if(e){const t=Wl._mapToEntity(e);return this.$http.post(this.Constants.env.baseURL+"/configuration/groups",t)}}update(e){if(e.id&&e){const t=Wl._mapToEntity(e);return this.$http.put([this.Constants.env.baseURL+"/configuration/groups",e.id].join("/"),t)}}remove(e){if(e)return this.$http.delete([this.Constants.env.baseURL+"/configuration/groups",e].join("/"))}updateEventRules(e,t,n){const i=[];t&&i.push({event:"API_CREATE"}),n&&i.push({event:"APPLICATION_CREATE"}),e.event_rules=i}addOrUpdateMember(e,t){const n=this.mapMembers(t);if(n.length>0)return this.$http.post([this.Constants.env.baseURL+"/configuration/groups",e,"members"].join("/"),n)}deleteMember(e,t){return this.$http.delete([this.Constants.env.baseURL+"/configuration/groups",e,"members",t].join("/"))}getMemberships(e,t){return this.$http.get(`${this.Constants.env.baseURL}/configuration/groups/${e}/memberships?type=${t}`)}associate(e,t){return this.$http.post(`${this.Constants.env.baseURL}/configuration/groups/${e}/memberships?type=${t}`)}getInvitationsURL(e){return this.Constants.env.baseURL+"/configuration/groups/"+e+"/invitations/"}getInvitations(e){return this.$http.get(this.getInvitationsURL(e))}inviteMember(e,t){return this.$http.post(this.getInvitationsURL(e.id),{reference_type:"GROUP",reference_id:e.id,email:t,api_role:e.api_role,application_role:e.application_role})}deleteInvitation(e,t){return this.$http.delete(this.getInvitationsURL(e)+t)}updateInvitation(e,t){return delete t.created_at,delete t.updated_at,this.$http.put(this.getInvitationsURL(e)+t.id,t)}mapRoles(e={}){return Object.entries(e).filter(([e])=>!!e).map(([e,t])=>({scope:e,name:t}))}mapMembers(e=[]){return e.map(({id:e,roles:t,reference:n})=>({id:e,reference:n,roles:this.mapRoles(t)})).filter(({roles:e})=>!!e.length)}}Wl.$inject=["$http","Constants"];var Vl=Wl;class Yl{constructor(e,t){this.$http=e,this.Constants=t}list(){return this.$http.get(this.Constants.env.baseURL+"/configuration/dictionaries")}get(e){return this.$http.get([this.Constants.env.baseURL+"/configuration/dictionaries",e].join("/"))}create(e){return this.$http.post(this.Constants.env.baseURL+"/configuration/dictionaries",e)}update(e){return this.$http.put([this.Constants.env.baseURL+"/configuration/dictionaries",e.id].join("/"),{name:e.name,description:e.description,type:e.type,properties:e.properties,provider:e.provider,trigger:e.trigger})}delete(e){return this.$http.delete([this.Constants.env.baseURL+"/configuration/dictionaries",e.id].join("/"))}deploy(e){return this.$http.post([this.Constants.env.baseURL+"/configuration/dictionaries",e.id,"_deploy"].join("/"),{})}undeploy(e){return this.$http.post([this.Constants.env.baseURL+"/configuration/dictionaries",e.id,"_undeploy"].join("/"),{})}start(e){return this.$http.post([this.Constants.env.baseURL+"/configuration/dictionaries",e.id].join("/")+"?action=START",{})}stop(e){return this.$http.post([this.Constants.env.baseURL+"/configuration/dictionaries",e.id].join("/")+"?action=STOP",{})}}Yl.$inject=["$http","Constants"];var zl=Yl;var Kl={bindings:{dictionaries:"<"},controller:"DictionariesController",template:n(865)};class Ql{constructor(e,t){this.$state=e,this.$rootScope=t,this.$rootScope=t}}Ql.$inject=["$state","$rootScope"];var Jl=Ql;var Xl={bindings:{dictionary:"<"},controller:"DictionaryController",template:n(866)};class Zl{constructor(e,t,n,i,a,o){this.$scope=e,this.$state=t,this.$mdEditDialog=n,this.$mdDialog=i,this.NotificationService=a,this.DictionaryService=o,this.selectedProperties={},this.getPropertiesPage=e=>this.dictProperties.sort((t,n)=>e?n.key.localeCompare(t.key):t.key.localeCompare(n.key)).slice((this.query.page-1)*this.query.limit,this.query.page*this.query.limit),this.computeProperties=()=>Object.entries(this.dictionary&&this.dictionary.properties||{}).map(e=>{const t={};return t.key=e[0],t.value=e[1],t}),this.types=[{id:"MANUAL",name:"Manual"},{id:"DYNAMIC",name:"Dynamic"}],this.providers=[{id:"HTTP",name:"Custom (HTTP)"}],this.timeUnits=[{id:"SECONDS",name:"Seconds"},{id:"MINUTES",name:"Minutes"},{id:"HOURS",name:"Hours"}],this.joltSpecificationOptions={placeholder:"Edit your JOLT specification here.",lineWrapping:!0,lineNumbers:!0,allowDropFileTypes:!0,autoCloseTags:!0,mode:"javascript",controller:this},this.requestBodyOptions={lineWrapping:!0,lineNumbers:!0,allowDropFileTypes:!0,autoCloseTags:!0,controller:this}}$onInit(){var e,t,n;(null===(t=null===(e=this.dictionary)||void 0===e?void 0:e.provider)||void 0===t?void 0:t.configuration)&&(this.dictionary.provider.configuration.method=null!==(n=this.dictionary.provider.configuration.method)&&void 0!==n?n:"GET"),this.updateMode=this.dictionary&&this.dictionary.id,this.initialDictionary=o.cloneDeep(this.dictionary),this.dictProperties=this.computeProperties(),this.query={limit:10,page:1,total:this.initialDictionary&&this.initialDictionary.properties&&Object.keys(this.initialDictionary.properties).length||0}}reset(){this.dictionary=o.cloneDeep(this.initialDictionary),this.dictProperties=this.computeProperties(),this.formDictionary.$setPristine()}update(){this.updateMode?this.DictionaryService.update(this.dictionary).then(e=>{this.NotificationService.show("Dictionary "+this.dictionary.name+" has been updated"),this.dictionary=e.data,this.dictProperties=this.computeProperties()}):this.DictionaryService.create(this.dictionary).then(e=>{this.NotificationService.show("Dictionary "+this.dictionary.name+" has been created"),this.$state.go("management.settings.dictionaries.dictionary",{dictionaryId:e.data.id},{reload:!0})})}delete(){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete this dictionary?",confirmButton:"Yes, delete it"}}).then(e=>{e&&this.DictionaryService.delete(this.dictionary).then(()=>{this.NotificationService.show("Dictionary "+this.dictionary.name+" has been deleted"),this.$state.go("management.settings.dictionaries.list",{},{reload:!0})})})}deploy(){this.DictionaryService.deploy(this.dictionary).then(e=>{this.NotificationService.show("Dictionary "+this.dictionary.name+" has been deployed"),this.dictionary=e.data,this.dictProperties=this.computeProperties()})}start(){this.DictionaryService.start(this.dictionary).then(e=>{this.NotificationService.show("Dictionary "+this.dictionary.name+" has been started"),this.dictionary=e.data,this.dictProperties=this.computeProperties()})}stop(){this.DictionaryService.stop(this.dictionary).then(e=>{this.NotificationService.show("Dictionary "+this.dictionary.name+" has been stopped"),this.dictionary=e.data,this.dictProperties=this.computeProperties()})}hasProperties(){return this.dictionary.properties&&Object.keys(this.dictionary.properties).length>0}addProperty(){this.$mdDialog.show({controller:"DialogAddPropertyController",controllerAs:"dialogDictionaryAddPropertyCtrl",template:n(867),clickOutsideToClose:!0}).then(e=>{void 0===this.dictionary.properties&&(this.dictionary.properties={}),e&&(this.dictionary.properties[e.key]=e.value,++this.query.total),this.dictProperties=this.computeProperties()})}editProperty(e,t,n){e.stopPropagation(),this.$mdEditDialog.small({modelValue:n,placeholder:"Set property value",save:e=>{this.dictionary.properties[t]=e.$modelValue},targetEvent:e,validators:{"md-maxlength":160}})}deleteProperty(e){delete this.dictionary.properties[e],--this.query.total,this.dictProperties=this.computeProperties()}deleteSelectedProperties(){o.forEach(this.selectedProperties,(e,t)=>{e&&(this.deleteProperty(t),delete this.selectedProperties[t])})}saveProperties(){this.DictionaryService.update(this.dictionary).then(e=>{this.NotificationService.show("Properties has been updated"),this.dictionary=e.data,this.dictProperties=this.computeProperties()})}toggleSelectAll(e){e?o.forEach(this.dictionary.properties,(e,t)=>this.selectedProperties[t]=!0):this.selectedProperties={}}checkSelectAll(){this.selectAll=o.filter(this.selectedProperties,e=>e).length===Object.keys(this.dictionary.properties).length}hasSelectedProperties(){return o.filter(this.selectedProperties,e=>e).length>0}addHTTPHeader(){void 0===this.dictionary.provider.configuration.headers&&(this.dictionary.provider.configuration.headers=[]),this.dictionary.provider.configuration.headers.push({name:"",value:""})}removeHTTPHeader(e){void 0!==this.dictionary.provider.configuration.headers&&(this.dictionary.provider.configuration.headers.splice(e,1),this.formDictionary.$setDirty())}getHttpMethods(){return["GET","DELETE","PATCH","POST","PUT","OPTIONS","TRACE","HEAD"]}}Zl.$inject=["$scope","$state","$mdEditDialog","$mdDialog","NotificationService","DictionaryService"];var ec=Zl;function tc(e,t){this.hide=function(){t.hide()},this.save=function(){const n={key:e.property.name,value:e.property.value};t.hide(n)}}tc.$inject=["$scope","$mdDialog"];var nc=tc;var ic={bindings:{identityProviders:"<",identities:"<",target:"<",targetId:"<",settings:"<"},template:n(868),controller:["$mdDialog","IdentityProviderService","EnvironmentService","OrganizationService","ConsoleSettingsService","PortalSettingsService","NotificationService","$state","Constants","$rootScope",function(e,t,i,a,s,r,l,c,d,p){this.$rootScope=p,this.activatedIdps={},this.providedConfigurationMessage="Configuration provided by the system",this.$onInit=()=>{this.identities.forEach(e=>this.activatedIdps[e.identityProvider]=!0),this.hasEnabledIdp=this.identityProviders.filter(e=>e.enabled).length>0},this.availableProviders=[{name:"Gravitee.io AM",icon:"perm_identity",type:"GRAVITEEIO_AM"},{name:"Google",icon:"google-plus",type:"GOOGLE"},{name:"GitHub",icon:"github-circle",type:"GITHUB"},{name:"OpenID Connect",icon:"perm_identity",type:"OIDC"}],this.create=e=>{c.go("organization.settings.ajs-identityproviders.new",{type:e})},this.delete=i=>{e.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete this identity provider?",msg:"",confirmButton:"Delete"}}).then(e=>{e&&t.delete(i).then(()=>{l.show("Identity provider '"+i.name+"' has been deleted"),c.go("organization.settings.ajs-identityproviders.list",{},{reload:!0})})})},this.hasActivatedIdp=()=>{if("ENVIRONMENT"===this.target){const e=this.identityProviders.filter(e=>!0===e.enabled).map(e=>e.id);for(const t of e)if(this.activatedIdps[t])return!0;return!1}return Object.keys(this.activatedIdps).length>0},this.saveForceLogin=()=>{r.save(this.settings).then(e=>{l.show("Authentication is now "+(this.settings.authentication.forceLogin.enabled?"mandatory":"optional")),this.settings=e.data,c.reload()})},this.saveShowLoginForm=()=>{"ENVIRONMENT"===this.target?r.save(this.settings).then(e=>{l.show("Login form is now "+(this.settings.authentication.localLogin.enabled?"enabled":"disabled")),this.settings=e.data,c.reload()}):s.save(this.settings).then(e=>{l.show("Login form is now "+(this.settings.authentication.localLogin.enabled?"enabled":"disabled")),this.consoleSettings=e.data,c.reload()})},this.toggleActivatedIdp=e=>{const t=o.filter(Object.keys(this.activatedIdps),e=>!0===this.activatedIdps[e]).map(e=>({identityProvider:e}));"ENVIRONMENT"===this.target?i.updateEnvironmentIdentities(this.targetId,t).then(this._updateHandler(e)):a.updateOrganizationIdentities(t).then(this._updateHandler(e))},this._updateHandler=e=>()=>{l.show(e+" is now "+(this.activatedIdps[e]?"enabled":"disabled")),this.activatedIdps[e]||(delete this.activatedIdps[e],this.updateLocalLoginState())},this.updateLocalLoginState=()=>{this.hasActivatedIdp()||this.settings.authentication.localLogin.enabled||(this.settings.authentication.localLogin.enabled=!0,this.saveShowLoginForm())},this.isReadonlySetting=e=>"ENVIRONMENT"===this.target?r.isReadonly(this.settings,e):s.isReadonly(this.settings,e)}]};class ac{constructor(e,t){this.$http=e,this.Constants=t}list(){return this.$http.get(this.Constants.org.baseURL+"/configuration/identities/").then(e=>e.data)}get(e){return this.$http.get(this.Constants.org.baseURL+"/configuration/identities/"+e).then(e=>{const t=e.data;return t.configuration=t.configuration||{},t.configuration.scopes=t.configuration.scopes||[],t.groupMappings=t.groupMappings||[],t.roleMappings=t.roleMappings||[],t.userProfileMapping=t.userProfileMapping||{},t})}create(e){return this.$http.post(this.Constants.org.baseURL+"/configuration/identities/",e)}update(e){return this.$http.put(this.Constants.org.baseURL+"/configuration/identities/"+e.id,{name:e.name,description:e.description,configuration:e.configuration,enabled:e.enabled,groupMappings:e.groupMappings,roleMappings:e.roleMappings,userProfileMapping:e.userProfileMapping,emailRequired:e.emailRequired,syncMappings:e.syncMappings}).then(e=>{const t=e.data;return t.configuration=t.configuration||{},t.configuration.scopes=t.configuration.scopes||[],t.groupMappings=t.groupMappings||[],t.roleMappings=t.roleMappings||[],t.userProfileMapping=t.userProfileMapping||{},t})}delete(e){return this.$http.delete(this.Constants.org.baseURL+"/configuration/identities/"+e.id)}}ac.$inject=["$http","Constants"];var oc=ac;var sc=class{constructor(){}hashCode(e){let t=0;if(0===e.length)return t;for(let n=0;n<e.length;n++){t=(t<<5)-t+e.charCodeAt(n),t&=t}return t}};class rc{constructor(e,t,n,i,a,o,s,r){this.$rootScope=e,this.Constants=t,this.$window=n,this.$state=i,this.$auth=a,this.UserService=o,this.RouterService=s,this.SatellizerConfig=r}authenticate(e,t){let n=this.SatellizerConfig.providers[e.id];if(n)e.scope=e.scopes,o.merge(n,e);else{const t={oauthType:"2.0",scope:e.scopes};"GOOGLE"===e.type||"GITHUB"===e.type?(t.requiredUrlParams=e.requiredUrlParams,t.optionalUrlParams=e.optionalUrlParams):t.requiredUrlParams=["scope","state"],n=o.merge(e,t)}this.SatellizerConfig.providers[e.id]=o.merge(n,{state:t||this.nonce(32),url:this.Constants.org.baseURL+"/auth/oauth2/"+e.id,redirectUri:window.location.origin+("/"===window.location.pathname?"":window.location.pathname)}),this.$auth.authenticate(e.id).then(t=>{this.UserService.current().then(n=>{e.userLogoutEndpoint&&this.$window.localStorage.setItem("user-logout-url",e.userLogoutEndpoint),this.$rootScope.$broadcast("graviteeUserRefresh",{user:n});const i=t.data.state;if(void 0!==i){const e=JSON.parse(this.$window.localStorage[i]);if(e.redirectUri)return void(this.$window.location.href=e.redirectUri)}const a=this.RouterService.getLastRoute();a.from&&""!==a.from.name&&"logout"!==a.from.name&&"confirm"!==a.from.name?this.$state.go(a.from.name,a.fromParams):this.$state.go("management")})})}nonce(e){let t="";const n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let i=0;i<e;i++)t+=n.charAt(Math.floor(Math.random()*n.length));return t}}rc.$inject=["$rootScope","Constants","$window","$state","$auth","UserService","RouterService","SatellizerConfig"];var lc=rc;function cc(e,t,n,i){e.debugEnabled(!1),t.deferIntercept(),n.suppressUndefinedPermissionWarning(!0),i.errorOnUnhandledRejections(!1)}cc.$inject=["$logProvider","$urlServiceProvider","$permissionProvider","$qProvider"];var dc=cc;function pc(e,t){e.state("root",{resolve:{graviteeUser:["UserService",e=>e.current()]}}).state("withoutSidenav",{parent:"root",abstract:!0,template:"<div class='gio-root'><gio-top-nav></gio-top-nav><div class='gio-main-page'><div ui-view class='gio-main-page__content'></div><gv-contextual-doc></gv-contextual-doc></div></div>"}).state("withSidenav",{parent:"root",abstract:!0,url:"/environments/:environmentId",template:"<div class='gio-root'><gio-top-nav></gio-top-nav><div class='gio-main-page'><gio-side-nav></gio-side-nav><div ui-view class='gio-main-page__content'></div><gv-contextual-doc></gv-contextual-doc></div></div>"}).state("user",{url:"/user",component:"user",parent:"withSidenav",resolve:{user:["UserService",e=>e.refreshCurrent()]}}).state("login",{url:"/login?redirectUri",template:n(869),controller:"LoginController",controllerAs:"$ctrl",redirectTo:e=>{const t=e.injector().get("UserService");if(t.currentUser&&t.currentUser.id)return"management"},resolve:{identityProviders:["OrganizationService",e=>e.listSocialIdentityProviders().then(e=>e.data)]},params:{redirectUri:{type:"string"}}}).state("registration",{url:"/registration",template:n(870),controller:"RegistrationController",controllerAs:"$ctrl",redirectTo:e=>{const t=e.injector().get("UserService");if(t.currentUser&&t.currentUser.id)return"management"}}).state("confirm",{url:"/registration/confirm/:token",template:n(871),controller:"ConfirmController",controllerAs:"confirmCtrl"}).state("resetPassword",{url:"/resetPassword/:token",template:n(872),controller:"ResetPasswordController",controllerAs:"resetPasswordCtrl"}).state("logout",{component:"logout"}).state("newsletter",{url:"/newsletter",template:n(873),controller:"NewsletterSubscriptionController",controllerAs:"$ctrl",resolve:{taglines:["UserService",e=>e.getNewsletterTaglines().then(e=>e.data)]}}),t.rules.otherwise("/login")}pc.$inject=["$stateProvider","$urlServiceProvider"];var mc=pc;class uc{constructor(e,t,n){this.TicketService=e,this.$scope=t,this.$state=n}$onInit(){this.onPaginate=this.onPaginate.bind(this),this.query=new vl,this.query.page=this.$state.params.page||1,this.query.size=this.$state.params.size||15,this.query.order=this.$state.params.order||"-created_at",this.$scope.$watch("ticketsListCtrl.query.order",e=>{e&&this.refresh()})}onPaginate(e,t){this.query.page=e,this.query.size=t,this.refresh()}refresh(){this.$state.transitionTo(this.$state.current,{page:this.query.page,size:this.query.size,order:this.query.order},{notify:!1}),this.TicketService.search(this.query).then(e=>{this.tickets=e.data})}}uc.$inject=["TicketService","$scope","$state"];var hc=uc;function gc(e){e.state("management",{redirectTo:"management.dashboard",template:'<div ui-view layout="column" flex></div>',parent:"withSidenav",controller:["$rootScope","Constants",function(e,t){e.consoleTitle=t.org.settings.management.title}],controllerAs:"$ctrl"}).state("management.dashboard",{redirectTo:"management.dashboard.home",template:n(874),controller:"DashboardController",controllerAs:"$ctrl"}).state("management.dashboard.home",{url:"/",template:n(875),controller:"HomeDashboardController",controllerAs:"$ctrl",resolve:{dashboards:["DashboardService",e=>e.list("HOME").then(e=>e.data)]},data:{docs:{page:"management-dashboard-home"}}}).state("management.dashboard.apis-status",{url:"/apis-status",template:n(876),controller:"ApisStatusDashboardController",controllerAs:"$ctrl",resolve:{apis:["ApiService","Constants","$state",(e,t,n)=>t.env.settings.dashboards.apiStatus.enabled?e.list().then(e=>e.data):n.go("management.dashboard.home")]},data:{docs:{page:"management-dashboard-apis-status"}}}).state("management.dashboard.analytics",{url:"/platform?from&to&q&dashboard",template:n(877),controller:"AnalyticsDashboardController",controllerAs:"$ctrl",resolve:{dashboards:["DashboardService",e=>e.list("PLATFORM").then(e=>e.data)]},data:{perms:{only:["environment-platform-r"]},docs:{page:"management-dashboard-analytics"}},params:{from:{type:"int",dynamic:!0},to:{type:"int",dynamic:!0},q:{type:"string",dynamic:!0},dashboard:{type:"string",dynamic:!0}}}).state("management.dashboard.alerts",{url:"/alerts",template:n(878),controller:"PlatformAlertsDashboardController",controllerAs:"$ctrl",resolve:{configuredAlerts:["AlertService",e=>e.listAlerts(Os.ENVIRONMENT,!1).then(e=>e.data)],alertingStatus:["AlertService",e=>e.getStatus(Os.ENVIRONMENT).then(e=>e.data)]},data:{docs:{page:"management-dashboard-alerts"}}}).state("management.instances",{abstract:!0,url:"/instances",template:"<div ui-view></div>"}).state("management.instances.list",{url:"/",component:"instances",resolve:{instances:["InstancesService",e=>e.search().then(e=>e.data)]},data:{perms:{only:["environment-instance-r"]},docs:{page:"management-gateways"}}}).state("management.logs",{url:"/logs?from&to&q&page&size",component:"platformLogs",data:{menu:null,devMode:!0,perms:{only:["environment-platform-r"]},docs:{page:"management-api-logs"}},params:{from:{type:"int",dynamic:!0},to:{type:"int",dynamic:!0},q:{type:"string",dynamic:!0},page:{type:"int",dynamic:!0},size:{type:"int",dynamic:!0}},resolve:{apis:["$stateParams","ApiService",(e,t)=>t.list()],applications:["$stateParams","ApplicationService",(e,t)=>t.list(["owner","picture"])]}}).state("management.log",{url:"/logs/:logId?timestamp&from&to&q&page&size",component:"platformLog",resolve:{log:["$stateParams","AnalyticsService",(e,t)=>t.getLog(e.logId,e.timestamp).then(e=>e.data)]},data:{devMode:!0,menu:null,perms:{only:["environment-platform-r"]},docs:{page:"management-api-log"}}}).state("management.audit",{url:"/audit",component:"ngEnvAudit",data:{useAngularMaterial:!0,perms:{only:["environment-audit-r"]},docs:{page:"management-audit"}}}).state("management.messages",{url:"/messages",component:"messages",data:{perms:{only:["environment-message-c"]},docs:{page:"management-messages"}},resolve:{resolvedScope:()=>"ENVIRONMENT",resolvedRoles:["RoleService",e=>e.list("ENVIRONMENT")]}}).state("management.tasks",{url:"/tasks",component:"tasks",data:{docs:{page:"management-tasks"}}}).state("management.support",{template:"<div ui-view></div>"}).state("management.support.create",{url:"/support",template:n(879),controller:"SupportTicketController",controllerAs:"supportTicketCtrl"}).state("management.support.tickets",{url:"/support/tickets?page&size&order",template:n(880),controller:hc,controllerAs:"ticketsListCtrl",params:{page:{type:"int",dynamic:!0},size:{type:"int",dynamic:!0},order:{type:"string",dynamic:!0}}}).state("management.support.ticket",{url:"/support/tickets/:ticketId?page&size&order",component:"ticketDetail",resolve:{ticket:["$stateParams","TicketService",(e,t)=>t.getTicket(e.ticketId).then(e=>e.data)]}})}gc.$inject=["$stateProvider"];var fc,bc=gc,vc=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let yc=fc=class{constructor(){this.xsrfTokenHeaderName="X-Xsrf-Token"}intercept(e,t){const n=fc.xsrfToken?e.clone({headers:e.headers.set(this.xsrfTokenHeaderName,fc.xsrfToken)}):e;return t.handle(n).pipe(Object(ot.a)(e=>{var t;e instanceof Tt.f&&(null===(t=e.headers)||void 0===t?void 0:t.has(this.xsrfTokenHeaderName))&&(fc.xsrfToken=e.headers.get(this.xsrfTokenHeaderName))},e=>{var t;(null===(t=e.headers)||void 0===t?void 0:t.has(this.xsrfTokenHeaderName))&&(fc.xsrfToken=e.headers.get(this.xsrfTokenHeaderName))}))}};yc=fc=vc([Object(nt.Injectable)()],yc),wc.$inject=["$httpProvider","Constants"];class Sc{constructor(e=0){this.timeouts=[],this.delay=e}push(e){this.timeouts.push(setTimeout(()=>e(),this.delay))}cancel(){this.timeouts.forEach(e=>clearTimeout(e)),this.timeouts=[]}}function wc(e,t){let n;e.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",e.defaults.withCredentials=!0,e.defaults.xsrfCookieName="none",e.defaults.xsrfHeaderName="none";const i=(e,i,a,o)=>({responseError:function(s){const r=new Sc;if(s.config&&!s.config.tryItMode){const e=!s||401===s.status;let l="";const c=i.get("NotificationService"),d=i.get("UserService"),p=i.get("$timeout");if(e){if(s.config.headers.Authorization)n=!1,l="Wrong user or password";else if(s.config.forceSessionExpired=""!==a.path()&&"/"!==a.path()&&"/login"!==a.path()&&!a.path().startsWith("/registration")&&!a.path().startsWith("/resetPassword")&&!s.config.url.startsWith(t.env.baseURL.endsWith("/")?t.env.baseURL+"user":t.env.baseURL+"/user/"),s.config.forceSessionExpired||!n&&!s.config.silentCall){n=!0,c.showError(s,"Session expired, redirecting to home...");const e=a.path();p(()=>{d.removeCurrentUserData(),i.get("$rootScope").$broadcast("graviteeUserRefresh",{}),i.get("$rootScope").$broadcast("graviteeUserCancelScheduledServices"),i.get("$rootScope").$broadcast("graviteeLogout",{redirectUri:e})},2e3)}}else 500===s.status?l=s.data?s.data.message:"Unexpected error":503===s.status&&(s.data&&s.data.message&&(document.getElementsByTagName("body").item(0).innerText=s.data.message),l=s.data?s.data.message:"Server unavailable");!n&&s&&s.status>0&&!s.config.silentCall&&(r.push(()=>c.showError(s,l)),403===s.status&&r.push(()=>o.go("management")))}return r&&(s.interceptorFuture=r),e.reject(s)}});i.$inject=["$q","$injector","$location","$state"];const a=function(e,t){return{request:function(e){return e.timeout=e.timeout||1e4,e},responseError:function(n){const i=t.get("NotificationService");return n.config&&n.config.silentCall||(n.config&&!n.config.tryItMode?n&&n.status<=0&&"abort"!==n.xhrStatus&&i.showError("Server unreachable"):i.showError("Unable to call the remote service.")),e.reject(n)}}};a.$inject=["$q","$injector"];const o=function(e){return{request:function(e){return yc.xsrfToken&&(e.headers["X-Xsrf-Token"]=yc.xsrfToken),e},response:function(e){return e.headers("X-Xsrf-Token")&&(yc.xsrfToken=e.headers("X-Xsrf-Token")),e},responseError:function(t){return t.headers("X-Xsrf-Token")&&(yc.xsrfToken=t.headers("X-Xsrf-Token")),e.reject(t)}}};o.$inject=["$q"];const s=function(e,t){return{request:function(e){const n=t.get("ReCaptchaService");if(n&&n.isEnabled()){const t=n.getCurrentToken();t&&(e.headers[n.getHeaderName()]=t)}return e}}};s.$inject=["$q","$injector"];const r=function(){return{request:function(e){return e.url.startsWith(t.baseURL)&&(e.skipAuthorization=!0),e}}},l=function(e,t){return{request:function(e){const n=t.get("Constants");return e.url.includes("{:envId}")&&(e.url=e.url.replace("{:envId}",n.org.currentEnv.id)),e}}};l.$inject=["$q","$injector"],e.interceptors&&(e.interceptors.unshift(r),e.interceptors.push(o),e.interceptors.push(s),e.interceptors.push(i),e.interceptors.push(a),e.interceptors.push(l))}var Cc=wc;function Ic(e,t){e.resourceUrlWhitelist(["self",t.org.baseURL+"/**"])}Ic.$inject=["$sceDelegateProvider","Constants"];var $c=Ic;Oc.$inject=["$rootScope","$window","$http","$mdSidenav","$transitions","$state","$timeout","UserService","Constants","PermissionStrategies","ReCaptchaService","ApiService","EnvironmentService","PortalConfigService","ConsoleSettingsService","NotificationService","ngGioPendoService"];var Ac=function(e,t,n,i){return new(n||(n=Promise))((function(a,o){function s(e){try{l(i.next(e))}catch(e){o(e)}}function r(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,r)}l((i=i.apply(e,t||[])).next())}))};function Oc(e,t,n,i,o,s,r,l,c,d,p,m,u,h,g,f,b){o.onStart({to:e=>"login"!==e.name&&"registration"!==e.name&&"confirm"!==e.name&&"newsletter"!==e.name&&"resetPassword"!==e.name},n=>l.isAuthenticated()?(b.initialize({id:""+l.currentUser.sourceId,email:""+l.currentUser.email},{id:""+l.currentUser.sourceId,userSource:l.currentUser.source}),l.isAuthenticated()&&l.currentUser.firstLogin&&c.org.settings.newsletter.enabled&&!t.localStorage.getItem("newsletterProposed")?n.router.stateService.target("newsletter"):void(c.org.settings.newsletter.enabled||e.$broadcast("graviteeUserRefresh",{user:l.currentUser,refresh:!0}))):n.router.stateService.target("login")),o.onStart({to:e=>"management.apis.create"===e.name},e=>Ac(this,void 0,void 0,(function*(){var t,n,i;const{definitionVersion:a}=e.params();if("2.0.0"===a)return;const o=yield g.getConsole();return(null===(i=null===(n=null===(t=null==o?void 0:o.data)||void 0===t?void 0:t.management)||void 0===n?void 0:n.pathBasedApiCreation)||void 0===i?void 0:i.enabled)?void 0:e.router.stateService.target("management.apis.new")}))),o.onBefore({to:(e,t)=>e.name.startsWith("management")&&!u.isSameEnvironment(c.org.currentEnv,t.params().environmentId)},e=>Ac(this,void 0,void 0,(function*(){var t;const n=Object.assign({},e.params()),i=e.router.stateService,a=e.to();let o=!0;n.environmentId||(o=!1,n.environmentId=u.getFirstHridOrElseId(c.org.currentEnv));const s=u.getEnvironmentFromHridOrId(null!==(t=c.org.environments)&&void 0!==t?t:[],n.environmentId);if(s)return c.org.currentEnv=s,l.refreshEnvironmentPermissions().then(()=>i.target(a,n,{reload:o}));{const t=u.getFirstHridOrElseId(c.org.currentEnv);if(t)return n.environmentId=t,i.target(a,n,{reload:o});f.showError("You are not allowed to access APIM because you do not have any role on any environment"),e.abort()}}))),o.onBefore({},e=>{const n=Object.assign({},e.params()),i=e.router.stateService,a=e.to();return l.currentUser&&l.currentUser.id&&!c.org.currentEnv?u.list().then(e=>{c.org.environments=e.data;const n=t.localStorage.getItem("gv-last-environment-loaded");if(null!==n){c.org.environments.find(e=>e.id===n)?c.org.currentEnv=c.org.environments.find(e=>e.id===n):(c.org.currentEnv=c.org.environments[0],t.localStorage.removeItem("gv-last-environment-loaded"))}else c.org.currentEnv=c.org.environments[0];return e.data}).then(e=>{if(e&&e.length>=1)return h.get()}).then(e=>{e&&(c.env.settings=e.data)}):a.apiDefinition?m.get(n.apiId).then(e=>null!=e.data.gravitee&&a.apiDefinition.version!==e.data.gravitee?i.target(a.apiDefinition.redirect,n):{}):void 0},{priority:10}),o.onFinish({},e=>{p.hideBadge();const t=e.from(),n=e.to();return!c.org.settings.management.userCreation.enabled&&("registration"===t.name||"confirm"===t)?e.router.stateService.target("login"):n.data&&n.data.perms&&n.data.perms.only&&!l.isUserHasPermissions(n.data.perms.only)?e.router.stateService.target(l.isAuthenticated()?"management.home":"login"):void 0}),e.$on("graviteeLogout",(e,t)=>{s.go("login",{redirectUri:t.redirectUri})}),e.$watch(()=>n.pendingRequests.length>0,t=>{e.isLoading=t}),e.displayLoader=!0,r(()=>{e.displayLoader=!1}),e.PermissionStrategies=d,e.isWindowFocused=!0,t.onblur=()=>{e.isWindowFocused=!1},t.onfocus=()=>{e.isWindowFocused=!0},o.onSuccess({},(function(e){const t=e.to(),n=t.data&&t.data.useAngularMaterial,i=a.a.element(document.querySelector(".gravitee-no-sidenav-container, .gv-sub-content, .api-content"));return n?i.removeClass("bootstrap"):i.addClass("bootstrap"),!0}))}var Tc=Oc,Rc=n(265);function _c(e,t,n){this.notifiers=n,this.selectedNotifier=n[0],this.name="",this.hide=function(){t.hide()},this.save=function(){const e={name:this.name,notifierId:this.selectedNotifier.id};t.hide(e)}}_c.$inject=["$scope","$mdDialog","notifiers"];var xc=_c;class Lc{constructor(e,t,n,i){this.TopApiService=e,this.$mdDialog=t,this.NotificationService=n,this.$rootScope=i,this.$rootScope=i}refreshTopApis(){this.TopApiService.list().then(e=>{this.topApis=e.data})}showAddTopAPIModal(){this.$mdDialog.show({controller:"AddTopApiDialogController",controllerAs:"$ctrl",template:n(884),locals:{topApis:this.topApis}}).then(e=>{e&&(this.topApis=e)})}delete(e){this.$mdDialog.show({controller:"DeleteTopApiDialogController",template:n(885),locals:{topApi:e}}).then(e=>{e&&this.refreshTopApis()})}upward(e){e>0&&this.reorder(e,e-1)}downward(e){e<o.size(this.topApis)-1&&this.reorder(e,e+1)}reorder(e,t){this.topApis[e].order=t,this.topApis[t].order=e,this.topApis=o.sortBy(this.topApis,"order"),this.TopApiService.update(this.topApis).then(e=>{this.topApis=e.data,this.NotificationService.show("Top APIs saved with success")}).catch(()=>{this.refreshTopApis()})}}Lc.$inject=["TopApiService","$mdDialog","NotificationService","$rootScope"];var Pc=Lc;class Nc{constructor(e,t){this.$http=e,this.Constants=t}list(){return this.$http.get(this.Constants.env.baseURL+"/configuration/top-apis/")}create(e){if(e)return this.$http.post(this.Constants.env.baseURL+"/configuration/top-apis/",{api:e.id})}update(e){if(e&&e.length)return this.$http.put(this.Constants.env.baseURL+"/configuration/top-apis/",o.map(e,e=>({api:e.api})))}delete(e){if(e)return this.$http.delete(this.Constants.env.baseURL+"/configuration/top-apis/"+e.api)}}Nc.$inject=["$http","Constants"];var Ec=Nc;var Dc={bindings:{topApis:"<"},controller:"TopApisController",template:n(886)};function jc(e,t,n,i,a){t.list().then(e=>{this.apis=o.filter(e.data,e=>!o.includes(o.map(a,"api"),e.id))}),this.addApi=function(){n.create(this.selectedApi).then(t=>{i.show("Api '"+this.selectedApi.name+"' added with success to the list of top APIs"),e.hide(t.data)})},this.hide=function(){e.cancel()}}jc.$inject=["$mdDialog","ApiService","TopApiService","NotificationService","topApis"];var kc=jc;function Uc(e,t,n,i,a){e.topApi=n,e.cancel=function(){t.cancel()},e.ok=function(){i.delete(n).then(()=>{a.show("Api '"+n.name+"' deleted with success from the list of top APIs"),t.hide(n)})}}Uc.$inject=["$scope","$mdDialog","topApi","TopApiService","NotificationService"];var Mc=Uc;var Fc={bindings:{tags:"<",settings:"<"},template:n(887),controller:["NotificationService","PortalSettingsService","CorsService","ApiService","$state","Constants",function(e,t,n,i,a,s){this.methods=n.getHttpMethods(),this.headers=i.defaultHttpHeaders(),this.searchHeaders=null,this.providedConfigurationMessage="Configuration provided by the system",this.$onInit=()=>{this.settings.api.labelsDictionary=this.settings.api.labelsDictionary||[],this.settings.cors.allowOrigin=this.settings.cors.allowOrigin||[],this.settings.cors.allowHeaders=this.settings.cors.allowHeaders||[],this.settings.cors.allowMethods=this.settings.cors.allowMethods||[],this.settings.cors.exposedHeaders=this.settings.cors.exposedHeaders||[],this.settings.authentication.localLogin.enabled=this.settings.authentication.localLogin.enabled||!this.hasIdpDefined(),this.overrideHomepageTitle=null!==this.settings.portal.homepageTitle&&void 0!==this.settings.portal.homepageTitle,this.initialSettings=o.cloneDeep(this.settings)},this.save=()=>{t.save(this.settings).then(t=>{o.merge(s.env.settings,t.data),e.show("Configuration saved"),a.reload()})},this.reset=()=>{this.settings=o.cloneDeep(this.initialSettings),this.overrideHomepageTitle=null!==this.settings.portal.homepageTitle&&void 0!==this.settings.portal.homepageTitle,this.formSettings.$setPristine()},this.hasIdpDefined=()=>this.settings.authentication.google.clientId||this.settings.authentication.github.clientId||this.settings.authentication.oauth2.clientId,this.toggleDocType=()=>{this.settings.openAPIDocViewer.openAPIDocType.swagger.enabled||(this.settings.openAPIDocViewer.openAPIDocType.defaultType="Redoc"),this.settings.openAPIDocViewer.openAPIDocType.redoc.enabled||(this.settings.openAPIDocViewer.openAPIDocType.defaultType="Swagger")},this.toggleApiKeyPlan=()=>{this.settings.plan.security.apikey.enabled||(this.settings.plan.security.customApiKey.enabled=!1,this.settings.plan.security.sharedApiKey.enabled=!1)},this.isReadonlySetting=e=>t.isReadonly(this.settings,e),this.controlAllowOrigin=(e,t)=>{n.controlAllowOrigin(e,t,this.settings.cors.allowOrigin)},this.isRegexValid=()=>n.isRegexValid(this.settings.cors.allowOrigin),this.querySearchHeaders=e=>n.querySearchHeaders(e,this.headers),this.toggleOverrideHomepageTitle=()=>{this.overrideHomepageTitle?this.settings.portal.homepageTitle="":this.settings.portal.homepageTitle=null}}]};var qc=class{constructor(){this.last={}}setLastRoute(e,t){this.last.from=e,this.last.fromParams=t}getLastRoute(){return this.last}};class Hc{constructor(e,t){this.$http=e,this.Constants=t}sendFromPortal(e,t,n,i,a,o,s,r){return this.$http.post(this.Constants.env.baseURL+"/messages",this.getPayload(e,t,n,i,a,o,s,r))}sendFromApi(e,t,n,i,a,o,s,r,l){return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/messages`,this.getPayload(t,n,i,a,o,s,r,l))}getPayload(e,t,n,i,a,o,s,r){if(o){const e={};for(let t=0;t<r.length;t++)""!==r[t].key&&(e[r[t].key]=r[t].value);return{text:t,recipient:{url:o},channel:n,params:e,useSystemProxy:s}}return{title:e,text:t,recipient:{role_scope:i,role_value:a},channel:n}}}Hc.$inject=["$http","Constants"];var Gc=Hc;var Bc={bindings:{resolvedScope:"<",resolvedRoles:"<",resolvedApiId:"<"},template:n(888),controller:["$state","NotificationService","MessageService","ApiService",function(e,t,n,i){this.$onInit=()=>{const e=o.sortBy(this.resolvedRoles,["name"]);this.recipients=[],null!=this.resolvedApiId&&this.recipients.push({name:"API_SUBSCRIBERS",displayName:"API subscribers"}),e.forEach(e=>{"APPLICATION"===this.resolvedScope?e.displayName=`Members with the ${e.name} role on subscribing applications`:e.displayName=`Members with the ${e.name} role on ${this.resolvedScope} scope`,this.recipients.push(e)}),this.channels=[{id:"PORTAL",name:"Portal Notifications"},{id:"MAIL",name:"Email"},{id:"HTTP",name:"POST HTTP message"}],this.channel="PORTAL",this.defaultHttpHeaders=i.defaultHttpHeaders(),this.httpHeaders=[],this.recipientValues=[],this.newHttpHeader()},this.send=()=>{this.resolvedApiId?n.sendFromApi(this.resolvedApiId,this.title,this.text,this.channel,this.resolvedScope,this.recipientValues,this.url,this.useSystemProxy,this.httpHeaders).then(e=>{t.show(e.data+" messages has been sent."),this.resetForm()}):n.sendFromPortal(this.title,this.text,this.channel,this.resolvedScope,this.recipientValues,this.url,this.useSystemProxy,this.httpHeaders).then(e=>{t.show(e.data+" messages has been sent."),this.resetForm()})},this.resetForm=()=>{this.title="",this.url="",this.text="",this.recipientValues=[],this.httpHeaders=[],this.newHttpHeader(),this.formMsg.$setPristine(),this.formMsg.$setUntouched()},this.newHttpHeader=()=>{this.httpHeaders.push({key:"",value:""})},this.deleteHttpHeader=e=>{this.httpHeaders.splice(e,1)}}]};Vc.$inject=["$stateProvider"];var Wc=Vc;function Vc(e){e.state("management.apis.detail.messages",{url:"/messages",component:"messages",resolve:{resolvedScope:()=>"APPLICATION",resolvedApiId:["$stateParams",e=>e.apiId],resolvedRoles:["RoleService",e=>e.list("APPLICATION")]},data:{perms:{only:["api-message-c"]},docs:{page:"management-messages"}}})}var Yc={bindings:{apiPortalHeaders:"<",settings:"<"},template:n(889),controller:["ApiHeaderService","NotificationService","PortalSettingsService","$mdDialog","Constants","$rootScope",function(e,t,i,a,o,s){this.$rootScope=s,this.$mdDialog=a,this.providedConfigurationMessage="Configuration provided by the system",this.upward=n=>{n.order=n.order-1,e.update(n).then(()=>{t.show("Header '"+n.name+"' saved"),e.list().then(e=>this.apiPortalHeaders=e.data)})},this.downward=n=>{n.order=n.order+1,e.update(n).then(()=>{t.show("Header '"+n.name+"' saved"),e.list().then(e=>this.apiPortalHeaders=e.data)})},this.createHeader=()=>{this.$mdDialog.show({controller:"NewApiPortalHeaderDialogController",controllerAs:"$ctrl",template:n(437),locals:{}}).then(n=>{t.show("Header '"+n.name+"' saved"),e.list().then(e=>this.apiPortalHeaders=e.data)})},this.updateHeader=i=>{this.$mdDialog.show({controller:"UpdateApiPortalHeaderDialogController",controllerAs:"$ctrl",template:n(437),locals:{header:Object.assign({},i)}}).then(n=>{t.show("Header '"+n.name+"' saved"),e.list().then(e=>this.apiPortalHeaders=e.data)})},this.deleteHeader=i=>{this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete this header?",msg:"",confirmButton:"Delete"}}).then(n=>{n&&e.delete(i).then(()=>{t.show("Header '"+i.name+"' deleted"),e.list().then(e=>this.apiPortalHeaders=e.data)})})},this.saveShowCategories=()=>{i.save(this.settings).then(e=>{t.show("Categories are now "+(this.settings.portal.apis.apiHeaderShowCategories.enabled?"visible":"hidden")),this.settings=e.data})},this.saveShowTags=()=>{i.save(this.settings).then(e=>{t.show("Tags are now "+(this.settings.portal.apis.apiHeaderShowTags.enabled?"visible":"hidden")),this.settings=e.data})},this.savePromotedApiMode=()=>{i.save(this.settings).then(e=>{t.show("Promoted API is now "+(this.settings.portal.apis.promotedApiMode.enabled?"visible":"hidden")),this.settings=e.data})},this.isReadonlySetting=e=>i.isReadonly(this.settings,e)}]};class zc{constructor(e,t){this.$http=e,this.Constants=t}list(){return this.$http.get(this.Constants.env.baseURL+"/configuration/apiheaders/")}create(e){return this.$http.post(this.Constants.env.baseURL+"/configuration/apiheaders/",e)}update(e){return this.$http.put(this.Constants.env.baseURL+"/configuration/apiheaders/"+e.id,{name:e.name,value:e.value,order:e.order})}delete(e){return this.$http.delete(this.Constants.env.baseURL+"/configuration/apiheaders/"+e.id)}}zc.$inject=["$http","Constants"];var Kc=zc;function Qc(e,t,n){this.header=n,this.cancel=function(){t.cancel()},this.save=function(){e.update(this.header).then(e=>{t.hide(e.data)})}}Qc.$inject=["ApiHeaderService","$mdDialog","header"];var Jc=Qc;class Xc{constructor(){}}function Zc(e,t){this.header=new Xc,this.cancel=function(){t.cancel()},this.save=function(){e.create(this.header).then(e=>{t.hide(e.data)})}}Zc.$inject=["ApiHeaderService","$mdDialog"];var ed=Zc;var td=class{constructor(){this.encode=e=>btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g,(e,t)=>String.fromCharCode(Number("0x"+t)))),this.decode=e=>decodeURIComponent(atob(e).split("").map(e=>"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)).join(""))}};class nd{constructor(e,t){this.$http=e,this.Constants=t}listMetrics(){return this.$http.get(this.Constants.env.baseURL+"/alerts/metrics")}getStatus(e,t){return this.$http.get(this.getReferenceURL(e,t)+"alerts/status")}listAlerts(e,t=!0,n){return this.$http.get(`${this.getReferenceURL(e,n)}alerts?event_counts=${t}`)}getAnalytics(e,t,n,i){return this.$http.get(`${this.getReferenceURL(n,i)}alerts/analytics?from=${e}&to=${t}`)}create(e){return this.$http.post(this.getReferenceURL(e.reference_type,e.reference_id)+"alerts",{name:e.name,severity:e.severity,source:e.source,description:e.description,type:e.type,enabled:e.enabled,reference_type:Os[e.reference_type],reference_id:e.reference_id,conditions:e.conditions,notifications:e.notifications,filters:e.filters,projections:e.projections,dampening:e.dampening,template:e.template,event_rules:e.event_rules,notificationPeriods:e.notificationPeriods})}update(e){return this.$http.put(this.getReferenceURL(e.reference_type,e.reference_id)+"alerts/"+e.id,{id:e.id,name:e.name,severity:e.severity,source:e.source,description:e.description,type:e.type,enabled:e.enabled,reference_type:Os[e.reference_type],reference_id:e.reference_id,conditions:e.conditions,notifications:e.notifications,filters:e.filters,projections:e.projections,dampening:e.dampening,template:e.template,event_rules:e.event_rules,notificationPeriods:e.notificationPeriods})}listAlertEvents(e,t){let n=this.getReferenceURL(e.reference_type,e.reference_id)+"alerts/"+e.id+"/events?";return void 0!==t&&(void 0!==t.from&&(n+="&from="+t.from),void 0!==t.to&&(n+="&to="+t.to),void 0!==t.page&&(n+="&page="+t.page),void 0!==t.size&&(n+="&size="+t.size)),this.$http.get(n)}delete(e){return this.$http.delete(this.getReferenceURL(e.reference_type,e.reference_id)+"alerts/"+e.id)}associate(e,t){return this.$http.post(this.getReferenceURL(e.reference_type,e.reference_id)+"alerts/"+e.id+"?type="+t,{})}getReferenceURL(e,t){switch(e){case Os.API:return this.Constants.env.baseURL+"/apis/"+t+"/";case Os.APPLICATION:return this.Constants.env.baseURL+"/applications/"+t+"/";default:return this.Constants.env.baseURL+"/platform/"}}}nd.$inject=["$http","Constants"];var id=nd;var ad={bindings:{alerts:"<",api:"<",application:"<"},template:n(890),controller:["$stateParams","$state","AlertService","NotificationService","UserService","$mdDialog",function(e,t,i,a,o,s){var r;this.alerts=null!==(r=this.alerts)&&void 0!==r?r:[],this.goTo=(n,i)=>{e.apiId?t.go("management.apis.detail.alerts."+n,{apiId:e.apiId,alertId:i}):e.applicationId?t.go("management.applications.application.alerts."+n,{applicationId:e.applicationId,alertId:i}):t.go("management.settings.alerts."+n,{alertId:i})},this.delete=e=>{this.enhanceAlert(e),s.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:`Are you sure you want to delete the alert '${e.name}'?`,msg:"",confirmButton:"Delete"}}).then(n=>{n&&i.delete(e).then(()=>{a.show("Alert '"+e.name+"' has been deleted"),t.go(t.current,{},{reload:!0})})})},this.update=e=>{this.enhanceAlert(e),i.update(e).then(()=>{a.show("Alert saved with success")}).finally(()=>{t.go(t.current,{},{reload:!0})})},this.toggleEnable=e=>{e.enabled=!e.enabled,this.update(e)},this.enhanceAlert=t=>{e.apiId?t.reference_type=Os.API:e.applicationId?t.reference_type=Os.APPLICATION:t.reference_type=Os.ENVIRONMENT},this.getSeverityColor=e=>{switch(e.severity){case"INFO":return"#54a3ff";case"WARNING":return"#FF950D";case"CRITICAL":return"#d73a49"}},this.hasPermissionForCurrentScope=t=>{let n="environment";return e.apiId?n="api":e.applicationId&&(n="application"),o.isUserHasPermissions([`${n}-${t}`])}}]};class od extends Ls{}od.RESPONSE_TIME=new od("response.response_time","Response Time (ms)",[Ds.TYPE,Fs.TYPE,qs.TYPE]),od.QUOTA_COUNTER=new od("quota.counter","Quota Counter",[qs.TYPE]),od.UPSTREAM_RESPONSE_TIME=new od("response.upstream_response_time","Upstream Response Time (ms)",[Ds.TYPE,Fs.TYPE,qs.TYPE]),od.RESPONSE_STATUS=new od("response.status","Status Code",[Ds.TYPE,Fs.TYPE],!0),od.ERROR_KEY=new od("error.key","Error Key",[Hs.TYPE],!0,void 0,()=>{const e=[];return["API_KEY_MISSING","API_KEY_INVALID","QUOTA_TOO_MANY_REQUESTS","RATE_LIMIT_TOO_MANY_REQUESTS","REQUEST_CONTENT_LIMIT_TOO_LARGE","REQUEST_CONTENT_LIMIT_LENGTH_REQUIRED","REQUEST_TIMEOUT","REQUEST_VALIDATION_INVALID","RESOURCE_FILTERING_FORBIDDEN","RESOURCE_FILTERING_METHOD_NOT_ALLOWED","RBAC_FORBIDDEN","RBAC_INVALID_USER_ROLES","RBAC_NO_USER_ROLE","OAUTH2_MISSING_SERVER","OAUTH2_MISSING_HEADER","OAUTH2_MISSING_ACCESS_TOKEN","OAUTH2_INVALID_ACCESS_TOKEN","OAUTH2_INVALID_SERVER_RESPONSE","OAUTH2_INSUFFICIENT_SCOPE","OAUTH2_SERVER_UNAVAILABLE","HTTP_SIGNATURE_INVALID_SIGNATURE","JWT_MISSING_TOKEN","JWT_INVALID_TOKEN","JSON_INVALID_PAYLOAD","JSON_INVALID_FORMAT","GATEWAY_INVALID_REQUEST","GATEWAY_INVALID_RESPONSE","GATEWAY_OAUTH2_ACCESS_DENIED","GATEWAY_OAUTH2_SERVER_ERROR","GATEWAY_OAUTH2_INVALID_CLIENT","GATEWAY_MISSING_SECURITY_PROVIDER","GATEWAY_POLICY_INTERNAL_ERROR","GATEWAY_MISSING_SECURED_REQUEST_PLAN","GATEWAY_CLIENT_CONNECTION_ERROR","GATEWAY_CLIENT_CONNECTION_TIMEOUT"].forEach(t=>{e.push(new xs(t,t))}),e}),od.REQUEST_CONTENT_LENGTH=new od("request.content_length","Request Content-Length",[Ds.TYPE,Fs.TYPE,qs.TYPE]),od.RESPONSE_CONTENT_LENGTH=new od("response.content_length","Response Content-Length",[Ds.TYPE,Fs.TYPE,qs.TYPE]),od.TENANT=new od("tenant","Tenant",[Hs.TYPE],!0,void 0,(e,t,n)=>{const i=[];return n.get("TenantService").list().then(e=>{e.data.forEach(e=>{i.push(new xs(e.id,e.name))})}),i}),od.API=new od("api","API",[Hs.TYPE],!0,[Os.APPLICATION,Os.ENVIRONMENT],(e,t,n)=>{const i=[];return 2===e?n.get("ApiService").searchApis().then(e=>{e.data.forEach(e=>{i.push(new xs(e.id,e.name))})}):1===e&&n.get("ApplicationService").getSubscribedAPI(t).then(e=>{e.data.forEach(e=>{i.push(new xs(e.id,e.name))})}),i}),od.APPLICATION=new od("application","Application",[Hs.TYPE],!0,[Os.API,Os.ENVIRONMENT],(e,t,n)=>{const i=[];return 0===e&&n.get("ApiService").getSubscribers(t).then(e=>{e.data.forEach(e=>{i.push(new xs(e.id,e.name))})}),i}),od.PLAN=new od("plan","Plan",[Hs.TYPE],!0,void 0,(e,t,n)=>{const i=[];return 0===e?n.get("ApiService").getPublishedApiPlans(t).then(e=>{e.data.forEach(e=>{i.push(new xs(e.id,e.name))})}):1===e&&n.get("ApplicationService").listSubscriptions(t).then(e=>{const t=o.keys(o.keyBy(e.data.data,e=>e.plan));o.each(t,t=>{i.push(new xs(t,e.data.metadata[t].name))})}),i}),od.METRICS=[od.RESPONSE_TIME,od.UPSTREAM_RESPONSE_TIME,od.RESPONSE_STATUS,od.REQUEST_CONTENT_LENGTH,od.RESPONSE_CONTENT_LENGTH,od.ERROR_KEY,od.API,od.TENANT,od.APPLICATION,od.PLAN];class sd{constructor(e,t){this.application=e,this.name=t}}sd.API_GATEWAY=new sd("gio-apim-gateway","API Gateway"),sd.MANAGEMENT_API=new sd("gio-apim-management","Management API"),sd.TYPES=[sd.API_GATEWAY,sd.MANAGEMENT_API];class rd extends Ls{}rd.NODE_HOSTNAME=new rd("node.hostname","Hostname",[Hs.TYPE],!0),rd.NODE_APPLICATION=new rd("node.application","Type",[Hs.TYPE],!0,void 0,()=>{const e=[];return sd.TYPES.forEach(t=>{e.push(new xs(t.application,t.name))}),e}),rd.OS_CPU_PERCENT=new rd("os.cpu.percent","OS CPU (%)",[Ds.TYPE,Fs.TYPE,qs.TYPE]),rd.PROCESS_CPU_PERCENT=new rd("process.cpu.percent","Process CPU (%)",[Ds.TYPE,Fs.TYPE,qs.TYPE]),rd.PROCESS_CPU_TOTAL=new rd("process.cpu.total","Process CPU (total)",[Ds.TYPE,Fs.TYPE,qs.TYPE]),rd.JVM_MEM_HEAP_USED=new rd("jvm.mem.heap.used","JVM Heap used",[Ds.TYPE,Fs.TYPE,qs.TYPE]),rd.JVM_MEM_HEAP_MAX=new rd("jvm.mem.heap.max","JVM Heap max",[Ds.TYPE,Fs.TYPE,qs.TYPE]),rd.JVM_MEM_HEAP_PERCENT=new rd("jvm.mem.heap.percent","JVM Heap (%))",[Ds.TYPE,Fs.TYPE,qs.TYPE]),rd.METRICS=[rd.NODE_HOSTNAME,rd.NODE_APPLICATION,rd.OS_CPU_PERCENT,rd.PROCESS_CPU_PERCENT,rd.PROCESS_CPU_TOTAL,rd.JVM_MEM_HEAP_USED,rd.JVM_MEM_HEAP_MAX,rd.JVM_MEM_HEAP_PERCENT];class ld extends Ls{}ld.NODE_HOSTNAME=new ld("node.hostname","Hostname",[Hs.TYPE],!0),ld.NODE_APPLICATION=new ld("node.application","Type",[Hs.TYPE],!0,void 0,()=>{const e=[];return sd.TYPES.forEach(t=>{e.push(new xs(t.application,t.name))}),e}),ld.NODE_EVENT=new ld("node.event","Event",[Hs.TYPE],!0,void 0,()=>{const e=[];return e.push(new xs("NODE_START","Start")),e.push(new xs("NODE_STOP","Stop")),e}),ld.METRICS=[ld.NODE_HOSTNAME,ld.NODE_APPLICATION,ld.NODE_EVENT];class cd extends Ls{}cd.NODE_HOSTNAME=new cd("node.hostname","Hostname",[Hs.TYPE]),cd.NODE_APPLICATION=new cd("node.application","Type",[Hs.TYPE],void 0,void 0,()=>{const e=[];return sd.TYPES.forEach(t=>{e.push(new xs(t.application,t.name))}),e}),cd.NODE_STATUS=new cd("node.healthy","Status",[Hs.TYPE],void 0,void 0,()=>{const e=[];return e.push(new xs("true","Healthy")),e.push(new xs("false","Unhealthy")),e}),cd.METRICS=[cd.NODE_HOSTNAME,cd.NODE_APPLICATION,cd.NODE_STATUS];class dd{constructor(e,t,n,i,a,o){this.source=e,this.type=t,this.description=n,this.scopes=i,this.category=a,this.metrics=o}static findByScope(e){return dd.RULES.filter(t=>t.scopes.indexOf(e)>-1)}static findByScopeAndType(e,t){let n;if(t.includes("@")){const e=t.split("@");n=e[0],t=e[1]}return dd.RULES.find(i=>(!n||i.source===n)&&i.type===t&&-1!==i.scopes.indexOf(e))}}dd.API_METRICS_THRESHOLD=new dd("REQUEST","METRICS_SIMPLE_CONDITION","Alert when a metric of the request validates a condition",[Os.API,Os.ENVIRONMENT],"API metrics",od.METRICS),dd.API_METRICS_MISSING_DATA=new dd("REQUEST","MISSING_DATA","Alert when there is no request matching filters received for a period of time",[Os.API,Os.ENVIRONMENT],"API metrics",od.METRICS),dd.API_METRICS_AGGREGATION=new dd("REQUEST","METRICS_AGGREGATION","Alert when the aggregated value of a request metric rises a threshold",[Os.API,Os.ENVIRONMENT],"API metrics",[od.RESPONSE_TIME,od.UPSTREAM_RESPONSE_TIME,od.REQUEST_CONTENT_LENGTH,od.RESPONSE_CONTENT_LENGTH]),dd.API_METRICS_RATE=new dd("REQUEST","METRICS_RATE","Alert when the rate of a given condition rises a threshold",[Os.API,Os.ENVIRONMENT],"API metrics",od.METRICS),dd.API_HC_ENDPOINT_STATUS_CHANGED=new dd("ENDPOINT_HEALTH_CHECK","API_HC_ENDPOINT_STATUS_CHANGED","Alert when the health status of an endpoint has changed",[Os.API,Os.ENVIRONMENT],"Health-check"),dd.APPLICATION_QUOTA=new dd("REQUEST","APPLICATION_QUOTA","Alert when the quota rises a threshold",[Os.APPLICATION],"Application"),dd.NODE_LIFECYCLE_CHANGED=new dd("NODE_LIFECYCLE","NODE_LIFECYCLE_CHANGED","Alert when the lifecycle status of a node has changed",[Os.ENVIRONMENT],"Node"),dd.NODE_METRICS_THRESHOLD=new dd("NODE_HEARTBEAT","METRICS_SIMPLE_CONDITION","Alert when a metric of the node validates a condition",[Os.ENVIRONMENT],"Node",rd.METRICS),dd.NODE_METRICS_AGGREGATION=new dd("NODE_HEARTBEAT","METRICS_AGGREGATION","Alert when the aggregated value of a node metric rises a threshold",[Os.ENVIRONMENT],"Node",rd.METRICS),dd.NODE_METRICS_RATE=new dd("NODE_HEARTBEAT","METRICS_RATE","Alert when the rate of a given condition rises a threshold",[Os.ENVIRONMENT],"Node",rd.METRICS),dd.NODE_HEALTHCHECK=new dd("NODE_HEALTHCHECK","NODE_HEALTHCHECK","Alert on the health status of the node",[Os.ENVIRONMENT],"Node",cd.METRICS),dd.RULES=[dd.API_METRICS_THRESHOLD,dd.API_METRICS_MISSING_DATA,dd.API_METRICS_AGGREGATION,dd.API_METRICS_RATE,dd.API_HC_ENDPOINT_STATUS_CHANGED,dd.APPLICATION_QUOTA,dd.NODE_LIFECYCLE_CHANGED,dd.NODE_METRICS_THRESHOLD,dd.NODE_METRICS_AGGREGATION,dd.NODE_METRICS_RATE,dd.NODE_HEALTHCHECK];var pd={bindings:{alerts:"<",notifiers:"<",status:"<",mode:"<"},template:n(891),controller:["Constants","$scope","AlertService","NotificationService","UserService","$state","$mdDialog",function(e,t,n,i,a,s,r){this.$onInit=()=>{this.tabs=["general","notifications","history"],this.severities=["INFO","WARNING","CRITICAL"];const e=this.tabs.indexOf(s.params.tab);let n,i;this.selectedTab=e>-1?e:0,this.currentTab=this.tabs[this.selectedTab],s.params.apiId?(i=Os.API,n=s.params.apiId,this.groups=["API metrics","Health-check"],this.titlePrefix=t.$parent.$resolve.resolvedApi.data.name):s.params.applicationId?(i=Os.APPLICATION,n=s.params.applicationId,this.groups=["Application"],this.titlePrefix=t.$parent.$resolve.resolvedApplication.data.name):(i=Os.ENVIRONMENT,this.groups=["Node","API metrics","Health-check"],this.titlePrefix="Platform"),this.rules=dd.findByScope(i),this.updateMode=void 0!==s.params.alertId,this.updateMode?(this.alert=o.find(this.alerts,{id:s.params.alertId})||this.alerts[0],this.alert.type=(this.alert.source+"@"+this.alert.type).toUpperCase(),this.alert.reference_type=i):(this.alert=new Ps("New alert","INFO",void 0,void 0,void 0,i,n),this.alerts.push(this.alert)),this.template=this.alert.template||!1,this.apiByDefault=this.alert.event_rules&&-1!==this.alert.event_rules.findIndex(e=>"API_CREATE"===e.event),this.initialAlert=o.cloneDeep(this.alert)},this.selectTab=e=>{this.selectedTab=e,this.currentTab=this.tabs[this.selectedTab]},this.$onDestroy=()=>{this.updateMode||this.alerts.pop()},this.save=e=>{let t;return this.apiByDefault?e.event_rules=[{event:"API_CREATE"}]:delete e.event_rules,e.type=e.type.split("@")[1],t=this.updateMode?n.update(e):n.create(e),t.then(e=>{this.formAlert.$setPristine(),i.show("Alert has been saved successfully");const t=e.data;return s.go("^.alert",{alertId:t.id},{reload:!0}),t})},this.delete=()=>{this.alert.id?r.show(r.confirm({title:"Warning",textContent:"Are you sure you want to remove this alert?",ok:"OK",cancel:"Cancel"})).then(()=>{n.delete(this.alert).then(()=>{i.show("Alert deleted with success"),this.backToAlerts()})}):this.backToAlerts()},this.reset=()=>{this.alert=o.cloneDeep(this.initialAlert),this.formAlert.$setPristine()},this.associateToApis=()=>{n.associate(this.alert,"api").then(()=>{s.reload(),i.show("Alert '"+this.alert.name+"' has been associated to all APIs")})},this.onRuleChange=()=>{const e=o.find(this.rules,e=>e.source+"@"+e.type===this.alert.type);this.alert.source=e.source,this.alert.filters&&(this.alert.filters.length=0),this.alert.description=e.description,this.template=2===this.alert.reference_type&&("API metrics"===e.category||"Health-check"===e.category)},this.backToAlerts=()=>{s.params.apiId?s.go("management.apis.detail.alerts.list",{apiId:s.params.apiId}):s.params.applicationId?s.go("management.applications.application.alerts.list",{applicationId:s.params.applicationId}):s.go("management.settings.alerts.list")},this.hasPermissionForCurrentScope=e=>{let t="environment";return s.params.apiId?t="api":s.params.applicationId&&(t="application"),a.isUserHasPermissions([`${t}-${e}`])},this.isReadonly=()=>"detail"===this.mode&&!this.hasPermissionForCurrentScope("alert-u")}]};var md={bindings:{alert:"<"},require:{parent:"^alertComponent"},template:n(892),controller:function(){this.addNotification=()=>{void 0===this.alert.notifications&&(this.alert.notifications=[]),this.alert.notifications.push({})},this.removeNotification=e=>{this.alert.notifications.splice(e,1),this.parent.formAlert.$setDirty()}}};var ud={bindings:{notification:"<",onNotificationRemove:"&",isReadonly:"<"},require:{parent:"^gvAlertNotifications"},template:n(893),controller:["NotificationService","NotifierService",function(e,t){this.notifierJsonSchemaForm=["*"],this.$onInit=()=>{this.notification.type&&this.reloadNotifierSchema()},this.onNotifierChange=()=>{this.notification.configuration={},this.reloadNotifierSchema()},this.reloadNotifierSchema=()=>{t.getSchema(this.notification.type).then(({data:e})=>(this.notifierJsonSchema=Object.assign(Object.assign({},e),{readonly:this.isReadonly}),{schema:e}),t=>{if(404===t.status)return this.notifierJsonSchema={},{schema:{}};e.showError("Unexpected error while loading notifier schema for "+this.notifier.type)})},this.remove=()=>{this.onNotificationRemove()}}]};var hd={bindings:{alert:"<"},require:{parent:"^alertComponent"},template:n(894),controller:["AlertService",function(e){this.query={limit:10,page:1},this.$onInit=()=>{e.listAlertEvents(this.alert).then(e=>{this.events=e.data})},this.search=()=>{e.listAlertEvents(this.alert,{from:this.lastFrom,to:this.lastTo,page:this.query.page-1,size:this.query.limit}).then(e=>{this.events=e.data,this.$scope.eventsFetchData=!1})}}]};var gd={bindings:{dampening:"<"},require:{parent:"^alertComponent"},template:n(895),controller:function(){this.$onInit=()=>{this.modes=Ns.MODES,this.timeUnits=Bs.TIME_UNITS},this.onModeChange=()=>{delete this.dampening.duration,delete this.dampening.timeUnit,delete this.dampening.trueEvaluations,delete this.dampening.totalEvaluations}}};var fd={bindings:{label:"<",condition:"<",isReadonly:"<"},template:n(896),controller:function(){this.$onInit=()=>{this.timeUnits=Bs.TIME_UNITS}}};var bd={bindings:{alert:"<",form:"<",isReadonly:"<"},template:n(897),controller:function(){this.addFilter=()=>{void 0===this.alert.filters&&(this.alert.filters=[]),this.alert.filters.push({})},this.removeFilter=e=>{this.alert.filters.splice(e,1),this.form.$setDirty()}}};const vd=()=>{const e=[];return e.push(new xs("DOWN","Down")),e.push(new xs("TRANSITIONALLY_DOWN","Transitionally down")),e.push(new xs("TRANSITIONALLY_UP","Transitionally up")),e.push(new xs("UP","Up")),e};class yd extends Ls{}yd.OLD_STATUS_NAME=new yd("status.old","Old Status",[Hs.TYPE],!1,void 0,vd),yd.NEW_STATUS_NAME=new yd("status.new","New Status",[Hs.TYPE],!1,void 0,vd),yd.ENDPOINT_NAME=new yd("endpoint.name","Endpoint name",[Hs.TYPE],!0),yd.RESPONSE_TIME=new yd("response_time","Response Time (ms)",[Ds.TYPE,Fs.TYPE,qs.TYPE]),yd.TENANT=new yd("tenant","Tenant",[Hs.TYPE],!1,void 0,(e,t,n)=>{const i=[];return n.get("TenantService").list().then(e=>{e.data.forEach(e=>{i.push(new xs(e.id,e.name))})}),i}),yd.METRICS=[yd.OLD_STATUS_NAME,yd.NEW_STATUS_NAME,yd.ENDPOINT_NAME,yd.RESPONSE_TIME,yd.TENANT];var Sd={bindings:{condition:"<",alert:"<",onFilterRemove:"&",isReadonly:"<"},template:n(898),controller:function(){this.$onInit=()=>{"REQUEST"===this.alert.source?this.metrics=Ls.filterByScope(od.METRICS,this.alert.reference_type):"NODE_HEARTBEAT"===this.alert.source?this.metrics=Ls.filterByScope(rd.METRICS,this.alert.reference_type):"ENDPOINT_HEALTH_CHECK"===this.alert.source?this.metrics=Ls.filterByScope(yd.METRICS,this.alert.reference_type):"NODE_LIFECYCLE"===this.alert.source?this.metrics=Ls.filterByScope(ld.METRICS,this.alert.reference_type):"NODE_HEALTHCHECK"===this.alert.source&&(this.metrics=Ls.filterByScope(cd.METRICS,this.alert.reference_type))},this.deleteFilter=()=>{this.onFilterRemove()}}};var wd={bindings:{condition:"<",metrics:"<",label:"<",isReadonly:"<"},template:n(899),controller:function(){this.$onInit=()=>{this.onMetricsChange(!1)},this.onMetricsChange=e=>{this.metrics&&(e&&(delete this.condition.type,delete this.condition.operator,delete this.condition.multiplier,delete this.condition.property2),void 0===this.condition.property&&(this.condition.property=this.metrics[0].key),this.conditions=o.find(this.metrics,e=>e.key===this.condition.property).conditions,this.onConditionChange())},this.onConditionChange=()=>{const e=Ws.findByType(this.condition.type);void 0!==e&&(this.operators=e.getOperators(),1===this.operators.length&&(this.condition.operator=this.operators[0].key))}}};var Cd={bindings:{condition:"<",isReadonly:"<"},template:n(900),controller:function(){}};var Id={bindings:{condition:"<",isReadonly:"<"},template:n(901),controller:function(){this.$onInit=()=>{this.condition.operatorLow="INCLUSIVE",this.condition.operatorHigh="INCLUSIVE"}}};var $d={bindings:{condition:"<",metrics:"<",isReadonly:"<"},template:n(902),controller:["$injector","$state",function(e,t){this.$onInit=()=>{const n=o.find(this.metrics,e=>e.key===this.condition.property);if(n.loader){let i,a;t.params.apiId?(a=Os.API,i=t.params.apiId):t.params.applicationId?(a=Os.APPLICATION,i=t.params.applicationId):a=Os.ENVIRONMENT,this.values=n.loader(a,i,e)}},this.displaySelect=()=>void 0!==this.values&&("EQUALS"===this.condition.operator||"NOT_EQUALS"===this.condition.operator)}]};var Ad={bindings:{condition:"<",metrics:"<",isReadonly:"<"},template:n(903),controller:function(){this.$onInit=()=>{this.metrics=o.filter(this.metrics,e=>-1!==e.conditions.indexOf("COMPARE")&&e.key!==this.condition.property)}}};var Od={bindings:{alert:"<"},require:{parent:"^alertComponent"},template:n(904),controller:function(){this.$onInit=()=>{this.metrics=Ls.filterByScope(dd.findByScopeAndType(this.alert.reference_type,this.alert.type).metrics,this.alert.reference_type),void 0===this.alert.id&&(this.alert.conditions=[{property:this.metrics[0].key}],this.alert.dampening={mode:"STRICT_COUNT",trueEvaluations:1,totalEvaluations:1})}}};var Td={bindings:{alert:"<"},require:{parent:"^alertComponent"},template:n(905),controller:function(){this.$onInit=()=>{this.metrics=dd.findByScopeAndType(this.alert.reference_type,this.alert.type).metrics,this.operators=Ms.OPERATORS,this.functions=Ms.FUNCTIONS,void 0===this.alert.id&&(this.alert.conditions=[{function:"avg",property:this.metrics[0].key,operator:"GT",type:"AGGREGATION"}],this.alert.dampening={mode:"STRICT_COUNT",trueEvaluations:1,totalEvaluations:1})}}};var Rd={bindings:{alert:"<"},require:{parent:"^alertComponent"},template:n(906),controller:function(){this.$onInit=()=>{void 0===this.alert.id&&(this.alert.conditions=[{type:"MISSING_DATA"}],this.alert.dampening={mode:"STRICT_COUNT",trueEvaluations:1,totalEvaluations:1})}}};var _d={bindings:{alert:"<"},require:{parent:"^alertComponent"},template:n(907),controller:function(){this.$onInit=()=>{this.metrics=Ls.filterByScope(dd.findByScopeAndType(this.alert.reference_type,this.alert.type).metrics,this.alert.reference_type),this.operators=js.OPERATORS,void 0===this.alert.id&&(this.alert.conditions=[{operator:"GT",type:"RATE",comparison:{property:this.metrics[0].key,operator:"GT",threshold:100,type:"THRESHOLD"}}],this.alert.dampening={mode:"STRICT_COUNT",trueEvaluations:1,totalEvaluations:1})}}};var xd={bindings:{alert:"<"},template:n(908),controller:function(){this.$onInit=()=>{void 0===this.alert.id&&(this.alert.conditions=[{type:"STRING_COMPARE",operator:"NOT_EQUALS",property:"status.old",property2:"status.new"}],this.alert.dampening={mode:"STRICT_COUNT",trueEvaluations:1,totalEvaluations:1})}}};var Ld={bindings:{alert:"<"},template:n(909),controller:function(){this.$onInit=()=>{void 0===this.alert.id&&(this.alert.conditions=[{type:"STRING",operator:"MATCHES",property:"node.event",pattern:"NODE_START|NODE_STOP"}],this.alert.dampening={mode:"STRICT_COUNT",trueEvaluations:1,totalEvaluations:1})}}};var Pd={bindings:{alert:"<"},template:n(910),controller:function(){this.$onInit=()=>{void 0===this.alert.id&&(this.alert.conditions=[{type:"STRING",operator:"MATCHES",property:"node.healthy",pattern:".*"}],this.alert.dampening={mode:"STRICT_COUNT",trueEvaluations:1,totalEvaluations:1})}}};var Nd={bindings:{alert:"<"},require:{parent:"^alertComponent"},template:n(911),controller:function(){this.$onInit=()=>{this.metrics=[od.QUOTA_COUNTER],void 0===this.alert.id&&(this.alert.conditions=[{type:"COMPARE",operator:"GTE",property:"quota.counter",property2:"quota.limit"}],this.alert.dampening={mode:"STRICT_COUNT",trueEvaluations:1,totalEvaluations:1}),this.threshold=100*this.alert.conditions[0].multiplier},this.calculateMultiplier=()=>{this.alert.conditions[0].multiplier=this.threshold/100}}};var Ed={bindings:{alert:"<",condition:"<",metrics:"<",isReadonly:"<"},template:n(912),controller:function(){this.addProjection=()=>{void 0===this.condition.projections&&(this.condition.projections=[]),this.condition.projections.push({type:"PROPERTY"})},this.removeProjection=e=>{this.condition.projections.splice(e,1)}}};var Dd={bindings:{projection:"<",alert:"<",onProjectionRemove:"&",isReadonly:"<"},template:n(913),controller:function(){this.$onInit=()=>{"REQUEST"===this.alert.source?this.metrics=Ls.filterByScope(od.METRICS,this.alert.reference_type):"NODE_HEARTBEAT"===this.alert.source?this.metrics=Ls.filterByScope(rd.METRICS,this.alert.reference_type):"ENDPOINT_HEALTH_CHECK"===this.alert.source?this.metrics=Ls.filterByScope(yd.METRICS,this.alert.reference_type):"NODE_LIFECYCLE"===this.alert.source&&(this.metrics=Ls.filterByScope(ld.METRICS,this.alert.reference_type)),this.metrics=o.filter(this.metrics,e=>e.supportPropertyProjection)},this.deleteProjection=()=>{this.onProjectionRemove()}}};n(914),n(1308);var jd={bindings:{alert:"<",form:"<"},template:n(915),controller:["$scope",function(e){this.officeStartTime=m()(),this.officeStartTime.set({hour:9,minute:0,second:0,millisecond:0}),this.officeEndTime=m()(),this.officeEndTime.set({hour:18,minute:0,second:0,millisecond:0}),e.open=!1,this.$onInit=()=>{this.days=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"];const t=[...this.days.slice(0,5)],n=[this.officeStartTime.valueOf(),this.officeEndTime.valueOf()];this.alert.notificationPeriods=this.alert.notificationPeriods||[],e.timeframe={days:[],range:[],officeHours:!1,businessDays:!1},e.$watchCollection("timeframe",(i,a)=>{i.businessDays!==a.businessDays?i.businessDays?e.timeframe.days=[...this.days.slice(0,5)]:e.timeframe.days=[]:e.timeframe.businessDays=Object(Rs.c)(e.timeframe.days,t,!0),i.officeHours!==a.officeHours?i.officeHours?e.timeframe.range=n:e.timeframe.range=[]:e.timeframe.officeHours=Object(Rs.c)(e.timeframe.range,n,!0)})},this.hasTime=e=>null!=e.beginHour&&null!=e.endHour,this.isRange=e=>this.hasTime(e)&&e.beginHour!==e.endHour,this.isTime=e=>this.hasTime(e)&&e.beginHour===e.endHour,this.add=t=>{if(t.$setSubmitted(),t.$valid){const{days:n,range:i}=t;let a=null,o=null;if(null!=i&&2===i.length){const e=m()().startOf("day");a=m()(i[0]).diff(e,"seconds"),o=m()(i[1]).diff(e,"seconds")}const s=new Vs({days:n.map(e=>this.days.indexOf(e)+1).sort(),beginHour:a,endHour:o,zoneId:Intl.DateTimeFormat().resolvedOptions().timeZone});null!=this.alert.notificationPeriods.find(e=>s.equals(e))||this.alert.notificationPeriods.push(s),t.days=[],t.range=[],t.officeHours=!1,t.businessDays=!1,t.$setDirty(),t.$setPristine(),e.open=!1}},this.formatPeriod=(e,t="LTS")=>{const n=m()().startOf("day");return n.add(e,"seconds"),n.format(t)},this.formatTime=(e,t="LTS")=>m()(e).format(t),this.getOfficeHoursDescription=()=>`Set time range from ${this.formatTime(this.officeStartTime,"LT")} to ${this.formatTime(this.officeEndTime,"LT")}`,this.remove=e=>{const t=this.alert.notificationPeriods.splice(e,1);return this.form.$setDirty(),t[0]},this.edit=t=>{e.open=!0;const n=this.remove(t);if(e.timeframe.days=this.getDays(n.days),null!=n.beginHour&&null!=n.endHour){const t=m()().startOf("day");e.timeframe.range=[t.clone().add(n.beginHour,"seconds").valueOf(),t.clone().add(n.endHour,"seconds").valueOf()]}},this.onToggleForm=({detail:t})=>{e.open=t.open},this.getDays=e=>e.sort().map(e=>this.days[e-1]),this.getDayNames=e=>{if(e.days){if(e.days.length===this.days.length)return"day";if(1===e.days.length)return this.days[e.days[0]-1];const t=this.getDays(e.days),n=t.pop();return`${t.join(", ")} and ${n}`}return""}}]};var kd={bindings:{score:"<"},controller:"CircularPercentageController",template:n(916)};var Ud=class{constructor(){this.score=0,this.percentage=0,this.percentageCircle=100}getScore(){return this.score>0&&(this.percentage=parseInt((100*this.score).toFixed(0),10),this.percentageCircle=this.percentage),this.percentage<50?this.qualityMetricCssClass="gravitee-qm-score-bad":this.percentage>=50&&this.percentage<80?this.qualityMetricCssClass="gravitee-qm-score-medium":this.qualityMetricCssClass="gravitee-qm-score-good",this.percentage}};class Md{constructor(e,t){this.$http=e,this.Constants=t}findById(e){return this.$http.get(this.Constants.org.baseURL+"/configuration/entrypoints/"+e)}list(){return this.$http.get(this.Constants.org.baseURL+"/configuration/entrypoints/")}create(e){if(e)return this.$http.post(this.Constants.org.baseURL+"/configuration/entrypoints/",e)}update(e){if(e)return this.$http.put(this.Constants.org.baseURL+"/configuration/entrypoints/",e)}delete(e){if(e)return this.$http.delete(this.Constants.org.baseURL+"/configuration/entrypoints/"+e.id)}}Md.$inject=["$http","Constants"];var Fd=Md;function qd(e,t,n){e.folders=n.folders,e.title=n.title,this.cancel=()=>{t.hide()},this.select=e=>{t.hide(e)}}qd.$inject=["$scope","$mdDialog","locals"];var Hd=qd;function Gd(e,t,n){e.pages=n.pages,e.title=n.title,this.cancel=()=>{t.hide()},this.select=()=>{t.hide(e.selectedPage)}}Gd.$inject=["$scope","$mdDialog","locals"];var Bd=Gd;var Wd={bindings:{dashboardsPlatform:"<",dashboardsApi:"<",dashboardsApplication:"<"},template:n(917),controller:["NotificationService","PortalSettingsService","$state","Constants","$mdDialog","DashboardService","$rootScope",function(e,t,i,a,s,r,l){this.settings=o.cloneDeep(a.env.settings),this.$rootScope=l,this.providedConfigurationMessage="Configuration provided by the system",this.$onInit=()=>{this.dashboardsByType={Platform:this.dashboardsPlatform,API:this.dashboardsApi,Application:this.dashboardsApplication}},this.isDashboardsEmpty=()=>0===o.flattenDeep(o.values(this.dashboardsByType)).length,this.save=()=>{t.save(this.settings).then(t=>{o.merge(a.env.settings,t.data),e.show("Configuration saved"),this.formSettings.$setPristine()})},this.reset=()=>{this.settings=o.cloneDeep(a.env.settings),this.formSettings.$setPristine()},this.delete=t=>{s.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:`Are you sure you want to delete the dashboard '${t.name}'?`,msg:"",confirmButton:"Delete"}}).then(n=>{n&&r.delete(t).then(()=>{e.show("Dashboard '"+t.name+"' has been deleted"),i.go(i.current,{},{reload:!0})})})},this.update=t=>{r.update(t).then(()=>{e.show("Dashboard saved with success")}).finally(()=>{i.go(i.current,{},{reload:!0})})},this.upward=e=>{e.order--,this.update(e)},this.downward=e=>{e.order++,this.update(e)},this.toggleEnable=e=>{e.enabled=!e.enabled,this.update(e)},this.isReadonlySetting=e=>t.isReadonly(this.settings,e)}]};class Vd{constructor(e,t){this.$http=e,this.Constants=t}list(){return this.$http.get(this.Constants.env.baseURL+"/configuration/applications/registration/providers/").then(e=>e.data)}get(e){return this.$http.get(this.Constants.env.baseURL+"/configuration/applications/registration/providers/"+e).then(e=>{const t=e.data;return t.scopes=t.scopes||[],t})}create(e){return this.$http.post(this.Constants.env.baseURL+"/configuration/applications/registration/providers/",e)}update(e){return this.$http.put(this.Constants.env.baseURL+"/configuration/applications/registration/providers/"+e.id,{name:e.name,description:e.description,discovery_endpoint:e.discovery_endpoint,initial_access_token_type:e.initial_access_token_type,client_id:e.client_id,client_secret:e.client_secret,scopes:e.scopes,initial_access_token:e.initial_access_token,renew_client_secret_support:e.renew_client_secret_support,renew_client_secret_endpoint:e.renew_client_secret_endpoint,renew_client_secret_method:e.renew_client_secret_method,software_id:e.software_id}).then(e=>{const t=e.data;return t.scopes=t.scopes||[],t})}delete(e){return this.$http.delete(this.Constants.env.baseURL+"/configuration/applications/registration/providers/"+e.id)}}Vd.$inject=["$http","Constants"];var Yd=Vd;var zd={bindings:{clientRegistrationProviders:"<",settings:"<"},template:n(918),controller:["$mdDialog","ClientRegistrationProviderService","PortalSettingsService","NotificationService","$state","Constants",function(e,t,i,a,s,r){this.providedConfigurationMessage="Configuration provided by the system",this.select=e=>{s.go("management.settings.clientregistrationproviders.clientregistrationprovider",{id:e.id})},this.create=e=>{s.go("management.settings.clientregistrationproviders.create",{type:e})},this.delete=i=>{e.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete this client registration provider?",msg:"",confirmButton:"Delete"}}).then(e=>{e&&t.delete(i).then(()=>{a.show("Client registration provider '"+i.name+"' has been deleted"),s.go("management.settings.clientregistrationproviders.list",{},{reload:!0})})})},this.saveClientRegistration=()=>{i.save(this.settings).then(e=>{a.show("Client registration is now "+(this.settings.application.registration.enabled?"mandatory":"optional")),o.merge(r.env.settings,e.data)})},this.saveApplicationType=e=>{({application:{types:{[e]:{enabled:this.settings.application.types[e].enabled}}}}).application.types[e]={enabled:this.settings.application.types[e].enabled},i.save(this.settings).then(t=>{a.show("Application type '"+e+"' is now "+(this.settings.application.types[e].enabled?"allowed":"disallowed")),o.merge(r.env.settings,t.data)})},this.isReadonlySetting=e=>i.isReadonly(this.settings,e)}]};var Kd={bindings:{clientRegistrationProvider:"<"},controller:"ClientRegistrationProviderController",template:n(919)};class Qd{constructor(){}}class Jd{constructor(e,t,n,i,a,o,s){this.$scope=e,this.$state=t,this.$mdEditDialog=n,this.Constants=i,this.$mdDialog=a,this.NotificationService=o,this.ClientRegistrationProviderService=s}$onInit(){this.renewClientSecretMethods=["POST","PATCH","PUT"],this.initialAccessTokenTypes=[],this.initialAccessTokenTypes.push({name:"Client Credentials",value:"CLIENT_CREDENTIALS"}),this.initialAccessTokenTypes.push({name:"Initial Access Token",value:"INITIAL_ACCESS_TOKEN"}),this.updateMode=void 0!==this.clientRegistrationProvider&&void 0!==this.clientRegistrationProvider.id,this.updateMode||(this.clientRegistrationProvider=new Qd,this.clientRegistrationProvider.scopes=[]),this.initialClientRegistrationProvider=o.cloneDeep(this.clientRegistrationProvider)}reset(){this.clientRegistrationProvider=o.cloneDeep(this.initialClientRegistrationProvider),this.$scope.formClientRegistrationProvider.$setPristine()}update(){this.updateMode?this.ClientRegistrationProviderService.update(this.clientRegistrationProvider).then(e=>{this.NotificationService.show("Client registration provider "+this.clientRegistrationProvider.name+" has been updated"),this.clientRegistrationProvider=e,this.$scope.formClientRegistrationProvider.$setPristine()}):this.ClientRegistrationProviderService.create(this.clientRegistrationProvider).then(e=>{this.NotificationService.show("Client registration provider "+this.clientRegistrationProvider.name+" has been created"),this.$state.go("management.settings.clientregistrationproviders.clientregistrationprovider",{id:e.data.id},{reload:!0})})}}Jd.$inject=["$scope","$state","$mdEditDialog","Constants","$mdDialog","NotificationService","ClientRegistrationProviderService"];var Xd=Jd;class Zd{constructor(e,t,n){this.$http=e,this.Constants=t,this.AnalyticsService=n}get(e){return this.$http.get(this.Constants.env.baseURL+"/configuration/dashboards/"+e)}list(e,t=!1){return this.$http.get(this.Constants.env.baseURL+"/configuration/dashboards/?reference_type="+e,{silentCall:t})}create(e){return this.$http.post(this.Constants.env.baseURL+"/configuration/dashboards/",e)}update(e){return this.$http.put(this.Constants.env.baseURL+"/configuration/dashboards/"+e.id,{id:e.id,reference_type:e.reference_type,reference_id:e.reference_id,name:e.name,query_filter:e.query_filter,order:e.order,enabled:e.enabled,definition:e.definition})}delete(e){return this.$http.delete(this.Constants.env.baseURL+"/configuration/dashboards/"+e.id)}getChartService(){return{chart:{service:{caller:this.AnalyticsService,function:this.AnalyticsService.analytics}}}}getAverageableFields(){return[{label:"Global latency (ms)",value:"response-time",type:"duration"},{label:"API latency (ms)",value:"api-response-time",type:"duration"},{label:"Proxy latency (ms)",value:"proxy-latency",type:"duration"},{label:"Request content length (byte)",value:"request-content-length",type:"length"},{label:"Response content length (byte)",value:"response-content-length",type:"length"}]}getProjectionAggregates(){return[{label:"Average",value:"avg"},{label:"Minimum",value:"min"},{label:"Maximum",value:"max"}]}getHttpStatusField(){return{label:"HTTP Status",value:"status"}}getIndexedFields(){return[{label:"API",value:"api"},{label:"Application",value:"application"},{label:"Plan",value:"plan"},{label:"Path",value:"path"},{label:"Mapped path",value:"mapped-path"},this.getHttpStatusField(),{label:"Tenant",value:"tenant"},{label:"Host",value:"host"},{label:"Consumer IP",value:"remote-address"},{label:"Country",value:"geoip.country_iso_code"},{label:"City",value:"geoip.city_name"},{label:"User",value:"user"},{label:"User agent",value:"user_agent.name"},{label:"Operating system",value:"user_agent.os_name"},{label:"Zone",value:"zone"}]}getNumericFields(){return o.concat(this.getHttpStatusField(),this.getAverageableFields())}getAggregateFields(){return o.concat(o.map(this.getAverageableFields(),e=>(e.aggLabel="Average "+o.lowerCase(e.label),e.aggValue="avg:"+e.value,e)),o.map(this.getIndexedFields(),e=>(e.aggLabel="By "+o.lowerCase(e.label),e.aggValue="field:"+e.value,e)))}}Zd.$inject=["$http","Constants","AnalyticsService"];var ep=Zd;var tp={template:n(920),controller:["DashboardService","NotificationService","$state","$scope","$rootScope","$mdDialog","$timeout",function(e,t,i,s,r,l,c){let d=!0;this.fields=e.getIndexedFields(),this.$rootScope=r,this.updateMode=!0,this.$onInit=()=>{this.editMode=!!i.params.dashboardId,i.params.dashboardId?e.get(i.params.dashboardId).then(t=>{this.dashboard=t.data,this.dashboard.definition&&(this.dashboard.definition=JSON.parse(this.dashboard.definition),o.forEach(this.dashboard.definition,t=>{o.merge(t,e.getChartService())})),s.$watch("$ctrl.dashboard.definition",(e,t)=>{o.isEqual(e,t)||this.formDashboard.$setDirty()},!0)}):this.dashboard={reference_type:i.params.type,reference_id:"DEFAULT",enabled:!0,definition:[]}},this.save=()=>{let n;const s=o.cloneDeep(this.dashboard);s.definition&&(o.forEach(s.definition,e=>{e.chart&&(e.chart.service&&delete e.chart.service,e.chart.request&&(delete e.chart.request.interval,delete e.chart.request.from,delete e.chart.request.to))}),s.definition=a.a.toJson(s.definition)),n=this.editMode?e.update(s):e.create(s),n.then(e=>{i.go("management.settings.analytics.dashboard",o.merge(i.params,{dashboardId:e.data.id}),{reload:!0}),this.formDashboard.$setPristine(),t.show(`Dashboard ${this.editMode?"updated":"created"} with success`)})},this.reset=()=>{i.reload()},this.displayPreview=()=>!!(this.dashboard&&this.dashboard.definition&&this.dashboard.definition.length)&&o.every(this.dashboard.definition,e=>e.chart.type),this.addWidget=()=>{this.dashboard.definition.push(e.getChartService())},this.showQueryFilterInformation=()=>{l.show({controller:"DialogQueryFilterInformationController",controllerAs:"ctrl",template:n(921),parent:a.a.element(document.body),clickOutsideToClose:!0})},this.tooglePreview=()=>{this.updateMode=!this.updateMode,this.updateMode?d?this.formDashboard.$setPristine():c(()=>{this.formDashboard.$setDirty()},100):d=this.formDashboard.$pristine}}]};class np{constructor(e,t){this.$http=e,this.Constants=t}list(){return this.$http.get(this.Constants.org.baseURL+"/user/tokens/")}create(e){if(e)return this.$http.post(this.Constants.org.baseURL+"/user/tokens/",e)}revoke(e){if(e)return this.$http.delete(this.Constants.org.baseURL+"/user/tokens/"+e.id)}}np.$inject=["$http","Constants"];var ip=np;function ap(e,t,n,i,a,o,s){this.title=n.title,this.msg=n.msg,this.cancel=function(){t.hide(!1)},this.confirm=function(){t.hide(!0)},this.generate=function(){i.create({name:this.name}).then(e=>{a.show('Token "'+this.name+'" has been successfully generated.'),this.token=e.data})},this.onClipboardSuccess=function(){a.show("The token has been copied to clipboard")},this.getExampleOfUse=function(e){let t=`${o.org.baseURL}/environments/${o.org.currentEnv.id}`;return t.startsWith("/")&&(t=s.absUrl().split("/#")[0]+t),`curl -H "Authorization: Bearer ${e}" "${t}"`}}ap.$inject=["$scope","$mdDialog","locals","TokenService","NotificationService","Constants","$location"];var op=ap;var sp={template:n(922),bindings:{},controller:["$element","Constants","UserService","$scope","NotificationService",function(e,t,n,i,a){this.displayNewsletterSubscription=!1,this.user=null,this.error=!1,i.$on("graviteeUserRefresh",(e,{user:t,refresh:n})=>{n?this._loadUser():t&&t.authenticated?this.setUser(t):this.setUser(null)}),this._loadUser=()=>{n.current().then(e=>{this.setUser(e)}).catch(()=>this.setUser(null))},this.$onInit=()=>{this._loadUser()},this.setUser=t=>{null!=t?(this.displayNewsletterSubscription=t.displayNewsletterSubscription,this.displayNewsletterSubscription&&(e.addClass("newsletter-open"),this.user=t,this.email=this.user.email)):(e.removeClass("newsletter-open"),this.user=null,this.email=null)},this.close=()=>{e.removeClass("newsletter-open")},this.subscribe=()=>{null!=this.email&&""!==this.email.trim()?n.subscribeNewsletter(this.email).then(e=>{this.setUser(e),a.show("Your newsletter preference has been saved.")}):this.error=!0},this.unsubscribe=()=>{this.user.newsletter=!1,n.save(this.user).then(e=>{this.setUser(e),a.show("Your newsletter preference has been saved.")})}}]};var rp=class{constructor(){this.timeframes=[I.LAST_MINUTE,I.LAST_HOUR,I.LAST_DAY,I.LAST_WEEK,I.LAST_MONTH],this.timeframe||(this.timeframe=I.LAST_MINUTE)}updateTimeframe(){this.onTimeframeChange({timeframe:this.timeframe})}};var lp={template:n(923),controller:"UserAutocompleteController",bindings:{usersSelected:"<",placeHolder:"<",singleUser:"<",selectedUser:"<",userFilterFn:"<",defaultUsersList:"<",disabled:"<"}};class cp{constructor(e){this.UserService=e}$onInit(){this.placeHolder||(this.placeHolder="Search users..."),this.minLength=this.singleUser?0:1,this.autofocus=!this.singleUser}getUserAvatar(e){return this.UserService.getUserAvatar(e)}searchUser(e){return e?this.UserService.search(e).then(e=>{let t=o.sortBy(e.data,["displayName"]);return this.userFilterFn&&"function"==typeof this.userFilterFn&&(t=o.filter(t,this.userFilterFn)),t}):this.defaultUsersList}selectUser(e){if(e)if(this.singleUser)this.usersSelected[0]=e;else{(e.reference?o.find(this.usersSelected,{reference:e.reference}):o.find(this.defaultUsersList,e))||this.usersSelected.push(e),this.searchText=""}else this.singleUser&&null!==this.usersSelected[0]&&(this.usersSelected[0]=null)}}cp.$inject=["UserService"];var dp=cp;function pp(e,t,n,i,a,s,r){this.apiQualityRules=s,this.qualityRules=r,this.cancel=function(){t.hide()},this.confirm=function(e){const s=[];o.forEach(this.qualityRules,e=>{const t=o.find(this.apiQualityRules,{quality_rule:e.id}),a=t&&t.checked;!t||t.new?s.push(i.createApiRule(n.id,e.id,a)):s.push(i.updateApiRule(n.id,e.id,a))}),a.all(s).then(()=>{t.hide({accept:e,message:this.message})})},this.toggleQualityRule=e=>{const t=o.find(this.apiQualityRules,{quality_rule:e.id});t?t.checked=!t.checked:this.apiQualityRules.push({api:n.id,quality_rule:e.id,checked:!0,new:!0})},this.isChecked=e=>{const t=o.find(this.apiQualityRules,{quality_rule:e.id});return t&&t.checked}}pp.$inject=["$scope","$mdDialog","api","QualityRuleService","$q","apiQualityRules","qualityRules"];var mp=pp;function up(e,t){this.cancel=function(){t.hide()},this.confirm=function(){t.hide({message:this.message})}}up.$inject=["$scope","$mdDialog"];var hp=up;var gp={bindings:{application:"<",apis:"<",groups:"<",subscriptions:"<"},template:n(924),controller:"ApplicationSubscribeController"},fp=function(e,t,n,i){return new(n||(n=Promise))((function(a,o){function s(e){try{l(i.next(e))}catch(e){o(e)}}function r(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,r)}l((i=i.apply(e,t||[])).next())}))};class bp{constructor(e,t,n,i,a,o,s){this.ApiService=e,this.Constants=t,this.ApplicationService=n,this.NotificationService=i,this.$mdDialog=a,this.$state=o,this.$transitions=s,this.groups=[],this.subscribedAPIs=[],this.canAccessSelectedApiPlans=!1,this.apis=[],this.plans=[],this.subscribedPlans=[]}$onInit(){return fp(this,void 0,void 0,(function*(){const e=o.groupBy(this.subscriptions.data,"api");this.apis=(yield this.ApiService.list(null,!0,null,null,null,Object.keys(e))).data,o.forEach(e,(e,t)=>{this.subscribedAPIs.push(o.merge(o.find(this.apis,{id:t}),{plans:o.join(o.map(e,e=>this.subscriptions.metadata[e.plan].name),", ")}))}),this.subscribedPlans=o.map(this.subscriptions.data,"plan")}))}searchApiByName(e){return this.ApiService.searchApis(e,1,"name").then(e=>e.data.data)}onSelectAPI(e){if(e){const t=this.getAuthorizedSecurity();this.selectedAPI=e,this.canAccessSelectedApiPlans=!1,this.ApiService.getApiPlans(e.id,"PUBLISHED").then(n=>{this.canAccessSelectedApiPlans=!0,this.plans=o.filter(n.data,e=>{e.alreadySubscribed=o.includes(this.subscribedPlans,e.id);const n=o.find(this.subscriptions.data,{plan:e.id});return e.pending=n&&"PENDING"===n.status,o.includes(t,e.security)}),this.selectedAPI=e,this.refreshPlansExcludedGroupsNames()}).catch(e=>{403===e.status&&e.interceptorFuture&&e.interceptorFuture.cancel()})}else delete this.plans,delete this.selectedAPI}getAuthorizedSecurity(){const e=[Ve.API_KEY];return this.application.settings&&(this.application.settings.oauth||this.application.settings.app&&this.application.settings.app.client_id)&&e.push(Ve.JWT,Ve.OAUTH2),e}onSubscribe(e,t){return fp(this,void 0,void 0,(function*(){this.shouldPromptForKeyMode(t)?this.selectKeyMode().then(e=>this.ApplicationService.update(Object.assign(Object.assign({},this.application),{api_key_mode:e}))).then(()=>this.doSubscribe(t),o.noop):yield this.doSubscribe(t)}))}doSubscribe(e){return fp(this,void 0,void 0,(function*(){const t=yield this.getMessage(e);this.ApplicationService.subscribe(this.application.id,e.id,t).then(()=>{this.NotificationService.show("Subscription to application "+this.application.name+" has been successfully created"),this.$state.reload()})}))}getMessage(e){return fp(this,void 0,void 0,(function*(){if(e.comment_required){const t=this.$mdDialog.prompt().title("Subscription message").placeholder(e.comment_message?e.comment_message:"Fill a message to the API owner").ariaLabel("Subscription message").required(!0).ok("Confirm").cancel("Cancel");return this.$mdDialog.show(t,o.noop)}}))}onUnsubscribe(e,t){const n=this.$mdDialog.confirm({title:"Close subscription?",textContent:"Are you sure you want to close this subscription?",ok:"CLOSE",cancel:"CANCEL"});this.$mdDialog.show(n).then(()=>{this.ApplicationService.closeSubscription(this.application.id,o.find(this.subscriptions.data,{plan:t.id}).id).then(()=>{this.NotificationService.show("Subscription has been successfully closed"),this.$state.reload()})})}refreshPlansExcludedGroupsNames(){this.plans.forEach(e=>{var t;return e.excluded_groups_names=null===(t=e.excluded_groups)||void 0===t?void 0:t.map(e=>{var t;return null===(t=this.groups.find(t=>t.id===e))||void 0===t?void 0:t.name})})}selectKeyMode(){const e={controller:"ApiKeyModeChoiceDialogController",controllerAs:"$ctrl",template:n(251),clickOutsideToClose:!0};return this.$mdDialog.show(e)}shouldPromptForKeyMode(e){return e.security===Ve.API_KEY&&this.isSharedApiKeyEnabled&&this.application.api_key_mode===Qn.UNSPECIFIED&&this.apiKeySubscriptionsCount>=1&&!this.hasAlreadySubscribedApiKeyPlanOnApi(e)}get apiKeySubscriptionsCount(){return this.subscriptions.data.filter(e=>e.security===Ve.API_KEY).length}get isSharedApiKeyEnabled(){var e,t,n,i,a;return null===(a=null===(i=null===(n=null===(t=null===(e=this.Constants.env)||void 0===e?void 0:e.settings)||void 0===t?void 0:t.plan)||void 0===n?void 0:n.security)||void 0===i?void 0:i.sharedApiKey)||void 0===a?void 0:a.enabled}hasAlreadySubscribedApiKeyPlanOnApi(e){return this.subscriptions.data.some(t=>t.api===e.api&&t.security===Ve.API_KEY)}}bp.$inject=["ApiService","Constants","ApplicationService","NotificationService","$mdDialog","$state","$transitions"];var vp=bp;class yp{constructor(e){this.$mdDialog=e}get keyModes(){return Qn}hide(e){e?this.$mdDialog.hide(e):this.$mdDialog.cancel()}}yp.$inject=["$mdDialog"];class Sp{constructor(e,t){this.$http=e,this.Constants=t}list(){return this.$http.get(this.Constants.env.baseURL+"/configuration/quality-rules/")}get(e){return this.$http.get(this.Constants.env.baseURL+"/configuration/quality-rules/"+e)}create(e){return this.$http.post(this.Constants.env.baseURL+"/configuration/quality-rules/",e)}update(e){return this.$http.put(this.Constants.env.baseURL+"/configuration/quality-rules/"+e.id,{name:e.name,description:e.description,weight:e.weight})}delete(e){return this.$http.delete(this.Constants.env.baseURL+"/configuration/quality-rules/"+e.id)}listByApi(e){return this.$http.get(this.Constants.env.baseURL+"/apis/"+e+"/quality-rules/")}createApiRule(e,t,n){return this.$http.post(this.Constants.env.baseURL+"/apis/"+e+"/quality-rules/",{api:e,quality_rule:t,checked:n})}updateApiRule(e,t,n){return this.$http.put(this.Constants.env.baseURL+"/apis/"+e+"/quality-rules/"+t,{checked:n})}}Sp.$inject=["$http","Constants"];var wp=Sp;var Cp={bindings:{qualityRules:"<"},template:n(925),controller:["Constants","$rootScope","PortalSettingsService","NotificationService","$mdDialog",function(e,t,i,a,s){this.$rootScope=t,this.settings=o.cloneDeep(e.env.settings),this.providedConfigurationMessage="Configuration provided by the system",this.save=()=>{i.save(this.settings).then(t=>{o.merge(e.env.settings,t.data),a.show("API Quality settings saved!"),this.formQuality.$setPristine()})},this.reset=()=>{this.settings=o.cloneDeep(e.env.settings),this.formQuality.$setPristine()},this.delete=e=>{s.show({controller:"DeleteApiQualityRuleDialogController",controllerAs:"$ctrl",template:n(926),locals:{qualityRule:e}}).then(t=>{t&&(a.show("Quality rule '"+e.name+"' deleted with success"),o.remove(this.qualityRules,e))})},this.isReadonlySetting=e=>i.isReadonly(this.settings,e)}]};var Ip={bindings:{qualityRule:"<"},controller:"ApiQualityRuleController",template:n(927)};class $p{constructor(e,t,n,i){this.QualityRuleService=e,this.NotificationService=t,this.$state=n,this.$location=i,this.createMode=!1,this.createMode=i.path().endsWith("new")}$onInit(){this.qualityRule||(this.qualityRule={description:"",name:"",weight:0})}save(){(this.createMode?this.QualityRuleService.create(this.qualityRule):this.QualityRuleService.update(this.qualityRule)).then(e=>{const t=e.data;this.NotificationService.show("Quality rule "+t.name+" has been saved."),this.$state.go("management.settings.apiQuality.qualityRule",{qualityRuleId:t.id},{reload:!0})})}}$p.$inject=["QualityRuleService","NotificationService","$state","$location"];var Ap=$p;function Op(e,t,n,i){this.qualityRule=n,this.cancel=function(){t.cancel()},this.ok=function(){i.delete(n).then(()=>{t.hide(!0)})}}Op.$inject=["$scope","$mdDialog","qualityRule","QualityRuleService"];var Tp=Op;function Rp(e){this.cancel=e.cancel}Rp.$inject=["$mdDialog"];var _p=Rp,xp=function(e,t,n,i){return new(n||(n=Promise))((function(a,o){function s(e){try{l(i.next(e))}catch(e){o(e)}}function r(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,r)}l((i=i.apply(e,t||[])).next())}))};class Lp{constructor(e,t){this.$http=e,this.headerName="X-Recaptcha-Token",this.scriptId="reCaptcha",this.enabled=!1,this.loaded=!1,this.display=!1,this.enabled=t.org.settings.reCaptcha&&!!t.org.settings.reCaptcha.enabled,this.enabled&&(this.siteKey=t.org.settings.reCaptcha.siteKey,this.load().then())}load(){return new Promise((e,t)=>{if(this.enabled&&!document.getElementById(this.scriptId))if(this.siteKey){const t=document.createElement("script");t.id=this.scriptId,t.src="https://www.google.com/recaptcha/api.js?render="+this.siteKey,t.async=!0,t.onload=()=>{grecaptcha.ready(()=>{e(),this.loaded=!0,this.displayOrHideBadge()})},document.head.appendChild(t)}else t("[reCaptchaService] Missing public site_key");else e()})}execute(e){return xp(this,void 0,void 0,(function*(){return this.enabled?(this.loaded||(yield this.load()),grecaptcha.execute(this.siteKey,{action:e}).then(e=>{this.reCaptchaToken=e})):Promise.resolve(null)}))}getCurrentToken(){return this.reCaptchaToken}getHeaderName(){return this.headerName}isEnabled(){return this.enabled}displayBadge(){this.display=!0,this.enabled&&this.loaded&&document.getElementsByClassName("grecaptcha-badge")[0].style.setProperty("visibility","initial")}hideBadge(){this.display=!1,this.enabled&&this.loaded&&document.getElementsByClassName("grecaptcha-badge")[0].style.setProperty("visibility","collapse","important")}displayOrHideBadge(){!0===this.display?this.displayBadge():this.hideBadge()}}Lp.$inject=["$http","Constants"];var Pp=Lp;class Np{constructor(e,t,n,i,o,s,r){this.$http=e,this.$scope=t,this.$mdDialog=n,this.Constants=i,this.ThemeService=o,this.NotificationService=s,this.$sce=r,this.connected=!1,this.$onInit=()=>{this.$scope.hasPreview()?(this.handleEventHandlers=this.handleEvent.bind(this),window.addEventListener("message",this.handleEventHandlers,!1),this.loadTheme().then(()=>{this.connectionRequest(),this.$scope.href=this.$scope.targetURL+this.getQueryParams()})):this.loadTheme(),this.initThemeImagesURL()},this.$onDestroy=()=>{this.$scope.hasPreview()&&(window.removeEventListener("message",this.handleEventHandlers),clearInterval(this.connectionRequestInterval))},this.getData=(e={})=>{const t=this.$scope.theme;return null==t.optionalLogo&&(t.optionalLogo=t.logo),Object.assign({},{type:"gravitee",theme:t,isDetached:this.$scope.isDetached,date:Date.now()},e)},this.getWindow=()=>{if(!this.$scope.isDetached){this.detachedWindow=null;const e=document.getElementById("preview");return e?e.contentWindow:null}return null!=this.detachedWindow&&null!=this.detachedWindow.opener||(this.$scope.isDetached=!1),this.detachedWindow},this.connectionRequest=()=>{this.connectionRequestInterval&&clearInterval(this.connectionRequestInterval);let e=0;this.connectionRequestInterval=setInterval(()=>{this.connected||!this.postMessage(this.getData({requestAnswer:!0}),"*")&&++e>=3&&(clearInterval(this.connectionRequestInterval),this.$scope.isDetached=!1,this._reloadIframe())},500)},this.handleEvent=e=>{"gravitee"===e.data.type&&(this.connectionRequestInterval&&this.connect(),e.data.href&&(this.currentHref=e.data.href),e.data.unload&&this.$scope.isDetached&&this._reloadIframe())},this.open=()=>{this.$scope.isDetached?this.detachedWindow.close():(clearInterval(this.connectionRequestInterval),this.$scope.isDetached=!0,this.disconnect(),setTimeout(()=>{this.$scope.accordion.expandAll()},0),setTimeout(()=>{this.detachedWindow=window.open(this.currentHref+this.getQueryParams(),this.$scope.previewName,`width=1024, height=${window.screen.height}, left=${window.screen.width-1024}`),this.connectionRequest()},500))},this.initThemeImagesURL=()=>{this.themeOptionalLogoURL=this.getOptionalLogoUrl(),this.themeBackgroundURL=this.getBackgroundImageUrl()},this.loadTheme=()=>this.ThemeService.get().then(e=>{const t=e.data;this.setTheme(t)}),this.reset=()=>{this.loadTheme().then(()=>{this.NotificationService.show("The theme has been reset."),this.postMessage(this.getData(),this.$scope.targetURL)})},this.restoreDefaultTheme=()=>{const e=this.$mdDialog.confirm({title:"Restore default theme?",textContent:"Are you sure you want to restore the default theme? All your changes will be deleted.",ok:"RESTORE",cancel:"CANCEL"});this.$mdDialog.show(e).then(()=>{this.ThemeService.restoreDefaultTheme(this.$scope.theme).then(e=>{const t=e.data;this.setTheme(t),this.onDataChanged(),this.$scope.themeForm.$commitViewValue(),this.$scope.themeForm.$setSubmitted(),this.$scope.themeForm.$setPristine(),this.NotificationService.show('The "Gravitee" default theme has been restore.')})})},this.update=()=>{this.ThemeService.update(this.$scope.theme).then(()=>{this.$scope.themeForm.$setPristine(),this.NotificationService.show("The theme has been saved.")})},this.onDataChanged=()=>{this.postMessage(this.getData(),this.$scope.targetURL)},this.exportTheme=()=>{const e=this.$scope.theme,t={name:e.name,enabled:e.enabled,definition:e.definition,logo:e.logo,optionalLogo:e.optionalLogo,backgroundImage:e.backgroundImage,favicon:e.favicon},n=document.createElement("a");n.style.display="none",document.body.appendChild(n);const i=new Blob([a.a.toJson(t,2)],{type:"application/octet-stream"}),o=URL.createObjectURL(i);n.href=o,n.download=`gv-theme-${(new Date).getTime()}.json`,n.click(),window.URL.revokeObjectURL(o),n.remove()},t.themeForm={},t.targetURL=i.env.settings.portal.url,t.maxSize=i.env.settings.portal.uploadMedia.maxSizeInOctet,t.trustSrc=function(e){return r.trustAsResourceUrl(e)},t.previewName="GvPreviewName",t.buttonConfig={hasBackdrop:!0,clickOutsideToClose:!0,materialPalette:!1,history:!0,clearButton:!1},t.fonts=["Arial, Helvetica, 'Liberation Sans', FreeSans, sans-serif","'Trebuchet MS', Arial, Helvetica, sans-serif","'Lucida Sans', 'Lucida Grande', 'Lucida Sans Unicode', 'Luxi Sans', sans-serif","Tahoma, Geneva, Kalimati, sans-serif","Verdana, DejaVu Sans, Bitstream Vera Sans, Geneva, sans-serif","Impact, Arial Black, sans-serif","Courier, 'Courier New', FreeMono, 'Liberation Mono', monospace","Monaco, 'DejaVu Sans Mono', 'Lucida Console', 'Andale Mono', monospace","Times, 'Times New Roman', 'Liberation Serif', FreeSerif, serif","Georgia, 'DejaVu Serif', Norasi, serif"],t.hasPreview=()=>null!=t.targetURL&&""!==t.targetURL.trim(),t.onFullscreen=()=>!t.hasPreview()||t.hasPreview()&&t.isDetached,t.getThemeVariables=e=>{const t=this.$scope.theme?this.$scope.themeComponent:{};return t.css?e?t.css.filter(e):t.css:[]},t.$on("accordion:onReady",()=>{setTimeout(()=>{t.hasPreview()?t.accordion.toggle("image"):t.accordion.expandAll()},0)}),t.getGlobalColorVariables=()=>this.$scope.getThemeVariables(e=>"color"===e.type&&e.name.startsWith("--gv-theme-font-color")),t.getGlobalPrimaryColorVariables=()=>this.$scope.getThemeVariables(e=>"color"===e.type&&e.description.includes("Primary")),t.getGlobalHomepageColorVariables=()=>this.$scope.getThemeVariables(e=>"color"===e.type&&e.description.includes("Homepage")),t.getGlobalNeutralColorVariables=()=>this.$scope.getThemeVariables(e=>"color"===e.type&&e.name.startsWith("--gv-theme-neutral-color")),t.getGlobalHomepageVariables=()=>this.$scope.getThemeVariables(e=>"color"!==e.type&&e.description.includes("Homepage")),t.getGlobalFontFamilyVariables=()=>this.$scope.getThemeVariables(e=>e.name.startsWith("--gv-theme-font-family")),t.getGlobalFontSizeVariables=()=>this.$scope.getThemeVariables(e=>e.name.startsWith("--gv-theme-font-size")),t.getComponents=()=>t.theme?t.theme.definition.data.filter(e=>"gv-theme"!==e.name):[],t.isDetached=!1,t.$on("themePictureChangeSuccess",()=>{t.hasPreview()&&setTimeout(()=>{this.onDataChanged()},0)}),t.getOptionalLogo=()=>t.theme?t.theme.optionalLogo?t.theme.optionalLogo:t.theme.logo:""}getDisplayName(e){return e.replace("gv-","").replace("-"," ")}getQueryParams(){return"?preview=on"}getValue(e){return e.value.startsWith("var(")?"":e.value}getColorTitle(e){let t=e.value;if(""===e.value&&e.default.startsWith("var(")){const n=e.default.split(",")[0].replace("var(",""),i=this.$scope.themeComponent.css.find(e=>e.name===n);i&&(t=`(inherited from ${i.description})`)}return`${e.description}: ${t}`}hasColors(e){return null!=e.css.find(e=>"color"===e.type.toLowerCase())}getPlaceholder(e){if(""===e.value&&e.default.startsWith("var(")){const t=e.default.split(",")[0].replace("var(",""),n=this.$scope.themeComponent.css.find(e=>e.name===t);return`Use ${n.description}: ${n.value}`}return e.description}connect(){clearInterval(this.connectionRequestInterval),this.connectionRequestInterval=null,this.connected=!0,clearInterval(this.checkConnectionRequestInterval),this.checkConnectionRequestInterval=setInterval(()=>{this.postMessage(this.getData(),this.$scope.targetURL)},3e4)}disconnect(){this.connected=!1,clearInterval(this.checkConnectionRequestInterval)}_reloadIframe(){this.$scope.$apply(()=>{this.$scope.href=this.currentHref+this.getQueryParams(),this.$scope.isDetached=!1,this.disconnect(),this.connectionRequest()})}setTheme(e){this.$scope.theme=e,this.$scope.themeComponent=e.definition.data.find(e=>"gv-theme"===e.name),this.initThemeImagesURL()}postMessage(e,t){const n=this.getWindow();return!!n&&(n.postMessage(e,t),!0)}getLogoUrl(){return this.$scope.theme?this.ThemeService.getLogoUrl(this.$scope.theme):""}getFaviconUrl(){return this.$scope.theme?this.ThemeService.getFaviconUrl(this.$scope.theme):""}getOptionalLogoUrl(){return this.$scope.theme?this.$scope.theme.optionalLogo?this.ThemeService.getOptionalLogoUrl(this.$scope.theme):this.getLogoUrl():""}getBackgroundImageUrl(){return this.$scope.theme?this.ThemeService.getBackgroundImageUrl(this.$scope.theme):""}importTheme(e,t){if(e){const t=new FileReader;t.readAsText(e),t.onload=e=>{JSON.parse(e.target.result).enabled=!1;const t=Object.assign({},this.$scope.theme,JSON.parse(e.target.result.toString()));this.setTheme(t),this.onDataChanged(),this.$scope.themeForm.$commitViewValue(),this.$scope.themeForm.$setDirty(),this.NotificationService.show("The theme has been loaded successfully, save it to validate the import.")}}if(t&&t.length>0){const e=t[0];"maxSize"===e.$error?this.NotificationService.showError(`Theme "${e.name}" exceeds the maximum authorized size (${this.$scope.maxSize}B)`):this.NotificationService.showError(`File is not valid (error: ${e.$error})`)}}}Np.$inject=["$http","$scope","$mdDialog","Constants","ThemeService","NotificationService","$sce"];var Ep=Np;var Dp={bindings:{views:"<"},controller:"ThemeController",template:n(928)};class jp{constructor(e,t){this.$http=e,this.Constants=t}get(){return this.$http.get(this.Constants.env.baseURL+"/configuration/themes/default")}restoreDefaultTheme(e){return this.$http.post(`${this.Constants.env.baseURL}/configuration/themes/${e.id}/reset`)}update(e){if(e)return this.$http.put(`${this.Constants.env.baseURL}/configuration/themes/${e.id}`,{id:e.id,name:e.name,reference_type:e.reference_type,reference_id:e.reference_id,enabled:e.enabled,definition:e.definition,logo:e.logo,optionalLogo:e.optionalLogo,backgroundImage:e.backgroundImage,favicon:e.favicon})}getLogoUrl(e){return e?this.getImageUrl(e,"logo"):""}getOptionalLogoUrl(e){return e?this.getImageUrl(e,"optionalLogo"):""}getFaviconUrl(e){return e?this.getImageUrl(e,"favicon"):""}getBackgroundImageUrl(e){return e?this.getImageUrl(e,"backgroundImage"):""}getImageUrl(e,t){return`${this.Constants.env.baseURL}/configuration/themes/${e.id}/${t}?${e.updated_at}`}}jp.$inject=["$http","Constants"];var kp=jp;function Up(e){e.withCredentials=!0}Up.$inject=["$authProvider"];var Mp=Up;n(1309);class Fp{constructor(e,t,n,i,a,o,s,r){this.$state=e,this.$scope=t,this.UserService=n,this.NotificationService=i,this.$window=o,this.$rootScope=s,this.taglines=r,t.user=n.currentUser,this.newsletterPage=document.querySelector("gv-newsletter-subscription"),this.newsletterPage.addEventListener("gv-newsletter-subscription:subscribe",this.onSubscribe.bind(this)),this.newsletterPage.addEventListener("gv-newsletter-subscription:skip",this.onSkip.bind(this)),this.newsletterPage.disabled=!!t.user.email,r&&(this.newsletterPage.taglines=r)}onSubscribe({detail:e}){e&&""!==e.trim()&&this.UserService.subscribeNewsletter(e).then(()=>{this.NotificationService.show("Your newsletter preference has been saved."),this._updateState()})}onSkip(){this._updateState()}_updateState(){this.$window.localStorage.setItem("newsletterProposed",!0),this.$rootScope.$broadcast("graviteeUserRefresh",{user:this.$scope.user,refresh:!0}),this.$state.go("management")}}Fp.$inject=["$state","$scope","UserService","NotificationService","Constants","$window","$rootScope","taglines"];var qp=Fp;var Hp={bindings:{fields:"<",fieldFormats:"<",predefinedKeys:"<"},controller:"CustomUserFieldsController",template:n(929)};class Gp{constructor(e,t,n,i){this.$mdDialog=e,this.NotificationService=t,this.UserService=n,this.$state=i,this.$onInit=()=>{};this.canCreate=this.UserService.isUserHasPermissions(["organization-custom_user_fields-c"]),this.canUpdate=this.UserService.isUserHasPermissions(["organization-custom_user_fields-u"]),this.canDelete=this.UserService.isUserHasPermissions(["organization-custom_user_fields-d"])}newField(){this.$mdDialog.show({controller:"NewFieldDialogController",controllerAs:"$ctrl",template:n(438),locals:{fieldFormats:this.fieldFormats,predefinedKeys:this.predefinedKeys}}).then(e=>{this.NotificationService.show(`Field '${e.key}' created with success`),this.$state.reload()}).catch(()=>{})}updateField(e){this.$mdDialog.show({controller:"UpdateFieldDialogController",controllerAs:"$ctrl",template:n(438),locals:{field:e,fieldFormats:this.fieldFormats,predefinedKeys:this.predefinedKeys}}).then(e=>{this.NotificationService.show(`Field '${e.key}' updated with success`),this.$state.reload()}).catch(()=>{})}deleteField(e){this.$mdDialog.show({controller:"DeleteFieldDialogController",controllerAs:"$ctrl",template:n(930),locals:{field:e}}).then(e=>{this.NotificationService.show(`Field '${e.key}' deleted with success`),this.$state.reload()}).catch(()=>{})}fieldDeletable(){return this.canDelete}}Gp.$inject=["$mdDialog","NotificationService","UserService","$state"];var Bp=Gp;class Wp{constructor(e,t){this.$http=e,this.Constants=t,this.valuesAsList=function(e){const t={key:e.key,label:e.label,required:e.required};if(e.values){const n=e.values.split("\n");t.values=n}return t}}mapForUpdateDialog(e){const t={key:e.key,label:e.label,required:e.required};return e.values&&(t.values=e.values.join("\n")),t}listFormats(){return["string"]}listPredefinedKeys(){return["organization","job_position","telephone_number","country","city","zip_code","address"].sort()}list(){return this.$http.get(this.Constants.org.baseURL+"/configuration/custom-user-fields")}create(e){return this.$http.post(this.Constants.org.baseURL+"/configuration/custom-user-fields",this.valuesAsList(e))}update(e){return this.$http.put(this.Constants.org.baseURL+"/configuration/custom-user-fields/"+e.key,this.valuesAsList(e))}delete(e){return this.$http.delete(this.Constants.org.baseURL+"/configuration/custom-user-fields/"+e.key)}}Wp.$inject=["$http","Constants"];var Vp=Wp;function Yp(e,t,n){this.updateAction=!1,this.field={},this.predefinedKeys=n,this.cancel=function(){t.cancel()},this.save=()=>{e.create(this.field).then(e=>{t.hide(e.data)})}}Yp.$inject=["CustomUserFieldsService","$mdDialog","predefinedKeys"];var zp=Yp;function Kp(e,t,n){this.field=n,this.cancel=function(){t.cancel()},this.delete=()=>{e.delete(this.field).then(e=>{t.hide(e.data)})}}Kp.$inject=["CustomUserFieldsService","$mdDialog","field"];var Qp=Kp;function Jp(e,t,n,i){this.updateAction=!0,this.field=e.mapForUpdateDialog(n),this.predefinedKeys=i,this.cancel=()=>{t.cancel()},this.save=()=>{e.update(this.field).then(e=>{t.hide(e.data)})}}Jp.$inject=["CustomUserFieldsService","$mdDialog","field","predefinedKeys"];var Xp=Jp;class Zp{constructor(e,t){this.$http=e,this.Constants=t}getConfigurationSchema(){return this.$http.get(this.Constants.org.baseURL+"/configuration/flows/configuration-schema")}getPlatformFlowSchemaForm(){return this.$http.get(this.Constants.org.baseURL+"/configuration/flows/flow-schema")}getConfiguration(){return this.$http.get(this.Constants.org.baseURL+"/configuration/flows/")}}Zp.$inject=["$http","Constants"];var em,tm=Zp;!function(e){e.EMPTY="empty",e.VALID="valid",e.INVALID="invalid"}(em||(em={}));var nm={bindings:{apiId:"<",applicationId:"<",formReference:"<",label:"<",onChange:"<"},template:n(931),controller:["ApiService",function(e){this.value="",this.state=em.EMPTY,this.$onInit=()=>{this.label=this.label||"Custom API key"},this.valueChange=function(){this.checkApiKeyUnicity(this.value)},this.checkApiKeyUnicity=t=>{(null==t?void 0:t.length)>0&&this.apiId&&this.applicationId?e.verifyApiKey(this.apiId,this.applicationId,t).then(e=>{e&&e.data?this.state=em.VALID:this.state=em.INVALID},()=>{this.state=em.INVALID}).then(()=>this.emitChanges()):(this.state=em.EMPTY,this.emitChanges())},this.isApiKeyValid=()=>this.state===em.VALID,this.isApiKeyInvalid=()=>this.state===em.INVALID,this.emitChanges=()=>{this.onChange({customApiKey:this.value,customApiKeyInputState:this.state})}}]};var im={template:n(932),bindings:{ticket:"<"},controller:["$state",function(e){this.backStateParams={page:e.params.page,size:e.params.size,order:e.params.order}}]};om.$inject=["$stateProvider"];var am=om;function om(e){e.state("organization",{url:"/organization",redirectTo:"organization.settings",parent:"withoutSidenav"}).state("organization.settings",{url:"/settings",component:"organizationSettings",resolve:{settings:["ConsoleSettingsService",e=>e.get().then(e=>e.data)]},data:{menu:null,perms:{only:["organization-role-c","organization-role-u","organization-role-d","environment-documentation-d"]}}}).state("organization.settings.ng-cockpit",{url:"/cockpit",component:"ngCockpit",data:{useAngularMaterial:!0,menu:null,docs:{page:"organization-configuration-cockpit"},perms:{only:["organization-installation-r"]}}}).state("organization.settings.ng-console",{url:"/console",component:"ngConsoleSettings",data:{useAngularMaterial:!0,menu:null,docs:{page:"organization-configuration-console"},perms:{only:["organization-settings-r"]}}}).state("organization.settings.ng-roles",{url:"/roles",component:"ngRoles",data:{useAngularMaterial:!0,menu:null,docs:{page:"organization-configuration-roles"},perms:{only:["organization-role-r"]}}}).state("organization.settings.ng-rolenew",{url:"/role/:roleScope/",component:"ngOrgSettingsRole",data:{useAngularMaterial:!0,menu:null,docs:{page:"organization-configuration-roles"},perms:{only:["organization-role-u"]}}}).state("organization.settings.ng-roleedit",{url:"/role/:roleScope/:role",component:"ngOrgSettingsRole",data:{useAngularMaterial:!0,menu:null,docs:{page:"organization-configuration-roles"},perms:{only:["organization-role-u"]}}}).state("organization.settings.ng-rolemembers",{url:"/role/:roleScope/:role/members",component:"ngRoleMembers",data:{useAngularMaterial:!0,docs:{page:"organization-configuration-roles"},perms:{only:["organization-role-u"]}}}).state("organization.settings.ng-users",{url:"/users?q&page",component:"ngOrgSettingsUsers",data:{useAngularMaterial:!0,menu:null,docs:{page:"organization-configuration-users"},perms:{only:["organization-user-c","organization-user-r","organization-user-u","organization-user-d"]}},params:{page:{value:"1",dynamic:!0},q:{dynamic:!0}}}).state("organization.settings.ng-newuser",{url:"/users/new",component:"ngOrgSettingsNewUser",data:{useAngularMaterial:!0,menu:null,docs:{page:"organization-configuration-create-user"},perms:{only:["organization-user-c"]}}}).state("organization.settings.ng-user",{url:"/users/:userId",component:"ngOrgSettingsUserDetail",data:{useAngularMaterial:!0,menu:null,docs:{page:"organization-configuration-user"},perms:{only:["organization-user-c","organization-user-r","organization-user-u","organization-user-d"]}}}).state("organization.settings.ng-identityproviders",{url:"/identities",component:"ngOrgSettingsIdentityProviders",data:{useAngularMaterial:!0,menu:null,docs:{page:"organization-configuration-identityproviders"},perms:{only:["organization-identity_provider-r"]}}}).state("organization.settings.ng-identityprovider-edit",{url:"/identities/:id",component:"ngOrgSettingsIdentityProvider",data:{useAngularMaterial:!0,menu:null,docs:{page:"organization-configuration-identityproviders"},perms:{only:["organization-identity_provider-r","organization-identity_provider-u","organization-identity_provider-d"]}}}).state("organization.settings.ng-identityprovider-new",{url:"/identities/",component:"ngOrgSettingsIdentityProvider",data:{useAngularMaterial:!0,menu:null,docs:{page:"organization-configuration-identityproviders"},perms:{only:["organization-identity_provider-c"]}}}).state("organization.settings.ng-tags",{url:"/tags",component:"ngOrgSettingsTags",data:{useAngularMaterial:!0,menu:null,docs:{page:"management-configuration-sharding-tags"},perms:{only:["organization-tag-r"]}}}).state("organization.settings.ng-policies",{url:"/policies",component:"ngPlatformPolicies",data:{useAngularMaterial:!0,docs:{page:"management-configuration-policies"},perms:{only:["organization-policies-r"]}}}).state("organization.settings.ng-tenants",{url:"/tenants",component:"ngTenants",data:{useAngularMaterial:!0,menu:null,docs:{page:"management-configuration-tenants"},perms:{only:["organization-tenant-r"]}}}).state("organization.settings.ng-notificationTemplates",{url:"/notification-templates",component:"ngNotificationTemplatesComponent",data:{useAngularMaterial:!0,menu:null,docs:{page:"organization-configuration-notification-templates"},perms:{only:["organization-notification_templates-r"]}}}).state("organization.settings.ng-notificationTemplate",{url:"/notification-templates/:scope/:hook",component:"ngNotificationTemplateComponent",data:{useAngularMaterial:!0,menu:null,docs:{page:"organization-configuration-notification-template"},perms:{only:["organization-notification_templates-r"]}}}).state("organization.settings.ng-audit",{url:"/audit",component:"ngOrgSettingsAudit",data:{useAngularMaterial:!0,menu:null,docs:{page:"management-audit"},perms:{only:["organization-audit-r"]}}})}class sm{constructor(e,t){this.$http=e,this.Constants=t}getGrammar(){return this.$http.get(this.Constants.env.baseURL+"/configuration/spel/grammar")}}sm.$inject=["$http","Constants"];var rm=sm;class lm{constructor(e,t,n){this.$state=e,this.UserService=t,this.Constants=n}$onInit(){const e=["management.dashboard.home"];this.canViewApiStatus=this.Constants.env.settings.dashboards.apiStatus.enabled,this.canViewAnalytics=this.UserService.isUserHasAllPermissions(["environment-platform-r"]),this.canViewAlerts=this.Constants.org.settings.alert.enabled&&this.UserService.isUserHasPermissions(["environment-alert-r"]),this.canViewApiStatus&&e.push("management.dashboard.apis-status"),this.canViewAnalytics&&e.push("management.dashboard.analytics"),this.canViewAlerts&&e.push("management.dashboard.alerts");const t=e.findIndex(e=>this.$state.is(e));this.selectedIndex=t>-1?t:0}}lm.$inject=["$state","UserService","Constants"];var cm=lm;class dm{constructor(e,t,n,i,a){this.eventService=e,this.EnvironmentService=t,this.$scope=n,this.dashboards=i,this.UserService=a,this.eventLabels={},this.eventTypes=[],this.selectedAPIs=[],this.selectedApplications=[],this.selectedEventTypes=[],this.dashboards=this.dashboards.filter(e=>e.enabled),this.timeframe=I.LAST_MINUTE,this.dashboards.length>0&&(this.dashboard=this.dashboards[0]),this.dashboard.definition&&(this.dashboard.definition=JSON.parse(this.dashboard.definition),this.dashboard.definition.forEach(e=>{o.merge(e,{chart:{service:{caller:this.EnvironmentService,function:this.EnvironmentService.analytics}}})})),this.eventLabels.start_api="Start",this.eventLabels.stop_api="Stop",this.eventLabels.publish_api="Deploy",this.eventLabels.unpublish_api="Undeploy",this.eventTypes=["START_API","STOP_API","PUBLISH_API","UNPUBLISH_API"],this.initPagination(),this.refresh(),this.searchEvents=this.searchEvents.bind(this)}searchEvents(){if(this.UserService.currentUser&&(this.UserService.currentUser.userPermissions.includes("api-event-r")||this.UserService.currentUser.userEnvironmentPermissions.includes("environment-platform-r"))){const e=this.selectedAPIs.map(e=>e.id).join(",");let t=this.eventTypes;this.selectedEventTypes.length>0&&(t=this.selectedEventTypes.join(",")),this.$scope.eventsFetchData=!0,this.eventService.search(t,e,this.customTimeframe.from,this.customTimeframe.to,this.query.page-1,this.query.limit).then(e=>{this.events=e.data,this.$scope.eventsFetchData=!1})}}initPagination(){this.query={limit:10,page:1}}getEventLabel(e){return this.eventLabels[e]}refresh(e){e&&(this.timeframe=e);const t=Date.now();this.customTimeframe={interval:this.timeframe.interval,from:t-this.timeframe.range,to:t},this.searchEvents()}}dm.$inject=["eventService","EnvironmentService","$scope","dashboards","UserService"];var pm=dm;n(1310);class mm{constructor(e,t,n,i){this.$scope=e,this.AlertService=t,this.UserService=n,this.$state=i,this.alerts=[]}$onInit(){this.timeframe=I.LAST_MINUTE,this.options={name:"Severity",data:[{name:"INFO",color:mm.INFO_COLOR},{name:"WARNING",color:mm.WARNING_COLOR},{name:"CRITICAL",color:mm.CRITICAL_COLOR}]},this.hasAlertingPlugin&&this.hasConfiguredAlerts&&this.refresh()}searchAlertAnalytics(){const e=this.getContextualInformationFromReferenceType();e.hasPermission&&(this.series=this.AlertService.getAnalytics(this.customTimeframe.from,this.customTimeframe.to,e.scope,this.referenceId).then(e=>(this.alerts=e.data.alerts,this.eventsBySeverity=e.data.bySeverity,{values:Object.assign({},this.eventsBySeverity)})))}refresh(e){e&&(this.timeframe=e);const t=Date.now();this.customTimeframe={interval:this.timeframe.interval,from:t-this.timeframe.range,to:t},this.searchAlertAnalytics()}getContextualInformationFromReferenceType(){var e,t,n;switch(this.referenceType){case"API":return{scope:Os.API,alertCreationUiRef:"management.apis.detail.alerts.alertnew",uiRef:'management.apis.detail.alerts.alert({alertId: alert.id, tab: "history"})',permission:"api-alert-r",hasPermission:null===(e=this.UserService.currentUser)||void 0===e?void 0:e.userApiPermissions.includes("api-alert-r")};case"APPLICATION":return{scope:Os.APPLICATION,alertCreationUiRef:"",uiRef:"",permission:"application-alert-r",hasPermission:null===(t=this.UserService.currentUser)||void 0===t?void 0:t.userApplicationPermissions.includes("application-alert-r")};default:return{scope:Os.ENVIRONMENT,alertCreationUiRef:"management.settings.alerts.alertnew",uiRef:'management.settings.alerts.alert({alertId: alert.id, tab: "history"})',permission:"environment-alert-r",hasPermission:null===(n=this.UserService.currentUser)||void 0===n?void 0:n.userEnvironmentPermissions.includes("environment-alert-r")}}}goToAlertCreation(){this.$state.go(this.getContextualInformationFromReferenceType().alertCreationUiRef)}isAlertCritical(e){return"CRITICAL"===e.severity}isAlertWarning(e){return"WARNING"===e.severity}isAlertInfo(e){return"INFO"===e.severity}getSeverityColor(e){switch(e.severity){case"INFO":return mm.INFO_COLOR;case"WARNING":return mm.WARNING_COLOR;case"CRITICAL":return mm.CRITICAL_COLOR}}}mm.$inject=["$scope","AlertService","UserService","$state"],mm.INFO_COLOR="#54a3ff",mm.WARNING_COLOR="#FF950D",mm.CRITICAL_COLOR="#d73a49";var um={template:n(933),bindings:{referenceType:"<",referenceId:"<",hasConfiguredAlerts:"<",hasAlertingPlugin:"<"},controller:mm};class hm{constructor(e,t){this.configuredAlerts=e,this.alertingStatus=t,this.hasConfiguredAlerts=(null==e?void 0:e.length)>0,this.hasAlertingPlugin=(null==t?void 0:t.available_plugins)>0}}hm.$inject=["configuredAlerts","alertingStatus"];var gm=hm;n(1303);var fm={template:n(934),bindings:{data:"<"},require:{parent:"^gvWidget"},controller:function(){this.$onChanges=function(e){e.data&&e.data.currentValue&&(this.count=e.data.currentValue.count||0)}}};class bm{constructor(e,t,n){this.$http=e,this.Constants=t,this.$q=n}listPromotionTargets(){return this.$http.get(this.Constants.env.baseURL+"/promotion-targets").then(e=>e.data)}promote(e,t){const n={targetEnvCockpitId:t.id,targetEnvName:t.name};return this.$http.post(`${this.Constants.env.baseURL}/apis/${e}/_promote`,n).then(e=>e.data)}processPromotion(e,t){return this.$http.post(`${this.Constants.org.baseURL}/promotions/${e}/_process`,t).then(e=>e.data)}listPromotion(e){return this.$http.post(this.Constants.org.baseURL+"/promotions/_search",null,{params:e}).then(e=>e.data)}}bm.$inject=["$http","Constants","$q"];class vm{constructor(e,t){this.configuredAlerts=e,this.alertingStatus=t,this.hasConfiguredAlerts=(null==e?void 0:e.length)>0,this.hasAlertingPlugin=(null==t?void 0:t.available_plugins)>0}}vm.$inject=["configuredAlerts","alertingStatus"];var ym=vm;var Sm={bindings:{goTo:"<",permissions:"<",destinationIcon:"<",destinationName:"<"},template:n(936),controller:class{constructor(){}}};class wm{constructor(e,t,n){this.$http=e,this.Constants=t,this.ngIfMatchEtagInterceptor=n}debug(e,t){return e.proxy&&e.proxy.endpoints&&e.proxy.endpoints.forEach(e=>{!e.proxy||e.proxy.useSystemProxy||e.proxy.host&&e.proxy.port||delete e.proxy}),this.$http.post(`${this.Constants.env.baseURL}/apis/${e.id}/_debug`,{version:e.version,description:e.description,proxy:e.proxy,paths:e.paths,flows:e.flows,plans:e.plans,private:e.private,visibility:e.visibility,name:e.name,services:e.services,properties:e.properties,tags:e.tags,picture:e.picture,picture_url:e.picture_url,background:e.background,background_url:e.background_url,resources:e.resources,categories:e.categories,groups:e.groups,labels:e.labels,path_mappings:e.path_mappings,response_templates:e.response_templates,lifecycle_state:e.lifecycle_state,disable_membership_notifications:e.disable_membership_notifications,flow_mode:e.flow_mode,gravitee:e.gravitee,request:t},{headers:{"If-Match":this.ngIfMatchEtagInterceptor.getLastEtag("api")}}).then(e=>e.data)}}wm.$inject=["$http","Constants","ngIfMatchEtagInterceptor"];var Cm,Im=n(43),$m=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Am=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Om=function(e,t){return function(n,i){t(n,i,e)}};let Tm=class{constructor(e,t){this.http=e,this.constants=t,this.hasIdpDefined=e=>{var t,n,i,a,o,s;return(null===(n=null===(t=e.authentication)||void 0===t?void 0:t.google)||void 0===n?void 0:n.clientId)||(null===(a=null===(i=e.authentication)||void 0===i?void 0:i.github)||void 0===a?void 0:a.clientId)||(null===(s=null===(o=e.authentication)||void 0===o?void 0:o.oauth2)||void 0===s?void 0:s.clientId)}}static isReadonly(e,t){return!!(e&&e.metadata&&e.metadata.readonly)&&e.metadata.readonly.some(e=>e===t)}save(e){var t,n,i,a;return Object(o.set)(e,"authentication.localLogin.enabled","boolean"==typeof(null===(n=null===(t=e.authentication)||void 0===t?void 0:t.localLogin)||void 0===n?void 0:n.enabled)?null===(a=null===(i=e.authentication)||void 0===i?void 0:i.localLogin)||void 0===a?void 0:a.enabled:!this.hasIdpDefined(e)),this.http.post(this.constants.org.baseURL+"/settings",e).pipe(Object(ot.a)(e=>{Object(o.merge)(this.constants.org.settings,e)}))}get(){return this.http.get(this.constants.org.baseURL+"/settings")}};Tm=$m([Object(nt.Injectable)({providedIn:"root"}),Om(1,Object(nt.Inject)("Constants")),Am("design:paramtypes",["function"==typeof(Cm=void 0!==Tt.b&&Tt.b)?Cm:Object,"function"!=typeof!1&&Object])],Tm);const Rm=["GET","DELETE","PATCH","POST","PUT","OPTIONS","TRACE","HEAD"],_m=["Accept","Accept-Charset","Accept-Encoding","Accept-Language","Accept-Ranges","Access-Control-Allow-Credentials","Access-Control-Allow-Headers","Access-Control-Allow-Methods","Access-Control-Allow-Origin","Access-Control-Expose-Headers","Access-Control-Max-Age","Access-Control-Request-Headers","Access-Control-Request-Method","Age","Allow","Authorization","Cache-Control","Connection","Content-Disposition","Content-Encoding","Content-ID","Content-Language","Content-Length","Content-Location","Content-MD5","Content-Range","Content-Type","Cookie","Date","ETag","Expires","Expect","Forwarded","From","Host","If-Match","If-Modified-Since","If-None-Match","If-Unmodified-Since","Keep-Alive","Last-Modified","Location","Link","Max-Forwards","MIME-Version","Origin","Pragma","Proxy-Authenticate","Proxy-Authorization","Proxy-Connection","Range","Referer","Retry-After","Server","Set-Cookie","Set-Cookie2","TE","Trailer","Transfer-Encoding","Upgrade","User-Agent","Vary","Via","Warning","WWW-Authenticate","X-Forwarded-For","X-Forwarded-Proto","X-Forwarded-Server","X-Forwarded-Host"],xm=()=>e=>{const t=e.value,n=[];return t.forEach(e=>{if("*"!==e&&(e.includes("(")||e.includes("[")||e.includes("*")))try{new RegExp(e)}catch(t){n.push(e)}}),0===n.length?null:{allowOrigin:`"${n.join('", "')}" Regex is invalid`}},Lm=[{code:100,label:"CONTINUE"},{code:101,label:"SWITCHING_PROTOCOLS"},{code:102,label:"PROCESSING"},{code:200,label:"OK"},{code:201,label:"CREATED"},{code:202,label:"ACCEPTED"},{code:203,label:"NON_AUTHORITATIVE_INFORMATION"},{code:204,label:"NO_CONTENT"},{code:205,label:"RESET_CONTENT"},{code:206,label:"PARTIAL_CONTENT"},{code:207,label:"MULTI_STATUS"},{code:300,label:"MULTIPLE_CHOICES"},{code:301,label:"MOVED_PERMANENTLY"},{code:302,label:"MOVED_TEMPORARILY"},{code:302,label:"FOUND"},{code:303,label:"SEE_OTHER"},{code:304,label:"NOT_MODIFIED"},{code:305,label:"USE_PROXY"},{code:307,label:"TEMPORARY_REDIRECT"},{code:400,label:"BAD_REQUEST"},{code:401,label:"UNAUTHORIZED"},{code:402,label:"PAYMENT_REQUIRED"},{code:403,label:"FORBIDDEN"},{code:404,label:"NOT_FOUND"},{code:405,label:"METHOD_NOT_ALLOWED"},{code:406,label:"NOT_ACCEPTABLE"},{code:407,label:"PROXY_AUTHENTICATION_REQUIRED"},{code:408,label:"REQUEST_TIMEOUT"},{code:409,label:"CONFLICT"},{code:410,label:"GONE"},{code:411,label:"LENGTH_REQUIRED"},{code:412,label:"PRECONDITION_FAILED"},{code:413,label:"REQUEST_ENTITY_TOO_LARGE"},{code:414,label:"REQUEST_URI_TOO_LONG"},{code:415,label:"UNSUPPORTED_MEDIA_TYPE"},{code:416,label:"REQUESTED_RANGE_NOT_SATISFIABLE"},{code:417,label:"EXPECTATION_FAILED"},{code:422,label:"UNPROCESSABLE_ENTITY"},{code:423,label:"LOCKED"},{code:424,label:"FAILED_DEPENDENCY"},{code:429,label:"TOO_MANY_REQUESTS"},{code:500,label:"INTERNAL_SERVER_ERROR"},{code:501,label:"NOT_IMPLEMENTED"},{code:502,label:"BAD_GATEWAY"},{code:503,label:"SERVICE_UNAVAILABLE"},{code:504,label:"GATEWAY_TIMEOUT"},{code:505,label:"HTTP_VERSION_NOT_SUPPORTED"},{code:507,label:"INSUFFICIENT_STORAGE"}],Pm={statusCodes:Lm,statusCodeValidator:()=>e=>{const t=e.value;return Object(o.isEmpty)(t)||Lm.find(e=>Object(o.toString)(e.code)===Object(o.toString)(t))?null:{statusCode:`Invalid status code: ${t}.`}}};var Nm,Em=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Dm=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},jm=function(e,t){return function(n,i){t(n,i,e)}};let km=class{constructor(e,t){var n,i,a;this.dialogRef=e,this.title=null!==(n=null==t?void 0:t.title)&&void 0!==n?n:"Are you sure ?",this.content=null==t?void 0:t.content,this.confirmButton=null!==(i=null==t?void 0:t.confirmButton)&&void 0!==i?i:"Yes",this.cancelButton=null!==(a=null==t?void 0:t.cancelButton)&&void 0!==a?a:"Cancel"}};km=Em([Object(nt.Component)({selector:"gio-confirm-dialog",template:n(991)}),jm(1,Object(nt.Inject)(mt.a)),Dm("design:paramtypes",["function"==typeof(Nm=void 0!==mt.g&&mt.g)?Nm:Object,Object])],km);var Um,Mm,Fm,qm,Hm=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Gm=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let Bm=class{constructor(e,t,n,i){this.fb=e,this.consoleSettingsService=t,this.matDialog=n,this.snackBarService=i,this.isLoading=!0,this.providedConfigurationMessage="Configuration provided by the system",this.httpMethods=Rm,this.defaultHttpHeaders=_m,this.unsubscribe$=new ct.a}ngOnInit(){this.consoleSettingsService.get().pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.isLoading=!1,this.settings=e,this.formSettings=this.fb.group({management:this.fb.group({title:[Vm(this.settings,"management.title")],url:[Vm(this.settings,"management.url")],support:this.fb.group({enabled:[Vm(this.settings,"management.support.enabled")]}),pathBasedApiCreation:this.fb.group({enabled:[Vm(this.settings,"management.pathBasedApiCreation.enabled")]}),userCreation:this.fb.group({enabled:[Vm(this.settings,"management.userCreation.enabled")]}),automaticValidation:this.fb.group({enabled:[Vm(this.settings,"management.automaticValidation.enabled")]})}),theme:this.fb.group({name:[Vm(this.settings,"theme.name")],logo:[Vm(this.settings,"theme.logo")],loader:[Vm(this.settings,"theme.loader")]}),scheduler:this.fb.group({tasks:[Vm(this.settings,"scheduler.tasks")],notifications:[Vm(this.settings,"scheduler.notifications")]}),alert:this.fb.group({enabled:[Vm(this.settings,"alert.enabled")]}),cors:this.fb.group({allowOrigin:[Vm(this.settings,"cors.allowOrigin",[],"http.api.management.cors.allow-origin"),[xm()]],allowMethods:[Vm(this.settings,"cors.allowMethods",[],"http.api.management.cors.allow-methods")],allowHeaders:[Vm(this.settings,"cors.allowHeaders",[],"http.api.management.cors.allow-headers")],exposedHeaders:[Vm(this.settings,"cors.exposedHeaders",[],"http.api.management.cors.exposed-headers")],maxAge:[Vm(this.settings,"cors.maxAge",void 0,"http.api.management.cors.max-age")]}),email:this.fb.group({enabled:[Vm(this.settings,"email.enabled")],host:[Vm(this.settings,"email.host")],port:[Vm(this.settings,"email.port")],username:[Vm(this.settings,"email.username")],password:[Vm(this.settings,"email.password")],protocol:[Vm(this.settings,"email.protocol")],subject:[Vm(this.settings,"email.subject")],from:[Vm(this.settings,"email.from")],properties:this.fb.group({auth:[Vm(this.settings,"email.properties.auth")],startTlsEnable:[Vm(this.settings,"email.properties.startTlsEnable")],sslTrust:[Vm(this.settings,"email.properties.sslTrust")]})})}),this.formSettings.get("management.userCreation.enabled").valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{e?this.formSettings.get("management.automaticValidation.enabled").enable():this.formSettings.get("management.automaticValidation.enabled").disable()});const t=["host","port","username","password","protocol","subject","from","properties.auth","properties.startTlsEnable","properties.sslTrust"];this.formSettings.get("email.enabled").valueChanges.subscribe(e=>{t.filter(e=>!Wm(this.settings,"email."+e)).forEach(t=>e?this.formSettings.get("email."+t).enable():this.formSettings.get("email."+t).disable())}),this.formInitialValues=this.formSettings.getRawValue()})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}confirmAllowAllOrigins(){return(e,t)=>{"*"!==e||this.allowAllOriginsConfirmDialog?t(!0):(this.allowAllOriginsConfirmDialog=this.matDialog.open(km,{width:"450px",data:{title:"Are you sure?",content:"Do you want to remove all cross-origin restrictions?",confirmButton:"Yes, I want to allow all origins."},role:"alertdialog",id:"allowAllOriginsConfirmDialog"}),this.allowAllOriginsConfirmDialog.afterClosed().pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.allowAllOriginsConfirmDialog=null,t(e)}))}}onSubmit(){if(this.formSettings.invalid)return;const e=this.formSettings.getRawValue(),t=Object(o.merge)(Object(o.cloneDeep)(this.settings),e);this.consoleSettingsService.save(t).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(()=>this.snackBarService.success("Configuration successfully saved!"))).subscribe(()=>this.ngOnInit())}isReadonlySetting(e){return Wm(this.settings,e)}};Bm=Hm([Object(nt.Component)({selector:"org-settings-general",template:n(992),styles:[n(993)]}),Gm("design:paramtypes",["function"==typeof(Um=void 0!==ln.f&&ln.f)?Um:Object,"function"==typeof(Mm=void 0!==Tm&&Tm)?Mm:Object,"function"==typeof(Fm=void 0!==mt.b&&mt.b)?Fm:Object,"function"==typeof(qm=void 0!==on&&on)?qm:Object])],Bm);const Wm=(e,t)=>Tm.isReadonly(e,t),Vm=(e,t,n,i=t)=>({value:Object(o.get)(e,t,n),disabled:Wm(e,i)});var Ym,zm=n(269),Km=n(245),Qm=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Jm=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Xm=function(e,t){return function(n,i){t(n,i,e)}};let Zm=class{constructor(e,t){this.http=e,this.constants=t}list(e,t=1,n=10){return this.http.get(this.constants.org.baseURL+"/users",{params:Object.assign({page:t,size:n},e?{q:e}:{})})}get(e){return this.http.get(`${this.constants.org.baseURL}/users/${e}`)}getUserAvatar(e){return`${this.constants.org.baseURL}/users/${e}/avatar`}getUserGroups(e){return this.http.get(`${this.constants.org.baseURL}/users/${e}/groups`)}create(e){return this.http.post(this.constants.org.baseURL+"/users",e)}remove(e){return this.http.delete(`${this.constants.org.baseURL}/users/${e}`)}updateUserRoles(e,t,n,i){return this.http.put(`${this.constants.org.baseURL}/users/${e}/roles`,{user:e,referenceId:n,referenceType:t,roles:i})}getMemberships(e,t){return this.http.get(`${this.constants.org.baseURL}/users/${e}/memberships?type=${t}`).pipe(Object(Kt.a)(e=>{var t,n;return{memberships:null!==(t=null==e?void 0:e.memberships)&&void 0!==t?t:[],metadata:null!==(n=null==e?void 0:e.metadata)&&void 0!==n?n:{}}}))}resetPassword(e){return this.http.post(`${this.constants.org.baseURL}/users/${e}/resetPassword`,{})}processRegistration(e,t){return this.http.post(`${this.constants.org.baseURL}/users/${e}/_process`,t)}search(e){return this.http.get(this.constants.org.baseURL+"/search/users",{params:{q:e}})}};Zm=Qm([Object(nt.Injectable)({providedIn:"root"}),Xm(1,Object(nt.Inject)("Constants")),Jm("design:paramtypes",["function"==typeof(Ym=void 0!==Tt.b&&Tt.b)?Ym:Object,"function"!=typeof!1&&Object])],Zm);class eu{static getStatusBadgeCSSClass(e){switch(e.status.toUpperCase()){case"ACTIVE":return"gio-badge-success";case"PENDING":return"gio-badge-warning";case"REJECTED":return"gio-badge-error";default:return""}}}var tu,nu,iu,au,ou=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},su=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},ru=function(e,t){return function(n,i){t(n,i,e)}};let lu=class{constructor(e,t,n,i,a){this.$stateParams=e,this.$state=t,this.usersService=n,this.matDialog=i,this.snackBarService=a,this.displayedColumns=["userPicture","displayName","status","email","source","actions"],this.nbTotalUsers=0,this.filteredTableData=[],this.unsubscribe$=new ct.a,this.filtersStream=new $i.a({pagination:{index:1,size:10},searchTerm:""})}ngOnInit(){var e;const t=null!==(e=this.$stateParams.q)&&void 0!==e?e:"",n=this.$stateParams.page?Number(this.$stateParams.page):1;this.filters={searchTerm:t,pagination:Object.assign(Object.assign({},this.filtersStream.value.pagination),{index:n})},this.filtersStream.next(this.filters),this.filtersStream.pipe(Object(at.a)(this.unsubscribe$),Object(zm.a)(100),Object(Km.a)(),Object(ot.a)(({pagination:e,searchTerm:t})=>{this.$state.go(".",{q:t,page:e.index},{notify:!1})}),Object(st.a)(({pagination:e,searchTerm:t})=>this.usersService.list(t,e.index,e.size).pipe(Object(lt.a)(()=>Object(dt.a)(new Oi))))).subscribe(e=>this.setDataSourceFromUsersList(e))}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onDisplayNameClick(e){this.$state.go("organization.settings.ng-user",{userId:e})}onDeleteUserClick({userId:e,displayName:t}){this.matDialog.open(km,{width:"450px",data:{title:"Delete a user",content:`Are you sure you want to delete the user <strong>${t}</strong>?`,confirmButton:"Delete"},role:"alertdialog",id:"deleteUserConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.usersService.remove(e)),Object(ot.a)(()=>this.snackBarService.success(`User ${t} successfully deleted!`))).subscribe(()=>this.filtersStream.next(Object.assign({},this.filtersStream.value)))}onFiltersChanged(e){this.filtersStream.next(e)}onAddUserClick(){this.$state.go("organization.settings.ng-newuser")}setDataSourceFromUsersList(e){this.filteredTableData=e.data.map(e=>({userId:e.id,displayName:e.displayName,email:e.email,source:e.source,status:e.status,userPicture:e.picture,primary_owner:e.primary_owner,number_of_active_tokens:e.number_of_active_tokens,badgeCSSClass:eu.getStatusBadgeCSSClass(e)})),this.nbTotalUsers=e.page.total_elements}};lu=ou([Object(nt.Component)({selector:"org-settings-users",styles:[n(995)],template:n(997)}),ru(0,Object(nt.Inject)(gt)),ru(1,Object(nt.Inject)(ut)),su("design:paramtypes",[Object,"function"==typeof(tu=void 0!==it.StateService&&it.StateService)?tu:Object,"function"==typeof(nu=void 0!==Zm&&Zm)?nu:Object,"function"==typeof(iu=void 0!==mt.b&&mt.b)?iu:Object,"function"==typeof(au=void 0!==on&&on)?au:Object])],lu);var cu,du=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},pu=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},mu=function(e,t){return function(n,i){t(n,i,e)}};let uu=class{constructor(e,t){this.http=e,this.constants=t}list(){return this.http.get(this.constants.org.baseURL+"/configuration/identities")}delete(e){return this.http.delete(`${this.constants.org.baseURL}/configuration/identities/${e}`)}create(e){return this.http.post(this.constants.org.baseURL+"/configuration/identities",e)}update(e){return this.http.put(`${this.constants.org.baseURL}/configuration/identities/${e.id}`,{name:e.name,description:e.description,configuration:e.configuration,enabled:e.enabled,groupMappings:e.groupMappings,roleMappings:e.roleMappings,userProfileMapping:e.userProfileMapping,emailRequired:e.emailRequired,syncMappings:e.syncMappings}).pipe(Object(Kt.a)(e=>Object.assign({groupMappings:e.groupMappings||[],roleMappings:e.roleMappings||[]},e)))}get(e){return this.http.get(`${this.constants.org.baseURL}/configuration/identities/${e}`).pipe(Object(Kt.a)(e=>Object.assign({groupMappings:e.groupMappings||[],roleMappings:e.roleMappings||[]},e)))}};uu=du([Object(nt.Injectable)({providedIn:"root"}),mu(1,Object(nt.Inject)("Constants")),pu("design:paramtypes",["function"==typeof(cu=void 0!==Tt.b&&Tt.b)?cu:Object,"function"!=typeof!1&&Object])],uu);var hu,gu,fu,bu,vu,yu,Su=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},wu=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Cu=function(e,t){return function(n,i){t(n,i,e)}};!function(e){e.EXTERNAL_USER="EXTERNAL_USER",e.SERVICE_ACCOUNT="SERVICE_ACCOUNT"}(yu||(yu={}));let Iu=class{constructor(e,t,n,i,a){this.formBuilder=e,this.usersService=t,this.identityProviderService=n,this.snackBarService=i,this.$state=a,this.isLoading=!0,this.UserType=yu,this.unsubscribe$=new ct.a,this.graviteeIdp={id:"gravitee",name:"Gravitee"}}ngOnInit(){this.identityProviderService.list().pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{var t,n;this.identityProviders=e;let i={};this.identityProviders&&this.identityProviders.length>0&&(this.identityProviders.unshift(this.graviteeIdp),i={source:[this.graviteeIdp.id,[ln.v.required]],sourceId:[""]}),this.userForm=this.formBuilder.group(Object.assign({type:[yu.EXTERNAL_USER],firstName:["",ln.v.required],lastName:["",ln.v.required],email:["",[ln.v.required,ln.v.email]]},i)),null===(t=this.userForm.get("type"))||void 0===t||t.valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.userForm.removeControl("firstName"),this.userForm.removeControl("lastName"),this.userForm.removeControl("email"),e===yu.SERVICE_ACCOUNT?(this.userForm.addControl("lastName",new ln.g("",[ln.v.required])),this.userForm.addControl("email",new ln.g("",[ln.v.email]))):(this.userForm.addControl("lastName",new ln.g("",[ln.v.required])),this.userForm.addControl("email",new ln.g("",[ln.v.required,ln.v.email])),this.userForm.addControl("firstName",new ln.g("",[ln.v.required])))}),null===(n=this.userForm.get("source"))||void 0===n||n.valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{e!==this.graviteeIdp.id?this.userForm.get("sourceId").addValidators(ln.v.required):(this.userForm.get("sourceId").clearValidators(),this.userForm.get("sourceId").reset()),this.userForm.updateValueAndValidity()}),this.isLoading=!1})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onSubmit(){if(this.userForm.invalid)return;const e=this.userForm.getRawValue(),t={firstname:e.firstName,lastname:e.lastName,email:e.email,source:e.source,sourceId:e.source===this.graviteeIdp.id?"":e.sourceId,service:e.type===yu.SERVICE_ACCOUNT};this.usersService.create(t).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(()=>{this.snackBarService.success("New user successfully registered!"),this.$state.go("organization.settings.ng-users")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe()}};Iu=Su([Object(nt.Component)({selector:"org-settings-new-user",template:n(998),styles:[n(999)]}),Cu(4,Object(nt.Inject)(ut)),wu("design:paramtypes",["function"==typeof(hu=void 0!==ln.f&&ln.f)?hu:Object,"function"==typeof(gu=void 0!==Zm&&Zm)?gu:Object,"function"==typeof(fu=void 0!==uu&&uu)?fu:Object,"function"==typeof(bu=void 0!==on&&on)?bu:Object,"function"==typeof(vu=void 0!==it.StateService&&it.StateService)?vu:Object])],Iu);var $u,Au=n(468),Ou=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Tu=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Ru=function(e,t){return function(n,i){t(n,i,e)}};let _u=class{constructor(e,t){this.http=e,this.constants=t}listActivatedIdentityProviders(){return this.http.get(this.constants.org.baseURL+"/identities")}updateActivatedIdentityProviders(e){return this.http.put(this.constants.org.baseURL+"/identities",e)}get(){return this.http.get(""+this.constants.org.baseURL)}update(e){return this.http.put(""+this.constants.org.baseURL,e)}};_u=Ou([Object(nt.Injectable)({providedIn:"root"}),Ru(1,Object(nt.Inject)("Constants")),Tu("design:paramtypes",["function"==typeof($u=void 0!==Tt.b&&Tt.b)?$u:Object,"function"!=typeof!1&&Object])],_u);const xu=(e,t,n)=>{let i=Object(o.cloneDeep)(e);if((null==t?void 0:t.searchTerm)&&(i=i.filter(e=>Object.entries(e).filter(([e])=>{var t;return!(null!==(t=null==n?void 0:n.searchTermIgnoreKeys)&&void 0!==t?t:[]).includes(e)}).some(([,e])=>Object(o.toString)(e).toLowerCase().includes(t.searchTerm.toLowerCase())))),null==t?void 0:t.sort){const e=""===t.sort.direction?"asc":t.sort.direction;i=Object(o.orderBy)(i,t.sort.active,e)}const a=i.length;return(null==t?void 0:t.pagination)&&(i=i.slice((t.pagination.index-1)*t.pagination.size,t.pagination.index*t.pagination.size)),{unpaginatedLength:a,filteredCollection:i}},Lu=(e,t)=>null==e||""===e.trim()?t:{active:e.startsWith("-")?e.substring(1):e,direction:e.startsWith("-")?"desc":"asc"},Pu=e=>{if(null!=e)return"desc"===e.direction?"-"+e.active:e.active};var Nu,Eu,Du,ju,ku,Uu,Mu=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Fu=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},qu=function(e,t){return function(n,i){t(n,i,e)}};let Hu=class{constructor(e,t,n,i,a,o){this.identityProviderService=e,this.consoleSettingsService=t,this.organizationService=n,this.snackBarService=i,this.matDialog=a,this.$state=o,this.providedConfigurationMessage="Configuration provided by the system",this.displayedColumns=["logo","id","name","description","activated","sync","availableOnPortal","updatedAt","actions"],this.tableData=[],this.filteredTableData=[],this.tableUnpaginatedLength=0,this.unsubscribe$=new ct.a}ngOnInit(){Object(Au.a)([this.identityProviderService.list(),this.consoleSettingsService.get(),this.organizationService.listActivatedIdentityProviders()]).pipe(Object(at.a)(this.unsubscribe$)).subscribe(([e,t,n])=>{this.setDataSourceFromIdentityProviders(e,n),this.consoleSettings=t})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onFiltersChanged(e){const t=xu(this.tableData,e);this.filteredTableData=t.filteredCollection,this.tableUnpaginatedLength=t.unpaginatedLength}onDeleteActionClicked(e){this.matDialog.open(km,{width:"500px",data:{title:"Delete an Identity Provider",content:`Are you sure you want to delete the identity provider <strong>${e.name}</strong>?`,confirmButton:"Delete"},role:"alertdialog",id:"deleteIdentityProviderConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.identityProviderService.delete(e.id)),Object(ot.a)(()=>this.snackBarService.success(`Identity Provider ${e.name} successfully deleted!`))).subscribe(()=>this.ngOnInit())}onEditActionClicked(e){this.$state.go("organization.settings.ng-identityprovider-edit",{id:e.id})}onActivationToggleActionClicked(e){this.matDialog.open(km,{width:"500px",data:{title:(e.activated?"Deactivate":"Activate")+" an Identity Provider",content:`Are you sure you want to ${e.activated?"deactivate":"activate"} the identity provider <strong>${e.name}</strong>?`,confirmButton:"Ok"},role:"alertdialog",id:"deleteIdentityProviderConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>{e.activated=!e.activated;const t=this.tableData.filter(e=>!0===e.activated).map(e=>({identityProvider:e.id}));return this.organizationService.updateActivatedIdentityProviders(t)}),Object(ot.a)(()=>this.snackBarService.success(`Identity Provider ${e.name} successfully ${e.activated?"activated":"deactivated"}!`))).subscribe(()=>this.ngOnInit())}updateLocalLogin(e){this.consoleSettingsService.save(Object.assign(Object.assign({},this.consoleSettings),{authentication:Object.assign(Object.assign({},this.consoleSettings.authentication),{localLogin:{enabled:e}})})).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(()=>this.snackBarService.success("Configuration successfully updated!"))).subscribe(e=>{this.consoleSettings=e})}isReadonlySetting(e){return Tm.isReadonly(this.consoleSettings,e)}hasActivatedIdp(){return this.tableData.some(e=>e.activated)}setDataSourceFromIdentityProviders(e,t){const n=e.map(e=>({logo:`assets/logo_${e.type.toLowerCase()}-idp.svg`,id:e.id,name:e.name,description:e.description,availableOnPortal:e.enabled,activated:t.some(t=>t.identityProvider===e.id),sync:e.sync,updatedAt:e.updated_at})).sort((e,t)=>"gravitee-am"===e.id?-1:"gravitee-am"===t.id?1:e.id.localeCompare(t.id));this.tableData=n,this.filteredTableData=n,this.tableUnpaginatedLength=n.length}getLocalLoginTooltipMessage(){return this.isReadonlySetting("console.authentication.localLogin.enabled")?this.providedConfigurationMessage:this.hasActivatedIdp()?null:"You must create and activate an identity provider to be able to update this setting"}onAddIdpClicked(){this.$state.go("organization.settings.ng-identityprovider-new")}};Hu=Mu([Object(nt.Component)({selector:"org-settings-identity-providers",styles:[n(1001)],template:n(1003)}),qu(5,Object(nt.Inject)(ut)),Fu("design:paramtypes",["function"==typeof(Nu=void 0!==uu&&uu)?Nu:Object,"function"==typeof(Eu=void 0!==Tm&&Tm)?Eu:Object,"function"==typeof(Du=void 0!==_u&&_u)?Du:Object,"function"==typeof(ju=void 0!==on&&on)?ju:Object,"function"==typeof(ku=void 0!==mt.b&&mt.b)?ku:Object,"function"==typeof(Uu=void 0!==it.StateService&&it.StateService)?Uu:Object])],Hu);var Gu,Bu=n(71),Wu=n(1670),Vu=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Yu=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},zu=function(e,t){return function(n,i){t(n,i,e)}};let Ku=class{constructor(e,t){this.http=e,this.constants=t}list(){return this.http.get(this.constants.org.baseURL+"/environments")}getCurrent(){return this.http.get(this.constants.env.baseURL)}};Ku=Vu([Object(nt.Injectable)({providedIn:"root"}),zu(1,Object(nt.Inject)("Constants")),Yu("design:paramtypes",["function"==typeof(Gu=void 0!==Tt.b&&Tt.b)?Gu:Object,"function"!=typeof!1&&Object])],Ku);var Qu,Ju=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Xu=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Zu=function(e,t){return function(n,i){t(n,i,e)}};let eh=class{constructor(e,t){this.http=e,this.constants=t}list(){return this.http.get(this.constants.env.baseURL+"/configuration/groups")}listByOrganization(){return this.http.get(this.constants.org.baseURL+"/groups")}addOrUpdateMemberships(e,t){const n=t.filter(e=>!Object(o.isEmpty)(e.roles));return Object(o.isEmpty)(n)?Object(dt.a)(void 0):this.http.post(`${this.constants.env.baseURL}/configuration/groups/${e}/members`,n)}deleteMember(e,t){return this.http.delete(`${this.constants.env.baseURL}/configuration/groups/${e}/members/${t}`)}};eh=Ju([Object(nt.Injectable)({providedIn:"root"}),Zu(1,Object(nt.Inject)("Constants")),Xu("design:paramtypes",["function"==typeof(Qu=void 0!==Tt.b&&Tt.b)?Qu:Object,"function"!=typeof!1&&Object])],eh);var th,nh=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},ih=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},ah=function(e,t){return function(n,i){t(n,i,e)}};let oh=class{constructor(e,t){this.http=e,this.constants=t}list(e){return this.http.get(`${this.constants.org.baseURL}/configuration/rolescopes/${e}/roles`).pipe(Object(Kt.a)(e=>e.map(e=>Object.assign(Object.assign({},e),{scope:e.scope.toUpperCase()}))))}getPermissionsByScopes(){return this.http.get(this.constants.org.baseURL+"/configuration/rolescopes")}getPermissionsByScope(e){const t=["API","APPLICATION","ENVIRONMENT","ORGANIZATION"];if(!t.includes(e))throw new Error("Invalid scope. The accepted scopes are "+t.join(" | "));return this.getPermissionsByScopes().pipe(Object(Kt.a)(t=>t[e]))}get(e,t){return this.http.get(`${this.constants.org.baseURL}/configuration/rolescopes/${e}/roles/${t}`).pipe(Object(Kt.a)(e=>Object.assign(Object.assign({},e),{scope:e.scope.toUpperCase()})))}create(e){return this.http.post(`${this.constants.org.baseURL}/configuration/rolescopes/${e.scope}/roles`,e)}update(e){return this.http.put(`${this.constants.org.baseURL}/configuration/rolescopes/${e.scope}/roles/${e.name}`,e)}delete(e,t){return this.http.delete(`${this.constants.org.baseURL}/configuration/rolescopes/${e}/roles/${t}`)}listMemberships(e,t){return this.http.get(`${this.constants.org.baseURL}/configuration/rolescopes/${e}/roles/${t}/users`)}deleteMembership(e,t,n){return this.http.delete(`${this.constants.org.baseURL}/configuration/rolescopes/${e}/roles/${t}/users/${n}`)}createMembership(e,t,n){return this.http.post(`${this.constants.org.baseURL}/configuration/rolescopes/${e}/roles/${t}/users`,n)}};oh=nh([Object(nt.Injectable)({providedIn:"root"}),ah(1,Object(nt.Inject)("Constants")),ih("design:paramtypes",["function"==typeof(th=void 0!==Tt.b&&Tt.b)?th:Object,"function"!=typeof!1&&Object])],oh);var sh,rh,lh,ch,dh,ph,mh,uh=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},hh=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},gh=function(e,t){return function(n,i){t(n,i,e)}};let fh=class{constructor(e,t,n,i,a,o,s,r){this.identityProviderService=e,this.groupService=t,this.roleService=n,this.environmentService=i,this.snackBarService=a,this.changeDetectorRef=o,this.ajsState=s,this.ajsStateParams=r,this.isLoading=!0,this.mode="new",this.initialIdentityProviderValue=null,this.identityProviderType=null,this.groups$=this.groupService.list().pipe(Object(Wu.a)()),this.organizationRoles$=this.roleService.list("ORGANIZATION").pipe(Object(Wu.a)()),this.environments$=this.environmentService.list().pipe(Object(Wu.a)()),this.environmentRoles$=this.roleService.list("ENVIRONMENT").pipe(Object(Wu.a)()),this.environmentTableDisplayedColumns=["name","description","actions"],this.unsubscribe$=new ct.a,this.identityProviderFormControlKeys=[]}set providerConfiguration(e){e&&this._providerPartName!==e.name&&(this._providerPartName=e.name,this.addProviderFormGroups(e.getFormGroups()))}ngOnInit(){this.identityProviderFormGroup=new ln.i({type:new ln.g,enabled:new ln.g(!0),name:new ln.g(null,[ln.v.required,ln.v.maxLength(50),ln.v.minLength(2)]),description:new ln.g,emailRequired:new ln.g(!0),syncMappings:new ln.g(!1)}),this.identityProviderFormGroup.get("type").valueChanges.pipe(Object(at.a)(this.unsubscribe$),Object(Km.a)()).subscribe(e=>{this.identityProviderType=e,this.identityProviderFormGroup.markAsUntouched()}),this.ajsStateParams.id?(this.mode="edit",Object(Au.a)([this.identityProviderService.get(this.ajsStateParams.id),this.environments$]).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(([e,t])=>{this.identityProviderType=e.type,this.initialIdentityProviderValue=Object(o.cloneDeep)(e),this.identityProviderFormGroup.addControl("groupMappings",new ln.d([]),{emitEvent:!1}),e.groupMappings.forEach(e=>this.addGroupMappingToIdentityProviderFormGroup(e,!1)),this.allEnvironments=t,this.identityProviderFormGroup.addControl("roleMappings",new ln.d([]),{emitEvent:!1}),e.roleMappings.forEach(e=>this.addRoleMappingToIdentityProviderFormGroup(e,!1)),this.isLoading=!1})).subscribe()):(this.mode="new",this.identityProviderFormGroup.get("type").setValue("GRAVITEEIO_AM"),this.isLoading=!1)}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}addProviderFormGroups(e){this.isLoading||(Object(o.isEmpty)(this.identityProviderFormControlKeys)||(this.identityProviderFormControlKeys.forEach(e=>{this.identityProviderFormGroup.removeControl(e)}),this.identityProviderFormControlKeys=[]),this.identityProviderFormGroup&&!Object(o.isEmpty)(e)&&Object.entries(e).forEach(([e,t])=>{this.identityProviderFormControlKeys.push(e),this.identityProviderFormGroup.addControl(e,t,{emitEvent:!1})}),"edit"===this.mode&&(this.identityProviderFormGroup.patchValue(this.initialIdentityProviderValue,{emitEvent:!1}),this.identityProviderFormGroup.markAsPristine(),this.identityProviderFormGroup.markAsUntouched(),this.changeDetectorRef.detectChanges()))}onSubmit(){if(this.identityProviderFormGroup.invalid)return;const e=this.identityProviderFormGroup.getRawValue();("new"===this.mode?this.identityProviderService.create(e):this.identityProviderService.update(Object.assign(Object.assign({},this.initialIdentityProviderValue),e))).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(()=>{this.snackBarService.success("Identity provider successfully saved!")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(e=>{"new"===this.mode?this.ajsState.go("organization.settings.ng-identityprovider-edit",{id:e.id}):this.resetComponent()})}addGroupMappingToIdentityProviderFormGroup(e,t=!0){var n,i;this.identityProviderFormGroup.get("groupMappings").push(new ln.i({condition:new ln.g(null!==(n=null==e?void 0:e.condition)&&void 0!==n?n:null,[ln.v.required]),groups:new ln.g(null!==(i=null==e?void 0:e.groups)&&void 0!==i?i:[],[ln.v.required])}),{emitEvent:t}),t&&this.identityProviderFormGroup.markAsDirty()}removeGroupMappingFromIdentityProviderFormGroup(e){this.identityProviderFormGroup.get("groupMappings").removeAt(e),this.identityProviderFormGroup.markAsDirty()}addRoleMappingToIdentityProviderFormGroup(e,t=!0){var n,i;this.identityProviderFormGroup.get("roleMappings").push(new ln.i({condition:new ln.g(null!==(n=null==e?void 0:e.condition)&&void 0!==n?n:null,[ln.v.required]),organizations:new ln.g(null!==(i=null==e?void 0:e.organizations)&&void 0!==i?i:[],[ln.v.required]),environments:new ln.i(Object.assign({},this.allEnvironments.reduce((t,n)=>{var i;return Object.assign(Object.assign({},t),{[n.id]:new ln.g(null!==(i=null==e?void 0:e.environments[n.id])&&void 0!==i?i:[],[ln.v.required])})},{})))}),{emitEvent:t}),t&&this.identityProviderFormGroup.markAsDirty()}removeRoleMappingFromIdentityProviderFormGroup(e){this.identityProviderFormGroup.get("roleMappings").removeAt(e),this.identityProviderFormGroup.markAsDirty()}onFormReset(){this.identityProviderFormGroup.get("groupMappings").clear(),this.initialIdentityProviderValue.groupMappings.forEach(e=>this.addGroupMappingToIdentityProviderFormGroup(e,!1))}resetComponent(){this.isLoading=!0,this.initialIdentityProviderValue=null,this._providerPartName=null,this.identityProviderType=null,this.ngOnInit()}};uh([Object(nt.ViewChild)("providerConfiguration",{static:!1}),hh("design:type",Object),hh("design:paramtypes",[Object])],fh.prototype,"providerConfiguration",null),fh=uh([Object(nt.Component)({selector:"org-settings-identity-provider",styles:[n(1009)],template:n(1011)}),gh(6,Object(nt.Inject)(ut)),gh(7,Object(nt.Inject)(gt)),hh("design:paramtypes",["function"==typeof(sh=void 0!==uu&&uu)?sh:Object,"function"==typeof(rh=void 0!==eh&&eh)?rh:Object,"function"==typeof(lh=void 0!==oh&&oh)?lh:Object,"function"==typeof(ch=void 0!==Ku&&Ku)?ch:Object,"function"==typeof(dh=void 0!==on&&on)?dh:Object,"function"==typeof(ph=void 0!==nt.ChangeDetectorRef&&nt.ChangeDetectorRef)?ph:Object,"function"==typeof(mh=void 0!==Bu.StateService&&Bu.StateService)?mh:Object,Object])],fh);var bh,vh=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},yh=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Sh=function(e,t){return function(n,i){t(n,i,e)}};let wh=class{constructor(e,t){this.http=e,this.constants=t}search(e){const t={};return Object(o.isNil)(null==e?void 0:e.scope)||(t.scope=e.scope),Object(o.isNil)(null==e?void 0:e.hook)||(t.hook=e.hook),this.http.get(this.constants.org.baseURL+"/configuration/notification-templates",{params:t})}create(e){return this.http.post(this.constants.org.baseURL+"/configuration/notification-templates",e)}update(e){return this.http.put(`${this.constants.org.baseURL}/configuration/notification-templates/${e.id}`,e)}};wh=vh([Object(nt.Injectable)({providedIn:"root"}),Sh(1,Object(nt.Inject)("Constants")),yh("design:paramtypes",["function"==typeof(bh=void 0!==Tt.b&&Tt.b)?bh:Object,"function"!=typeof!1&&Object])],wh);var Ch,Ih,$h=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Ah=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Oh=function(e,t){return function(n,i){t(n,i,e)}};let Th=class{constructor(e,t,n){this.notificationTemplateService=e,this.constants=t,this.ajsState=n,this.displayedColumns=["name","description","actions"]}ngOnInit(){this.notificationTemplateService.search().subscribe(e=>{this.notificationTemplatesByScope=this.groupNotificationTemplatesVMByScope(e)})}groupNotificationTemplatesVMByScope(e){var t;let n=e;return(null===(t=this.constants.org.settings.alert)||void 0===t?void 0:t.enabled)||(n=e.filter(e=>"TEMPLATES_FOR_ALERT"!==e.scope)),Object(o.chain)(n).sort((e,t)=>e.scope.localeCompare(t.scope)||e.name.localeCompare(t.name)).groupBy(e=>`${e.scope}-${e.name}`).mapValues(e=>{const t=e[0];return{humanReadableScope:this.getHumanReadableScope(t.scope),scope:t.scope,name:t.name,hook:t.hook,description:t.description,overridden:e.some(e=>!0===e.enabled),icon:this.getScopeIcon(t.scope)}}).toArray().groupBy("humanReadableScope").value()}onEditActionClicked(e){this.ajsState.go("organization.settings.ng-notificationTemplate",{scope:e.scope,hook:e.hook&&""!==e.hook?e.hook:e.name})}getHumanReadableScope(e){return"API"===e?"API":Object(o.capitalize)(e.split("_").join(" "))}getScopeIcon(e){switch(e){case"API":return"dashboard";case"APPLICATION":return"list";case"PORTAL":return"important_devices";case"TEMPLATES_FOR_ACTION":return"assignment";case"TEMPLATES_FOR_ALERT":return"notifications";case"TEMPLATES_TO_INCLUDE":return"folder_open";default:return""}}};Th=$h([Object(nt.Component)({selector:"org-settings-notification-templates",styles:[n(1012)],template:n(1014)}),Oh(1,Object(nt.Inject)("Constants")),Oh(2,Object(nt.Inject)(ut)),Ah("design:paramtypes",["function"==typeof(Ch=void 0!==wh&&wh)?Ch:Object,"function"!=typeof!1&&Object,"function"==typeof(Ih=void 0!==Bu.StateService&&Bu.StateService)?Ih:Object])],Th);var Rh,_h,xh=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Lh=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let Ph=class{constructor(e,t){this.installationService=e,this.cockpitService=t,this.isLoading=!0,this.icon="",this.title="",this.message="",this.unsubscribe$=new ct.a}ngOnInit(){this.installationService.get().pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(e=>{this.setupVM(e),this.isLoading=!1})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}setupVM(e){const t=e.additionalInformation.COCKPIT_INSTALLATION_STATUS,n=`<a href="${this.cockpitService.addQueryParamsForAnalytics(e.cockpitURL,It.DISCOVER_COCKPIT,t)}" target="_blank">Cockpit</a>`;switch(t){case"PENDING":return this.icon="schedule",this.title="Almost there!",void(this.message=`Your installation is connected but it still has to be accepted on ${n}!`);case"ACCEPTED":return this.icon="check_circle",this.title="Congratulation!",void(this.message=`Your installation is now connected to ${n}, you can now explore all the possibilities offered by Cockpit!`);case"REJECTED":return this.icon="warning",this.title="No luck!",void(this.message=`Seems that your installation is connected to ${n}, but has been rejected...`);case"DELETED":return this.icon="gps_off",this.title="Installation unlinked!",void(this.message=`Seems that your installation is connected to ${n}, but is not linked anymore...`);default:return this.icon="explore",this.title="Meet Cockpit...",void(this.message=`Create an account on ${n}, register your current installation and start creating new organizations and environments!`)}}};Ph=xh([Object(nt.Component)({selector:"org-settings-cockpit",template:n(1015),styles:[n(1016)]}),Lh("design:paramtypes",["function"==typeof(Rh=void 0!==Lt&&Lt)?Rh:Object,"function"==typeof(_h=void 0!==At&&At)?_h:Object])],Ph);var Nh,Eh=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Dh=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},jh=function(e,t){return function(n,i){t(n,i,e)}};let kh=class{constructor(e,t){this.http=e,this.constants=t}get(){return this.http.get(this.constants.org.baseURL+"/installation")}getStatus(e,t){return this.http.get(this.getReferenceURL(e,t)+"/alerts/status")}getReferenceURL(e,t){switch(e){case Os.API:return`${this.constants.env.baseURL}/apis/${t}`;case Os.APPLICATION:return`${this.constants.env.baseURL}/applications/${t}`;default:return this.constants.env.baseURL+"/platform"}}};kh=Eh([Object(nt.Injectable)({providedIn:"root"}),jh(1,Object(nt.Inject)("Constants")),Dh("design:paramtypes",["function"==typeof(Nh=void 0!==Tt.b&&Tt.b)?Nh:Object,"function"!=typeof!1&&Object])],kh);var Uh,Mh,Fh,qh,Hh=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Gh=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Bh=function(e,t){return function(n,i){t(n,i,e)}};let Wh=class{constructor(e,t,n,i){this.notificationTemplateService=e,this.alertService=t,this.routerStateParams=n,this.snackBarService=i,this.notificationTemplates=[],this.notificationTemplateName="",this.isLoading=!0,this.isTemplateToInclude=!1,this.unsubscribe$=new ct.a,this.scopeParam=this.routerStateParams.scope,this.hookParam="TEMPLATES_TO_INCLUDE"===this.scopeParam.toUpperCase()?"":this.routerStateParams.hook}ngOnInit(){Object(Au.a)([this.notificationTemplateService.search({scope:this.scopeParam,hook:this.hookParam}),this.alertService.getStatus(Os.ENVIRONMENT)]).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(([e,t])=>{this.hasAlertingPlugin=t.available_plugins>0,this.notificationTemplates=e,this.notificationTemplateName=this.notificationTemplates[0].name,this.isTemplateToInclude=this.notificationTemplates.some(e=>"TEMPLATES_TO_INCLUDE"===e.scope.toUpperCase()),this.setupNotificationTemplateForm(),this.isLoading=!1})).subscribe()}setupNotificationTemplateForm(){this.notificationTemplatesForm=new ln.i({}),this.notificationTemplates.forEach(e=>{const t=new ln.g(!!e.enabled),n=new ln.g({value:e.title,disabled:!e.enabled},[ln.v.required]),i=new ln.g({value:e.content,disabled:!e.enabled},[ln.v.required]),a=new ln.i({useCustomTemplate:t,content:i});this.isTemplateToInclude||a.addControl("title",n),this.notificationTemplatesForm.addControl(e.type,a),t.valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{e?(n.enable(),i.enable()):(n.disable(),i.disable())})}),this.formInitialValues=this.notificationTemplatesForm.getRawValue()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}submitForm(){const e=this.notificationTemplates.map(e=>{var t,n;const i=this.notificationTemplatesForm.getRawValue()[e.type],a=Object.assign(Object.assign({},e),{enabled:i.useCustomTemplate,title:null!==(t=i.title)&&void 0!==t?t:"",content:null!==(n=i.content)&&void 0!==n?n:""});return a.id?this.notificationTemplateService.update(a):this.notificationTemplateService.create(a)});Object(Au.a)(e).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(()=>{this.snackBarService.success("Template has been successfully saved!")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}};Wh=Hh([Object(nt.Component)({selector:"org-settings-notification-template",styles:[n(1018)],template:n(1020)}),Bh(2,Object(nt.Inject)(gt)),Gh("design:paramtypes",["function"==typeof(Uh=void 0!==wh&&wh)?Uh:Object,"function"==typeof(Mh=void 0!==kh&&kh)?Mh:Object,"function"==typeof(Fh=void 0!==it.StateParams&&it.StateParams)?Fh:Object,"function"==typeof(qh=void 0!==on&&on)?qh:Object])],Wh);var Vh,Yh,zh,Kh=n(130),Qh=n(1672),Jh=n(231),Xh=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Zh=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},eg=function(e,t){return function(n,i){t(n,i,e)}};let tg=class{constructor(e,t,n,i){this.dialogRef=e,this.userDetailData=t,this.groupService=n,this.roleService=i,this.isUpdate=!1,this.apiRoles$=this.roleService.list("API").pipe(Object(Wu.a)()),this.applicationRoles$=this.roleService.list("APPLICATION").pipe(Object(Wu.a)()),this.groups$=this.groupService.listByOrganization().pipe(Object(Wu.a)(),Object(Kt.a)(e=>e.filter(e=>!this.userDetailData.groupIdAlreadyAdded.includes(e.id)))),this.addGroupForm=new ln.i({groupId:new ln.g(null,[ln.v.required]),isAdmin:new ln.g(null),apiRole:new ln.g(null),applicationRole:new ln.g(null)},[ng])}onSubmit(){const e=this.addGroupForm.getRawValue();this.dialogRef.close(e)}};tg=Xh([Object(nt.Component)({selector:"org-settings-user-detail-add-group-dialog",template:n(1021),styles:[n(1022)]}),eg(1,Object(nt.Inject)(mt.a)),Zh("design:paramtypes",["function"==typeof(Vh=void 0!==mt.g&&mt.g)?Vh:Object,Object,"function"==typeof(Yh=void 0!==eh&&eh)?Yh:Object,"function"==typeof(zh=void 0!==oh&&oh)?zh:Object])],tg);const ng=e=>{const t=e,n=t.get("isAdmin").value,i=t.get("apiRole").value,a=t.get("applicationRole").value;return n||i||a?null:{leastOneIsRequired:!0}};var ig,ag=n(2),og=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},sg=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},rg=function(e,t){return function(n,i){t(n,i,e)}};let lg=class{constructor(e,t){this.http=e,this.constants=t}getTokens(e){return this.http.get(`${this.constants.org.baseURL}/users/${e}/tokens`)}createToken(e,t){return this.http.post(`${this.constants.org.baseURL}/users/${e}/tokens`,t)}revokeToken(e,t){return this.http.delete(`${this.constants.org.baseURL}/users/${e}/tokens/${t}`)}};lg=og([Object(nt.Injectable)({providedIn:"root"}),rg(1,Object(nt.Inject)("Constants")),sg("design:paramtypes",["function"==typeof(ig=void 0!==Tt.b&&Tt.b)?ig:Object,"function"!=typeof!1&&Object])],lg);var cg,dg,pg,mg=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},ug=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},hg=function(e,t){return function(n,i){t(n,i,e)}};let gg=class{constructor(e,t,n,i,a){var o;this.usersTokenService=e,this.locationStrategy=t,this.snackBarService=n,this.constants=a,this.hasBeenGenerated=!1,this.unsubscribe$=new ct.a,this.token=i.token,this.userId=i.userId,this.tokenForm=new ln.i({name:new ln.g(null===(o=this.token)||void 0===o?void 0:o.name,[ln.v.required,ln.v.minLength(2),ln.v.maxLength(64)])})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onSubmit(){const e={name:this.tokenForm.get("name").value};this.usersTokenService.createToken(this.userId,e).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(()=>{this.snackBarService.success("Token successfully created!")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(e=>{this.hasBeenGenerated=!0,this.token=e})}getExampleOfUse(e){let t=`${this.constants.org.baseURL}/environments/${this.constants.org.currentEnv.id}`;return t.startsWith("/")&&(t=this.locationStrategy.getBaseHref()+t),`curl -H "Authorization: Bearer ${e}" "${t}"`}};gg=mg([Object(nt.Component)({selector:"org-settings-add-tenant",template:n(1024),styles:[n(1025)]}),hg(3,Object(nt.Inject)(mt.a)),hg(4,Object(nt.Inject)("Constants")),ug("design:paramtypes",["function"==typeof(cg=void 0!==lg&&lg)?cg:Object,"function"==typeof(dg=void 0!==ag.f&&ag.f)?dg:Object,"function"==typeof(pg=void 0!==on&&on)?pg:Object,Object,"function"!=typeof!1&&Object])],gg);var fg,bg,vg,yg,Sg,wg,Cg,Ig=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},$g=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Ag=function(e,t){return function(n,i){t(n,i,e)}};let Og=class{constructor(e,t,n,i,a,o,s,r){this.usersService=e,this.usersTokenService=t,this.roleService=n,this.groupService=i,this.snackBarService=a,this.environmentService=o,this.matDialog=s,this.ajsStateParams=r,this.organizationRoles$=this.roleService.list("ORGANIZATION").pipe(Object(Wu.a)()),this.environmentRoles$=this.roleService.list("ENVIRONMENT").pipe(Object(Wu.a)()),this.apiRoles$=this.roleService.list("API").pipe(Object(Wu.a)()),this.applicationRoles$=this.roleService.list("APPLICATION").pipe(Object(Wu.a)()),this.environmentsTableDisplayedColumns=["name","description","roles"],this.groupsTableDisplayedColumns=["name","groupAdmin","apiRoles","applicationRole","delete"],this.apisTableDisplayedColumns=["name","version","visibility"],this.applicationsTableDisplayedColumns=["name"],this.tokensTableDisplayedColumns=["name","createdAt","lastUseAt","action"],this.openSaveBar=!1,this.invalidStateSaveBar=!1,this.initialTableDS={apisTableDS:[],applicationsTableDS:[],environmentsTableDS:[],groupsTableDS:[],tokensTableDS:[]},this.tablesUnpaginatedLength={apisTableDS:0,applicationsTableDS:0,environmentsTableDS:0,groupsTableDS:0,tokensTableDS:0},this.unsubscribe$=new ct.a}ngOnInit(){Object(Au.a)([this.usersService.get(this.ajsStateParams.userId),this.environmentService.list(),this.usersService.getUserGroups(this.ajsStateParams.userId)]).pipe(Object(at.a)(this.unsubscribe$)).subscribe(([e,t,n])=>{const i=e.roles.filter(e=>"ORGANIZATION"===e.scope);this.user=Object.assign(Object.assign({},e),{organizationRoles:i.map(e=>{var t;return null!==(t=e.name)&&void 0!==t?t:e.id}).join(", "),avatarUrl:this.usersService.getUserAvatar(this.ajsStateParams.userId),badgeCSSClass:eu.getStatusBadgeCSSClass(e)}),this.initOrganizationRolesForm(),this.environmentsTableDS=t.map(e=>({id:e.id,name:e.name,description:e.description,roles:""})),this.initialTableDS.environmentsTableDS=this.environmentsTableDS,this.tablesUnpaginatedLength.environmentsTableDS=this.environmentsTableDS.length,this.initEnvironmentsRolesForm(t),this.groupsTableDS=n.map(e=>({id:e.id,name:e.name})),this.initialTableDS.groupsTableDS=this.groupsTableDS,this.tablesUnpaginatedLength.groupsTableDS=this.groupsTableDS.length,this.initGroupsRolesForm(n)}),this.usersService.getMemberships(this.ajsStateParams.userId,"api").pipe(Object(at.a)(this.unsubscribe$)).subscribe(({metadata:e})=>{this.apisTableDS=Object.entries(e).map(([e,t])=>({id:e,name:t.name,version:t.version,visibility:t.visibility})),this.initialTableDS.apisTableDS=this.apisTableDS,this.tablesUnpaginatedLength.apisTableDS=this.apisTableDS.length}),this.usersService.getMemberships(this.ajsStateParams.userId,"application").pipe(Object(at.a)(this.unsubscribe$)).subscribe(({metadata:e})=>{this.applicationsTableDS=Object.entries(e).map(([e,t])=>({id:e,name:t.name})),this.initialTableDS.applicationsTableDS=this.applicationsTableDS,this.tablesUnpaginatedLength.applicationsTableDS=this.applicationsTableDS.length}),this.usersTokenService.getTokens(this.ajsStateParams.userId).pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.tokensTableDS=e.map(e=>({id:e.id,createdAt:e.created_at,lastUseAt:e.last_use_at,name:e.name})),this.initialTableDS.tokensTableDS=this.tokensTableDS,this.tablesUnpaginatedLength.tokensTableDS=this.tokensTableDS.length})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.complete()}toggleSaveBar(e){this.openSaveBar=null!=e?e:!this.openSaveBar}onSaveBarSubmit(){let e=[];this.organizationRolesControl.dirty&&e.push(this.usersService.updateUserRoles(this.user.id,"ORGANIZATION","DEFAULT",this.organizationRolesControl.value).pipe(Object(at.a)(this.unsubscribe$))),this.environmentsRolesFormGroup.dirty&&e.push(Object(Kh.a)(Object.keys(this.environmentsRolesFormGroup.controls)).pipe(Object(Jh.a)(e=>{const t=this.environmentsRolesFormGroup.get(e);return t.dirty?this.usersService.updateUserRoles(this.user.id,"ENVIRONMENT",e,t.value):pt.a}))),this.groupsRolesFormGroup.dirty&&e.push(Object(Kh.a)(Object.keys(this.groupsRolesFormGroup.controls)).pipe(Object(Jh.a)(e=>{const t=this.groupsRolesFormGroup.get(e);if(t.dirty){const{GROUP:n,API:i,APPLICATION:a}=t.value;return this.groupService.addOrUpdateMemberships(e,[{id:this.user.id,roles:[{scope:"GROUP",name:n?"ADMIN":""},{scope:"API",name:i},{scope:"APPLICATION",name:a}]}])}return pt.a}))),Object(Qh.a)(...e).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(()=>{this.snackBarService.success("Roles successfully updated")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>{e=[],this.toggleSaveBar(!1)})}onResetPassword(){this.matDialog.open(km,{width:"500px",data:{title:"Reset user password",content:`\n          Are you sure you want to reset password of user <strong>${this.user.displayName}</strong> ?\n          <br>\n          The user will receive an email with a link to set a new password.\n          `,confirmButton:"Reset"},role:"alertdialog",id:"resetUserPasswordConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.usersService.resetPassword(this.user.id)),Object(ot.a)(()=>this.snackBarService.success(`The password of user "${this.user.displayName}" has been successfully reset`)),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}onProcessRegistration(e){const t={accept:{content:`Are you sure you want to accept the registration request of <strong>${this.user.displayName}</strong> ?`,confirmButton:"Accept",success:`User "${this.user.displayName}" has been accepted`},reject:{content:`Are you sure you want to reject the registration request of <strong>${this.user.displayName}</strong> ?`,confirmButton:"Reject",success:`User "${this.user.displayName}" has been rejected`}};this.matDialog.open(km,{width:"500px",data:{title:"User registration",content:t[e].content,confirmButton:t[e].confirmButton},role:"alertdialog",id:"userRegistrationConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.usersService.processRegistration(this.user.id,"accept"===e)),Object(ot.a)(()=>this.snackBarService.success(t[e].success)),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}onFiltersChanged(e,t){let n=this.initialTableDS[e];n||(this.initialTableDS[e]=this[e],n=this[e]);const i=xu(n,t,{searchTermIgnoreKeys:["id","visibility"]});this[e]=i.filteredCollection,this.tablesUnpaginatedLength[e]=i.unpaginatedLength}onSaveBarReset(){this.ngOnInit(),this.toggleSaveBar(!1)}onDeleteGroupClick(e){this.matDialog.open(km,{width:"500px",data:{title:"Delete user form the group",content:`Are you sure you want to delete the user from the group <strong>${e.name}</strong> ?`,confirmButton:"Delete"},role:"alertdialog",id:"removeGroupMemberConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.groupService.deleteMember(e.id,this.user.id)),Object(ot.a)(()=>this.snackBarService.success(`"${this.user.displayName}" has been deleted from the group "${e.name}"`)),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}onAddGroupClicked(){this.matDialog.open(tg,{width:"500px",data:{groupIdAlreadyAdded:this.groupsTableDS.map(e=>e.id)},role:"alertdialog",id:"addGroupConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!Object(o.isEmpty)(e)),Object(st.a)(e=>this.groupService.addOrUpdateMemberships(e.groupId,[{id:this.user.id,roles:[{scope:"GROUP",name:e.isAdmin?"ADMIN":""},{scope:"API",name:e.apiRole},{scope:"APPLICATION",name:e.applicationRole}]}])),Object(ot.a)(()=>{this.snackBarService.success("Roles successfully updated")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}initOrganizationRolesForm(){const e=this.user.roles.filter(e=>"ORGANIZATION"===e.scope);this.organizationRolesControl=new ln.g({value:e.map(e=>e.id),disabled:"ACTIVE"!==this.user.status}),this.organizationRolesControl.valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(()=>{this.toggleSaveBar(!0)})}initEnvironmentsRolesForm(e){this.environmentsRolesFormGroup=new ln.i(e.reduce((e,t)=>{var n;const i=null!==(n=this.user.envRoles[t.id])&&void 0!==n?n:[];return Object.assign(Object.assign({},e),{[t.id]:new ln.g({value:i.map(e=>e.id),disabled:"ACTIVE"!==this.user.status})})},{})),this.environmentsRolesFormGroup.valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(()=>{this.toggleSaveBar(!0)})}initGroupsRolesForm(e){const t=e=>{const t=e,n=t.get("GROUP").value,i=t.get("API").value,a=t.get("APPLICATION").value;return n||i||a?null:{leastOneIsRequired:!0}};this.groupsRolesFormGroup=new ln.i(Object.assign({},e.reduce((e,n)=>Object.assign(Object.assign({},e),{[n.id]:new ln.i({GROUP:new ln.g({value:n.roles.GROUP,disabled:"ACTIVE"!==this.user.status}),API:new ln.g({value:n.roles.API,disabled:"ACTIVE"!==this.user.status}),APPLICATION:new ln.g({value:n.roles.APPLICATION,disabled:"ACTIVE"!==this.user.status})},[t])}),{}))),this.groupsRolesFormGroup.valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(()=>{this.toggleSaveBar(!0)}),this.groupsRolesFormGroup.statusChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.invalidStateSaveBar="VALID"!==e})}onDeleteTokenClicked(e){this.matDialog.open(km,{width:"450px",data:{title:"Revoke a token",content:`Are you sure you want to revoke the token <strong>${e.name}</strong>?`,confirmButton:"Remove"},role:"alertdialog",id:"revokeUsersTokenDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.usersTokenService.revokeToken(this.ajsStateParams.userId,e.id)),Object(ot.a)(()=>this.snackBarService.success("Token successfully deleted!")),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}onGenerateTokenClicked(){this.matDialog.open(gg,{width:"750px",data:{userId:this.ajsStateParams.userId},role:"dialog",id:"generateTokenDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$)).subscribe(()=>this.ngOnInit())}isServiceUser(){return!this.user.firstname}};Og=Ig([Object(nt.Component)({selector:"org-settings-user-detail",template:n(1027),styles:[n(1028)]}),Ag(7,Object(nt.Inject)(gt)),$g("design:paramtypes",["function"==typeof(fg=void 0!==Zm&&Zm)?fg:Object,"function"==typeof(bg=void 0!==lg&&lg)?bg:Object,"function"==typeof(vg=void 0!==oh&&oh)?vg:Object,"function"==typeof(yg=void 0!==eh&&eh)?yg:Object,"function"==typeof(Sg=void 0!==on&&on)?Sg:Object,"function"==typeof(wg=void 0!==Ku&&Ku)?wg:Object,"function"==typeof(Cg=void 0!==mt.b&&mt.b)?Cg:Object,Object])],Og);var Tg,Rg=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},_g=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},xg=function(e,t){return function(n,i){t(n,i,e)}};let Lg=class{constructor(e,t){this.http=e,this.constants=t}getConfigurationSchemaForm(){return this.http.get(this.constants.org.baseURL+"/configuration/flows/configuration-schema")}getPlatformFlowSchemaForm(){return this.http.get(this.constants.org.baseURL+"/configuration/flows/flow-schema")}getConfiguration(){return this.http.get(this.constants.org.baseURL+"/configuration/flows")}};Lg=Rg([Object(nt.Injectable)({providedIn:"root"}),xg(1,Object(nt.Inject)("Constants")),_g("design:paramtypes",["function"==typeof(Tg=void 0!==Tt.b&&Tt.b)?Tg:Object,"function"!=typeof!1&&Object])],Lg);var Pg,Ng,Eg,Dg,jg,kg=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Ug=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let Mg=class{constructor(e,t,n,i,a){this.flowService=e,this.policyService=t,this.organizationService=n,this.matDialog=i,this.snackBarService=a,this.isLoading=!0,this.unsubscribe$=new ct.a}ngOnInit(){Object(Au.a)([this.flowService.getPlatformFlowSchemaForm(),this.policyService.list({expandSchema:!0,expandIcon:!0,withoutResource:!0}),this.organizationService.get()]).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(([e,t,n])=>{var i;this.platformFlowSchema=e,this.policies=t,this.organization=n,this.definition={flows:(null!==(i=this.organization.flows)&&void 0!==i?i:[]).map(e=>Object.assign(Object.assign({},e),{consumers:e.consumers.map(e=>e.consumerId)})),flow_mode:this.organization.flowMode},this.isLoading=!1})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onSave({definition:e}){const t=Object.assign(Object.assign({},this.organization),{flowMode:e.flow_mode,flows:e.flows.map(e=>{var t;return Object.assign(Object.assign({},e),{consumers:(null!==(t=e.consumers)&&void 0!==t?t:[]).map(e=>({consumerType:"TAG",consumerId:e}))})})});this.matDialog.open(km,{width:"450px",data:{title:"Deploy the policies?",content:"Platform policies will be automatically deployed on gateways."},role:"alertdialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.organizationService.update(t)),Object(ot.a)(()=>{this.snackBarService.success("Platform policies successfully updated!")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>{this.ngOnInit()})}};Mg=kg([Object(nt.Component)({selector:"org-settings-platform-policies",template:n(1030),styles:[n(1031)]}),Ug("design:paramtypes",["function"==typeof(Pg=void 0!==Lg&&Lg)?Pg:Object,"function"==typeof(Ng=void 0!==Zt&&Zt)?Ng:Object,"function"==typeof(Eg=void 0!==_u&&_u)?Eg:Object,"function"==typeof(Dg=void 0!==mt.b&&mt.b)?Dg:Object,"function"==typeof(jg=void 0!==on&&on)?jg:Object])],Mg);var Fg,qg=n(87),Hg=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Gg=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Bg=function(e,t){return function(n,i){t(n,i,e)}};let Wg=class{constructor(e,t){var n,i;this.dialogRef=e,this.isUpdate=!1,this.tenant=t.tenant,this.isUpdate=!!this.tenant,this.tenantForm=new ln.i({name:new ln.g(null===(n=this.tenant)||void 0===n?void 0:n.name,[ln.v.required,ln.v.minLength(1),ln.v.maxLength(30)]),description:new ln.g(null===(i=this.tenant)||void 0===i?void 0:i.description,[ln.v.maxLength(160)])}),this.isUpdate&&this.tenantForm.addControl("id",new ln.g({value:this.tenant.id,disabled:!0},[ln.v.required]))}onSubmit(){const e=this.tenantForm.getRawValue();this.dialogRef.close(e)}};Wg=Hg([Object(nt.Component)({selector:"org-settings-add-tenant",template:n(1033),styles:[n(1034)]}),Bg(1,Object(nt.Inject)(mt.a)),Gg("design:paramtypes",["function"==typeof(Fg=void 0!==mt.g&&mt.g)?Fg:Object,Object])],Wg);var Vg,Yg=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},zg=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Kg=function(e,t){return function(n,i){t(n,i,e)}};let Qg=class{constructor(e,t){this.http=e,this.constants=t}list(){return this.http.get(this.constants.org.baseURL+"/configuration/tenants")}create(e){return this.http.post(this.constants.org.baseURL+"/configuration/tenants",e)}update(e){return this.http.put(this.constants.org.baseURL+"/configuration/tenants",e)}delete(e){return this.http.delete(`${this.constants.org.baseURL}/configuration/tenants/${e}`)}};Qg=Yg([Object(nt.Injectable)({providedIn:"root"}),Kg(1,Object(nt.Inject)("Constants")),zg("design:paramtypes",["function"==typeof(Vg=void 0!==Tt.b&&Tt.b)?Vg:Object,"function"!=typeof!1&&Object])],Qg);var Jg,Xg,Zg,ef=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},tf=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let nf=class{constructor(e,t,n){this.tenantService=e,this.matDialog=t,this.snackBarService=n,this.displayedColumns=["id","name","description","actions"],this.tenantsDataSource=new qg.a([]),this.tenantsTableUnpaginatedLength=0,this.unsubscribe$=new ct.a,this.tenants=[]}ngOnInit(){this.tenantService.list().subscribe(e=>{this.tenants=e,this.tenantsDataSource.data=e,this.tenantsTableUnpaginatedLength=e.length})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onAddTenantClicked(){this.matDialog.open(Wg,{width:"450px",data:{},role:"dialog",id:"addTenantDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!!e),Object(st.a)(e=>this.tenantService.create([e])),Object(ot.a)(()=>{this.snackBarService.success("Tenant successfully created!")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}onDeleteTenantClicked(e){this.matDialog.open(km,{width:"450px",data:{title:"Delete a tenant",content:`Are you sure you want to delete the tenant <strong>${e.name}</strong>?`,confirmButton:"Delete"},role:"alertdialog",id:"deleteIdentityProviderConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.tenantService.delete(e.id)),Object(ot.a)(()=>this.snackBarService.success("Tenant successfully deleted!"))).subscribe(()=>this.ngOnInit())}onEditTenantClicked(e){this.matDialog.open(Wg,{width:"450px",data:{tenant:e},role:"dialog",id:"editTenantDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!!e),Object(st.a)(e=>this.tenantService.update([e])),Object(ot.a)(()=>{this.snackBarService.success("Tenant successfully updated!")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}onFiltersChanged(e){const t=xu(this.tenants,e);this.tenantsDataSource.data=t.filteredCollection,this.tenantsTableUnpaginatedLength=t.unpaginatedLength}};nf=ef([Object(nt.Component)({selector:"org-settings-tenants",template:n(1036),styles:[n(1037)]}),tf("design:paramtypes",["function"==typeof(Jg=void 0!==Qg&&Qg)?Jg:Object,"function"==typeof(Xg=void 0!==mt.b&&mt.b)?Xg:Object,"function"==typeof(Zg=void 0!==on&&on)?Zg:Object])],nf);var af,of,sf,rf,lf,cf=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},df=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},pf=function(e,t){return function(n,i){t(n,i,e)}};let mf=af=class{constructor(e,t,n,i,a){this.roleService=e,this.ajsState=t,this.matDialog=n,this.snackBarService=i,this.constants=a,this.loading=!0,this.unsubscribe$=new ct.a}ngOnInit(){Object(Au.a)([this.roleService.list("ORGANIZATION"),this.roleService.list("ENVIRONMENT"),this.roleService.list("API"),this.roleService.list("APPLICATION")]).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(([e,t,n,i])=>{this.rolesByScope=[{scope:"Organization",scopeId:"ORGANIZATION",roles:this.convertToRoleVMs(e)},{scope:"Environment",scopeId:"ENVIRONMENT",roles:this.convertToRoleVMs(t)},{scope:"API",scopeId:"API",roles:this.convertToRoleVMs(n)},{scope:"Application",scopeId:"APPLICATION",roles:this.convertToRoleVMs(i)}],this.loading=!1})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onAddARoleClicked(e){this.ajsState.go("organization.settings.ng-rolenew",{roleScope:e})}onEditRoleClicked(e,t){this.ajsState.go("organization.settings.ng-roleedit",{roleScope:e,role:t.name})}onDeleteRoleClicked(e,t){this.matDialog.open(km,{width:"500px",data:{title:"Delete a Role",content:`Are you sure you want to delete the role <strong>${t.name}</strong>?`,confirmButton:"Delete"},role:"alertdialog",id:"deleteRoleConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.roleService.delete(e,t.name)),Object(ot.a)(()=>this.snackBarService.success(`Role ${t.name} successfully deleted!`)),Object(lt.a)(()=>(this.snackBarService.error("Failed to delete Role "+t.name),pt.a))).subscribe(()=>this.ngOnInit())}onMembersClicked(e,t){this.ajsState.go("organization.settings.ng-rolemembers",{roleScope:e.toUpperCase(),role:t.name})}convertToRoleVMs(e){return e.map(e=>({name:e.name,description:e.description,isDefault:e.default,isSystem:e.system,hasUserRoleManagement:"ORGANIZATION"===e.scope,canBeDeleted:!e.default&&!e.system,isReadOnly:this.isReadOnly(e),icon:af.getScopeIcon(e.scope)}))}isReadOnly(e){return this.hasSystemRoleEditionEnabled()?"ORGANIZATION"===e.scope&&"ADMIN"===e.name:e.system}hasSystemRoleEditionEnabled(){var e,t,n,i,a;return null===(a=null===(i=null===(n=null===(t=null===(e=this.constants)||void 0===e?void 0:e.org)||void 0===t?void 0:t.settings)||void 0===n?void 0:n.management)||void 0===i?void 0:i.systemRoleEdition)||void 0===a?void 0:a.enabled}static getScopeIcon(e){switch(e){case"API":return"dashboard";case"APPLICATION":return"list";case"ENVIRONMENT":return"dns";case"ORGANIZATION":return"corporate_fare";default:return""}}};mf=af=cf([Object(nt.Component)({selector:"org-settings-roles",template:n(1039),styles:[n(1040)]}),pf(1,Object(nt.Inject)(ut)),pf(4,Object(nt.Inject)("Constants")),df("design:paramtypes",["function"==typeof(of=void 0!==oh&&oh)?of:Object,"function"==typeof(sf=void 0!==Bu.StateService&&Bu.StateService)?sf:Object,"function"==typeof(rf=void 0!==mt.b&&mt.b)?rf:Object,"function"==typeof(lf=void 0!==on&&on)?lf:Object,"function"!=typeof!1&&Object])],mf);var uf,hf,gf=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},ff=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},bf=function(e,t){return function(n,i){t(n,i,e)}},vf=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(i=Object.getOwnPropertySymbols(e);a<i.length;a++)t.indexOf(i[a])<0&&Object.prototype.propertyIsEnumerable.call(e,i[a])&&(n[i[a]]=e[i[a]])}return n};let yf=class{constructor(e,t,n){var i,a,o,s;this.dialogRef=e,this.groupService=n,this.isUpdate=!1,this.groups$=this.groupService.listByOrganization().pipe(Object(Wu.a)()),this.tag=t.tag,this.isUpdate=!!this.tag,this.tagForm=new ln.i({name:new ln.g(null===(i=this.tag)||void 0===i?void 0:i.name,[ln.v.required,ln.v.minLength(1),ln.v.maxLength(64)]),description:new ln.g(null===(a=this.tag)||void 0===a?void 0:a.description),restrictedGroups:new ln.g(null!==(s=null===(o=this.tag)||void 0===o?void 0:o.restricted_groups)&&void 0!==s?s:[])})}onSubmit(){const e=this.tagForm.getRawValue(),{restrictedGroups:t}=e,n=vf(e,["restrictedGroups"]),i=Object.assign(Object.assign(Object.assign({},this.tag),n),{restricted_groups:t});this.dialogRef.close(i)}};yf=gf([Object(nt.Component)({selector:"org-settings-add-tag-dialog",template:n(1042),styles:[n(1043)]}),bf(1,Object(nt.Inject)(mt.a)),ff("design:paramtypes",["function"==typeof(uf=void 0!==mt.g&&mt.g)?uf:Object,Object,"function"==typeof(hf=void 0!==eh&&eh)?hf:Object])],yf);var Sf,wf=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Cf=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},If=function(e,t){return function(n,i){t(n,i,e)}};let $f=class{constructor(e,t){this.http=e,this.constants=t}list(){return this.http.get(this.constants.org.baseURL+"/configuration/tags")}get(e){return this.http.get(`${this.constants.org.baseURL}/configuration/tags/${e}`)}create(e){return this.http.post(this.constants.org.baseURL+"/configuration/tags",e)}update(e){return this.http.put(`${this.constants.org.baseURL}/configuration/tags/${e.id}`,e)}delete(e){return this.http.delete(`${this.constants.org.baseURL}/configuration/tags/${e}`)}};$f=wf([Object(nt.Injectable)({providedIn:"root"}),If(1,Object(nt.Inject)("Constants")),Cf("design:paramtypes",["function"==typeof(Sf=void 0!==Tt.b&&Tt.b)?Sf:Object,"function"!=typeof!1&&Object])],$f);var Af,Of,Tf=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Rf=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},_f=function(e,t){return function(n,i){t(n,i,e)}};let xf=class{constructor(e,t,n){var i,a,o;this.dialogRef=e,this.tagService=n,this.isUpdate=!1,this.tags$=this.tagService.list().pipe(Object(Wu.a)()),this.entrypoint=t.entrypoint,this.isUpdate=!!this.entrypoint,this.mappingForm=new ln.i({value:new ln.g(null===(i=this.entrypoint)||void 0===i?void 0:i.value,[ln.v.required]),tags:new ln.g(null!==(o=null===(a=this.entrypoint)||void 0===a?void 0:a.tags)&&void 0!==o?o:[])})}onSubmit(){const e=Object.assign(Object.assign({},this.entrypoint),this.mappingForm.getRawValue());this.dialogRef.close(e)}};xf=Tf([Object(nt.Component)({selector:"org-settings-add-mapping-dialog",template:n(1045),styles:[n(1046)]}),_f(1,Object(nt.Inject)(mt.a)),Rf("design:paramtypes",["function"==typeof(Af=void 0!==mt.g&&mt.g)?Af:Object,Object,"function"==typeof(Of=void 0!==$f&&$f)?Of:Object])],xf);var Lf,Pf=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Nf=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Ef=function(e,t){return function(n,i){t(n,i,e)}};let Df=class{constructor(e,t){this.http=e,this.constants=t}list(){return this.http.get(this.constants.org.baseURL+"/configuration/entrypoints")}create(e){return this.http.post(this.constants.org.baseURL+"/configuration/entrypoints/",e)}update(e){return this.http.put(this.constants.org.baseURL+"/configuration/entrypoints/",e)}delete(e){return this.http.delete(`${this.constants.org.baseURL}/configuration/entrypoints/${e}`)}};Df=Pf([Object(nt.Injectable)({providedIn:"root"}),Ef(1,Object(nt.Inject)("Constants")),Nf("design:paramtypes",["function"==typeof(Lf=void 0!==Tt.b&&Tt.b)?Lf:Object,"function"!=typeof!1&&Object])],Df);var jf,kf=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Uf=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Mf=function(e,t){return function(n,i){t(n,i,e)}};let Ff=class{constructor(e,t){this.http=e,this.constants=t}static isReadonly(e,t){return!!(e&&e.metadata&&e.metadata.readonly)&&e.metadata.readonly.some(e=>e===t)}get(){return this.http.get(this.constants.env.baseURL+"/settings")}save(e){return this.http.post(this.constants.env.baseURL+"/settings",e)}};Ff=kf([Object(nt.Injectable)({providedIn:"root"}),Mf(1,Object(nt.Inject)("Constants")),Uf("design:paramtypes",["function"==typeof(jf=void 0!==Tt.b&&Tt.b)?jf:Object,"function"!=typeof!1&&Object])],Ff);var qf,Hf,Gf,Bf,Wf,Vf,Yf=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},zf=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let Kf=class{constructor(e,t,n,i,a,o){this.tagService=e,this.groupService=t,this.portalSettingsService=n,this.entrypointService=i,this.snackBarService=a,this.matDialog=o,this.isLoading=!0,this.providedConfigurationMessage="Configuration provided by the system",this.tagsTableUnpaginatedLength=0,this.tagsTableDisplayedColumns=["id","name","description","restrictedGroupsName","actions"],this.entrypointsTableUnpaginatedLength=0,this.entrypointsTableDisplayedColumns=["entrypoint","tags","actions"],this.unsubscribe$=new ct.a}ngOnInit(){Object(Au.a)([this.tagService.list(),this.groupService.listByOrganization(),this.portalSettingsService.get(),this.entrypointService.list()]).pipe(Object(at.a)(this.unsubscribe$)).subscribe(([e,t,n,i])=>{this.tags=e,this.tagsTableDS=e.map(e=>{var n;return{id:e.id,name:e.name,description:e.description,restrictedGroupsName:(null!==(n=e.restricted_groups)&&void 0!==n?n:[]).map(e=>{var n;return null===(n=t.find(t=>t.id===e))||void 0===n?void 0:n.name}).filter(e=>!!e)}}),this.filteredTagsTableDS=this.tagsTableDS,this.tagsTableUnpaginatedLength=this.tagsTableDS.length,this.portalSettings=n,this.defaultConfigForm=new ln.i({entrypoint:new ln.g({value:this.portalSettings.portal.entrypoint,disabled:this.isReadonlySetting("portal.entrypoint")})}),this.initialDefaultConfigFormValues=this.defaultConfigForm.getRawValue(),this.entrypoints=i,this.entrypointsTableDS=i.map(t=>{var n;return{id:t.id,url:t.value,tags:t.tags,tagsName:(null!==(n=t.tags)&&void 0!==n?n:[]).map(t=>{var n,i;return null!==(i=null===(n=e.find(e=>e.id===t))||void 0===n?void 0:n.name)&&void 0!==i?i:t})}}),this.filteredEntrypointsTableDS=this.entrypointsTableDS,this.entrypointsTableUnpaginatedLength=this.entrypointsTableDS.length,this.isLoading=!1})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onTagsFiltersChanged(e){const t=xu(this.tagsTableDS,e);this.filteredTagsTableDS=t.filteredCollection,this.tagsTableUnpaginatedLength=t.unpaginatedLength}isReadonlySetting(e){return Ff.isReadonly(this.portalSettings,e)}submitForm(){const e=Object.assign(Object.assign({},this.portalSettings),{portal:Object.assign(Object.assign({},this.portalSettings.portal),{entrypoint:this.defaultConfigForm.get("entrypoint").value})});this.portalSettingsService.save(e).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(()=>{this.snackBarService.success("Configuration saved!"),this.ngOnInit()}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe()}onAddTagClicked(){this.matDialog.open(yf,{width:"450px",data:{},role:"dialog",id:"addTagDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!!e),Object(st.a)(e=>this.tagService.create(e)),Object(ot.a)(()=>{this.snackBarService.success("Tag successfully created!")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}onEditTagClicked(e){this.matDialog.open(yf,{width:"450px",data:{tag:this.tags.find(t=>t.id===e.id)},role:"dialog",id:"addTagDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!!e),Object(st.a)(e=>this.tagService.update(e)),Object(ot.a)(()=>{this.snackBarService.success("Tag successfully updated!")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}onDeleteTagClicked(e){const t=this.entrypoints.filter(t=>t.tags.includes(e.id)),n=t.filter(e=>1===e.tags.length),i=t.filter(e=>e.tags.length>1);let a="";1===i.length?a=`<br>The tag will be removed for the entrypoint <strong>${i[0].value}</strong>.`:i.length>1&&(a=`\n        <br>The tag will be removed from all these entrypoints:\n        <ul>\n          <li><strong>${i.map(e=>e.value).join("</strong></li><li><strong>")}</strong></li>\n        </ul>`),1===n.length?a+=`<br>The <strong>${n[0].value}</strong> entrypoint will be deleted as it is only using this tag.`:n.length>1&&(a+=`\n        <br>The following entrypoints will be deleted as they are only using this tag:\n        <ul>\n          <li><strong>${n.map(e=>e.value).join("</strong></li><li><strong>")}</strong></li>\n        </ul>`),this.matDialog.open(km,{width:"500px",data:{title:"Delete a tag",content:`Are you sure you want to delete the tag <strong>${e.name}</strong>?\n          ${a}\n          `,confirmButton:"Delete"},role:"alertdialog",id:"removeTagConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>{if(0===t.length)return Object(dt.a)(void 0);const a=i.map(t=>Object.assign(Object.assign({},t),{tags:t.tags.filter(t=>t!==e.id)})),o=n;return Object(Au.a)([...a.map(e=>this.entrypointService.update(e)),...o.map(e=>this.entrypointService.delete(e.id))])}),Object(st.a)(()=>this.tagService.delete(e.id)),Object(ot.a)(()=>this.snackBarService.success(`Tag "${e.name}" has been deleted.`)),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}onEntrypointsFiltersChanged(e){const t=xu(this.entrypointsTableDS,e);this.filteredEntrypointsTableDS=t.filteredCollection,this.entrypointsTableUnpaginatedLength=t.unpaginatedLength}onAddEntrypointClicked(){this.matDialog.open(xf,{width:"450px",data:{},role:"dialog",id:"addMappingDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!!e),Object(st.a)(e=>this.entrypointService.create(e)),Object(ot.a)(()=>{this.snackBarService.success("Mapping successfully created!")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}onEditEntrypointClicked(e){this.matDialog.open(xf,{width:"450px",data:{entrypoint:this.entrypoints.find(t=>t.id===e.id)},role:"dialog",id:"editMappingDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!!e),Object(st.a)(e=>this.entrypointService.update(e)),Object(ot.a)(()=>{this.snackBarService.success("Mapping successfully updated!")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}onDeleteEntrypointClicked(e){this.matDialog.open(km,{width:"500px",data:{title:"Delete a entrypoint",content:`Are you sure you want to delete the entrypoint <strong>${e.url}</strong>?`,confirmButton:"Delete"},role:"alertdialog",id:"deleteEntrypointConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.entrypointService.delete(e.id)),Object(ot.a)(()=>this.snackBarService.success(`Entrypoint "${e.url}" has been delete`)),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}};Kf=Yf([Object(nt.Component)({selector:"org-settings-tags",template:n(1048),styles:[n(1049)]}),zf("design:paramtypes",["function"==typeof(qf=void 0!==$f&&$f)?qf:Object,"function"==typeof(Hf=void 0!==eh&&eh)?Hf:Object,"function"==typeof(Gf=void 0!==Ff&&Ff)?Gf:Object,"function"==typeof(Bf=void 0!==Df&&Df)?Bf:Object,"function"==typeof(Wf=void 0!==on&&on)?Wf:Object,"function"==typeof(Vf=void 0!==mt.b&&mt.b)?Vf:Object])],Kf);var Qf,Jf=n(1317),Xf=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Zf=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},eb=function(e,t){return function(n,i){t(n,i,e)}};let tb=class{constructor(e,t){var n;this.usersService=t,this.usersSelected=new nt.EventEmitter,this.selectedUsers=[],this.userSearchTerm=new ln.g("",[]),this.userFilterPredicate=null!==(n=e.userFilterPredicate)&&void 0!==n?n:()=>!0}ngOnInit(){this.users=this.userSearchTerm.valueChanges.pipe(Object(Km.a)(),Object(zm.a)(100),Object(st.a)(e=>e.length>0?this.usersService.search(e):Object(dt.a)([])),Object(Kt.a)(e=>e.filter(this.userFilterPredicate).filter(e=>!this.selectedUsers.find(t=>t.id===e.id))),Object(Jf.a)())}selectUser(e){const t=e.option.value;this.selectedUsers.unshift(Object.assign(Object.assign({},t),{userPicture:this.usersService.getUserAvatar(t.id)})),this.userSearchTerm.setValue("")}onRemoveUserClicked(e){this.selectedUsers=this.selectedUsers.filter(t=>t.id!==e.id)}resetSearchTerm(){this.userSearchTerm.setValue("")}};Xf([Object(nt.Output)(),Zf("design:type",Object)],tb.prototype,"usersSelected",void 0),tb=Xf([Object(nt.Component)({selector:"gio-users-selector",template:n(1051),styles:[n(1052)]}),eb(0,Object(nt.Inject)(mt.a)),Zf("design:paramtypes",[Object,"function"==typeof(Qf=void 0!==Zm&&Zm)?Qf:Object])],tb);var nb,ib,ab,ob=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},sb=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},rb=function(e,t){return function(n,i){t(n,i,e)}};let lb=class{constructor(e,t,n,i){this.ajsStateParams=e,this.roleService=t,this.matDialog=n,this.snackBarService=i,this.membershipsTableDisplayedColumns=["displayName","actions"],this.membershipsTableUnpaginatedLength=0,this.unsubscribe$=new ct.a}ngOnInit(){this.roleScope=this.ajsStateParams.roleScope,this.role=this.ajsStateParams.role,this.roleService.listMemberships(this.roleScope,this.role).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(e=>{this.memberships=e,this.filteredMemberships=e,this.membershipsTableUnpaginatedLength=e.length})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onMembershipFiltersChanged(e){const t=xu(this.memberships,e);this.filteredMemberships=t.filteredCollection,this.membershipsTableUnpaginatedLength=t.unpaginatedLength}onAddMemberClicked(){this.matDialog.open(tb,{width:"500px",data:{userFilterPredicate:e=>!this.memberships.some(t=>t.id===e.id)},role:"alertdialog",id:"createMembershipConfirmDialog"}).afterClosed().pipe(Object(rt.a)(e=>!!e),Object(st.a)(e=>Object(Au.a)(e.map(e=>{const t={id:e.id,reference:e.reference};return this.roleService.createMembership(this.roleScope,this.role,t)}))),Object(ot.a)(()=>{this.snackBarService.success("Membership successfully created")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}onDeleteMemberClicked(e){this.matDialog.open(km,{width:"500px",data:{title:"Delete a membership",content:`Are you sure you want to delete the role <strong>${this.roleScope} - ${this.role}</strong> to user <strong>${e.displayName}</strong>?`,confirmButton:"Delete"},role:"alertdialog",id:"deleteMembershipConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.roleService.deleteMembership(this.roleScope,this.role,e.id)),Object(ot.a)(()=>this.snackBarService.success("Membership has been successfully deleted")),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.ngOnInit())}};lb=ob([Object(nt.Component)({selector:"org-settings-role-members",template:n(1054),styles:[n(1055)]}),rb(0,Object(nt.Inject)(gt)),sb("design:paramtypes",[Object,"function"==typeof(nb=void 0!==oh&&oh)?nb:Object,"function"==typeof(ib=void 0!==mt.b&&mt.b)?ib:Object,"function"==typeof(ab=void 0!==on&&on)?ab:Object])],lb);var cb,db,pb,mb=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},ub=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},hb=function(e,t){return function(n,i){t(n,i,e)}};let gb=class{constructor(e,t,n,i,a){this.ajsState=e,this.ajsStateParams=t,this.constants=n,this.roleService=i,this.snackBarService=a,this.isLoading=!0,this.isEditMode=!1,this.rolePermissionsTableDisplayedColumns=["permissionName","create","read","update","delete"],this.selectAllCheckbox={C:{state:"unchecked",label:"Select all"},R:{state:"unchecked",label:"Select all"},U:{state:"unchecked",label:"Select all"},D:{state:"unchecked",label:"Select all"}},this.unsubscribe$=new ct.a}ngOnInit(){this.roleScope=this.ajsStateParams.roleScope,this.isEditMode=!!this.ajsStateParams.role,this.roleName=this.ajsStateParams.role,Object(Au.a)([this.isEditMode?this.roleService.get(this.roleScope,this.roleName):Object(dt.a)({scope:this.roleScope,system:!1,permissions:{}}),this.roleService.getPermissionsByScope(this.roleScope)]).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(([e,t])=>{var n,i,a;this.role=e,this.roleForm=new ln.i({name:new ln.g({value:null!==(n=e.name)&&void 0!==n?n:"",disabled:this.isEditMode},[ln.v.required]),description:new ln.g({value:null!==(i=e.description)&&void 0!==i?i:"",disabled:e.system}),default:new ln.g({value:null!==(a=e.default)&&void 0!==a&&a,disabled:e.system}),permissions:new ln.i(t.reduce((t,n)=>{var i,a,o,s;const r=fb(e,n)||this.isReadOnly,l=new ln.g({value:null===(i=e.permissions[n])||void 0===i?void 0:i.includes("C"),disabled:r});l.valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(()=>this.updateSelectAllCheckboxState("C"));const c=new ln.g({value:null===(a=e.permissions[n])||void 0===a?void 0:a.includes("R"),disabled:r});c.valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(()=>this.updateSelectAllCheckboxState("R"));const d=new ln.g({value:null===(o=e.permissions[n])||void 0===o?void 0:o.includes("U"),disabled:r});d.valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(()=>this.updateSelectAllCheckboxState("U"));const p=new ln.g({value:null===(s=e.permissions[n])||void 0===s?void 0:s.includes("D"),disabled:r});return p.valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(()=>this.updateSelectAllCheckboxState("D")),Object.assign(Object.assign({},t),{[n]:new ln.i({C:l,R:c,U:d,D:p})})},{}))}),this.initialRoleFormValue=this.roleForm.getRawValue(),this.rolePermissionsTableDS=t.map(t=>({permissionName:t,isMovedToOrganizationScope:fb(e,t)})),this.isEditMode&&(this.updateSelectAllCheckboxState("C"),this.updateSelectAllCheckboxState("R"),this.updateSelectAllCheckboxState("U"),this.updateSelectAllCheckboxState("D"))})).subscribe(()=>this.isLoading=!1)}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onSubmit(){const e=this.roleForm.getRawValue(),t=Object.assign(Object.assign(Object.assign({},this.role),e),{name:e.name.toUpperCase(),permissions:bb(e.permissions)});(this.isEditMode?this.roleService.update(t):this.roleService.create(t)).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(()=>{this.snackBarService.success("Role successfully saved!")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(e=>{this.isEditMode?this.ngOnInit():this.ajsState.go("organization.settings.ng-roleedit",{roleScope:this.roleScope,role:e.name})})}toggleAll(e,t){const n=this.roleForm.get("permissions");Object.values(n.controls).forEach(n=>{const i=n.get(e);i.disabled||i.setValue(t.checked)}),n.markAsDirty()}updateSelectAllCheckboxState(e){const t=this.roleForm.get("permissions"),n=Object.values(t.controls).filter(t=>t.get(e).value).length,i=Object.keys(this.roleForm.get("permissions").controls).length;this.selectAllCheckbox[e]={state:n===i?"checked":0===n?"unchecked":"indeterminate",label:(n===i?"Deselect":"Select")+" all"}}get isReadOnly(){return this.hasSystemRoleEditionEnabled()?"ORGANIZATION"===this.role.scope&&"ADMIN"===this.role.name:this.role.system}hasSystemRoleEditionEnabled(){var e,t,n,i,a;return null===(a=null===(i=null===(n=null===(t=null===(e=this.constants)||void 0===e?void 0:e.org)||void 0===t?void 0:t.settings)||void 0===n?void 0:n.management)||void 0===i?void 0:i.systemRoleEdition)||void 0===a?void 0:a.enabled}};gb=mb([Object(nt.Component)({selector:"org-settings-role",template:n(1057),styles:[n(1058)]}),hb(0,Object(nt.Inject)(ut)),hb(1,Object(nt.Inject)(gt)),hb(2,Object(nt.Inject)("Constants")),ub("design:paramtypes",["function"==typeof(cb=void 0!==Bu.StateService&&Bu.StateService)?cb:Object,Object,"function"!=typeof!1&&Object,"function"==typeof(db=void 0!==oh&&oh)?db:Object,"function"==typeof(pb=void 0!==on&&on)?pb:Object])],gb);const fb=(e,t)=>"ENVIRONMENT"===(null==e?void 0:e.scope)&&("TAG"===t||"TENANT"===t||"ENTRYPOINT"===t),bb=e=>Object.entries(e).reduce((e,[t,n])=>Object.assign(Object.assign({},e),{[t]:Object.entries(n).filter(([,e])=>!0===e).map(([e])=>e)}),{});var vb=n(236),yb=n(196);var Sb={bindings:{listLabel:"<",application:"<",subscribers:"<",filterEvent:"<",queryParamsPrefix:"<",securityTypes:"<",subscriptions:"="},controller:"ApplicationSubscriptionsListController",template:n(1060)};class wb{constructor(){this.page=1,this.size=10}}class Cb{constructor(e,t){this.ApplicationService=e,this.$state=t,this.query=new wb,this.filter=new Ri,this.isFirstFilter=!0,this.onPaginate=this.onPaginate.bind(this)}$onInit(){this.query.securityTypes=this.securityTypes,this.pageQueryParamName=(this.queryParamsPrefix||"")+"page",this.sizeQueryParamName=(this.queryParamsPrefix||"")+"size",this.$state.params[this.pageQueryParamName]&&(this.query.page=this.$state.params[this.pageQueryParamName]),this.$state.params[this.sizeQueryParamName]&&(this.query.size=this.$state.params[this.sizeQueryParamName]),this.filterEvent.subscribe(e=>{this.filter=e,this.doFilter()})}onPaginate(e){this.query.page=e,this.updatePaginationQueryParams(),this.doSearch()}doFilter(){this.isFirstFilter||(this.query.page=1,this.updatePaginationQueryParams()),this.isFirstFilter=!1,this.doSearch()}doSearch(){const e=this.buildQuery();this.ApplicationService.listSubscriptions(this.application.id,e).then(e=>{this.subscriptions=e.data})}updatePaginationQueryParams(){this.$state.transitionTo(this.$state.current,o.merge(this.$state.params,{[this.pageQueryParamName]:this.query.page,[this.sizeQueryParamName]:this.query.size}),{notify:!1})}buildQuery(){let e="?";const t={};return t.page=this.query.page,t.size=this.query.size,void 0!==this.filter.status&&(t.status=this.filter.status.join(",")),void 0!==this.filter.apis&&(t.api=this.filter.apis.join(",")),void 0!==this.filter.apiKey&&(t.api_key=this.filter.apiKey),void 0!==this.query.securityTypes&&(t.security_types=this.query.securityTypes.join(",")),o.mapKeys(t,(t,n)=>e+=n+"="+t+"&"),e}navigateToSubscription(e){this.$state.transitionTo("management.applications.application.subscriptions.subscription",Object.assign({subscriptionId:e},this.$state.params))}}Cb.$inject=["ApplicationService","$state"];var Ib=Cb;var $b={bindings:{application:"<",subscription:"<",api:"<",listEvent:"<"},template:n(1061),controller:"ApiKeysController"};class Ab{constructor(e,t,n,i){this.$mdDialog=e,this.NotificationService=t,this.ApplicationService=n,this.$state=i,this.backStateParams=i.params}$onInit(){this.listApiKeys(),this.listEvent&&this.listEvent.subscribe(()=>this.listApiKeys())}listApiKeys(){this.ApplicationService.listApiKeys(this.application,this.subscription).then(e=>{this.keys=e.data})}renewApiKey(){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to renew your API Key?",msg:"Your previous API Key will be no longer valid in 2 hours!",confirmButton:"Renew"}}).then(e=>{e&&this.ApplicationService.renewApiKey(this.application,this.subscription).then(()=>{this.NotificationService.show("A new API Key has been generated"),this.listApiKeys()})})}isValid(e){return!e.revoked&&!e.expired}areKeysEditable(){return this.isSharedApiKey()?!this.subscription:this.subscription&&"ACCEPTED"===this.subscription.status}isSharedApiKey(){return this.application.api_key_mode===Qn.SHARED}revokeApiKey(e){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to revoke API Key '"+e.key+"'?",confirmButton:"Revoke"}}).then(t=>{t&&this.ApplicationService.revokeApiKey(this.application,this.subscription,e.id).then(()=>{this.NotificationService.show("API Key "+e.key+" has been revoked!"),this.listApiKeys()})})}onCopyApiKeySuccess(e){this.NotificationService.show("API Key has been copied to clipboard"),e.clearSelection()}getTitle(){return this.isSharedApiKey()?"Shared API Key":"API Keys"}}Ab.$inject=["$mdDialog","NotificationService","ApplicationService","$state"];var Ob,Tb=Ab,Rb=n(1315),_b=n(1676),xb=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Lb=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Pb=function(e,t){return function(n,i){t(n,i,e)}};let Nb=class{constructor(e,t){this.http=e,this.constants=t}getAll(e={}){let t=this.constants.env.baseURL;return e.environmentId&&(t=`${this.constants.org.baseURL}/environments/${e.environmentId}`),this.http.get(t+"/applications",{params:{status:"active",exclude:["picture","owner"]}})}list(e,t,n,i=1,a=10){return this.http.get(this.constants.env.baseURL+"/applications/_paged",{params:Object.assign(Object.assign(Object.assign({page:i,size:a},e?{status:e}:{}),t?{query:t}:{}),n?{order:n}:{})})}restore(e){return this.http.post(`${this.constants.env.baseURL}/applications/${e}/_restore`,{})}};Nb=xb([Object(nt.Injectable)({providedIn:"root"}),Pb(1,Object(nt.Inject)("Constants")),Lb("design:paramtypes",["function"==typeof(Ob=void 0!==Tt.b&&Tt.b)?Ob:Object,"function"!=typeof!1&&Object])],Nb);var Eb,Db=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},jb=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},kb=function(e,t){return function(n,i){t(n,i,e)}};let Ub=class{constructor(e,t){this.http=e,this.constants=t}listByOrganization(e={},t=1,n=10){return this.http.get(this.constants.org.baseURL+"/audit",{params:this.sanitizeAuditParams(e,t,n)})}getAllEventsNameByOrganization(){return this.http.get(this.constants.org.baseURL+"/audit/events")}list(e={},t=1,n=10){return this.http.get(this.constants.env.baseURL+"/audit",{params:this.sanitizeAuditParams(e,t,n)})}getAllEventsName(){return this.http.get(this.constants.env.baseURL+"/audit/events")}sanitizeAuditParams(e,t,n){return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({page:t,size:n},e.event?{event:e.event}:{}),e.referenceType?{type:e.referenceType}:{}),e.environmentId&&"ENVIRONMENT"===e.referenceType?{environment:e.environmentId}:{}),e.applicationId&&"APPLICATION"===e.referenceType?{application:e.applicationId}:{}),e.apiId&&"API"===e.referenceType?{api:e.apiId}:{}),e.from?{from:e.from}:{}),e.to?{to:e.to}:{})}};Ub=Db([Object(nt.Injectable)({providedIn:"root"}),kb(1,Object(nt.Inject)("Constants")),jb("design:paramtypes",["function"==typeof(Eb=void 0!==Tt.b&&Tt.b)?Eb:Object,"function"!=typeof!1&&Object])],Ub);var Mb,Fb,qb,Hb,Gb,Bb=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Wb=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let Vb=class{constructor(e,t,n,i,a){this.auditService=e,this.apiService=t,this.applicationService=n,this.environmentService=i,this.snackBarService=a,this.displayedColumns=["date","user","referenceType","reference","event","targets","patch"],this.filteredTableData=[],this.nbTotalAudit=0,this.filtersForm=new ln.i({event:new ln.g,referenceType:new ln.g,environmentId:new ln.g,applicationId:new ln.g,apiId:new ln.g,range:new ln.i({start:new ln.g,end:new ln.g})}),this.eventsName$=this.auditService.getAllEventsNameByOrganization(),this.environments$=this.environmentService.list().pipe(Object(Wu.a)()),this.environmentsApis$=this.environments$.pipe(Object(st.a)(e=>Object(Rb.a)(e.reduce((e,t)=>Object.assign(Object.assign({},e),{[t.name]:this.apiService.getAll({environmentId:t.id})}),{})))),this.environmentsApplications$=this.environments$.pipe(Object(st.a)(e=>Object(Rb.a)(e.reduce((e,t)=>Object.assign(Object.assign({},e),{[t.name]:this.applicationService.getAll({environmentId:t.id})}),{})))),this.unsubscribe$=new ct.a,this.filtersStream=new $i.a({tableWrapper:{pagination:{index:1,size:10},searchTerm:""},auditFilters:{}})}ngOnInit(){this.filtersForm.valueChanges.subscribe(({event:e,referenceType:t,environmentId:n,applicationId:i,apiId:a,range:o})=>{var s,r,l,c;this.filtersStream.next({tableWrapper:Object.assign(Object.assign({},this.filtersStream.value.tableWrapper),{pagination:{index:1,size:this.filtersStream.value.tableWrapper.pagination.size}}),auditFilters:Object.assign(Object.assign({},this.filtersStream.value.auditFilters),{event:e,referenceType:t,environmentId:n,applicationId:i,apiId:a,from:null!==(r=null===(s=null==o?void 0:o.start)||void 0===s?void 0:s.getTime())&&void 0!==r?r:void 0,to:null!==(c=null===(l=null==o?void 0:o.end)||void 0===l?void 0:l.getTime())&&void 0!==c?c:void 0})})}),this.filtersStream.pipe(Object(at.a)(this.unsubscribe$),Object(_b.a)(100),Object(Km.a)(o.isEqual),Object(st.a)(({auditFilters:e,tableWrapper:t})=>this.auditService.listByOrganization(e,t.pagination.index,t.pagination.size)),Object(lt.a)(()=>(this.snackBarService.error("Unable to run the request, please try again"),pt.a))).subscribe(e=>{var t;this.nbTotalAudit=e.totalElements,this.filteredTableData=(null!==(t=e.content)&&void 0!==t?t:[]).map(t=>{var n,i;return{id:t.id,date:t.createdAt,user:null!==(n=e.metadata[`USER:${t.user}:name`])&&void 0!==n?n:t.user,referenceType:t.referenceType,reference:null!==(i=e.metadata[`${t.referenceType}:${t.referenceId}:name`])&&void 0!==i?i:t.referenceId,event:t.event,targets:Object(o.mapValues)(t.properties,(t,n)=>e.metadata[n+":"+t+":name"]),patch:JSON.parse(t.patch),displayPatch:!1}})})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onFiltersChanged(e){this.filtersStream.next(Object.assign(Object.assign({},this.filtersStream.value),{tableWrapper:e}))}};Vb=Bb([Object(nt.Component)({selector:"org-settings-audit",template:n(1062),styles:[n(1063)]}),Wb("design:paramtypes",["function"==typeof(Mb=void 0!==Ub&&Ub)?Mb:Object,"function"==typeof(Fb=void 0!==hn&&hn)?Fb:Object,"function"==typeof(qb=void 0!==Nb&&Nb)?qb:Object,"function"==typeof(Hb=void 0!==Ku&&Ku)?Hb:Object,"function"==typeof(Gb=void 0!==on&&on)?Gb:Object])],Vb);var Yb,zb,Kb,Qb,Jb=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Xb=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let Zb=class{constructor(e,t,n,i){this.auditService=e,this.apiService=t,this.applicationService=n,this.snackBarService=i,this.displayedColumns=["date","user","referenceType","reference","event","targets","patch"],this.filteredTableData=[],this.nbTotalAudit=0,this.filtersForm=new ln.i({event:new ln.g,referenceType:new ln.g,applicationId:new ln.g,apiId:new ln.g,range:new ln.i({start:new ln.g,end:new ln.g})}),this.eventsName$=this.auditService.getAllEventsName(),this.apis$=this.apiService.getAll(),this.applications$=this.applicationService.getAll(),this.unsubscribe$=new ct.a,this.filtersStream=new $i.a({tableWrapper:{pagination:{index:1,size:10},searchTerm:""},auditFilters:{}})}ngOnInit(){this.filtersForm.valueChanges.subscribe(({event:e,referenceType:t,applicationId:n,apiId:i,range:a})=>{var o,s,r,l;this.filtersStream.next({tableWrapper:Object.assign(Object.assign({},this.filtersStream.value.tableWrapper),{pagination:{index:1,size:this.filtersStream.value.tableWrapper.pagination.size}}),auditFilters:Object.assign(Object.assign({},this.filtersStream.value.auditFilters),{event:e,referenceType:t,applicationId:n,apiId:i,from:null!==(s=null===(o=null==a?void 0:a.start)||void 0===o?void 0:o.getTime())&&void 0!==s?s:void 0,to:null!==(l=null===(r=null==a?void 0:a.end)||void 0===r?void 0:r.getTime())&&void 0!==l?l:void 0})})}),this.filtersStream.pipe(Object(at.a)(this.unsubscribe$),Object(_b.a)(100),Object(Km.a)(o.isEqual),Object(st.a)(({auditFilters:e,tableWrapper:t})=>this.auditService.list(e,t.pagination.index,t.pagination.size)),Object(lt.a)(()=>(this.snackBarService.error("Unable to try the request, please try again"),pt.a))).subscribe(e=>{var t;this.nbTotalAudit=e.totalElements,this.filteredTableData=(null!==(t=e.content)&&void 0!==t?t:[]).map(t=>{var n,i;return{id:t.id,date:t.createdAt,user:null!==(n=e.metadata[`USER:${t.user}:name`])&&void 0!==n?n:t.user,referenceType:t.referenceType,reference:null!==(i=e.metadata[`${t.referenceType}:${t.referenceId}:name`])&&void 0!==i?i:t.referenceId,event:t.event,targets:Object(o.mapValues)(t.properties,(t,n)=>e.metadata[n+":"+t+":name"]),patch:JSON.parse(t.patch),displayPatch:!1}})})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onFiltersChanged(e){this.filtersStream.next(Object.assign(Object.assign({},this.filtersStream.value),{tableWrapper:e}))}};Zb=Jb([Object(nt.Component)({selector:"env-audit",template:n(1065),styles:[n(1066)]}),Xb("design:paramtypes",["function"==typeof(Yb=void 0!==Ub&&Ub)?Yb:Object,"function"==typeof(zb=void 0!==hn&&hn)?zb:Object,"function"==typeof(Kb=void 0!==Nb&&Nb)?Kb:Object,"function"==typeof(Qb=void 0!==on&&on)?Qb:Object])],Zb);var ev,tv=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},nv=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},iv=function(e,t){return function(n,i){t(n,i,e)}};let av=class{constructor(e){this.currentUserService=e}hasRole(e){if(!e||!this.currentUserService.currentUser.roles)return!1;const{scope:t,name:n}=e;return this.currentUserService.currentUser.roles.some(e=>e.scope===t&&e.name===n)}hasAnyMatching(e){return e.filter(e=>this.hasRole(e)).length>0}};av=tv([Object(nt.Injectable)({providedIn:"root"}),iv(0,Object(nt.Inject)(bt)),nv("design:paramtypes",["function"==typeof(ev=void 0!==Gt&&Gt)?ev:Object])],av);var ov,sv,rv,lv,cv,dv=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},pv=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},mv=function(e,t){return function(n,i){t(n,i,e)}};let uv=class{constructor(e,t,n,i,a,o){this.$stateParams=e,this.$state=t,this.roleService=n,this.applicationService=i,this.matDialog=a,this.snackBarService=o,this.nbTotalApplications=0,this.displayedColumnsByStatus={ARCHIVED:["applicationPicture","name","updated_at","actions"],ACTIVE:["applicationPicture","name","type","owner","actions"]},this.displayedColumns=[],this.unsubscribe$=new ct.a,this.defaultFilters={pagination:{index:1,size:10},searchTerm:"",status:"ACTIVE",sort:{direction:""}},this.statusFilters=["ACTIVE","ARCHIVED"],this.filtersStream=new $i.a(this.defaultFilters)}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}ngOnInit(){var e;const t=null!==(e=this.$stateParams.q)&&void 0!==e?e:this.defaultFilters.searchTerm,n=this.$stateParams.page?Number(this.$stateParams.page):this.defaultFilters.pagination.index,i=this.$stateParams.size?Number(this.$stateParams.size):this.defaultFilters.pagination.size;this.currentStatus=this.getCurrentStatus();const a=Lu(this.$stateParams.order,this.defaultFilters.sort);this.filters={searchTerm:t,status:this.currentStatus,sort:a,pagination:Object.assign(Object.assign({},this.filtersStream.value.pagination),{index:n,size:i})},this.filtersStream.next(this.filters),this.filtersStream.pipe(Object(at.a)(this.unsubscribe$),Object(zm.a)(100),Object(Km.a)((e,t)=>JSON.stringify(e)===JSON.stringify(t)),Object(ot.a)(({pagination:e,searchTerm:t,status:n,sort:i})=>{this.$state.go(".",this.toQueryParams({pagination:e,searchTerm:t,status:n,sort:i}),{notify:!1})}),Object(st.a)(({pagination:e,searchTerm:t,status:n,sort:i})=>this.applicationService.list(n,t,Pu(i),e.index,e.size).pipe(Object(lt.a)(()=>Object(dt.a)(new Oi))))).subscribe(e=>this.setDataSourceFromApplicationsList(e))}toQueryParams(e){const{searchTerm:t,pagination:n,status:i,sort:a}=e;return{q:t,page:n.index,size:n.size,status:i,order:Pu(a)}}onAddApplicationClick(){this.$state.go("management.applications.create")}onFiltersChanged(e){this.filters=Object.assign(Object.assign({},this.filters),e),this.filtersStream.next(this.filters)}setDataSourceFromApplicationsList(e){this.filteredTableData=e.data.map(e=>({applicationId:e.id,name:e.name,applicationPicture:e.picture_url,type:e.type,owner:e.owner,updated_at:e.updated_at,status:e.status})),this.nbTotalApplications=e.page.total_elements,this.displayedColumns=this.displayedColumnsByStatus[this.currentStatus]}onStatusChange(){const e="ACTIVE"===this.currentStatus?{active:"name",direction:"asc"}:{active:"updated_at",direction:"desc"},t=Object.assign(Object.assign({},this.defaultFilters),{status:this.currentStatus,sort:e});this.onFiltersChanged(t)}onEditActionClicked(e){this.$state.go("management.applications.application.general",{applicationId:e.applicationId})}onRestoreActionClicked(e){this.matDialog.open(km,{width:"620px",data:{title:`Would you like to restore the application "${e.name}"?`,content:"Every subscription belonging to this application will be restored in PENDING status.\n                        Subscriptions can be reactivated as per requirements.\n                        ",confirmButton:"Restore"},role:"alertdialog",id:"restoreApplicationConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.applicationService.restore(e.applicationId)),Object(ot.a)(()=>this.snackBarService.success(`Application ${e.name} has been restored`))).subscribe(()=>this.$state.go("management.applications.application.subscriptions.list",{applicationId:e.applicationId},{reload:!0}))}canListArchiveApplication(){return this.roleService.hasRole({scope:"ORGANIZATION",name:"ADMIN"})}getCurrentStatus(){return this.canListArchiveApplication()&&this.$stateParams.status&&this.statusFilters.includes(this.$stateParams.status.toUpperCase())?this.$stateParams.status.toUpperCase():this.defaultFilters.status}};uv=dv([Object(nt.Component)({selector:"env-application-list",template:n(1068),styles:[n(1069)]}),mv(0,Object(nt.Inject)(gt)),mv(1,Object(nt.Inject)(ut)),pv("design:paramtypes",[Object,"function"==typeof(ov=void 0!==it.StateService&&it.StateService)?ov:Object,"function"==typeof(sv=void 0!==av&&av)?sv:Object,"function"==typeof(rv=void 0!==Nb&&Nb)?rv:Object,"function"==typeof(lv=void 0!==mt.b&&mt.b)?lv:Object,"function"==typeof(cv=void 0!==on&&on)?cv:Object])],uv);var hv,gv,fv=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},bv=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},vv=function(e,t){return function(n,i){t(n,i,e)}};let yv=class{constructor(e,t,n,i){this.ajsStateParams=e,this.ajsState=t,this.constants=n,this.apiService=i,this.displayedColumns=["picture","name","states","contextPath","tags","owner","definitionVersion","visibility","actions"],this.apisTableDSUnpaginatedLength=0,this.apisTableDS=[],this.filters={pagination:{index:1,size:10},searchTerm:""},this.searchLabel='Search APIs | name:"My api *" ownerName:admin',this.isLoadingData=!0,this.unsubscribe$=new ct.a,this.filters$=new $i.a(this.filters),this.visibilitiesIcons={PUBLIC:"public",PRIVATE:"lock"}}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}ngOnInit(){this.initFilters(),this.isQualityDisplayed=this.constants.env.settings.apiQualityMetrics&&this.constants.env.settings.apiQualityMetrics.enabled,this.isQualityDisplayed&&this.displayedColumns.splice(5,0,"qualityScore"),this.filters$.pipe(Object(at.a)(this.unsubscribe$),Object(zm.a)(100),Object(Km.a)(o.isEqual),Object(ot.a)(({pagination:e,searchTerm:t,status:n,sort:i})=>{this.ajsState.go(".",{q:t,page:e.index,size:e.size,status:n,order:Pu(i)},{notify:!1})}),Object(st.a)(({pagination:e,searchTerm:t,sort:n})=>this.apiService.list(t,Pu(n),e.index,e.size)),Object(ot.a)(e=>{this.apisTableDS=this.toApisTableDS(e),this.apisTableDSUnpaginatedLength=e.page.total_elements,this.isLoadingData=!1}),Object(lt.a)(()=>Object(dt.a)(new Oi))).subscribe()}onFiltersChanged(e){this.filters=Object.assign(Object.assign({},this.filters),e),this.filters$.next(this.filters)}onEditActionClicked(e){this.ajsState.go("management.apis.detail.portal.general",{apiId:e.id})}onAddApiClick(){this.ajsState.go("management.apis.new")}initFilters(){var e;const t=null!==(e=this.ajsStateParams.q)&&void 0!==e?e:this.filters.searchTerm,n=this.ajsStateParams.page?Number(this.ajsStateParams.page):this.filters.pagination.index,i=this.ajsStateParams.size?Number(this.ajsStateParams.size):this.filters.pagination.size,a=Lu(this.ajsStateParams.order,this.filters.sort);this.filters={searchTerm:t,sort:a,pagination:Object.assign(Object.assign({},this.filters$.value.pagination),{index:n,size:i})},this.filters$.next(this.filters)}toApisTableDS(e){return e.page.total_elements>0?e.data.map(e=>{var t,n,i;return{id:e.id,name:e.name,contextPath:e.context_path,tags:e.tags.join(", "),owner:null===(t=null==e?void 0:e.owner)||void 0===t?void 0:t.displayName,ownerEmail:null===(n=null==e?void 0:e.owner)||void 0===n?void 0:n.email,picture:e.picture_url,state:e.state,lifecycleState:e.lifecycle_state,workflowBadge:this.getWorkflowBadge(e),isNotSynced$:this.apiService.isAPISynchronized(e.id).pipe(Object(Kt.a)(e=>!e.is_synchronized)),qualityScore$:this.isQualityDisplayed?this.apiService.getQualityMetrics(e.id).pipe(Object(Kt.a)(e=>this.getQualityScore(Math.floor(100*e.score)))):null,visibility:{label:e.visibility,icon:this.visibilitiesIcons[e.visibility]},origin:e.definition_context.origin,readonly:"kubernetes"===(null===(i=e.definition_context)||void 0===i?void 0:i.origin),definitionVersion:this.getDefinitionVersion(e)}}):[]}getDefinitionVersion(e){switch(e.gravitee){case"4.0.0":return{label:"Event native"};case"2.0.0":return{label:"Policy studio"};default:return{icon:"gio:alert-circle",label:"Path based"}}}getWorkflowBadge(e){return{DEPRECATED:{text:"Deprecated",class:"gio-badge-error"},DRAFT:{text:"Draft",class:"gio-badge-primary"},IN_REVIEW:{text:"In Review",class:"gio-badge-error"},REQUEST_FOR_CHANGES:{text:"Need changes",class:"gio-badge-error"}}["DEPRECATED"===e.lifecycle_state?e.lifecycle_state:e.workflow_state]}getQualityScore(e){let t;return void 0!==e&&(t=e<50?"quality-score__bad":e>=50&&e<80?"quality-score__medium":"quality-score__good"),{score:e,class:t}}};yv=fv([Object(nt.Component)({selector:"api-list",template:n(1071),styles:[n(1072)]}),vv(0,Object(nt.Inject)(gt)),vv(1,Object(nt.Inject)(ut)),vv(2,Object(nt.Inject)("Constants")),bv("design:paramtypes",[Object,"function"==typeof(hv=void 0!==it.StateService&&it.StateService)?hv:Object,"function"!=typeof!1&&Object,"function"==typeof(gv=void 0!==hn&&hn)?gv:Object])],yv);var Sv,wv,Cv,Iv,$v,Av=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Ov=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Tv=function(e,t){return function(n,i){t(n,i,e)}};let Rv=class{constructor(e,t,n,i,a,o){this.ajsStateParams=e,this.apiService=t,this.environmentService=n,this.matDialog=i,this.permissionService=a,this.snackBarService=o,this.unsubscribe$=new ct.a,this.virtualHostModeEnabled=!1,this.domainRestrictions=[],this.isReadOnly=!1}ngOnInit(){Object(Au.a)([this.apiService.get(this.ajsStateParams.apiId),this.environmentService.getCurrent()]).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(([e,t])=>{var n,i;this.apiProxy=e.proxy,this.virtualHostModeEnabled=!Object(o.isEmpty)(t.domainRestrictions)||Object(o.get)(e,"proxy.virtual_hosts",[])>1||!Object(o.isNil)(Object(o.get)(e,"proxy.virtual_hosts[0].host",null)),this.domainRestrictions=null!==(n=t.domainRestrictions)&&void 0!==n?n:[],this.isReadOnly=!this.permissionService.hasAnyMatching(["api-definition-u","api-gateway_definition-u"])||"kubernetes"===(null===(i=e.definition_context)||void 0===i?void 0:i.origin)})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onSubmit(e){return this.apiService.get(this.ajsStateParams.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(st.a)(t=>this.apiService.update(Object.assign(Object.assign({},t),{proxy:e}))),Object(ot.a)(e=>this.apiProxy=e.proxy),Object(ot.a)(()=>this.snackBarService.success("Configuration successfully saved!")),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe()}switchEntrypointMode(){this.virtualHostModeEnabled?this.matDialog.open(cn.d,{width:"500px",data:{title:"Switch to context-path mode",content:"By moving back to context-path you will loose all virtual-hosts. Are you sure to continue?",confirmButton:"Switch"},role:"alertdialog",id:"switchContextPathConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(e=>{e&&(this.onSubmit(Object.assign(Object.assign({},this.apiProxy),{virtual_hosts:[{path:this.apiProxy.virtual_hosts[0].path}]})),this.virtualHostModeEnabled=!this.virtualHostModeEnabled)})).subscribe():this.virtualHostModeEnabled=!this.virtualHostModeEnabled}};Rv=Av([Object(nt.Component)({selector:"api-proxy-entrypoints",template:n(1074),styles:[n(1075)]}),Tv(0,Object(nt.Inject)(gt)),Ov("design:paramtypes",[Object,"function"==typeof(Sv=void 0!==hn&&hn)?Sv:Object,"function"==typeof(wv=void 0!==Ku&&Ku)?wv:Object,"function"==typeof(Cv=void 0!==mt.b&&mt.b)?Cv:Object,"function"==typeof(Iv=void 0!==Yt&&Yt)?Iv:Object,"function"==typeof($v=void 0!==on&&on)?$v:Object])],Rv);var _v,xv=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Lv=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let Pv=class{constructor(e){this.apiService=e,this.apiProxySubmit=new nt.EventEmitter}ngOnChanges(e){(e.apiProxy||e.readOnly)&&this.initForm(this.apiProxy)}onSubmit(){this.apiProxySubmit.emit(Object.assign(Object.assign({},this.apiProxy),{virtual_hosts:[{path:this.entrypointsForm.value.contextPath}]}))}initForm(e){this.entrypointsForm=new ln.i({contextPath:new ln.g({value:e.virtual_hosts[0].path,disabled:this.readOnly},[ln.v.required],[this.apiService.contextPathValidator(e.virtual_hosts[0].path)])}),this.initialEntrypointsFormValue=this.entrypointsForm.getRawValue()}};xv([Object(nt.Input)(),Lv("design:type",Boolean)],Pv.prototype,"readOnly",void 0),xv([Object(nt.Input)(),Lv("design:type",Object)],Pv.prototype,"apiProxy",void 0),xv([Object(nt.Output)(),Lv("design:type",Object)],Pv.prototype,"apiProxySubmit",void 0),Pv=xv([Object(nt.Component)({selector:"api-proxy-entrypoints-context-path",template:n(1077),styles:[n(1078)]}),Lv("design:paramtypes",["function"==typeof(_v=void 0!==hn&&hn)?_v:Object])],Pv);var Nv=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Ev=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let Dv=class{constructor(){this.domainRestrictions=[],this.apiProxySubmit=new nt.EventEmitter,this.virtualHostsTableDisplayedColumns=["host","path","override_entrypoint","remove"]}get virtualHostsFormArray(){return this.virtualHostsForm.get("virtualHosts")}get virtualHostsTableData(){var e,t;return[...null!==(t=null===(e=this.virtualHostsFormArray)||void 0===e?void 0:e.controls)&&void 0!==t?t:[]]}ngOnChanges(e){(e.apiProxy||e.readOnly)&&this.initForm(this.apiProxy)}onSubmit(){const e=this.virtualHostsFormArray.getRawValue().map(e=>({host:Uv(e.host,e.hostDomain),path:e.path,override_entrypoint:e.override_entrypoint}));this.apiProxySubmit.emit(Object.assign(Object.assign({},this.apiProxy),{virtual_hosts:e}))}onAddVirtualHost(){this.virtualHostsFormArray.push(this.newVirtualHostFormGroup()),this.virtualHostsFormArray.markAsDirty()}onDeleteVirtualHostClicked(e){this.virtualHostsFormArray.removeAt(e),this.virtualHostsFormArray.markAsDirty()}onResetClicked(){this.initForm(this.apiProxy)}initForm(e){this.virtualHostsForm=new ln.i({virtualHosts:new ln.d([...e.virtual_hosts.map(e=>this.newVirtualHostFormGroup(e))])})}newVirtualHostFormGroup(e){var t,n,i,a;const o=kv(null==e?void 0:e.host,this.domainRestrictions);return new ln.i({host:new ln.g({value:null!==(t=o.host)&&void 0!==t?t:"",disabled:this.readOnly},[jv(this.domainRestrictions)]),hostDomain:new ln.g({value:null!==(n=o.hostDomain)&&void 0!==n?n:"",disabled:this.readOnly},[jv(this.domainRestrictions)]),path:new ln.g({value:null!==(i=null==e?void 0:e.path)&&void 0!==i?i:"",disabled:this.readOnly},[ln.v.required,ln.v.pattern(/^\/[/.a-zA-Z0-9-_]*$/)]),override_entrypoint:new ln.g({value:null!==(a=null==e?void 0:e.override_entrypoint)&&void 0!==a&&a,disabled:this.readOnly})})}};Nv([Object(nt.Input)(),Ev("design:type",Boolean)],Dv.prototype,"readOnly",void 0),Nv([Object(nt.Input)(),Ev("design:type",Object)],Dv.prototype,"apiProxy",void 0),Nv([Object(nt.Input)(),Ev("design:type",Array)],Dv.prototype,"domainRestrictions",void 0),Nv([Object(nt.Output)(),Ev("design:type",Object)],Dv.prototype,"apiProxySubmit",void 0),Dv=Nv([Object(nt.Component)({selector:"api-proxy-entrypoints-virtual-host",template:n(1080),styles:[n(1081)]})],Dv);const jv=(e=[])=>t=>{if(!t.parent)return null;const n=t.parent.get("host"),i=t.parent.get("hostDomain"),a=(null==n?void 0:n.value)+(null==i?void 0:i.value);if(Object(o.isEmpty)(e)&&!(null==n?void 0:n.value)){const e={required:"true"};return n.setErrors(e),e}if(!Object(o.isEmpty)(e)){const t=e.some(e=>a.endsWith(e))?null:{host:"true"};return n.setErrors(t),t}return n.setErrors(null),i.setErrors(null),null},kv=(e,t=[])=>{let n=e,i="";return Object(o.isEmpty)(t)||(i=e&&t.find(t=>e.endsWith(""+t)),i&&(n=e.replace(new RegExp(`\\.?${Object(o.escapeRegExp)(i)}$`),""))),{host:n,hostDomain:i}},Uv=(e,t)=>Object(o.isEmpty)(t)?e:Object(o.isEmpty)(e)?t:`${e}.${t}`;var Mv,Fv,qv,Hv,Gv=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Bv=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Wv=function(e,t){return function(n,i){t(n,i,e)}};let Vv=class{constructor(e,t,n,i,a){this.matDialog=e,this.ajsStateParams=t,this.apiService=n,this.snackBarService=i,this.permissionService=a,this.unsubscribe$=new ct.a,this.httpMethods=Rm,this.defaultHttpHeaders=_m}ngOnInit(){this.apiService.get(this.ajsStateParams.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(e=>{var t,n,i,a,o,s,r,l,c,d;const p=null!==(n=null===(t=e.proxy)||void 0===t?void 0:t.cors)&&void 0!==n?n:{enabled:!1},m=!this.permissionService.hasAnyMatching(["api-definition-u"])||"kubernetes"===(null===(i=e.definition_context)||void 0===i?void 0:i.origin),u=m||!p.enabled;this.corsForm=new ln.i({enabled:new ln.g({value:p.enabled,disabled:m}),allowOrigin:new ln.g({value:null!==(a=p.allowOrigin)&&void 0!==a?a:[],disabled:u},[xm()]),allowMethods:new ln.g({value:null!==(o=p.allowMethods)&&void 0!==o?o:[],disabled:u}),allowHeaders:new ln.g({value:null!==(s=p.allowHeaders)&&void 0!==s?s:[],disabled:u}),allowCredentials:new ln.g({value:null!==(r=p.allowCredentials)&&void 0!==r&&r,disabled:u}),maxAge:new ln.g({value:null!==(l=p.maxAge)&&void 0!==l?l:-1,disabled:u}),exposeHeaders:new ln.g({value:null!==(c=p.exposeHeaders)&&void 0!==c?c:[],disabled:u}),runPolicies:new ln.g({value:null!==(d=p.runPolicies)&&void 0!==d&&d,disabled:u})}),this.initialCorsFormValue=this.corsForm.getRawValue();const h=["allowOrigin","allowMethods","allowHeaders","allowCredentials","maxAge","exposeHeaders","runPolicies"];this.corsForm.get("enabled").valueChanges.subscribe(e=>{h.forEach(t=>e?this.corsForm.get(t).enable():this.corsForm.get(t).disable())})})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}confirmAllowAllOrigins(){return(e,t)=>{"*"!==e||this.allowAllOriginsConfirmDialog?t(!0):(this.allowAllOriginsConfirmDialog=this.matDialog.open(cn.d,{width:"450px",data:{title:"Are you sure?",content:"Do you want to remove all cross-origin restrictions?",confirmButton:"Yes, I want to allow all origins."},role:"alertdialog",id:"allowAllOriginsConfirmDialog"}),this.allowAllOriginsConfirmDialog.afterClosed().pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.allowAllOriginsConfirmDialog=null,t(e)}))}}onSubmit(){const e=this.corsForm.getRawValue();return this.apiService.get(this.ajsStateParams.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(st.a)(t=>this.apiService.update(Object.assign(Object.assign({},t),{proxy:Object.assign(Object.assign({},t.proxy),{cors:Object.assign(Object.assign({},t.proxy.cors),{enabled:e.enabled,allowOrigin:e.allowOrigin,allowMethods:e.allowMethods,allowHeaders:e.allowHeaders,allowCredentials:e.allowCredentials,maxAge:e.maxAge,exposeHeaders:e.exposeHeaders,runPolicies:e.runPolicies})})}))),Object(ot.a)(()=>this.snackBarService.success("Configuration successfully saved!")),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(ot.a)(()=>this.ngOnInit())).subscribe()}};Vv=Gv([Object(nt.Component)({selector:"api-proxy-cors",template:n(1083),styles:[n(1084)]}),Wv(1,Object(nt.Inject)(gt)),Bv("design:paramtypes",["function"==typeof(Mv=void 0!==mt.b&&mt.b)?Mv:Object,Object,"function"==typeof(Fv=void 0!==hn&&hn)?Fv:Object,"function"==typeof(qv=void 0!==on&&on)?qv:Object,"function"==typeof(Hv=void 0!==Yt&&Yt)?Hv:Object])],Vv);var Yv,zv,Kv,Qv,Jv=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Xv=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Zv=function(e,t){return function(n,i){t(n,i,e)}};let ey=class{constructor(e,t,n,i,a){this.ajsStateParams=e,this.apiService=t,this.tagService=n,this.snackBarService=i,this.permissionService=a,this.unsubscribe$=new ct.a}ngOnInit(){Object(Au.a)([this.apiService.get(this.ajsStateParams.apiId),this.tagService.list()]).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(([e,t])=>{var n,i;this.shardingTags=t;const a=!this.permissionService.hasAnyMatching(["api-definition-u"])||"kubernetes"===(null===(n=e.definition_context)||void 0===n?void 0:n.origin);this.deploymentsForm=new ln.i({tags:new ln.g({value:null!==(i=e.tags)&&void 0!==i?i:[],disabled:a})}),this.initialDeploymentsFormValue=this.deploymentsForm.getRawValue()})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onSubmit(){return this.apiService.get(this.ajsStateParams.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(st.a)(e=>{var t;return this.apiService.update(Object.assign(Object.assign({},e),{tags:null!==(t=this.deploymentsForm.get("tags").value)&&void 0!==t?t:[]}))}),Object(ot.a)(()=>this.snackBarService.success("Configuration successfully saved!")),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(ot.a)(()=>this.ngOnInit())).subscribe()}};ey=Jv([Object(nt.Component)({selector:"api-proxy-deployments",template:n(1086),styles:[n(1087)]}),Zv(0,Object(nt.Inject)(gt)),Xv("design:paramtypes",[Object,"function"==typeof(Yv=void 0!==hn&&hn)?Yv:Object,"function"==typeof(zv=void 0!==$f&&$f)?zv:Object,"function"==typeof(Kv=void 0!==on&&on)?Kv:Object,"function"==typeof(Qv=void 0!==Yt&&Yt)?Qv:Object])],ey);const ty=e=>e?Object(o.flatMap)(Object.entries(e),([e,t])=>[...Object.entries(t).map(([t,n])=>({id:`${e}-${t}`,key:e,contentType:t,statusCode:n.status,body:n.body,headers:n.headers}))]):[],ny=e=>e.reduce((e,t)=>{const{key:n,contentType:i,statusCode:a,body:o,headers:s}=t;return e[n]||(e[n]={}),e[n][i]={status:a,body:o,headers:s},e},{});var iy,ay,oy,sy,ry,ly=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},cy=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},dy=function(e,t){return function(n,i){t(n,i,e)}};let py=class{constructor(e,t,n,i,a,o){this.ajsStateParams=e,this.ajsState=t,this.apiService=n,this.permissionService=i,this.matDialog=a,this.snackBarService=o,this.unsubscribe$=new ct.a,this.responseTemplateTableDisplayedColumns=["key","contentType","statusCode","actions"],this.isReadOnly=!1}ngOnInit(){this.apiService.get(this.ajsStateParams.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(e=>{var t;this.apiId=e.id,this.responseTemplateTableData=ty(e.response_templates),this.isReadOnly=!this.permissionService.hasAnyMatching(["api-response_templates-u"])||"kubernetes"===(null===(t=e.definition_context)||void 0===t?void 0:t.origin)})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onAddResponseTemplateClicked(){this.ajsState.go("management.apis.detail.proxy.responsetemplates.new",{apiId:this.apiId})}onEditResponseTemplateClicked(e){this.ajsState.go("management.apis.detail.proxy.responsetemplates.edit",{apiId:this.apiId,responseTemplateId:e.id})}onDeleteResponseTemplateClicked(e){this.matDialog.open(cn.d,{width:"500px",data:{title:"Delete a Response Template",content:`Are you sure you want to delete the Response Template <strong>${e.key} - ${e.contentType}</strong>?`,confirmButton:"Delete"},role:"alertdialog",id:"deleteResponseTemplateConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.apiService.get(this.ajsStateParams.apiId)),Object(st.a)(t=>t.response_templates[e.key]&&t.response_templates[e.key][e.contentType]?(delete t.response_templates[e.key][e.contentType],this.apiService.update(t)):Object(dt.a)({})),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(ot.a)(()=>this.snackBarService.success(`Response Template ${e.key} - ${e.contentType} successfully deleted!`))).subscribe(()=>this.ngOnInit())}};py=ly([Object(nt.Component)({selector:"api-proxy-response-templates-list",template:n(1089),styles:[n(1090)]}),dy(0,Object(nt.Inject)(gt)),dy(1,Object(nt.Inject)(ut)),cy("design:paramtypes",[Object,"function"==typeof(iy=void 0!==it.StateService&&it.StateService)?iy:Object,"function"==typeof(ay=void 0!==hn&&hn)?ay:Object,"function"==typeof(oy=void 0!==Yt&&Yt)?oy:Object,"function"==typeof(sy=void 0!==mt.b&&mt.b)?sy:Object,"function"==typeof(ry=void 0!==on&&on)?ry:Object])],py);var my,uy,hy,gy,fy=n(76),by=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},vy=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},yy=function(e,t){return function(n,i){t(n,i,e)}};let Sy=class{constructor(e,t,n,i,a){this.ajsStateParams=e,this.ajsState=t,this.apiService=n,this.permissionService=i,this.snackBarService=a,this.unsubscribe$=new ct.a,this.defaultKeys=["DEFAULT","API_KEY_MISSING","API_KEY_INVALID","QUOTA_TOO_MANY_REQUESTS","RATE_LIMIT_TOO_MANY_REQUESTS","REQUEST_CONTENT_LIMIT_TOO_LARGE","REQUEST_CONTENT_LIMIT_LENGTH_REQUIRED","REQUEST_TIMEOUT","REQUEST_VALIDATION_INVALID","RESOURCE_FILTERING_FORBIDDEN","RESOURCE_FILTERING_METHOD_NOT_ALLOWED","RBAC_FORBIDDEN","RBAC_INVALID_USER_ROLES","RBAC_NO_USER_ROLE","OAUTH2_MISSING_SERVER","OAUTH2_MISSING_HEADER","OAUTH2_MISSING_ACCESS_TOKEN","OAUTH2_INVALID_ACCESS_TOKEN","OAUTH2_INVALID_SERVER_RESPONSE","OAUTH2_INSUFFICIENT_SCOPE","OAUTH2_SERVER_UNAVAILABLE","HTTP_SIGNATURE_INVALID_SIGNATURE","JWT_MISSING_TOKEN","JWT_INVALID_TOKEN","JSON_INVALID_PAYLOAD","JSON_INVALID_FORMAT","JSON_INVALID_RESPONSE_PAYLOAD","JSON_INVALID_RESPONSE_FORMAT","GATEWAY_INVALID_REQUEST","GATEWAY_INVALID_RESPONSE","GATEWAY_OAUTH2_ACCESS_DENIED","GATEWAY_OAUTH2_SERVER_ERROR","GATEWAY_OAUTH2_INVALID_CLIENT","GATEWAY_MISSING_SECURITY_PROVIDER","GATEWAY_POLICY_INTERNAL_ERROR","GATEWAY_PLAN_UNRESOLVABLE","GATEWAY_CLIENT_CONNECTION_ERROR","GATEWAY_CLIENT_CONNECTION_TIMEOUT"],this.isReadOnly=!1,this.mode="new"}ngOnInit(){this.apiService.get(this.ajsStateParams.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(e=>{var t,n,i,a,s,r,l,c,d,p,m,u,h,g;this.apiId=e.id;const f=ty(e.response_templates);this.responseTemplateToEdit=f.find(e=>e.id===this.ajsStateParams.responseTemplateId),this.mode=Object(o.isNil)(this.responseTemplateToEdit)?"new":"edit",this.isReadOnly=!this.permissionService.hasAnyMatching(["api-response_templates-u"])||"kubernetes"===(null===(t=e.definition_context)||void 0===t?void 0:t.origin),this.responseTemplatesForm=new ln.i({key:new ln.g({value:null!==(i=null===(n=this.responseTemplateToEdit)||void 0===n?void 0:n.key)&&void 0!==i?i:"",disabled:this.isReadOnly},[ln.v.required,Cy()]),acceptHeader:new ln.g({value:null!==(s=null===(a=this.responseTemplateToEdit)||void 0===a?void 0:a.contentType)&&void 0!==s?s:"*/*",disabled:this.isReadOnly},[ln.v.required,wy(f,this.responseTemplateToEdit)]),statusCode:new ln.g({value:Object(o.toString)(null!==(l=null===(r=this.responseTemplateToEdit)||void 0===r?void 0:r.statusCode)&&void 0!==l?l:400),disabled:this.isReadOnly},[ln.v.required,Pm.statusCodeValidator()]),headers:new ln.g({value:Object.entries(null!==(d=null===(c=this.responseTemplateToEdit)||void 0===c?void 0:c.headers)&&void 0!==d?d:{}).map(([e,t])=>({key:e,value:t})),disabled:this.isReadOnly}),body:new ln.g({value:null!==(m=null===(p=this.responseTemplateToEdit)||void 0===p?void 0:p.body)&&void 0!==m?m:"",disabled:this.isReadOnly})}),this.initialResponseTemplatesFormValue=this.responseTemplatesForm.getRawValue(),this.filteredStatusCodes$=null===(u=this.responseTemplatesForm.get("statusCode"))||void 0===u?void 0:u.valueChanges.pipe(Object(fy.a)(""),Object(Kt.a)(e=>Object(o.isEmpty)(e)?Pm.statusCodes:Pm.statusCodes.filter(t=>Object(o.toString)(t.code).includes(Object(o.toString)(e))||t.label.toLowerCase().includes(Object(o.toString)(e).toLowerCase())))),this.selectedStatusCodes$=null===(h=this.responseTemplatesForm.get("statusCode"))||void 0===h?void 0:h.valueChanges.pipe(Object(at.a)(this.unsubscribe$),Object(fy.a)(null===(g=this.responseTemplatesForm.get("statusCode"))||void 0===g?void 0:g.value),Object(Kt.a)(e=>Pm.statusCodes.find(t=>Object(o.toString)(t.code)===Object(o.toString)(e))))})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onSubmit(){var e;const t=this.responseTemplatesForm.getRawValue(),n=t.headers,i={id:null===(e=this.responseTemplateToEdit)||void 0===e?void 0:e.id,key:t.key,contentType:t.acceptHeader,statusCode:parseInt(t.statusCode,10),headers:Object(o.isEmpty)(n)?void 0:Object.fromEntries(n.map(e=>[e.key,e.value])),body:t.body};return this.apiService.get(this.ajsStateParams.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(st.a)(e=>{const t=ty(e.response_templates),n="edit"===this.mode?t.findIndex(e=>{var t;return e.id===(null===(t=this.responseTemplateToEdit)||void 0===t?void 0:t.id)}):-1;return-1!==n?t.splice(n,1,i):t.push(i),this.apiService.update(Object.assign(Object.assign({},e),{response_templates:ny(t)}))}),Object(ot.a)(()=>this.snackBarService.success("Configuration successfully saved!")),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(ot.a)(()=>this.ajsState.go("management.apis.detail.proxy.responsetemplates.list",{apiId:this.apiId}))).subscribe()}};Sy=by([Object(nt.Component)({selector:"api-proxy-response-templates-edit",template:n(1092),styles:[n(1093)]}),yy(0,Object(nt.Inject)(gt)),yy(1,Object(nt.Inject)(ut)),vy("design:paramtypes",[Object,"function"==typeof(my=void 0!==it.StateService&&it.StateService)?my:Object,"function"==typeof(uy=void 0!==hn&&hn)?uy:Object,"function"==typeof(hy=void 0!==Yt&&Yt)?hy:Object,"function"==typeof(gy=void 0!==on&&on)?gy:Object])],Sy);const wy=(e,t)=>n=>{const i=n.value;if(Object(o.isEmpty)(i))return null;if(!n.parent)return null;const a=n.parent.get("key");return e.filter(e=>(null==t?void 0:t.id)!==e.id).some(e=>e.key===a.value&&e.contentType===i)?{uniqAcceptHeader:`Response template with key '${a.value}' and accept header '${i}' already exists.`}:null},Cy=()=>e=>{if(!e.parent)return null;const t=e.parent.get("acceptHeader");return t.updateValueAndValidity(),t.markAsTouched(),null},Iy=(e,t)=>!(t.backup||"http"!==t.type.toLowerCase()&&"grpc"!==t.type.toLowerCase())&&(null!=t.healthcheck?t.healthcheck.enabled:e);var $y,Ay,Oy,Ty,Ry,_y=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},xy=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Ly=function(e,t){return function(n,i){t(n,i,e)}};let Py=class{constructor(e,t,n,i,a,o){this.ajsStateParams=e,this.ajsState=t,this.apiService=n,this.permissionService=i,this.matDialog=a,this.snackBarService=o,this.unsubscribe$=new ct.a,this.isReadOnly=!1,this.endpointTableDisplayedColumns=["name","healthCheck","target","type","weight","actions"]}ngOnInit(){this.apiService.get(this.ajsStateParams.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(e=>{this.initData(e)})).subscribe()}navigateToGroup(e){this.ajsState.go("management.apis.detail.proxy.group",{groupName:e})}navigateToEndpoint(e,t){this.ajsState.go("management.apis.detail.proxy.endpoint",{endpointName:t,groupName:e})}deleteGroup(e){this.matDialog.open(cn.d,{width:"500px",data:{title:"Delete Endpoint Group",content:`Are you sure you want to delete the Group <strong>${e}</strong>?`,confirmButton:"Delete"},role:"alertdialog",id:"deleteEndpointGroupConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.apiService.get(this.apiId)),Object(st.a)(t=>(o.remove(t.proxy.groups,t=>t.name===e),this.apiService.update(t))),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(ot.a)(e=>this.initData(e)),Object(Kt.a)(()=>this.snackBarService.success(`Endpoint group ${e} successfully deleted!`))).subscribe()}deleteEndpoint(e,t){this.matDialog.open(cn.d,{width:"500px",data:{title:"Delete Endpoint",content:`Are you sure you want to delete the Endpoint <strong>${t}</strong>?`,confirmButton:"Delete"},role:"alertdialog",id:"deleteEndpointConfirmDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.apiService.get(this.apiId)),Object(st.a)(n=>(o.remove(o.find(n.proxy.groups,t=>t.name===e).endpoints,e=>e.name===t),this.apiService.update(n))),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(ot.a)(e=>this.initData(e)),Object(Kt.a)(()=>this.snackBarService.success(`Endpoint ${t} successfully deleted!`))).subscribe()}initData(e){var t;this.apiId=e.id,this.endpointGroupsTableData=(e=>{if(!e.proxy.groups)return[];const t=e.services&&e.services["health-check"]&&e.services["health-check"].enabled;return e.proxy.groups.flatMap(e=>({name:e.name,endpoints:e.endpoints&&e.endpoints.length>0?e.endpoints.map(e=>({name:e.name,type:e.type,target:e.target,weight:e.weight,isBackup:e.backup,healthcheck:Iy(t,e),inherit:e.inherit})):[]}))})(e),this.isReadOnly=!this.permissionService.hasAnyMatching(["api-definition-r"])||"kubernetes"===(null===(t=e.definition_context)||void 0===t?void 0:t.origin)}};Py=_y([Object(nt.Component)({selector:"api-proxy-endpoint-list",template:n(1095),styles:[n(1096)]}),Ly(0,Object(nt.Inject)(gt)),Ly(1,Object(nt.Inject)(ut)),xy("design:paramtypes",[Object,"function"==typeof($y=void 0!==it.StateService&&it.StateService)?$y:Object,"function"==typeof(Ay=void 0!==hn&&hn)?Ay:Object,"function"==typeof(Oy=void 0!==Yt&&Yt)?Oy:Object,"function"==typeof(Ty=void 0!==mt.b&&mt.b)?Ty:Object,"function"==typeof(Ry=void 0!==on&&on)?Ry:Object])],Py);var Ny,Ey,Dy,jy=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},ky=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Uy=function(e,t){return function(n,i){t(n,i,e)}},My=function(e,t,n,i){return new(n||(n=Promise))((function(a,o){function s(e){try{l(i.next(e))}catch(e){o(e)}}function r(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,r)}l((i=i.apply(e,t||[])).next())}))};let Fy=class{constructor(e,t,n,i){this.dialogRef=e,this.apiService=n,this.snackBarService=i,this.unsubscribe$=new ct.a,this.optionsCheckbox=[{id:"groups",label:"Groups",checked:!0},{id:"members",label:"Members",checked:!0},{id:"pages",label:"Pages",checked:!0},{id:"plans",label:"Plans",checked:!0}],this.apiId=t.api.id,this.contextPathPlaceholder=t.api.proxy.virtual_hosts[0].path,this.versionPlaceholder=t.api.version,this.duplicateApiForm=new ln.i({contextPath:new ln.g("",[ln.v.required],[this.apiService.contextPathValidator()]),version:new ln.g("",[ln.v.required,this.apiService.versionValidator()]),options:new ln.i(this.optionsCheckbox.reduce((e,t)=>(e[t.id]=new ln.g(t.checked),e),{}))})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onDuplicate(){return My(this,void 0,void 0,(function*(){const e=this.duplicateApiForm.value;this.apiService.duplicate(this.apiId,{context_path:e.contextPath,version:e.version,filtered_fields:this.optionsCheckbox.filter(t=>!e.options[t.id]).map(e=>e.id)}).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(()=>this.snackBarService.success("API duplicated successfully.")),Object(lt.a)(({error:e})=>{var t;return this.snackBarService.error(null!==(t=e.message)&&void 0!==t?t:"An error occurred while duplicate the API."),pt.a})).subscribe(e=>{this.dialogRef.close(e)})}))}};Fy=jy([Object(nt.Component)({selector:"api-portal-details-duplicate-dialog",template:n(1098),styles:[n(1099)]}),Uy(1,Object(nt.Inject)(mt.a)),ky("design:paramtypes",["function"==typeof(Ny=void 0!==mt.g&&mt.g)?Ny:Object,Object,"function"==typeof(Ey=void 0!==hn&&hn)?Ey:Object,"function"==typeof(Dy=void 0!==on&&on)?Dy:Object])],Fy);var qy,Hy,Gy,By=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Wy=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Vy=function(e,t){return function(n,i){t(n,i,e)}},Yy=function(e,t,n,i){return new(n||(n=Promise))((function(a,o){function s(e){try{l(i.next(e))}catch(e){o(e)}}function r(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,r)}l((i=i.apply(e,t||[])).next())}))};let zy=class{constructor(e,t,n,i){this.dialogRef=e,this.apiService=n,this.snackBarService=i,this.unsubscribe$=new ct.a,this.jsonOptions=[{id:"default",label:"Current version",isDeprecated:!1},{id:"3.7",label:"3.7.x to 3.9.x version",isDeprecated:!0},{id:"3.0",label:"3.0.x to 3.6.x version",isDeprecated:!0},{id:"1.25",label:"1.25.x to 1.30.x version",isDeprecated:!0},{id:"1.20",label:"1.20.x to 1.24.x version",isDeprecated:!0},{id:"1.15",label:"1.15.x to 1.16.x version",isDeprecated:!0}],this.jsonOptionsCheckbox=[{id:"groups",label:"Groups",checked:!0},{id:"members",label:"Members",checked:!0},{id:"pages",label:"Pages",checked:!0},{id:"plans",label:"Plans",checked:!0},{id:"metadata",label:"Metadata",checked:!0}],this.selectedTabIndex=0,this.apiId=t.api.id,this.fileName=Ky(t.api),this.exportJsonFrom=new ln.i({exportVersion:new ln.g(this.jsonOptions[0].id),options:new ln.i(this.jsonOptionsCheckbox.reduce((e,t)=>(e[t.id]=new ln.g(t.checked),e),{}))})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onExport(){return Yy(this,void 0,void 0,(function*(){let e;if(0===this.selectedTabIndex){const t=this.exportJsonFrom.value,n=Object.entries(t.options).filter(([e,t])=>!t).map(([e])=>e);e=this.apiService.export(this.apiId,n,t.exportVersion).pipe(Object(Kt.a)(e=>({blob:e,fileName:this.fileName+".json"})))}else e=this.apiService.exportCrd(this.apiId).pipe(Object(Kt.a)(e=>({blob:e,fileName:this.fileName+"-crd.yml"})));e.pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(({blob:e,fileName:t})=>{const n=document.createElement("a");n.download=t,n.href=(window.webkitURL||window.URL).createObjectURL(e),n.click()}),Object(lt.a)(()=>(this.snackBarService.error("An error occurred while export the API."),pt.a))).subscribe(()=>{this.dialogRef.close()})}))}getJsonOptions(e){return this.jsonOptions.find(t=>t.id===e)}};zy=By([Object(nt.Component)({selector:"api-portal-details-export-dialog",template:n(1101),styles:[n(1102)]}),Vy(1,Object(nt.Inject)(mt.a)),Wy("design:paramtypes",["function"==typeof(qy=void 0!==mt.g&&mt.g)?qy:Object,Object,"function"==typeof(Hy=void 0!==hn&&hn)?Hy:Object,"function"==typeof(Gy=void 0!==on&&on)?Gy:Object])],zy);const Ky=e=>`${e.name}-${e.version}`.replace(/[\s]/gi,"-").replace(/[^\w]/gi,"-");var Qy,Jy=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Xy=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Zy=function(e,t){return function(n,i){t(n,i,e)}};let eS=class{constructor(e,t){this.http=e,this.constants=t}listPromotionTargets(){return this.http.get(this.constants.env.baseURL+"/promotion-targets")}promote(e,t){const n={targetEnvCockpitId:t.id,targetEnvName:t.name};return this.http.post(`${this.constants.env.baseURL}/apis/${e}/_promote`,n)}processPromotion(e,t){return this.http.post(`${this.constants.org.baseURL}/promotions/${e}/_process`,t)}listPromotion(e){const t=Object.assign(Object.assign({},e.apiId?{apiId:e.apiId}:{}),e.statuses?{statuses:e.statuses}:{});return this.http.post(this.constants.org.baseURL+"/promotions/_search",null,{params:t})}};eS=Jy([Object(nt.Injectable)({providedIn:"root"}),Zy(1,Object(nt.Inject)("Constants")),Xy("design:paramtypes",["function"==typeof(Qy=void 0!==Tt.b&&Tt.b)?Qy:Object,"function"!=typeof!1&&Object])],eS);var tS,nS,iS,aS,oS,sS=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},rS=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},lS=function(e,t){return function(n,i){t(n,i,e)}};let cS=class{constructor(e,t,n,i,a,o){this.dialogRef=e,this.apiService=n,this.promotionService=i,this.snackBarService=a,this.cockpitService=o,this.unsubscribe$=new ct.a,this.state="loading",this.promotionTargets=[],this.hasPromotionInProgress=!1,this.promoteControl=new ln.g("",[ln.v.required]),this.apiId=t.api.id,Object(Au.a)([this.promotionService.listPromotionTargets(),this.promotionService.listPromotion({apiId:this.apiId,statuses:["CREATED","TO_BE_VALIDATED"]})]).pipe(Object(at.a)(this.unsubscribe$),Object(Kt.a)(([e,t])=>{var n;this.promotionTargets=e.map(e=>({id:e.id,name:e.name,promotionInProgress:t.some(t=>t.targetEnvCockpitId===e.id)})).sort((e,t)=>e.name.localeCompare(t.name)),this.hasPromotionInProgress=this.promotionTargets.some(e=>e.promotionInProgress),this.promoteControl.setValue(null===(n=this.promotionTargets.find(e=>!e.promotionInProgress))||void 0===n?void 0:n.id),this.state="hasCockpit"}),Object(lt.a)(e=>{var t,n,i,a;if("installation.notAccepted"===(null===(t=e.error)||void 0===t?void 0:t.technicalCode)){const{cockpitURL:t}=e.error.parameters;return this.cockpitURL=this.cockpitService.addQueryParamsForAnalytics(t,It.API_PROMOTION),this.state="meetCockpit",pt.a}return this.snackBarService.error(null!==(a=null!==(i=null===(n=e.error)||void 0===n?void 0:n.message)&&void 0!==i?i:e.message)&&void 0!==a?a:"An error occurred while loading promotion targets."),pt.a})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onPromote(){const e=this.promotionTargets.find(e=>e.id===this.promoteControl.value);this.promotionService.promote(this.apiId,e).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(()=>{this.snackBarService.success("Promotion requested.")}),Object(lt.a)(e=>{var t,n,i;return this.snackBarService.error(null!==(i=null!==(n=null===(t=e.error)||void 0===t?void 0:t.message)&&void 0!==n?n:e.message)&&void 0!==i?i:"An error occurred while requesting promotion."),pt.a})).subscribe(()=>this.dialogRef.close())}};cS=sS([Object(nt.Component)({selector:"api-portal-details-promote-dialog",template:n(1104),styles:[n(1105)]}),lS(1,Object(nt.Inject)(mt.a)),rS("design:paramtypes",["function"==typeof(tS=void 0!==mt.g&&mt.g)?tS:Object,Object,"function"==typeof(nS=void 0!==hn&&hn)?nS:Object,"function"==typeof(iS=void 0!==eS&&eS)?iS:Object,"function"==typeof(aS=void 0!==on&&on)?aS:Object,"function"==typeof(oS=void 0!==At&&At)?oS:Object])],cS);var dS,pS=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},mS=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},uS=function(e,t){return function(n,i){t(n,i,e)}};let hS=class{constructor(e,t){this.http=e,this.constants=t}list(){return this.http.get(this.constants.env.baseURL+"/configuration/categories")}};hS=pS([Object(nt.Injectable)({providedIn:"root"}),uS(1,Object(nt.Inject)("Constants")),mS("design:paramtypes",["function"==typeof(dS=void 0!==Tt.b&&Tt.b)?dS:Object,"function"!=typeof!1&&Object])],hS);var gS,fS,bS,vS,yS,SS,wS,CS=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},IS=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},$S=function(e,t){return function(n,i){t(n,i,e)}};let AS=class{constructor(e,t,n,i,a,o,s,r,l){this.ajsStateParams=e,this.ajsState=t,this.apiService=n,this.policyService=i,this.categoryService=a,this.permissionService=o,this.snackBarService=s,this.matDialog=r,this.constants=l,this.unsubscribe$=new ct.a,this.labelsAutocompleteOptions=[],this.apiCategories=[],this.dangerActions={canAskForReview:!1,canStartApi:!1,canStopApi:!1,canChangeApiLifecycle:!1,canPublish:!1,canUnpublish:!1,canChangeVisibilityToPublic:!1,canChangeVisibilityToPrivate:!1,canDeprecate:!1,canDelete:!1},this.canPromote=!1,this.canDisplayJupiterToggle=!1,this.isQualityEnabled=!1,this.isReadOnly=!1}ngOnInit(){var e,t,n,i,a,o,s,r,l,c,d;this.labelsAutocompleteOptions=null!==(i=null===(n=null===(t=null===(e=this.constants.env)||void 0===e?void 0:e.settings)||void 0===t?void 0:t.api)||void 0===n?void 0:n.labelsDictionary)&&void 0!==i?i:[],this.canDisplayJupiterToggle=null!==(r=null===(s=null===(o=null===(a=this.constants.org)||void 0===a?void 0:a.settings)||void 0===o?void 0:o.jupiterMode)||void 0===s?void 0:s.enabled)&&void 0!==r&&r,this.isQualityEnabled=null===(d=null===(c=null===(l=this.constants.env)||void 0===l?void 0:l.settings)||void 0===c?void 0:c.apiQualityMetrics)||void 0===d?void 0:d.enabled,Object(Au.a)([this.apiService.get(this.ajsStateParams.apiId),this.categoryService.list()]).pipe(Object(at.a)(this.unsubscribe$),Object(st.a)(([e,t])=>Object(Au.a)([OS(e.picture_url),OS(e.background_url)]).pipe(Object(Kt.a)(([n,i])=>[Object.assign(Object.assign({},e),{picture_url:n?e.picture_url:null,background_url:i?e.background_url:null}),t]))),Object(ot.a)(([e,t])=>{var n,i,a,o,s,r,l,c,d,p,m,u,h,g,f,b;this.isReadOnly=!this.permissionService.hasAnyMatching(["api-definition-u"])||"kubernetes"===(null===(n=e.definition_context)||void 0===n?void 0:n.origin),this.apiId=e.id,this.api=e,this.updateState=null==e.gravitee||"1.0.0"===e.gravitee?"TO_UPDATE":void 0,this.apiCategories=t,this.apiOwner=e.owner.displayName,this.apiCreatedAt=e.created_at,this.apiLastDeploymentAt=e.updated_at,this.dangerActions={canAskForReview:(null===(o=null===(a=null===(i=this.constants.env)||void 0===i?void 0:i.settings)||void 0===a?void 0:a.apiReview)||void 0===o?void 0:o.enabled)&&("DRAFT"===e.workflow_state||"REQUEST_FOR_CHANGES"===e.workflow_state||!e.workflow_state),canStartApi:(!(null===(l=null===(r=null===(s=this.constants.env)||void 0===s?void 0:s.settings)||void 0===r?void 0:r.apiReview)||void 0===l?void 0:l.enabled)||(null===(p=null===(d=null===(c=this.constants.env)||void 0===c?void 0:c.settings)||void 0===d?void 0:d.apiReview)||void 0===p?void 0:p.enabled)&&(!e.workflow_state||"REVIEW_OK"===e.workflow_state))&&"STOPPED"===e.state,canStopApi:(!(null===(h=null===(u=null===(m=this.constants.env)||void 0===m?void 0:m.settings)||void 0===u?void 0:u.apiReview)||void 0===h?void 0:h.enabled)||(null===(b=null===(f=null===(g=this.constants.env)||void 0===g?void 0:g.settings)||void 0===f?void 0:f.apiReview)||void 0===b?void 0:b.enabled)&&(!e.workflow_state||"REVIEW_OK"===e.workflow_state))&&"STARTED"===e.state,canChangeApiLifecycle:this.canChangeApiLifecycle(e),canPublish:!e.lifecycle_state||"CREATED"===e.lifecycle_state||"UNPUBLISHED"===e.lifecycle_state,canUnpublish:"PUBLISHED"===e.lifecycle_state,canChangeVisibilityToPublic:"DEPRECATED"!==e.lifecycle_state&&"PRIVATE"===e.visibility,canChangeVisibilityToPrivate:"DEPRECATED"!==e.lifecycle_state&&"PUBLIC"===e.visibility,canDeprecate:"DEPRECATED"!==e.lifecycle_state,canDelete:!("STARTED"===e.state||"PUBLISHED"===e.lifecycle_state)},this.canPromote=this.dangerActions.canChangeApiLifecycle&&"DEPRECATED"!==e.lifecycle_state,this.apiDetailsForm=new ln.i({name:new ln.g({value:e.name,disabled:this.isReadOnly},[ln.v.required]),version:new ln.g({value:e.version,disabled:this.isReadOnly},[ln.v.required,this.apiService.versionValidator()]),description:new ln.g({value:e.description,disabled:this.isReadOnly},[ln.v.required]),picture:new ln.g({value:e.picture_url?[e.picture_url]:[],disabled:this.isReadOnly}),background:new ln.g({value:e.background_url?[e.background_url]:[],disabled:this.isReadOnly}),labels:new ln.g({value:e.labels,disabled:this.isReadOnly}),categories:new ln.g({value:e.categories,disabled:this.isReadOnly}),enableJupiter:new ln.g({value:"jupiter"===e.execution_mode,disabled:this.isReadOnly})}),this.initialApiDetailsFormValue=this.apiDetailsForm.getRawValue()})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onSubmit(){const e=this.apiDetailsForm.getRawValue(),t=TS(e.picture[0]),n=TS(e.background[0]);return this.apiService.get(this.ajsStateParams.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(Kt.a)(i=>Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},i),null!==t?{picture:t}:{picture_url:null,picture:null}),null!==n?{background:n}:{background_url:null,background:null}),{name:e.name,version:e.version,description:e.description,labels:e.labels,categories:e.categories}),this.canDisplayJupiterToggle?{execution_mode:e.enableJupiter?"jupiter":"v3"}:{})),Object(st.a)(e=>this.apiService.update(e)),Object(ot.a)(()=>this.snackBarService.success("Configuration successfully saved!")),Object(lt.a)(e=>{var t,n;return this.snackBarService.error(null!==(n=null===(t=e.error)||void 0===t?void 0:t.message)&&void 0!==n?n:e.message),pt.a}),Object(ot.a)(()=>{this.apiId=void 0,this.ngOnInit()})).subscribe()}importApi(){this.policyService.listSwaggerPolicies().pipe(Object(at.a)(this.unsubscribe$),Object(st.a)(e=>this.matDialog.open(In,{data:{apiId:this.ajsStateParams.apiId,definitionVersion:this.api.gravitee,policies:e},role:"alertdialog",id:"importApiDialog"}).afterClosed()),Object(rt.a)(e=>!0===e),Object(ot.a)(()=>this.ngOnInit()),Object(lt.a)(e=>{var t,n;return this.snackBarService.error(null!==(n=null===(t=e.error)||void 0===t?void 0:t.message)&&void 0!==n?n:"An error occurred while importing the API."),pt.a})).subscribe()}duplicateApi(){this.matDialog.open(Fy,{data:{api:this.api},role:"alertdialog",id:"duplicateApiDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!!e),Object(ot.a)(e=>this.ajsState.go("management.apis.detail.portal.general",{apiId:e.id}))).subscribe()}exportApi(){this.matDialog.open(zy,{data:{api:this.api},role:"alertdialog",id:"exportApiDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$)).subscribe()}promoteApi(){this.matDialog.open(cS,{data:{api:this.api},role:"alertdialog",id:"promoteApiDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$)).subscribe()}canChangeApiLifecycle(e){var t,n,i;return(null===(i=null===(n=null===(t=this.constants.env)||void 0===t?void 0:t.settings)||void 0===n?void 0:n.apiReview)||void 0===i?void 0:i.enabled)?!e.workflow_state||"REVIEW_OK"===e.workflow_state:"CREATED"===e.lifecycle_state||"PUBLISHED"===e.lifecycle_state||"UNPUBLISHED"===e.lifecycle_state}updateApiVersion(){this.updateState="IN_PROGRESS",this.apiService.migrateApiToPolicyStudio(this.apiId).pipe(Object(ot.a)(()=>{this.updateState="UPDATED"}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),this.updateState="TO_UPDATE",pt.a))).subscribe()}reloadApi(){this.ajsState.go("management.apis.detail.portal.general",{apiId:this.apiId},{reload:!0})}};AS=CS([Object(nt.Component)({selector:"api-portal-details",template:n(1107),styles:[n(1108)]}),$S(0,Object(nt.Inject)(gt)),$S(1,Object(nt.Inject)(ut)),$S(8,Object(nt.Inject)("Constants")),IS("design:paramtypes",[Object,"function"==typeof(gS=void 0!==it.StateService&&it.StateService)?gS:Object,"function"==typeof(fS=void 0!==hn&&hn)?fS:Object,"function"==typeof(bS=void 0!==Zt&&Zt)?bS:Object,"function"==typeof(vS=void 0!==hS&&hS)?vS:Object,"function"==typeof(yS=void 0!==Yt&&Yt)?yS:Object,"function"==typeof(SS=void 0!==on&&on)?SS:Object,"function"==typeof(wS=void 0!==mt.b&&mt.b)?wS:Object,"function"!=typeof!1&&Object])],AS);const OS=e=>{const t=new Image;return t.src=e,new Promise(e=>{t.onerror=()=>e(!1),t.onload=()=>e(!0)})};function TS(e){return e?e instanceof cn.q?e.dataUrl:void 0:null}const RS=e=>{const t=e.get("enabled").value,n=e.get("type").value;return t&&!n?{requireTypeWhenEnabled:!0}:null},_S=(e,t)=>n=>{const i=n.value;return i!==t&&e.includes(i)?{isUnique:!0}:null};var xS,LS,PS=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},NS=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},ES=function(e,t){return function(n,i){t(n,i,e)}};let DS=class{constructor(e,t,n){this.http=e,this.constants=t,this.ajsRootScope=n}list(e=!1,t=!1){let n=new Tt.e;return e&&(n=n.append("expand","schema")),t&&(n=n.append("expand","icon")),this.http.get(this.constants.env.baseURL+"/connectors",{params:n})}};DS=PS([Object(nt.Injectable)({providedIn:"root"}),ES(1,Object(nt.Inject)("Constants")),ES(2,Object(nt.Inject)(yt)),NS("design:paramtypes",["function"==typeof(xS=void 0!==Tt.b&&Tt.b)?xS:Object,"function"!=typeof!1&&Object,"function"==typeof(LS=void 0!==i.IScope&&i.IScope)?LS:Object])],DS);var jS,kS,US=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},MS=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},FS=function(e,t){return function(n,i){t(n,i,e)}};let qS=class{constructor(e,t,n){this.http=e,this.constants=t,this.ajsRootScope=n}list(){return this.http.get(this.constants.env.baseURL+"/services-discovery")}getSchema(e){return this.http.get(`${this.constants.env.baseURL}/services-discovery/${e}/schema`)}};qS=US([Object(nt.Injectable)({providedIn:"root"}),FS(1,Object(nt.Inject)("Constants")),FS(2,Object(nt.Inject)(yt)),MS("design:paramtypes",["function"==typeof(jS=void 0!==Tt.b&&Tt.b)?jS:Object,"function"!=typeof!1&&Object,"function"==typeof(kS=void 0!==i.IScope&&i.IScope)?kS:Object])],qS);var HS,GS,BS,WS,VS,YS,zS,KS=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},QS=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},JS=function(e,t){return function(n,i){t(n,i,e)}};let XS=class{constructor(e,t,n,i,a,o,s,r){this.ajsStateParams=e,this.ajsState=t,this.formBuilder=n,this.apiService=i,this.snackBarService=a,this.connectorService=o,this.serviceDiscoveryService=s,this.permissionService=r,this.unsubscribe$=new ct.a}ngOnInit(){this.apiId=this.ajsStateParams.apiId,this.mode=this.ajsStateParams.groupName?"edit":"new",this.apiService.get(this.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(st.a)(e=>{var t;return this.api=e,this.isReadOnly=!this.permissionService.hasAnyMatching(["api-definition-u"])||"kubernetes"===(null===(t=e.definition_context)||void 0===t?void 0:t.origin),this.serviceDiscoveryService.list()}),Object(Kt.a)(e=>{this.serviceDiscoveryItems=e,this.initForms()})).subscribe(),this.connectorService.list(!0).pipe(Object(at.a)(this.unsubscribe$),Object(Kt.a)(e=>{var t;this.schemaForm=JSON.parse(null===(t=e.find(e=>e.supportedTypes.includes("http")))||void 0===t?void 0:t.schema)})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.complete()}onSubmit(){return this.apiService.get(this.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(st.a)(e=>{const t="edit"===this.mode?e.proxy.groups.findIndex(e=>e.name===this.ajsStateParams.groupName):-1,n=((e,t,n,i)=>{let a=Object.assign(Object.assign({},e),{name:t.name,load_balancing:{type:t.loadBalancerType}});return n&&(a=Object.assign(Object.assign({},a),{http:n.http,ssl:n.ssl,headers:n.headers,proxy:n.proxy})),a=i?Object.assign(Object.assign({},a),{services:{discovery:Object.assign({},i.discovery)}}):Object.assign(Object.assign({},a),{services:{discovery:{enabled:!1}}}),a})(e.proxy.groups[t],this.generalForm.getRawValue(),this.updatedConfiguration,this.updatedServiceDiscoveryConfiguration);return-1!==t?e.proxy.groups.splice(t,1,n):e.proxy.groups.push(n),this.apiService.update(e)}),Object(ot.a)(()=>this.snackBarService.success("Configuration successfully saved!")),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(ot.a)(()=>this.ajsState.go("management.apis.detail.proxy.group",{apiId:this.apiId,groupName:this.generalForm.get("name").value},{reload:!0}))).subscribe()}onConfigurationChange(e){this.groupForm.markAsDirty(),this.groupForm.markAsTouched(),this.groupForm.getError("invalidConfiguration")&&e.isSchemaValid?(delete this.groupForm.errors.invalidConfiguration,this.groupForm.updateValueAndValidity()):e.isSchemaValid||this.groupForm.setErrors({invalidConfiguration:!0}),this.updatedConfiguration=e.configuration}onServiceDiscoveryChange(e){this.groupForm.markAsDirty(),this.groupForm.markAsTouched();const t=this.serviceDiscoveryForm.get("enabled");t||(this.updatedServiceDiscoveryConfiguration=null),e.isSchemaValid||this.groupForm.setErrors({invalidServiceDiscovery:!0}),this.groupForm.getError("invalidServiceDiscovery")&&e.isSchemaValid&&(delete this.groupForm.errors.invalidServiceDiscovery,this.groupForm.updateValueAndValidity()),this.serviceDiscoveryForm.valid&&t.value&&e.isSchemaValid&&(this.updatedServiceDiscoveryConfiguration={discovery:{enabled:this.serviceDiscoveryForm.get("enabled").value,provider:this.serviceDiscoveryForm.get("type").value,configuration:e.serviceDiscoveryValues}})}reset(){this.group=null,this.schemaForm=null,this.serviceDiscoveryItems=null,this.ngOnInit()}initForms(){var e,t,n,i,a,o,s,r,l,c,d,p,m,u;this.group=Object.assign({},this.api.proxy.groups.find(e=>e.name===this.ajsStateParams.groupName)),this.generalForm=this.formBuilder.group({name:[{value:null!==(t=null===(e=this.group)||void 0===e?void 0:e.name)&&void 0!==t?t:null,disabled:this.isReadOnly},[ln.v.required,ln.v.pattern(/^[^:]*$/),_S(this.api.proxy.groups.reduce((e,t)=>[...e,t.name],[]),null===(n=this.group)||void 0===n?void 0:n.name)]],loadBalancerType:[{value:null!==(o=null===(a=null===(i=this.group)||void 0===i?void 0:i.load_balancing)||void 0===a?void 0:a.type)&&void 0!==o?o:null,disabled:this.isReadOnly},[ln.v.required]]}),this.serviceDiscoveryForm=this.formBuilder.group({enabled:[{value:null!==(l=null===(r=null===(s=this.group)||void 0===s?void 0:s.services)||void 0===r?void 0:r.discovery.enabled)&&void 0!==l&&l,disabled:this.isReadOnly}],type:[{value:null!==(p=null===(d=null===(c=this.group)||void 0===c?void 0:c.services)||void 0===d?void 0:d.discovery.provider)&&void 0!==p?p:null,disabled:!(null===(u=null===(m=this.group)||void 0===m?void 0:m.services)||void 0===u?void 0:u.discovery.enabled)||this.isReadOnly}]},{validators:[RS]}),this.groupForm=this.formBuilder.group({general:this.generalForm,serviceDiscovery:this.serviceDiscoveryForm}),this.initialGroupFormValue=this.groupForm.getRawValue()}};XS=KS([Object(nt.Component)({selector:"api-proxy-group-edit",template:n(1110),styles:[n(1111)]}),JS(0,Object(nt.Inject)(gt)),JS(1,Object(nt.Inject)(ut)),QS("design:paramtypes",[Object,"function"==typeof(HS=void 0!==it.StateService&&it.StateService)?HS:Object,"function"==typeof(GS=void 0!==ln.f&&ln.f)?GS:Object,"function"==typeof(BS=void 0!==hn&&hn)?BS:Object,"function"==typeof(WS=void 0!==on&&on)?WS:Object,"function"==typeof(VS=void 0!==DS&&DS)?VS:Object,"function"==typeof(YS=void 0!==qS&&qS)?YS:Object,"function"==typeof(zS=void 0!==Yt&&Yt)?zS:Object])],XS);n(1113);var ZS,ew,tw=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},nw=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let iw=ZS=class{constructor(){this.unsubscribe$=new ct.a,this.httpMethods=["GET","POST","PUT"]}static HealthCheckFromFormGroup(e){return e.get("enabled").value?e.get("enabled").value&&e.get("inherit").value?{enabled:!0,inherit:!0}:{enabled:e.get("enabled").value,schedule:e.get("schedule").value,inherit:e.get("inherit").value,steps:[{request:{method:e.get("method").value,path:e.get("path").value,body:e.get("body").value,headers:[...e.get("headers").value].map(e=>({name:e.key,value:e.value})),fromRoot:e.get("fromRoot").value},response:{assertions:e.get("assertions").value}}]}:{enabled:!1}}ngOnChanges(e){if((e.healthCheckForm||e.inheritHealthCheck)&&this.healthCheckForm){const e=["schedule","method","path","body","fromRoot","headers","assertions"];this.isDisabled$=Object(Au.a)([this.healthCheckForm.get("enabled").valueChanges.pipe(Object(fy.a)(this.healthCheckForm.get("enabled").value)),this.healthCheckForm.get("inherit").valueChanges.pipe(Object(fy.a)(this.healthCheckForm.get("inherit").value))]).pipe(Object(at.a)(this.unsubscribe$),Object(Kt.a)(([e,t])=>this.healthCheckForm.get("enabled").disabled||!e||t)),this.isDisabled$.subscribe(t=>{this.inheritHealthCheck&&(this.healthCheckForm.get("enabled").enabled&&this.healthCheckForm.get("enabled").value&&this.inheritHealthCheck.enabled?this.healthCheckForm.get("inherit").enable({emitEvent:!1}):this.healthCheckForm.get("inherit").disable({emitEvent:!1})),e.forEach(e=>t?this.healthCheckForm.get(e).disable({emitEvent:!1}):this.healthCheckForm.get(e).enable({emitEvent:!1}))})}e.inheritHealthCheck&&this.inheritHealthCheck&&this.healthCheckForm.get("inherit").valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{if(e){this.healthCheckFormInitialValue=Object(o.omit)(this.healthCheckForm.getRawValue(),["inherit","enabled"]);const e=ZS.NewHealthCheckFormGroup(this.inheritHealthCheck).getRawValue();this.healthCheckForm.patchValue(Object(o.omit)(e,["inherit","enabled"]))}else this.healthCheckForm.patchValue(this.healthCheckFormInitialValue)})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}addAssertion(){const e=this.healthCheckForm.get("assertions"),t=new ln.g("",[ln.v.required]);t.markAsTouched(),e.push(t),this.healthCheckForm.markAsDirty()}removeAssertion(e){this.healthCheckForm.get("assertions").removeAt(e),this.healthCheckForm.markAsDirty()}};iw.NewHealthCheckFormGroup=(e,t=!0)=>{var n,i,a,o,s,r,l,c,d,p,m,u;const h=(null===(n=null==e?void 0:e.steps)||void 0===n?void 0:n.length)>0?e.steps[0]:void 0;return new ln.i({enabled:new ln.g({value:null!==(i=null==e?void 0:e.enabled)&&void 0!==i&&i,disabled:t}),inherit:new ln.g({value:null!==(a=null==e?void 0:e.inherit)&&void 0!==a&&a,disabled:t}),schedule:new ln.g({value:null!==(o=null==e?void 0:e.schedule)&&void 0!==o?o:void 0,disabled:t}),method:new ln.g({value:null===(s=null==h?void 0:h.request)||void 0===s?void 0:s.method,disabled:t},[ln.v.required]),path:new ln.g({value:null===(r=null==h?void 0:h.request)||void 0===r?void 0:r.path,disabled:t},[ln.v.required]),body:new ln.g({value:null===(l=null==h?void 0:h.request)||void 0===l?void 0:l.body,disabled:t}),headers:new ln.g({value:[...null!==(d=null===(c=null==h?void 0:h.request)||void 0===c?void 0:c.headers)&&void 0!==d?d:[]].map(e=>({key:e.name,value:e.value})),disabled:t}),fromRoot:new ln.g({value:null===(p=null==h?void 0:h.request)||void 0===p?void 0:p.fromRoot,disabled:t}),assertions:new ln.d([...null!==(u=null===(m=null==h?void 0:h.response)||void 0===m?void 0:m.assertions)&&void 0!==u?u:["#response.status == 200"]].map(e=>new ln.g({value:e,disabled:t},[ln.v.required])),[ln.v.required])})},tw([Object(nt.Input)(),nw("design:type","function"==typeof(ew=void 0!==ln.i&&ln.i)?ew:Object)],iw.prototype,"healthCheckForm",void 0),tw([Object(nt.Input)(),nw("design:type","function"!=typeof!1&&Object)],iw.prototype,"inheritHealthCheck",void 0),iw=ZS=tw([Object(nt.Component)({selector:"api-proxy-health-check-form",template:n(1114),styles:[n(1115)]})],iw);var aw,ow,sw,rw,lw,cw,dw,pw=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},mw=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},uw=function(e,t){return function(n,i){t(n,i,e)}};let hw=class{constructor(e,t,n,i,a,o,s,r){this.ajsStateParams=e,this.ajsState=t,this.formBuilder=n,this.apiService=i,this.connectorService=a,this.tenantService=o,this.snackBarService=s,this.permissionService=r,this.unsubscribe$=new ct.a}ngOnInit(){this.apiId=this.ajsStateParams.apiId,this.mode=this.ajsStateParams.groupName&&this.ajsStateParams.endpointName?"edit":"new",Object(Au.a)([this.apiService.get(this.apiId),this.connectorService.list(!0),this.tenantService.list()]).pipe(Object(at.a)(this.unsubscribe$),Object(Kt.a)(([e,t,n])=>{var i,a;this.api=e,this.connectors=t,this.tenants=n,this.isReadOnly=!this.permissionService.hasAnyMatching(["api-definition-u"])||"kubernetes"===(null===(i=e.definition_context)||void 0===i?void 0:i.origin),this.initForms(),this.supportedTypes=this.connectors.map(e=>e.supportedTypes).reduce((e,t)=>e.concat(t),[]),this.configurationSchema=JSON.parse(null===(a=this.connectors.find(e=>{var t,n,i;return e.supportedTypes.includes(null!==(i=null===(n=null===(t=this.endpoint)||void 0===t?void 0:t.type)||void 0===n?void 0:n.toLowerCase())&&void 0!==i?i:"http")}))||void 0===a?void 0:a.schema)})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.complete()}onSubmit(){return this.apiService.get(this.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(st.a)(e=>{var t;const n=e.proxy.groups.findIndex(e=>e.name===this.ajsStateParams.groupName);let i=-1;"edit"===this.mode?i=e.proxy.groups[n].endpoints.findIndex(e=>e.name===this.ajsStateParams.endpointName):(e.proxy.groups[n].endpoints||(e.proxy.groups[n].endpoints=[]),i=e.proxy.groups[n].endpoints.length);const a=((e,t,n,i)=>{let a=Object.assign(Object.assign(Object.assign({},e),t),{healthcheck:i});return n.inherit?(a=Object.assign(Object.assign({},a),{inherit:!0}),delete a.http,delete a.ssl,delete a.headers,delete a.proxy):a=Object.assign(Object.assign({},a),{inherit:!1,http:n.http,ssl:n.ssl,headers:n.headers,proxy:n.proxy}),a})(null===(t=e.proxy.groups[n])||void 0===t?void 0:t.endpoints[i],this.generalForm.getRawValue(),Object.assign(Object.assign({},this.updatedConfiguration),{inherit:this.configurationForm.getRawValue().inherit}),iw.HealthCheckFromFormGroup(this.healthCheckForm));return-1!==i?e.proxy.groups[n].endpoints.splice(i,1,a):e.proxy.groups[n].endpoints.push(a),this.apiService.update(e)}),Object(ot.a)(()=>this.snackBarService.success("Configuration successfully saved!")),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(ot.a)(()=>this.ajsState.go("management.apis.detail.proxy.endpoint",{apiId:this.apiId,groupName:this.ajsStateParams.groupName,endpointName:this.generalForm.getRawValue().name},{reload:!0})),Object(ot.a)(()=>this.ngOnInit())).subscribe()}onConfigurationChange(e){this.endpointForm.markAsDirty(),this.endpointForm.markAsTouched(),this.endpointForm.getError("invalidConfiguration")&&e.isSchemaValid?(delete this.endpointForm.errors.invalidConfiguration,this.endpointForm.updateValueAndValidity()):e.isSchemaValid||this.endpointForm.setErrors({invalidConfiguration:!0}),this.updatedConfiguration=e.configuration}initForms(){var e,t,n,i,a,o,s,r,l,c,d,p,m,u,h,g,f,b,v,y,S;const w=this.api.proxy.groups.find(e=>e.name===this.ajsStateParams.groupName);w&&w.endpoints&&w.endpoints.length>0?this.endpoint=Object.assign({},w.endpoints.find(e=>e.name===this.ajsStateParams.endpointName)):this.endpoint={},this.generalForm=this.formBuilder.group({name:[{value:null!==(t=null===(e=this.endpoint)||void 0===e?void 0:e.name)&&void 0!==t?t:null,disabled:this.isReadOnly},[ln.v.required,ln.v.pattern(/^[^:]*$/),_S(null!==(i=null===(n=w.endpoints)||void 0===n?void 0:n.reduce((e,t)=>[...e,t.name],[]))&&void 0!==i?i:[],null===(a=this.endpoint)||void 0===a?void 0:a.name)]],type:[{value:null!==(s=null===(o=this.endpoint)||void 0===o?void 0:o.type)&&void 0!==s?s:"http",disabled:this.isReadOnly},[ln.v.required]],target:[{value:null!==(l=null===(r=this.endpoint)||void 0===r?void 0:r.target)&&void 0!==l?l:null,disabled:this.isReadOnly},[ln.v.required]],weight:[{value:null!==(d=null===(c=this.endpoint)||void 0===c?void 0:c.weight)&&void 0!==d?d:null,disabled:this.isReadOnly},[ln.v.required]],tenants:[{value:null!==(m=null===(p=this.endpoint)||void 0===p?void 0:p.tenants)&&void 0!==m?m:null,disabled:this.isReadOnly}],backup:[{value:null!==(h=null===(u=this.endpoint)||void 0===u?void 0:u.backup)&&void 0!==h&&h,disabled:this.isReadOnly}]}),this.configurationForm=this.formBuilder.group({inherit:[{value:null===(f=null===(g=this.endpoint)||void 0===g?void 0:g.inherit)||void 0===f||f,disabled:this.isReadOnly}]}),this.healthCheckForm=iw.NewHealthCheckFormGroup(null===(b=this.endpoint)||void 0===b?void 0:b.healthcheck,this.isReadOnly),this.inheritHealthCheck=null!==(S=null===(y=null===(v=this.api)||void 0===v?void 0:v.services)||void 0===y?void 0:y["health-check"])&&void 0!==S?S:{enabled:!1},this.endpointForm=this.formBuilder.group({general:this.generalForm,configuration:this.configurationForm,healthCheckForm:this.healthCheckForm}),this.initialEndpointFormValue=this.endpointForm.getRawValue(),this.generalForm.get("type").valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{var t;this.configurationSchema=JSON.parse(null===(t=this.connectors.find(t=>t.supportedTypes.includes(e)))||void 0===t?void 0:t.schema)})}};hw=pw([Object(nt.Component)({selector:"api-proxy-group-endpoint-edit",template:n(1117),styles:[n(1118)]}),uw(0,Object(nt.Inject)(gt)),uw(1,Object(nt.Inject)(ut)),mw("design:paramtypes",[Object,"function"==typeof(aw=void 0!==it.StateService&&it.StateService)?aw:Object,"function"==typeof(ow=void 0!==ln.f&&ln.f)?ow:Object,"function"==typeof(sw=void 0!==hn&&hn)?sw:Object,"function"==typeof(rw=void 0!==DS&&DS)?rw:Object,"function"==typeof(lw=void 0!==Qg&&Qg)?lw:Object,"function"==typeof(cw=void 0!==on&&on)?cw:Object,"function"==typeof(dw=void 0!==Yt&&Yt)?dw:Object])],hw);var gw,fw,bw,vw,yw=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Sw=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},ww=function(e,t){return function(n,i){t(n,i,e)}},Cw=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(i=Object.getOwnPropertySymbols(e);a<i.length;a++)t.indexOf(i[a])<0&&Object.prototype.propertyIsEnumerable.call(e,i[a])&&(n[i[a]]=e[i[a]])}return n};let Iw=class{constructor(e,t,n,i,a){this.formBuilder=e,this.ajsStateParams=t,this.apiService=n,this.snackBarService=i,this.permissionService=a,this.unsubscribe$=new ct.a}get enabled(){return this.failoverForm.get("enabled")}get maxAttempts(){return this.failoverForm.get("maxAttempts")}get retryTimeout(){return this.failoverForm.get("retryTimeout")}ngOnInit(){this.apiService.get(this.ajsStateParams.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(e=>{var t,n;const i=!this.permissionService.hasAnyMatching(["api-definition-u"])||"kubernetes"===(null===(t=e.definition_context)||void 0===t?void 0:t.origin);this.createForm(i,null===(n=e.proxy)||void 0===n?void 0:n.failover),this.setupDisablingFields()})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}createForm(e,t){var n,i;const a=e||!t;this.failoverForm=this.formBuilder.group({enabled:[{value:!!t,disabled:e},[]],maxAttempts:[{value:null!==(n=null==t?void 0:t.maxAttempts)&&void 0!==n?n:null,disabled:a},[ln.v.required]],retryTimeout:[{value:null!==(i=null==t?void 0:t.retryTimeout)&&void 0!==i?i:null,disabled:a},[ln.v.required]]}),this.initialFailoverFormValue=this.failoverForm.getRawValue()}setupDisablingFields(){const e=["maxAttempts","retryTimeout"];this.enabled.valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(t=>{e.forEach(e=>t?this.failoverForm.get(e).enable():this.failoverForm.get(e).disable())})}onSubmit(){const{enabled:e,maxAttempts:t,retryTimeout:n}=this.failoverForm.getRawValue(),i=e?{maxAttempts:t,retryTimeout:n}:void 0;return this.apiService.get(this.ajsStateParams.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(st.a)(e=>{var{proxy:t}=e,n=Cw(e,["proxy"]);return this.apiService.update(Object.assign(Object.assign({},n),{proxy:Object.assign(Object.assign({},t),{failover:i})}))}),Object(ot.a)(()=>this.snackBarService.success("Configuration successfully saved!")),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(ot.a)(()=>this.ngOnInit())).subscribe()}};Iw=yw([Object(nt.Component)({selector:"api-proxy-failover",template:n(1120),styles:[n(1121)]}),ww(1,Object(nt.Inject)(gt)),Sw("design:paramtypes",["function"==typeof(gw=void 0!==ln.f&&ln.f)?gw:Object,Object,"function"==typeof(fw=void 0!==hn&&hn)?fw:Object,"function"==typeof(bw=void 0!==on&&on)?bw:Object,"function"==typeof(vw=void 0!==Yt&&Yt)?vw:Object])],Iw);var $w,Aw,Ow,Tw,Rw,_w,xw=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Lw=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Pw=function(e,t){return function(n,i){t(n,i,e)}};let Nw=class{constructor(e,t,n,i,a,o,s){this.ajsState=e,this.ajsRootScope=t,this.permissionService=n,this.environmentService=i,this.portalConfigService=a,this.currentUserService=o,this.constants=s,this.mainMenuItems=[],this.footerMenuItems=[],this.environments=[]}ngOnInit(){this.mainMenuItems=this.buildMainMenuItems(),this.footerMenuItems=this.buildFooterMenuItems(),this.environments=this.constants.org.environments.map(e=>({value:e.id,displayValue:e.name})),this.updateCurrentEnv()}buildMainMenuItems(){return this.filterMenuByPermission([{icon:"gio:home",targetRoute:"management.dashboard.home",baseRoute:"management.dashboard",displayName:"Dashboard"},{icon:"gio:upload-cloud",targetRoute:"management.apis.ng-list",baseRoute:"management.apis",displayName:"APIs"},{icon:"gio:multi-window",targetRoute:"management.applications.list",baseRoute:"management.applications",displayName:"Applications",permissions:["environment-application-r"]},{icon:"gio:cloud-server",targetRoute:"management.instances.list",baseRoute:"management.instances",displayName:"Gateways",permissions:["environment-instance-r"]},{icon:"gio:verified",targetRoute:"management.audit",baseRoute:"management.audit",displayName:"Audit",permissions:["environment-audit-r"]},{icon:"gio:message-text",targetRoute:"management.messages",baseRoute:"management.messages",displayName:"Messages",permissions:["environment-message-c"]},{icon:"gio:settings",targetRoute:"management.settings.analytics.list",baseRoute:"management.settings",displayName:"Settings",permissions:["environment-category-r","environment-metadata-r","environment-top_apis-r","environment-group-r","environment-tag-c","environment-tenant-c","environment-group-c","environment-documentation-c","environment-tag-u","environment-tenant-u","environment-group-u","environment-documentation-u","environment-tag-d","environment-tenant-d","environment-group-d","environment-documentation-d","environment-api_header-r"]}])}buildFooterMenuItems(){return this.filterMenuByPermission([{icon:"gio:building",targetRoute:"organization",baseRoute:"organization",displayName:"Organization",permissions:["organization-settings-r"]}])}filterMenuByPermission(e){return e.filter(e=>!e.permissions||this.permissionService.hasAnyMatching(e.permissions))}navigateTo(e){this.ajsState.go(e)}isActive(e){return this.ajsState.includes(e)}updateCurrentEnv(){this.portalConfigService.get().then(e=>{this.constants.env.settings=e.data})}changeCurrentEnv(e){localStorage.setItem("gv-last-environment-loaded",e),this.currentUserService.refreshEnvironmentPermissions().then(()=>{this.ajsState.go("management",{environmentId:e},{reload:!0})})}};Nw=xw([Object(nt.Component)({selector:"gio-side-nav",template:n(1123),styles:[n(1124)]}),Pw(0,Object(nt.Inject)(ut)),Pw(1,Object(nt.Inject)(yt)),Pw(4,Object(nt.Inject)(wt)),Pw(5,Object(nt.Inject)(bt)),Pw(6,Object(nt.Inject)("Constants")),Lw("design:paramtypes",["function"==typeof($w=void 0!==it.StateService&&it.StateService)?$w:Object,"function"==typeof(Aw=void 0!==i.IRootScopeService&&i.IRootScopeService)?Aw:Object,"function"==typeof(Ow=void 0!==Yt&&Yt)?Ow:Object,"function"==typeof(Tw=void 0!==Ku&&Ku)?Tw:Object,"function"==typeof(Rw=void 0!==jl&&jl)?Rw:Object,"function"==typeof(_w=void 0!==Gt&&Gt)?_w:Object,"function"!=typeof!1&&Object])],Nw);var Ew,Dw=n(263),jw=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},kw=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Uw=function(e,t){return function(n,i){t(n,i,e)}};let Mw=class{constructor(e,t){this.http=e,this.constants=t}getTaskSchedulerInSeconds(){return this.constants.org.settings.scheduler&&this.constants.org.settings.scheduler.tasks?this.constants.org.settings.scheduler.tasks:10}getTasks(){const e=new Tt.e;return e.set("ignoreLoadingBar",!0),e.set("silentCall",!0),this.http.get(this.constants.org.baseURL+"/user/tasks",{params:e})}getTasksAutoFetch(){return Object(Dw.a)(0,1e3*this.getTaskSchedulerInSeconds()).pipe(Object(st.a)(()=>this.getTasks()))}};Mw=jw([Object(nt.Injectable)({providedIn:"root"}),Uw(1,Object(nt.Inject)("Constants")),kw("design:paramtypes",["function"==typeof(Ew=void 0!==Tt.b&&Tt.b)?Ew:Object,"function"!=typeof!1&&Object])],Mw);var Fw,qw,Hw,Gw,Bw,Ww=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Vw=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Yw=function(e,t){return function(n,i){t(n,i,e)}};let zw=class{constructor(e,t,n,i,a,o){this.ajsState=e,this.ajsRootScope=t,this.constants=n,this.currentUserService=i,this.taskService=a,this.$transitions=o,this.unsubscribe$=new ct.a,this.displayDocumentationButton=!1,this.hasAlert=!1,this.userTaskCount=0,this.openContextualDocumentation=()=>{window.pendo&&window.pendo.isReady()||this.ajsRootScope.$broadcast("openContextualDocumentation")}}ngOnInit(){var e;this.currentUser=this.currentUserService.currentUser,this.newsletterProposed=this.currentUser&&!this.currentUser.firstLogin||!!window.localStorage.getItem("newsletterProposed")||!this.constants.org.settings.newsletter.enabled,this.supportEnabled=this.constants.org.settings.management.support.enabled,this.taskService.getTasksAutoFetch().pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.userTaskCount=e.page.total_elements,this.hasAlert=this.userTaskCount>0}),this.displayDocumentationButton=!!(null===(e=this.ajsState.current.data)||void 0===e?void 0:e.docs),this.ajsRootScope.$on("$locationChangeStart",()=>{var e;this.displayDocumentationButton=!!(null===(e=this.ajsState.current.data)||void 0===e?void 0:e.docs)})}navigateToHome(){this.ajsState.go("management")}ngOnDestroy(){this.unsubscribe$.next(),this.unsubscribe$.unsubscribe()}};zw=Ww([Object(nt.Component)({selector:"gio-top-nav",template:n(1126),styles:[n(1127)]}),Yw(0,Object(nt.Inject)(ut)),Yw(1,Object(nt.Inject)(yt)),Yw(2,Object(nt.Inject)("Constants")),Yw(3,Object(nt.Inject)(bt)),Vw("design:paramtypes",["function"==typeof(Fw=void 0!==it.StateService&&it.StateService)?Fw:Object,"function"==typeof(qw=void 0!==i.IRootScopeService&&i.IRootScopeService)?qw:Object,"function"!=typeof!1&&Object,"function"==typeof(Hw=void 0!==Gt&&Gt)?Hw:Object,"function"==typeof(Gw=void 0!==Mw&&Mw)?Gw:Object,"function"==typeof(Bw=void 0!==Bu.TransitionService&&Bu.TransitionService)?Bw:Object])],zw);var Kw,Qw,Jw=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Xw=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Zw=function(e,t){return function(n,i){t(n,i,e)}};let eC=class{constructor(e,t,n){this.ajsState=e,this.permissionService=t,this.constants=n,this.groupItems=[]}ngOnInit(){this.groupItems=[{title:"Portal",items:[{displayName:"Analytics",targetRoute:"management.settings.analytics.list",baseRoute:"management.settings.analytics",permissions:["environment-settings-r"]},{displayName:"API Portal Information",targetRoute:"management.settings.apiPortalHeader",baseRoute:"management.settings.apiPortalHeader",permissions:["environment-api_header-r"]},{displayName:"API Quality",targetRoute:"management.settings.apiQuality.list",baseRoute:"management.settings.apiQuality",permissions:["environment-settings-r"]},{displayName:"Authentication",targetRoute:"management.settings.environment.identityproviders",baseRoute:"management.settings.environment.identityproviders",permissions:["organization-identity_provider-r","environment-identity_provider_activation-r"]},{displayName:"Categories",targetRoute:"management.settings.categories.list",baseRoute:"management.settings.categories",permissions:["environment-category-r"]},{displayName:"Client Registration",targetRoute:"management.settings.clientregistrationproviders.list",baseRoute:"management.settings.clientregistrationproviders",permissions:["environment-client_registration_provider-r"]},{displayName:"Documentation",targetRoute:"management.settings.documentation.list",baseRoute:"management.settings.documentation",permissions:["environment-documentation-c","environment-documentation-u","environment-documentation-d"]},{displayName:"Metadata",targetRoute:"management.settings.metadata",baseRoute:"management.settings.metadata",permissions:["environment-metadata-r"]},{displayName:"Settings",targetRoute:"management.settings.portal",baseRoute:"management.settings.portal",permissions:["environment-settings-r"]},{displayName:"Theme",targetRoute:"management.settings.theme",baseRoute:"management.settings.theme",permissions:["environment-theme-r"]},{displayName:"Top APIs",targetRoute:"management.settings.top-apis",baseRoute:"management.settings.top-apis",permissions:["environment-top_apis-r"]}]},{title:"Gateway",items:[{displayName:"API Logging",targetRoute:"management.settings.api_logging",baseRoute:"management.settings.api_logging",permissions:["environment-settings-r"]},{displayName:"Dictionaries",targetRoute:"management.settings.dictionaries.list",baseRoute:"management.settings.dictionaries",permissions:["environment-dictionary-r"]},{displayName:"Sharding Tags",targetRoute:"management.settings.tags",baseRoute:"management.settings.tags",permissions:["environment-tag-c","environment-tag-u","environment-tag-d"]},{displayName:"Tenants",targetRoute:"management.settings.tenants",baseRoute:"management.settings.tenants",permissions:["environment-tenant-c","environment-tenant-u","environment-tenant-d"]}]},{title:"User Management",items:[{displayName:"User Fields",targetRoute:"management.settings.customUserFields",baseRoute:"management.settings.customUserFields",permissions:["organization-custom_user_fields-r"]},{displayName:"Groups",targetRoute:"management.settings.groups.list",baseRoute:"management.settings.groups",permissions:["environment-group-r"]}]}];const e={title:"Notifications",items:[{displayName:"Notifications",targetRoute:"management.settings.notifications",baseRoute:"management.settings.notifications",permissions:["environment-notification-r"]}]};this.constants.org.settings.alert&&this.constants.org.settings.alert.enabled&&e.items.push({displayName:"Alerts",targetRoute:"management.settings.alerts.list",baseRoute:"management.settings.alerts",permissions:["environment-alert-r"]}),this.groupItems.push(e),this.groupItems.forEach(e=>{e.items=e.items.filter(e=>!e.permissions||this.permissionService.hasAnyMatching(e.permissions))})}navigateTo(e){this.ajsState.go(e)}isActive(e){return this.ajsState.includes(e)}};eC=Jw([Object(nt.Component)({selector:"settings-navigation",template:n(1129),styles:[n(1130)]}),Zw(0,Object(nt.Inject)(ut)),Zw(2,Object(nt.Inject)("Constants")),Xw("design:paramtypes",["function"==typeof(Kw=void 0!==it.StateService&&it.StateService)?Kw:Object,"function"==typeof(Qw=void 0!==Yt&&Yt)?Qw:Object,"function"!=typeof!1&&Object])],eC);var tC,nC,iC,aC=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},oC=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},sC=function(e,t){return function(n,i){t(n,i,e)}};let rC=class{constructor(e,t,n){this.ajsState=e,this.permissionService=t,this.gioMenuService=n,this.subMenuItems=[],this.hasTitle=!0,this.unsubscribe$=new ct.a}ngOnInit(){this.gioMenuService.reduce.pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.hasTitle=!e}),this.subMenuItems=this.filterMenuByPermission([{displayName:"Global settings",targetRoute:"management.applications.application.general",baseRoute:"management.applications.application.general",permissions:["application-definition-r"]},{displayName:"Metadata",targetRoute:"management.applications.application.metadata",baseRoute:"management.applications.application.metadata",permissions:["application-metadata-r"]},{displayName:"Subscriptions",targetRoute:"management.applications.application.subscriptions.list",baseRoute:"management.applications.application.subscriptions",permissions:["application-subscription-r"]},{displayName:"Members",targetRoute:"management.applications.application.members",baseRoute:"management.applications.application.members",permissions:["application-member-r"]},{displayName:"Analytics",targetRoute:"management.applications.application.analytics",baseRoute:"management.applications.application.analytics",permissions:["application-analytics-r"]},{displayName:"Logs",targetRoute:"management.applications.application.logs.list",baseRoute:"management.applications.application.logs",permissions:["application-log-r"]},{displayName:"Notifications",targetRoute:"management.applications.application.notifications",baseRoute:"management.applications.application.notifications",permissions:["application-notification-r","application-alert-r"]}])}ngOnDestroy(){this.unsubscribe$.next(),this.unsubscribe$.unsubscribe()}filterMenuByPermission(e){return e?e.filter(e=>!e.permissions||this.permissionService.hasAnyMatching(e.permissions)):[]}navigateTo(e){this.ajsState.go(e)}isActive(e){return this.ajsState.includes(e)}};aC([Object(nt.Input)(),oC("design:type",String)],rC.prototype,"applicationName",void 0),rC=aC([Object(nt.Component)({selector:"application-navigation",template:n(1132),styles:[n(1133)]}),sC(0,Object(nt.Inject)(ut)),oC("design:paramtypes",["function"==typeof(tC=void 0!==it.StateService&&it.StateService)?tC:Object,"function"==typeof(nC=void 0!==Yt&&Yt)?nC:Object,"function"==typeof(iC=void 0!==cn.k&&cn.k)?iC:Object])],rC);var lC,cC,dC,pC,mC=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},uC=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},hC=function(e,t){return function(n,i){t(n,i,e)}};let gC=class{constructor(e,t,n,i,a){this.ajsState=e,this.permissionService=t,this.currentUserService=n,this.constants=i,this.ajsRootScope=a,this.subMenuItems=[],this.groupItems=[],this.selectedItemWithTabs=void 0}ngOnInit(){this.bannerState=localStorage.getItem("gv-api-navigation-banner"),this.appendDesign(),this.subMenuItems.push({displayName:"Messages",targetRoute:"management.apis.detail.messages",baseRoute:"management.apis.detail.messages"}),this.appendPortalGroup(),this.appendProxyGroup(),this.appendAnalyticsGroup(),this.appendAuditGroup(),this.appendNotificationsGroup(),this.selectedItemWithTabs=this.findMenuItemWithTabs(),this.ajsRootScope.$on("$locationChangeStart",()=>{this.selectedItemWithTabs=this.findMenuItemWithTabs()})}appendDesign(){let e=void 0;"1.0.0"===this.graviteeVersion&&(e=[{displayName:"Policies",targetRoute:"management.apis.detail.design.policies",baseRoute:"management.apis.detail.design.policies"},{displayName:"Resources",targetRoute:"management.apis.detail.design.resources",baseRoute:"management.apis.detail.design.resources"},{displayName:"Properties",targetRoute:"management.apis.detail.design.properties",baseRoute:"management.apis.detail.design.properties"}]),this.subMenuItems.push({displayName:"Design",targetRoute:"management.apis.detail.design.policies",baseRoute:"management.apis.detail.design",tabs:e})}appendPortalGroup(){const e={title:"Portal",items:[{displayName:"General",targetRoute:"management.apis.detail.portal.general",baseRoute:"management.apis.detail.portal.general"}]},t={displayName:"Plans",tabs:[]};this.permissionService.hasAnyMatching(["api-plan-r"])&&t.tabs.push({displayName:"Plans",targetRoute:"management.apis.detail.portal.plans.list",baseRoute:"management.apis.detail.portal.plans"}),this.permissionService.hasAnyMatching(["api-subscription-r"])&&t.tabs.push({displayName:"Subscriptions",targetRoute:"management.apis.detail.portal.subscriptions.list",baseRoute:"management.apis.detail.portal.subscriptions"}),t.tabs.length>0&&e.items.push(t);const n={displayName:"Documentation",tabs:[]};this.permissionService.hasAnyMatching(["api-documentation-r"])&&n.tabs.push({displayName:"Pages",targetRoute:"management.apis.detail.portal.documentation",baseRoute:"management.apis.detail.portal.documentation"}),this.permissionService.hasAnyMatching(["api-metadata-r"])&&n.tabs.push({displayName:"Metadata",targetRoute:"management.apis.detail.portal.metadata",baseRoute:"management.apis.detail.portal.metadata"}),n.tabs.length>0&&e.items.push(n);const i={displayName:"User and group access",tabs:[]};this.permissionService.hasAnyMatching(["api-member-r"])&&i.tabs.push({displayName:"Members",targetRoute:"management.apis.detail.portal.members",baseRoute:"management.apis.detail.portal.members"},{displayName:"Groups",targetRoute:"management.apis.detail.portal.groups",baseRoute:"management.apis.detail.portal.groups"}),(this.currentUserService.currentUser.isOrganizationAdmin()||this.permissionService.hasAnyMatching(["api-member-u"]))&&i.tabs.push({displayName:"Transfer ownership",targetRoute:"management.apis.detail.portal.transferownership",baseRoute:"management.apis.detail.portal.transferownership"}),i.tabs.length>0&&e.items.push(i),this.groupItems.push(e)}appendProxyGroup(){const e={title:"Proxy",items:[]},t={displayName:"General",tabs:[]};this.permissionService.hasAnyMatching(["api-definition-r","api-health-r"])&&t.tabs.push({displayName:"Entrypoints",targetRoute:"management.apis.detail.proxy.entrypoints",baseRoute:"management.apis.detail.proxy.entrypoints"}),this.permissionService.hasAnyMatching(["api-definition-r"])&&t.tabs.push({displayName:"CORS",targetRoute:"management.apis.detail.proxy.cors",baseRoute:"management.apis.detail.proxy.cors"},{displayName:"Deployments",targetRoute:"management.apis.detail.proxy.deployments",baseRoute:"management.apis.detail.proxy.deployments"}),this.permissionService.hasAnyMatching(["api-response_templates-r"])&&t.tabs.push({displayName:"Response Templates",targetRoute:"management.apis.detail.proxy.responsetemplates.list",baseRoute:"management.apis.detail.proxy.responsetemplates"}),t.tabs.length>0&&e.items.push(t);const n={displayName:"Backend services",tabs:[]};this.permissionService.hasAnyMatching(["api-definition-r"])&&n.tabs.push({displayName:"Endpoints",targetRoute:"management.apis.detail.proxy.endpoints",baseRoute:["management.apis.detail.proxy.endpoints","management.apis.detail.proxy.endpoint"]},{displayName:"Failover",targetRoute:"management.apis.detail.proxy.failover",baseRoute:"management.apis.detail.proxy.failover"}),this.permissionService.hasAnyMatching(["api-health-r"])&&n.tabs.push({displayName:"Health-check",targetRoute:"management.apis.detail.proxy.healthcheck",baseRoute:"management.apis.detail.proxy.healthcheck"}),n.tabs.length>0&&e.items.push(n),this.permissionService.hasAnyMatching(["api-health-r"])&&e.items.push({displayName:"Health-check dashboard",baseRoute:"management.apis.detail.proxy.healthCheckDashboard.visualize",targetRoute:"management.apis.detail.proxy.healthCheckDashboard.visualize"}),e.items.length>0&&this.groupItems.push(e)}appendAnalyticsGroup(){var e;const t={title:"Analytics",items:[]};this.permissionService.hasAnyMatching(["api-analytics-r"])&&t.items.push({displayName:"Overview",targetRoute:"management.apis.detail.analytics.overview",baseRoute:"management.apis.detail.analytics.overview"}),this.permissionService.hasAnyMatching(["api-log-r"])&&t.items.push({displayName:"Logs",targetRoute:"management.apis.detail.analytics.logs.list",baseRoute:"management.apis.detail.analytics.logs"}),this.permissionService.hasAnyMatching(["api-definition-u"])&&t.items.push({displayName:"Path mappings",targetRoute:"management.apis.detail.analytics.pathMappings",baseRoute:"management.apis.detail.analytics.pathMappings"}),(null===(e=this.constants.org.settings.alert)||void 0===e?void 0:e.enabled)&&this.permissionService.hasAnyMatching(["api-alert-r"])&&t.items.push({displayName:"Alerts",targetRoute:"management.apis.detail.analytics.alerts",baseRoute:"management.apis.detail.analytics.alerts"}),t.items.length>0&&this.groupItems.push(t)}appendAuditGroup(){const e={title:"Audit",items:[]};this.permissionService.hasAnyMatching(["api-audit-r"])&&e.items.push({displayName:"Audit",targetRoute:"management.apis.detail.audit.general",baseRoute:"management.apis.detail.audit.general"}),this.permissionService.hasAnyMatching(["api-event-r"])&&e.items.push({displayName:"History",targetRoute:"management.apis.detail.audit.history",baseRoute:"management.apis.detail.audit.history"}),this.permissionService.hasAnyMatching(["api-event-u"])&&e.items.push({displayName:"Events",targetRoute:"management.apis.detail.audit.events",baseRoute:"management.apis.detail.audit.events"}),e.items.length>0&&this.groupItems.push(e)}appendNotificationsGroup(){var e;const t={title:"Notifications",items:[]};this.permissionService.hasAnyMatching(["api-notification-r"])&&t.items.push({displayName:"Notifications",targetRoute:"management.apis.detail.notifications",baseRoute:"management.apis.detail.notifications"}),(null===(e=this.constants.org.settings.alert)||void 0===e?void 0:e.enabled)&&this.permissionService.hasAnyMatching(["api-alert-r"])&&t.items.push({displayName:"Alerts",targetRoute:"management.apis.detail.alerts.list",baseRoute:"management.apis.detail.alerts"}),t.items.length>0&&this.groupItems.push(t)}findMenuItemWithTabs(){let e=this.findActiveMenuItem(this.subMenuItems);if(e)return e;for(const t of this.groupItems)if(e=this.findActiveMenuItem(t.items),e)return e}findActiveMenuItem(e){return e.filter(e=>e.tabs).find(e=>this.isTabActive(e.tabs))}navigateTo(e){this.ajsState.go(e)}isActive(e){return Object(o.castArray)(e).some(e=>this.ajsState.includes(e))}isTabActive(e){return Object(o.flatMap)(e,e=>e.baseRoute).some(e=>this.ajsState.includes(e))}closeBanner(){this.bannerState="close",localStorage.setItem("gv-api-navigation-banner",this.bannerState)}};mC([Object(nt.Input)(),uC("design:type",String)],gC.prototype,"apiName",void 0),mC([Object(nt.Input)(),uC("design:type",String)],gC.prototype,"apiVersion",void 0),mC([Object(nt.Input)(),uC("design:type",String)],gC.prototype,"apiState",void 0),mC([Object(nt.Input)(),uC("design:type",Boolean)],gC.prototype,"apiIsSync",void 0),mC([Object(nt.Input)(),uC("design:type",String)],gC.prototype,"apiLifecycleState",void 0),mC([Object(nt.Input)(),uC("design:type",String)],gC.prototype,"apiOrigin",void 0),mC([Object(nt.Input)(),uC("design:type",String)],gC.prototype,"graviteeVersion",void 0),gC=mC([Object(nt.Component)({selector:"api-navigation",template:n(1135),styles:[n(1136)]}),hC(0,Object(nt.Inject)(ut)),hC(2,Object(nt.Inject)(bt)),hC(3,Object(nt.Inject)("Constants")),hC(4,Object(nt.Inject)(yt)),uC("design:paramtypes",["function"==typeof(lC=void 0!==it.StateService&&it.StateService)?lC:Object,"function"==typeof(cC=void 0!==Yt&&Yt)?cC:Object,"function"==typeof(dC=void 0!==Gt&&Gt)?dC:Object,"function"!=typeof!1&&Object,"function"==typeof(pC=void 0!==i.IScope&&i.IScope)?pC:Object])],gC);var fC,bC,vC,yC,SC=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},wC=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},CC=function(e,t){return function(n,i){t(n,i,e)}};let IC=class{constructor(e,t,n,i,a){this.ajsStateParams=e,this.ajsState=t,this.apiService=n,this.snackBarService=i,this.permissionService=a,this.unsubscribe$=new ct.a,this.isReadOnly=!1}ngOnInit(){this.apiService.get(this.ajsStateParams.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(e=>{var t;const n=!this.permissionService.hasAnyMatching(["api-health-c","api-health-u"])||"kubernetes"===(null===(t=e.definition_context)||void 0===t?void 0:t.origin);this.healthCheckForm=iw.NewHealthCheckFormGroup(e.services["health-check"],n)})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onSubmit(){return this.apiService.get(this.ajsStateParams.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(st.a)(e=>this.apiService.update(Object.assign(Object.assign({},e),{services:Object.assign(Object.assign({},e.services),{"health-check":iw.HealthCheckFromFormGroup(this.healthCheckForm)})}))),Object(ot.a)(()=>this.snackBarService.success("Configuration successfully saved!")),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(ot.a)(()=>this.ngOnInit())).subscribe()}gotToHealthCheckDashboard(){this.ajsState.go("management.apis.detail.proxy.healthCheckDashboard.visualize")}};IC=SC([Object(nt.Component)({selector:"api-proxy-health-check",template:n(1138),styles:[n(1139)]}),CC(0,Object(nt.Inject)(gt)),CC(1,Object(nt.Inject)(ut)),wC("design:paramtypes",[Object,"function"==typeof(fC=void 0!==it.StateService&&it.StateService)?fC:Object,"function"==typeof(bC=void 0!==hn&&hn)?bC:Object,"function"==typeof(vC=void 0!==on&&on)?vC:Object,"function"==typeof(yC=void 0!==Yt&&Yt)?yC:Object])],IC);var $C,AC,OC=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},TC=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},RC=function(e,t){return function(n,i){t(n,i,e)}};let _C=class{constructor(e,t,n){this.http=e,this.constants=t,this.ajsRootScope=n}getApiPlans(e,t,n){let i=new Tt.e;return t&&(i=i.append("status",t)),n&&(i=i.append("security",n)),this.http.get(`${this.constants.env.baseURL}/apis/${e}/plans`,{params:i})}update(e,t){return this.http.put(`${this.constants.env.baseURL}/apis/${e.id}/plans/${t.id}`,t).pipe(Object(Kt.a)(t=>("2.0.0"===e.gravitee&&this.ajsRootScope.$broadcast("apiChangeSuccess",{api:e}),t)))}get(e,t){return this.http.get(`${this.constants.env.baseURL}/apis/${e}/plans/${t}`)}publish(e,t){return this.http.post(`${this.constants.env.baseURL}/apis/${e.id}/plans/${t.id}/_publish`,t).pipe(Object(Kt.a)(t=>("2.0.0"===e.gravitee&&this.ajsRootScope.$broadcast("apiChangeSuccess",{api:e}),t)))}deprecate(e,t){return this.http.post(`${this.constants.env.baseURL}/apis/${e.id}/plans/${t.id}/_deprecate`,t).pipe(Object(Kt.a)(t=>("2.0.0"===e.gravitee&&this.ajsRootScope.$broadcast("apiChangeSuccess",{api:e}),t)))}close(e,t){return this.http.post(`${this.constants.env.baseURL}/apis/${e.id}/plans/${t.id}/_close`,{}).pipe(Object(Kt.a)(t=>("2.0.0"===e.gravitee&&this.ajsRootScope.$broadcast("apiChangeSuccess",{api:e}),t)))}};_C=OC([Object(nt.Injectable)({providedIn:"root"}),RC(1,Object(nt.Inject)("Constants")),RC(2,Object(nt.Inject)(yt)),TC("design:paramtypes",["function"==typeof($C=void 0!==Tt.b&&Tt.b)?$C:Object,"function"!=typeof!1&&Object,"function"==typeof(AC=void 0!==i.IScope&&i.IScope)?AC:Object])],_C);const xC=["STAGING","PUBLISHED","DEPRECATED","CLOSED"];var LC,PC,NC=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},EC=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},DC=function(e,t){return function(n,i){t(n,i,e)}};let jC=class{constructor(e,t,n){this.http=e,this.constants=t,this.ajsRootScope=n}getApiSubscriptionsByPlan(e,t){return this.http.get(`${this.constants.env.baseURL}/apis/${e}/subscriptions?plan=${t}&status=accepted,pending,rejected,closed,paused`)}};jC=NC([Object(nt.Injectable)({providedIn:"root"}),DC(1,Object(nt.Inject)("Constants")),DC(2,Object(nt.Inject)(yt)),EC("design:paramtypes",["function"==typeof(LC=void 0!==Tt.b&&Tt.b)?LC:Object,"function"!=typeof!1&&Object,"function"==typeof(PC=void 0!==i.IScope&&i.IScope)?PC:Object])],jC);var kC,UC,MC,FC,qC,HC,GC,BC,WC=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},VC=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},YC=function(e,t){return function(n,i){t(n,i,e)}};let zC=class{constructor(e,t,n,i,a,o,s,r,l){this.ajsStateParams=e,this.ajsState=t,this.ajsRootScope=n,this.plansService=i,this.apiService=a,this.subscriptionService=o,this.permissionService=s,this.matDialog=r,this.snackBarService=l,this.unsubscribe$=new ct.a,this.displayedColumns=["name","security","status","deploy-on","actions"],this.plansTableDS=[],this.isLoadingData=!0,this.apiPlanStatus=xC,this.isReadOnly=!1}ngOnInit(){var e;this.status=null!==(e=this.ajsStateParams.status)&&void 0!==e?e:"PUBLISHED",Object(Au.a)([this.apiService.get(this.ajsStateParams.apiId),this.plansService.getApiPlans(this.ajsStateParams.apiId,this.status)]).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(([e,t])=>{this.onInit(e,t),this.isReadOnly||this.displayedColumns.includes("drag-icon")||this.displayedColumns.unshift("drag-icon")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}searchPlansByStatus(e){this.status=e,this.plansService.getApiPlans(this.ajsStateParams.apiId,e).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(e=>this.onInit(this.api,e)),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe()}dropRow(e){const t=[...this.plansTableDS],n=t[e.previousIndex];t.splice(e.previousIndex,1),t.splice(e.currentIndex,0,n),this.plansTableDS=[...t];const i=this.plansTableDS[e.currentIndex];i.order=e.currentIndex+1,this.plansService.update(this.api,i).pipe(Object(at.a)(this.unsubscribe$),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),Object(dt.a)({}))),Object(ot.a)(()=>this.searchPlansByStatus("PUBLISHED"))).subscribe()}navigateToPlan(e){this.ajsState.go("management.apis.detail.portal.plans.plan",{planId:e})}navigateToNewPlan(){this.ajsState.go("management.apis.detail.portal.plans.new")}designPlan(e){this.ajsState.go("management.apis.detail.design.flowsNg",{apiId:this.api.id,flows:e+"_0"})}publishPlan(e){this.matDialog.open(cn.d,{width:"500px",data:{title:"Publish plan",content:`Are you sure you want to publish the plan ${e.name}?`,confirmButton:"Publish"},role:"alertdialog",id:"publishPlanDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.plansService.get(e.api,e.id)),Object(st.a)(e=>this.plansService.publish(this.api,Object.assign(Object.assign({},e),{status:"PUBLISHED"}))),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(Kt.a)(e=>{this.snackBarService.success(`The plan ${e.name} has been published with success.`),this.ajsRootScope.$broadcast("planChangeSuccess",{state:"PUBLISHED"}),this.searchPlansByStatus("PUBLISHED")})).subscribe()}deprecatePlan(e){this.matDialog.open(cn.d,{width:"500px",data:{title:"Deprecate plan",content:`Would you like to deprecate the plan ${e.name}?`,confirmButton:"Deprecate"},role:"alertdialog",id:"deprecatePlanDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.plansService.get(e.api,e.id)),Object(st.a)(e=>this.plansService.deprecate(this.api,Object.assign(Object.assign({},e),{status:"DEPRECATED"}))),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(Kt.a)(e=>{this.snackBarService.success(`The plan ${e.name} has been deprecated with success.`),this.ajsRootScope.$broadcast("planChangeSuccess",{state:"DEPRECATED"}),this.searchPlansByStatus("DEPRECATED")})).subscribe()}closePlan(e){this.subscriptionService.getApiSubscriptionsByPlan(e.api,e.id).pipe(Object(at.a)(this.unsubscribe$),Object(st.a)(t=>{let n="";e.security===Ve.KEY_LESS?n="A keyless plan may have consumers. <br/>By closing this plan you will remove free access to this API.":0===t.page.size?n="No subscription is associated to this plan. You can delete it safely.":t.page.size>0&&(n="There are <code>subscriptions</code> subscription(s) associated to this plan.<br/> By closing this plan, all relative active subscriptions will also be closed.");let i="Yes, close this plan.";return 0===t.page.size&&e.security===Ve.API_KEY&&(i="Yes, delete this plan"),this.matDialog.open(cn.c,{width:"500px",data:{title:"Close plan",warning:"This operation is irreversible.",validationMessage:`Please, type in the name of the plan <code>${e.name}</code> to confirm.`,validationValue:e.name,content:n,confirmButton:i},role:"alertdialog",id:"closePlanDialog"}).afterClosed()}),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.plansService.close(this.api,Object.assign(Object.assign({},e),{status:"CLOSED"}))),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(Kt.a)(e=>{this.snackBarService.success(`The plan ${e.name} has been closed with success.`),this.ajsRootScope.$broadcast("planChangeSuccess",{state:"CLOSED"}),this.searchPlansByStatus("CLOSED")})).subscribe()}onInit(e,t){var n;this.ajsState.go("management.apis.detail.portal.ng-plans.list",{status:this.status},{notify:!1}),this.api=e,this.isV2Api=e&&"2.0.0"===e.gravitee,this.isReadOnly=!this.permissionService.hasAnyMatching(["api-plan-u"])||"kubernetes"===(null===(n=e.definition_context)||void 0===n?void 0:n.origin),this.plansTableDS=Object(o.orderBy)(t,"order","asc"),this.isLoadingData=!1}};zC=WC([Object(nt.Component)({selector:"api-portal-plan-list",template:n(1141),styles:[n(1142)]}),YC(0,Object(nt.Inject)(gt)),YC(1,Object(nt.Inject)(ut)),YC(2,Object(nt.Inject)(yt)),VC("design:paramtypes",[Object,"function"==typeof(kC=void 0!==it.StateService&&it.StateService)?kC:Object,"function"==typeof(UC=void 0!==i.IRootScopeService&&i.IRootScopeService)?UC:Object,"function"==typeof(MC=void 0!==_C&&_C)?MC:Object,"function"==typeof(FC=void 0!==hn&&hn)?FC:Object,"function"==typeof(qC=void 0!==jC&&jC)?qC:Object,"function"==typeof(HC=void 0!==Yt&&Yt)?HC:Object,"function"==typeof(GC=void 0!==mt.b&&mt.b)?GC:Object,"function"==typeof(BC=void 0!==on&&on)?BC:Object])],zC);var KC,QC=n(89),JC=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},XC=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},ZC=function(e,t){return function(n,i){t(n,i,e)}};let eI=class{constructor(e,t){this.http=e,this.constants=t}getTags(){return this.http.get(this.constants.org.baseURL+"/user/tags")}};eI=JC([Object(nt.Injectable)({providedIn:"root"}),ZC(1,Object(nt.Inject)("Constants")),XC("design:paramtypes",["function"==typeof(KC=void 0!==Tt.b&&Tt.b)?KC:Object,"function"!=typeof!1&&Object])],eI);var tI,nI=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},iI=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},aI=function(e,t){return function(n,i){t(n,i,e)}};let oI=class{constructor(e,t){this.http=e,this.constants=t}apiSearch(e,t){const n=Object.entries(null!=t?t:[]).map(([e,t])=>Object(o.isNil)(t)?null:`${e}=${t}`);return this.http.get(`${this.constants.env.baseURL}/apis/${e}/pages${n.length?"?"+n.join("&"):""}`)}};oI=nI([Object(nt.Injectable)({providedIn:"root"}),aI(1,Object(nt.Inject)("Constants")),iI("design:paramtypes",["function"==typeof(tI=void 0!==Tt.b&&Tt.b)?tI:Object,"function"!=typeof!1&&Object])],oI);var sI,rI,lI,cI,dI,pI=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},mI=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},uI=function(e,t){return function(n,i){t(n,i,e)}};let hI=class{constructor(e,t,n,i,a,s){this.ajsStateParams=e,this.tagService=t,this.groupService=n,this.documentationService=i,this.currentUserService=a,this.apiService=s,this.unsubscribe$=new ct.a,this.api$=new ct.a,this.conditionPages$=this.documentationService.apiSearch(this.ajsStateParams.apiId,{type:"MARKDOWN",api:this.ajsStateParams.apiId}),this.shardingTags$=Object(Au.a)([this.tagService.list(),this.api$,this.currentUserService.getTags()]).pipe(Object(Kt.a)(([e,t,n])=>e.map(e=>Object.assign(Object.assign({},e),{disabled:!Object(o.includes)(n,e.id)||!Object(o.includes)(t.tags,e.id)})))),this.groups$=this.groupService.list()}set api(e){this.api$.next(e)}ngOnInit(){this.generalForm=new ln.i({name:new ln.g("",[ln.v.required,ln.v.maxLength(50)]),description:new ln.g(""),characteristics:new ln.g([]),generalConditions:new ln.g(""),validation:new ln.g(!1),commentRequired:new ln.g(!1),commentMessage:new ln.g(""),shardingTags:new ln.g([]),excludedGroups:new ln.g([])}),this.generalForm.get("commentRequired").valueChanges.pipe(Object(at.a)(this.unsubscribe$),Object(fy.a)(this.generalForm.get("commentRequired").value)).subscribe(e=>{e?this.generalForm.get("commentMessage").enable():this.generalForm.get("commentMessage").disable()})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}};pI([Object(nt.Input)(),mI("design:type","function"!=typeof!1&&Object),mI("design:paramtypes",["function"!=typeof!1&&Object])],hI.prototype,"api",null),hI=pI([Object(nt.Component)({selector:"plan-edit-general-step",template:n(1144),styles:[n(1145)]}),uI(0,Object(nt.Inject)(gt)),mI("design:paramtypes",[Object,"function"==typeof(sI=void 0!==$f&&$f)?sI:Object,"function"==typeof(rI=void 0!==eh&&eh)?rI:Object,"function"==typeof(lI=void 0!==oI&&oI)?lI:Object,"function"==typeof(cI=void 0!==eI&&eI)?cI:Object,"function"==typeof(dI=void 0!==hn&&hn)?dI:Object])],hI);var gI,fI=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},bI=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},vI=function(e,t){return function(n,i){t(n,i,e)}};let yI=class{constructor(e,t){this.http=e,this.constants=t}list(e){let t=new Tt.e;return e.expandSchema&&(t=t.append("expand","schema")),e.expandIcon&&(t=t.append("expand","icon")),this.http.get(this.constants.env.baseURL+"/resources",{params:t})}getDocumentation(e){return this.http.get(`${this.constants.env.baseURL}/resources/${e}/documentation`)}};yI=fI([Object(nt.Injectable)({providedIn:"root"}),vI(1,Object(nt.Inject)("Constants")),bI("design:paramtypes",["function"==typeof(gI=void 0!==Tt.b&&Tt.b)?gI:Object,"function"!=typeof!1&&Object])],yI);var SI,wI,CI,II=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},$I=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},AI=function(e,t){return function(n,i){t(n,i,e)}};const OI=[{id:Ve.OAUTH2,name:"OAuth2",policy:"oauth2"},{id:Ve.JWT,name:"JWT",policy:"jwt"},{id:Ve.API_KEY,name:"API Key",policy:"api-key"},{id:Ve.KEY_LESS,name:"Keyless (public)"}];let TI=class{constructor(e,t,n,i){this.constants=e,this.policyService=t,this.resourceService=n,this.snackBarService=i,this.unsubscribe$=new ct.a,this.securityTypes=OI.filter(e=>{var t,n,i,a;return Object.entries(null!==(a=null===(i=null===(n=null===(t=this.constants.env)||void 0===t?void 0:t.settings)||void 0===n?void 0:n.plan)||void 0===i?void 0:i.security)&&void 0!==a?a:{}).map(([t,n])=>Object(o.camelCase)(e.id)===Object(o.camelCase)(t)&&(null==n?void 0:n.enabled))})}ngOnInit(){this.secureForm=new ln.i({securityTypes:new ln.g,securityConfig:new ln.g({value:{},disabled:!1}),selectionRule:new ln.g}),this.secureForm.get("securityTypes").valueChanges.pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(()=>this.securityConfigSchema=void 0),Object(rt.a)(e=>e!==Ve.KEY_LESS),Object(Kt.a)(e=>this.securityTypes.find(t=>t.id===e).policy),Object(st.a)(e=>this.policyService.getSchema(e)),Object(lt.a)(e=>{var t,n;return this.snackBarService.error(null!==(n=null===(t=e.error)||void 0===t?void 0:t.message)&&void 0!==n?n:"An error occurs while loading security schema."),pt.a})).subscribe(e=>{this.securityConfigSchema=e}),this.resourceService.list({expandSchema:!1,expandIcon:!0}).pipe(Object(at.a)(this.unsubscribe$),Object(lt.a)(e=>{var t,n;return this.snackBarService.error(null!==(n=null===(t=e.error)||void 0===t?void 0:t.message)&&void 0!==n?n:"An error occurs while loading resources."),pt.a})).subscribe(e=>{this.resourceTypes=e})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onFetchResources(e){var t;if(this.resourceTypes&&(null===(t=this.api)||void 0===t?void 0:t.resources)){const{currentTarget:t,regexTypes:n}=e.detail,i=this.api.resources.filter(e=>null==n||new RegExp(n).test(e.type)).map(e=>{const t=this.resourceTypes.find(t=>t.id===e.type),n=document.createElement("gv-row"),i=t.icon?t.icon:null;return n.item={picture:i,name:e.name},{element:n,value:e.name,id:e.type}});t.options=i}}};II([Object(nt.Input)(),$I("design:type","function"!=typeof!1&&Object)],TI.prototype,"api",void 0),TI=II([Object(nt.Component)({selector:"plan-edit-secure-step",template:n(1147),styles:[n(1148)]}),AI(0,Object(nt.Inject)("Constants")),$I("design:paramtypes",["function"!=typeof!1&&Object,"function"==typeof(SI=void 0!==Zt&&Zt)?SI:Object,"function"==typeof(wI=void 0!==yI&&yI)?wI:Object,"function"==typeof(CI=void 0!==on&&on)?CI:Object])],TI);var RI,_I,xI,LI,PI=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},NI=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},EI=function(e,t){return function(n,i){t(n,i,e)}};let DI=class{constructor(e,t,n){this.changeDetectorRef=e,this.ajsStateParams=t,this.apiService=n,this.unsubscribe$=new ct.a,this.planForm=new ln.i({})}ngOnInit(){this.apiService.get(this.ajsStateParams.apiId).subscribe(e=>this.api=e)}ngAfterViewInit(){this.planForm=new ln.i({general:this.planEditGeneralStepComponent.generalForm,secure:this.planEditSecureStepComponent.secureForm}),this.changeDetectorRef.detectChanges()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}};PI([Object(nt.ViewChild)(hI),NI("design:type","function"==typeof(RI=void 0!==hI&&hI)?RI:Object)],DI.prototype,"planEditGeneralStepComponent",void 0),PI([Object(nt.ViewChild)(TI),NI("design:type","function"==typeof(_I=void 0!==TI&&TI)?_I:Object)],DI.prototype,"planEditSecureStepComponent",void 0),DI=PI([Object(nt.Component)({selector:"api-portal-plan-edit",template:n(1150),styles:[n(1151)],providers:[{provide:QC.h,useValue:{displayDefaultIndicatorType:!1,showError:!0}}]}),EI(1,Object(nt.Inject)(gt)),NI("design:paramtypes",["function"==typeof(xI=void 0!==nt.ChangeDetectorRef&&nt.ChangeDetectorRef)?xI:Object,Object,"function"==typeof(LI=void 0!==hn&&hn)?LI:Object])],DI);var jI=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let kI=class{constructor(){this.activatedFor=[{key:"api",urlToMatch:new RegExp("/management/organizations/(.*)/environments/(.*)/apis")}],this.lastEtag={}}updateLastEtag(e,t){this.lastEtag[e]=t}getLastEtag(e){return this.lastEtag[e]}intercept(e,t){if("PUT"===(e=e.clone()).method||"POST"===e.method){const t=this.activatedFor.find(t=>e.url.match(t.urlToMatch));if(t){const n=this.getLastEtag(t.key);n&&(e=e.clone({headers:e.headers.set("If-Match",n)}))}}return t.handle(e).pipe(Object(Kt.a)(e=>{if(e instanceof Tt.f){const t=this.activatedFor.find(t=>e.url.match(t.urlToMatch));t&&e.headers.has("etag")&&this.updateLastEtag(t.key,e.headers.get("etag"))}return e}))}};kI=jI([Object(nt.Injectable)({providedIn:"platform"})],kI);class UI{constructor(e,t,n,i,a,s,r,l,c,d,p,m,u,h,g,f,b){var v,y;this.ApiService=e,this.NotificationService=t,this.UserService=n,this.PolicyService=i,this.$scope=a,this.$mdDialog=s,this.$mdEditDialog=r,this.$rootScope=l,this.$state=c,this.GroupService=d,this.resolvedCategories=p,this.resolvedGroups=m,this.resolvedTags=u,this.resolvedTenants=h,this.Constants=g,this.qualityRules=f,this.InstallationService=b,this.apiLabelsDictionary=[],this.ApiService=e,this.NotificationService=t,this.UserService=n,this.GroupService=d,this.$scope=a,this.$rootScope=l,this.$mdEditDialog=r,this.$mdDialog=s,this.initialApi=o.cloneDeep(this.$scope.$parent.apiCtrl.api),this.api=o.cloneDeep(this.$scope.$parent.apiCtrl.api),this.tenants=h.data,this.$scope.selected=[],this.$scope.searchHeaders=null,this.api.labels=this.api.labels||[],this.$scope.lbs=[{name:"Round-Robin",value:"ROUND_ROBIN"},{name:"Random",value:"RANDOM"},{name:"Weighted Round-Robin",value:"WEIGHTED_ROUND_ROBIN"},{name:"Weighted Random",value:"WEIGHTED_RANDOM"}],this.$scope.loggingModes=[{name:"None",value:"NONE"},{name:"Client only",value:"CLIENT"},{name:"Proxy only",value:"PROXY"},{name:"Client and proxy",value:"CLIENT_PROXY"}],this.$scope.methods=["GET","DELETE","PATCH","POST","PUT","TRACE","HEAD"],this.initState(),this.categories=p,this.tags=u,this.groups=m,this.attachableGroups=m.filter(e=>null==e.apiPrimaryOwner),this.attachedGroups=null===(v=this.api.groups)||void 0===v?void 0:v.map(e=>this.getGroup(e)).filter(e=>null==e.apiPrimaryOwner),this.headers=["Accept","Accept-Charset","Accept-Encoding","Accept-Language","Accept-Ranges","Access-Control-Allow-Credentials","Access-Control-Allow-Headers","Access-Control-Allow-Methods","Access-Control-Allow-Origin","Access-Control-Expose-Headers","Access-Control-Max-Age","Access-Control-Request-Headers","Access-Control-Request-Method","Age","Allow","Authorization","Cache-Control","Connection","Content-Disposition","Content-Encoding","Content-ID","Content-Language","Content-Length","Content-Location","Content-MD5","Content-Range","Content-Type","Cookie","Date","ETag","Expires","Expect","Forwarded","From","Host","If-Match","If-Modified-Since","If-None-Match","If-Unmodified-Since","Keep-Alive","Last-Modified","Location","Link","Max-Forwards","MIME-Version","Origin","Pragma","Proxy-Authenticate","Proxy-Authorization","Proxy-Connection","Range","Referer","Retry-After","Server","Set-Cookie","Set-Cookie2","TE","Trailer","Transfer-Encoding","Upgrade","User-Agent","Vary","Via","Warning","WWW-Authenticate","X-Forwarded-For","X-Forwarded-Proto","X-Forwarded-Server","X-Forwarded-Host"],this.$scope.$on("apiChangeSuccess",(e,t)=>{this.api=t.api,this.computeQualityMetrics()}),this.isQualityEnabled=g.env.settings.apiQualityMetrics&&g.env.settings.apiQualityMetrics.enabled,this.apiLabelsDictionary=g.env.settings.api.labelsDictionary,this.qualityMetricsDescription=new Map,this.qualityMetricsDescription.set("api.quality.metrics.functional.documentation.weight","A functional page must be published"),this.qualityMetricsDescription.set("api.quality.metrics.technical.documentation.weight","A swagger page must be published"),this.qualityMetricsDescription.set("api.quality.metrics.healthcheck.weight","An healthcheck must be configured"),this.qualityMetricsDescription.set("api.quality.metrics.description.weight","The API description must be filled"),this.qualityMetricsDescription.set("api.quality.metrics.logo.weight","Put your own logo"),this.qualityMetricsDescription.set("api.quality.metrics.categories.weight","Link your API to categories"),this.qualityMetricsDescription.set("api.quality.metrics.labels.weight","Add labels to your API"),o.forEach(this.qualityRules,e=>{this.qualityMetricsDescription.set(e.id,e.description)}),this.displayJupiterToggle=null!==(y=this.Constants.org.settings.jupiterMode.enabled)&&void 0!==y&&y}$onInit(){this.computeQualityMetrics(),this.$scope.$on("apiPictureChangeSuccess",(e,t)=>{this.api.picture=t.image})}computeQualityMetrics(){this.isQualityEnabled&&this.ApiService.getQualityMetrics(this.api.id).then(e=>{this.qualityMetrics=e.data})}toggleVisibility(){"PUBLIC"===this.api.visibility?this.api.visibility="PRIVATE":this.api.visibility="PUBLIC",this.formApi.$setDirty()}initState(){this.$scope.apiEnabled="STARTED"===this.$scope.$parent.apiCtrl.api.state,this.$scope.apiPublic="PUBLIC"===this.$scope.$parent.apiCtrl.api.visibility,this.failoverEnabled=void 0!==this.api.proxy.failover,this.contextPathEditable=this.UserService.currentUser.id===this.api.owner.id,this.api.proxy.cors=this.api.proxy.cors||{allowOrigin:["*"],allowHeaders:[],allowMethods:[],exposeHeaders:[],maxAge:-1,allowCredentials:!1}}editWeight(e,t){e.stopPropagation();const n={modelValue:t.weight,placeholder:"Weight",save:e=>{t.weight=e.$modelValue,this.formApi.$setDirty()},targetEvent:e,title:"Endpoint weight",type:"number",validators:{"ng-required":"true",min:1,max:99}};this.$mdEditDialog.large(n).then(e=>{const t=e.getInput();t.$viewChangeListeners.push(()=>{t.$setValidity("test","test"!==t.$modelValue)})})}removeEndpoints(){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete endpoint(s)?",msg:"",confirmButton:"Delete"}}).then(e=>{e&&(o(this.$scope.selected).forEach(e=>{o(this.api.proxy.endpoints).forEach((t,n,i)=>{void 0!==t&&t.name===e.name&&i.splice(n,1)})}),this.update(this.api))})}reset(){this.api=o.cloneDeep(this.initialApi),this.formApi&&(this.formApi.$setPristine(),this.formApi.$setUntouched())}delete(e){this.$mdDialog.show({controller:"DialogConfirmAndValidateController",controllerAs:"ctrl",template:n(198),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete '"+this.api.name+"'?",warning:"This operation is irreversible.",msg:"The API must be stopped and without any active plans and subscriptions.",validationMessage:"Please, type in the name of the api <code>"+this.api.name+"</code> to confirm.",validationValue:this.api.name,confirmButton:"Yes, delete this API"}}).then(t=>{t&&this.ApiService.delete(e).then(()=>{this.NotificationService.show("API "+this.initialApi.name+" has been removed"),this.$state.go("management.apis.list",{},{reload:!0})})})}onApiUpdate(e){this.api=e,this.initialApi=o.cloneDeep(e),this.formApi.$setPristine(),this.$rootScope.$broadcast("apiChangeSuccess",{api:o.cloneDeep(e)}),this.NotificationService.show("API '"+this.initialApi.name+"' saved"),this.initState(),this.computeQualityMetrics()}update(e){this.failoverEnabled||delete e.proxy.failover,this.ApiService.update(e).then(e=>{e.data.etag=e.headers("etag"),this.onApiUpdate(e.data)})}getTenants(e){return void 0!==e?o(e).map(e=>o.find(this.tenants,{id:e})).map(e=>e.name).join(", "):""}getGroup(e){return o.find(this.groups,{id:e})}querySearchLabels(e){return e?this.apiLabelsDictionary.filter(this.createFilterFor(e)):[]}createFilterFor(e){const t=e.toLowerCase();return function(e){return-1!==e.toLowerCase().indexOf(t)}}getQualityMetricCssClass(){return this.ApiService.getQualityMetricCssClass(100*this.qualityMetrics.score)}changeLifecycle(){const e="STARTED"===this.api.state;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:`Are you sure you want to ${e?"stop":"start"} the API?`,msg:"",confirmButton:e?"stop":"start"}}).then(t=>{t&&(e?this.ApiService.stop(this.api).then(e=>{this.api.state="STOPPED",this.api.etag=e.headers("etag"),this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api}),this.NotificationService.show(`API ${this.api.name} has been stopped with success`)}):this.ApiService.start(this.api).then(e=>{this.api.state="STARTED",this.api.etag=e.headers("etag"),this.NotificationService.show(`API ${this.api.name} has been started with success`),this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api})}))})}changeApiLifecycle(e){const t=o.cloneDeep(this.api);t.lifecycle_state=e;let i=e.slice(0,-1).toLowerCase();i=i.replace("publishe","publish"),this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:`Are you sure you want to ${i} the API?`,msg:"",confirmButton:o.capitalize(i)}}).then(n=>{n&&(this.api=t,this.ApiService.update(t).then(t=>{this.api=t.data,this.api.etag=t.headers("etag"),this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api}),this.NotificationService.show(`API ${this.api.name} has been ${e} with success`)}))})}canAskForReview(){return this.Constants.env.settings.apiReview.enabled&&("DRAFT"===this.api.workflow_state||"REQUEST_FOR_CHANGES"===this.api.workflow_state||!this.api.workflow_state)}canChangeLifecycle(){return!this.Constants.env.settings.apiReview.enabled||this.Constants.env.settings.apiReview.enabled&&(!this.api.workflow_state||"REVIEW_OK"===this.api.workflow_state)}canChangeApiLifecycle(){return this.Constants.env.settings.apiReview.enabled?!this.api.workflow_state||"REVIEW_OK"===this.api.workflow_state:"CREATED"===this.api.lifecycle_state||"PUBLISHED"===this.api.lifecycle_state||"UNPUBLISHED"===this.api.lifecycle_state}canPublish(){return!this.api.lifecycle_state||"CREATED"===this.api.lifecycle_state||"UNPUBLISHED"===this.api.lifecycle_state}isDeprecated(){return"DEPRECATED"===this.api.lifecycle_state}askForReview(){this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:n(59),clickOutsideToClose:!0,locals:{title:"Are you sure you want to ask for a review of the API?",msg:"",confirmButton:"Ask for review"}}).then(e=>{e&&this.ApiService.askForReview(this.api).then(e=>{this.api.workflow_state="IN_REVIEW",this.api.etag=e.headers("etag"),this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api}),this.NotificationService.show("Review has been asked for API "+this.api.name)})})}canPromote(){return this.canChangeApiLifecycle()&&!this.isDeprecated()}}UI.$inject=["ApiService","NotificationService","UserService","PolicyService","$scope","$mdDialog","$mdEditDialog","$rootScope","$state","GroupService","resolvedCategories","resolvedGroups","resolvedTags","resolvedTenants","Constants","qualityRules","InstallationService"];var MI=UI;window.jQuery=s;const FI=n(935);window.traverse=l,window.hljs=c,r.marked.setOptions({highlight:e=>c.highlightAuto(e).value}),window.CodeMirror=d,n(937),n(938),n(439),n(939),n(440),n(940),n(941),n(942),n(946),n(441),n(947),n(254),n(948),n(949),n(950),n(951),window.resolveUrl=function(e){return e.startsWith("http")?e:window.location.origin+e},n(952),n(954),n(956),n(958),n(960),n(961),n(963),n(967),n(968),n(969),n(970),n(972),n(974),n(975),n(976),n(977),n(979),n(980),n(982),n(984),n(985),n(247),n(987);const qI=n(57);window.Highcharts=qI,n(202)(qI),n(261)(qI),n(989)(qI),n(431)(qI),n(990),window.moment=p,n(1153),window.tinycolor=u,n(1154),i.module("gravitee-management",["angular-loading-bar",Bu.default,vb.b.name,Rc.permission,Rc.uiPermission,"ngMaterial","ngMdIcons","ui.codemirror","md.data.table","ngCookies","dragularModule","readMore","ngMessages","vAccordion","schemaForm","ngclipboard","ui.validate","angular-timeline","utf8-base64","ngFileUpload","md-steppers","ui.tree","angular-jwt","gridster","ngAnimate","LocalStorageModule","satellizer",FI,"moment-picker","mdColorPicker","gravitee-component-documentation"]);const HI=i.module("gravitee-management");HI.config(["cfpLoadingBarProvider",e=>{e.includeSpinner=!1}]),HI.config(["localStorageServiceProvider",e=>{e.setPrefix("gravitee")}]),HI.config(dc),HI.config(mc),HI.config(Mp),HI.config(bc),HI.config(am),HI.config($s),HI.config(Ys),HI.config(Ks),HI.config(or),HI.config(ir),HI.config(tr),HI.config(Js),HI.config(Zs),HI.config(rr),HI.config(Wc),HI.config(cr),HI.config(pr),HI.config(Cc),HI.config($c),HI.config(["$mdThemingProvider",e=>{e.definePalette("gravitee",{0:"1b1d3c",50:"1b1d3c",100:"1b1d3c",200:"1b1d3c",300:"1b1d3c",400:"1b1d3c",500:"1b1d3c",600:"1b1d3c",700:"1b1d3c",800:"1b1d3c",900:"1b1d3c",A100:"1b1d3c",A200:"1b1d3c",A400:"1b1d3c",A700:"1b1d3c",contrastDefaultColor:"light"}),e.definePalette("graviteeWarn",{0:"be1818",50:"be1818",100:"be1818",200:"be1818",300:"be1818",400:"be1818",500:"be1818",600:"be1818",700:"be1818",800:"be1818",900:"be1818",A100:"be1818",A200:"be1818",A400:"be1818",A700:"be1818",contrastDefaultColor:"light"}),e.theme("default").primaryPalette("gravitee").accentPalette("gravitee").warnPalette("graviteeWarn"),e.theme("toast-success"),e.theme("toast-error")}]),HI.run(Tc),HI.directive("gioSideNav",Object(Im.b)({component:Nw})),HI.directive("gioTopNav",Object(Im.b)({component:zw})),HI.directive("settingsNavigation",Object(Im.b)({component:eC})),HI.directive("applicationNavigation",Object(Im.b)({component:rC})),HI.directive("apiNavigation",Object(Im.b)({component:gC})),HI.directive("ngApiList",Object(Im.b)({component:yv})),HI.directive("ngApiProxyEntrypoints",Object(Im.b)({component:Rv})),HI.directive("ngApiProxyEntrypointsContextPath",Object(Im.b)({component:Pv})),HI.directive("ngApiProxyEntrypointsVirtualHost",Object(Im.b)({component:Dv})),HI.directive("ngApiProxyCors",Object(Im.b)({component:Vv})),HI.directive("ngApiProxyDeployments",Object(Im.b)({component:ey})),HI.directive("ngApiProxyResponseTemplatesList",Object(Im.b)({component:py})),HI.directive("ngApiProxyResponseTemplatesEdit",Object(Im.b)({component:Sy})),HI.directive("ngApiProxyEndpointList",Object(Im.b)({component:Py})),HI.directive("ngApiProxyGroupEdit",Object(Im.b)({component:XS})),HI.directive("ngApiProxyGroupEndpointEdit",Object(Im.b)({component:hw})),HI.directive("ngApiProxyFailover",Object(Im.b)({component:Iw})),HI.factory("ngGioPendoService",Object(Im.c)(yb.c)),HI.controller("ApisStatusDashboardController",O),HI.controller("ApiAdminController",R),HI.directive("ngApiPortalDetails",Object(Im.b)({component:AS})),HI.directive("ngApiPortalPlanList",Object(Im.b)({component:zC})),HI.controller("ApiPortalController",MI),HI.controller("ApiAnalyticsController",x),HI.controller("ApiPoliciesController",j),HI.controller("AddPoliciesPathController",U),HI.controller("ApiMembersController",P),HI.controller("ApiTransferOwnershipController",E),HI.controller("ApiHealthCheckController",ul),HI.controller("ApiPropertiesController",ee),HI.controller("ApiEventsController",ne),HI.controller("ApiHistoryController",le),HI.controller("ApiResourcesController",F),HI.controller("ApiPathMappingsController",X),HI.controller("DialogAddPathMappingController",H),HI.controller("DialogImportPathMappingController",Y),HI.controller("DialogAddPropertyController",de),HI.controller("DialogAddMemberApiController",me),HI.controller("DialogTransferApiController",he),HI.controller("DialogApiKeyExpirationController",fe),HI.controller("UserController",hr),HI.controller("DialogEditPolicyController",ve),HI.controller("LoginController",Ue),HI.controller("InstancesController",Yi),HI.controller("AnalyticsDashboardController",to),HI.controller("DashboardController",cm),HI.controller("HomeDashboardController",pm),HI.component("gvAlertDashboard",um),HI.controller("PlatformAlertsDashboardController",gm),HI.controller("ApiAlertsDashboardController",ym),HI.controller("CategoriesController",ro),HI.controller("CategoryController",co),HI.controller("DeleteCategoryDialogController",ho),HI.controller("DeleteAPICategoryDialogController",fo),HI.component("groups",ql),HI.component("group",Bl),HI.controller("DialogAddGroupMemberController",vo),HI.controller("DialogTransferOwnershipController",Gl),HI.controller("RegistrationController",So),HI.controller("ConfirmController",Co),HI.controller("ResetPasswordController",$o),HI.controller("NewsletterSubscriptionController",qp),HI.controller("DialogSubscriptionRejectController",Ro),HI.controller("DialogSubscriptionAcceptController",xo),HI.controller("DialogSubscriptionCreateController",Po),HI.controller("DialogSubscriptionTransferController",Eo),HI.controller("DialogSubscriptionChangeEndDateController",jo),HI.controller("DialogSubscriptionRenewController",Uo),HI.controller("DialogPublishPlanController",qo),HI.controller("MetadataController",Wo),HI.controller("DeleteMetadataDialogController",Ko),HI.controller("NewMetadataDialogController",Jo),HI.controller("UpdateMetadataDialogController",Zo),HI.controller("DeleteFieldDialogController",Qp),HI.controller("NewFieldDialogController",zp),HI.controller("UpdateFieldDialogController",Xp),HI.controller("FileChooserDialogController",rs),HI.controller("DialogConfirmController",cs),HI.controller("DialogConfirmDeploymentController",Un),HI.controller("DialogConfirmAndValidateController",ps),HI.controller("DialogDynamicProviderHttpController",us),HI.controller("SupportTicketController",Cl),HI.controller("TicketsListController",hc),HI.directive("ngEnvAudit",Object(Im.b)({component:Zb})),HI.controller("ApiAuditController",Tl),HI.controller("ThemeController",Ep),HI.controller("CustomUserFieldsController",Bp),HI.controller("TopApisController",Pc),HI.controller("AddTopApiDialogController",kc),HI.controller("DeleteTopApiDialogController",Mc),HI.controller("SelectFolderDialogController",Hd),HI.controller("SelectPageDialogController",Bd),HI.controller("DialogReviewController",mp),HI.controller("DialogRequestForChangesController",hp),HI.service("ApplicationService",ai),HI.service("ApplicationTypesService",si),HI.service("ApiService",y),HI.service("debugApiService",wm),HI.service("ApiPrimaryOwnerModeService",kt),HI.service("CorsService",w),HI.service("DocumentationService",Q),HI.service("InstancesService",Wi),HI.service("NotificationService",Ce),HI.service("PolicyService",Oe),HI.service("NotifierService",Ee),HI.service("UserService",Gt),HI.service("Base64Service",td),HI.service("ResourceService",xe),HI.service("FetcherService",Pe),HI.service("ServiceDiscoveryService",je),HI.service("eventService",Qa),HI.service("AnalyticsService",Za),HI.service("CategoryService",mo),HI.service("GroupService",Vl),HI.service("SubscriptionService",Oo),HI.service("TagService",Go),HI.service("MetadataService",Yo),HI.service("CustomUserFieldsService",Vp),HI.service("TenantService",gs),HI.service("StringService",sc),HI.service("AuthenticationService",lc),HI.service("RoleService",ws),HI.service("TicketService",Sl),HI.service("AuditService",Al),HI.service("TopApiService",Ec),HI.service("MessageService",Gc),HI.service("PortalService",Re),HI.service("ThemeService",kp),HI.service("ReCaptchaService",Pp),HI.service("TokenService",ip),HI.service("EnvironmentService",Ua),HI.service("OrganizationService",Fa),HI.service("InstallationService",Ha),HI.service("FlowService",tm),HI.service("SpelService",rm),HI.service("ConnectorService",$e),HI.controller("DialogGenerateTokenController",op),HI.directive("filecontent",()=>ye),HI.directive("fileloader",()=>Se),HI.directive("noDirtyCheck",()=>new h),HI.directive("autofocus",()=>new g),HI.directive("graviteeDiff",()=>He),HI.directive("graviteeIdentityPicture",()=>new Ya),HI.directive("gvModel",()=>new f),HI.directive("graviteeImage",()=>new Ka),HI.directive("graviteeEmptyState",()=>new Mo),HI.directive("graviteeChart",()=>new is),HI.directive("graviteeUserAvatar",()=>new os),HI.directive("gvThemeElement",()=>ja),HI.component("gvWidget",Ki),HI.component("gvWidgetDataTable",Qi),HI.component("gvWidgetDataStats",ea),HI.component("gvWidgetChartPie",Xi),HI.component("gvWidgetChartLine",Ji),HI.component("gvWidgetChartMap",Zi),HI.component("gvWidgetChartCount",fm),HI.component("gvWidgetDataTableConfiguration",ta),HI.component("gvWidgetDataLineConfiguration",na),HI.component("gvWidgetDataMapConfiguration",ia),HI.component("gvWidgetDataPieConfiguration",aa),HI.component("gvWidgetDataStatsConfiguration",sa),HI.component("gvError",Ga),HI.controller("ErrorController",Ba),HI.component("categories",fs),HI.component("category",bs),HI.component("moved",Sm),HI.directive("ngTenants",Object(Im.b)({component:nf})),HI.directive("ngOrgSettingsTags",Object(Im.b)({component:Kf})),HI.component("metadata",vs),HI.directive("ngRoles",Object(Im.b)({component:mf})),HI.directive("ngOrgSettingsRole",Object(Im.b)({component:gb})),HI.directive("ngRoleMembers",Object(Im.b)({component:lb})),HI.component("theme",Dp),HI.component("topApis",Dc),HI.directive("ngCockpit",Object(Im.b)({component:Ph})),HI.factory("ngCockpitService",Object(Im.c)(At)),HI.directive("ngConsoleSettings",Object(Im.b)({component:Bm})),HI.component("portalSettings",Fc),HI.component("analyticsSettings",Wd),HI.directive("gvMetadataValidator",()=>ys),HI.component("customUserFields",Hp),HI.component("ticketDetail",im),HI.directive("ngPlatformPolicies",Object(Im.b)({component:Mg})),HI.directive("ngOrgSettingsAudit",Object(Im.b)({component:Vb})),HI.component("instances",zi),HI.component("apiCreation",Ge),HI.controller("ApiCreationController",Ke),HI.controller("NewApiImportController",Ye),HI.directive("ngApiCreationGetStartedComponent",Object(Im.b)({component:jn})),HI.component("apiCreationStep1",Je),HI.component("apiCreationStep2",Xe),HI.component("apiCreationStep3",Ze),HI.component("apiCreationStep4",et),HI.component("apiCreationStep5",tt),HI.component("gvDashboard",ra),HI.component("gvDashboardFilter",la),HI.controller("DashboardFilterController",pa),HI.component("gvDashboardTimeframe",ma),HI.controller("DashboardTimeframeController",ga),HI.directive("ngApiPortalPlanEdit",Object(Im.b)({component:DI})),HI.component("apiPlan",Mn),HI.component("editPlan",Hn),HI.controller("ApiEditPlanController",qn),HI.component("listPlans",Gn),HI.controller("ApiListPlansController",Wn),HI.component("planWizardGeneral",Vn),HI.component("planWizardSecurity",Yn),HI.component("planWizardPolicies",Jn),HI.component("planWizardRestrictions",Kn),HI.component("apiKeyValidatedInput",nm),HI.component("apiKeys",$b),HI.controller("ApiKeysController",Tb),HI.component("apiSubscriptions",ei),HI.component("apiSubscription",ti),HI.directive("ngBanner",Object(Im.b)({component:cn.a})),HI.directive("ngEnvApplicationList",Object(Im.b)({component:uv})),HI.component("applicationSubscribe",gp),HI.controller("ApplicationSubscribeController",vp),HI.controller("ApiKeyModeChoiceDialogController",yp),HI.component("createApplication",ri),HI.controller("ApplicationCreationController",di),HI.component("applicationCreationStep1",pi),HI.component("applicationCreationStep2",mi),HI.controller("ApplicationCreationStep2Controller",hi),HI.component("applicationCreationStep3",gi),HI.component("applicationCreationStep4",fi),HI.component("applicationHeader",bi),HI.component("applicationGeneral",Si),HI.component("applicationSubscriptions",Li),HI.component("applicationSubscription",Pi),HI.component("applicationSubscriptionsList",Sb),HI.component("applicationMembers",Ii),HI.component("applicationAnalytics",Di),HI.component("applicationLogs",Ui),HI.component("applicationLog",Mi),HI.controller("DialogAddMemberController",qi),HI.controller("ApplicationGeneralController",yi),HI.controller("ApplicationMembersController",Ci),HI.controller("ApplicationSubscriptionsController",xi),HI.controller("ApplicationSubscriptionsListController",Ib),HI.controller("ApplicationAnalyticsController",Ei),HI.controller("ApplicationLogsController",ki),HI.controller("DialogTransferApplicationController",Gi),HI.component("user",gr),HI.component("tasks",br),HI.factory("ngTaskService",Object(Im.c)(Mw)),HI.component("promotionTask",yr),HI.service("NotificationSettingsService",$r),HI.service("NotificationTemplatesService",Or),HI.controller("DialogAddNotificationSettingsController",xc),HI.component("notificationSettingsComponent",Cr),HI.component("notificationsComponent",Sr),HI.directive("ngNotificationTemplatesComponent",Object(Im.b)({component:Th})),HI.directive("ngNotificationTemplateComponent",Object(Im.b)({component:Wh})),HI.component("logout",Fe),HI.controller("ApiLogsController",Sa),HI.component("gvLogsTimeframe",wa),HI.controller("LogsTimeframeController",$a),HI.component("log",_a),HI.component("gvLogsFilters",Aa),HI.controller("LogsFiltersController",Ta),HI.controller("ApiLoggingConfigurationController",Ea),HI.controller("configureLoggingDialogController",Pa),HI.component("gvAudit",Rl),HI.component("gvNewsletterReminder",sp),HI.component("gvContextualDoc",fa),HI.controller("ContextualDocController",va),HI.directive("ngApiProxyHealthCheck",Object(Im.b)({component:IC})),HI.controller("ApiHealthCheckLogController",fl),HI.component("progressBar",hl),HI.component("gvHealthcheckMetric",bl),HI.component("settings",_l),HI.component("organizationSettings",xl),HI.service("ConsoleSettingsService",Pl),HI.service("PortalSettingsService",El),HI.service("PortalConfigService",jl),HI.component("apiLogging",kl),HI.controller("ApiLoggingController",Ml),HI.directive("ngOrgSettingsUsers",Object(Im.b)({component:lu})),HI.directive("ngOrgSettingsUserDetail",Object(Im.b)({component:Og})),HI.directive("ngOrgSettingsNewUser",Object(Im.b)({component:Iu})),HI.service("RouterService",qc),HI.component("messages",Bc),HI.service("DictionaryService",zl),HI.component("dictionaries",Kl),HI.component("dictionary",Xl),HI.controller("DictionariesController",Jl),HI.controller("DictionaryController",ec),HI.controller("DialogDictionaryAddPropertyController",nc),HI.component("configApiPortalHeader",Yc),HI.service("ApiHeaderService",Kc),HI.controller("NewApiPortalHeaderDialogController",ed),HI.controller("UpdateApiPortalHeaderDialogController",Jc),HI.component("configApiQuality",Cp),HI.component("qualityRule",Ip),HI.controller("ApiQualityRuleController",Ap),HI.controller("DeleteApiQualityRuleDialogController",Tp),HI.service("QualityRuleService",wp),HI.component("identityProviders",ic),HI.directive("ngOrgSettingsIdentityProviders",Object(Im.b)({component:Hu})),HI.directive("ngOrgSettingsIdentityProvider",Object(Im.b)({component:fh})),HI.service("IdentityProviderService",oc),HI.component("clientRegistrationProviders",zd),HI.component("clientRegistrationProvider",Kd),HI.controller("ClientRegistrationProviderController",Xd),HI.service("ClientRegistrationProviderService",Yd),HI.service("AlertService",id),HI.component("alertsComponent",ad),HI.component("alertComponent",pd),HI.component("gvAlertNotification",ud),HI.component("gvAlertNotifications",md),HI.component("gvAlertHistory",hd),HI.component("gvAlertTriggerWindow",fd),HI.component("gvAlertTriggerDampening",gd),HI.component("gvAlertTriggerCondition",wd),HI.component("gvAlertTriggerFilters",bd),HI.component("gvAlertTriggerFilter",Sd),HI.component("gvAlertTriggerConditionThreshold",Cd),HI.component("gvAlertTriggerConditionThresholdRange",Id),HI.component("gvAlertTriggerConditionString",$d),HI.component("gvAlertTriggerConditionCompare",Ad),HI.component("gvAlertTriggerMetricsSimpleCondition",Od),HI.component("gvAlertTriggerMetricsAggregation",Td),HI.component("gvAlertTriggerMissingData",Rd),HI.component("gvAlertTriggerMetricsRate",_d),HI.component("gvAlertTriggerApiHealthCheckStatusChanged",xd),HI.component("gvAlertTriggerNodeLifecycleChanged",Ld),HI.component("gvAlertTriggerNodeHealthcheck",Pd),HI.component("gvAlertTriggerApplicationQuota",Nd),HI.component("gvAlertTriggerProjections",Ed),HI.component("gvAlertTriggerProjection",Dd),HI.component("gvAlertTriggerTimeframe",jd),HI.component("circularPercentage",kd),HI.controller("CircularPercentageController",Ud),HI.service("EntrypointService",Fd),HI.service("DashboardService",ep),HI.component("dashboard",tp),HI.controller("DialogQueryFilterInformationController",_p),HI.component("platformLogs",ao),HI.component("platformLog",oo),HI.controller("PlatformLogsController",io),HI.component("gvUserAutocomplete",lp),HI.controller("UserAutocompleteController",dp),HI.component("gvQuickTimeRange",$),HI.controller("QuickTimeRangeController",rp),HI.service("promotionService",bm),HI.factory("ngIfMatchEtagInterceptor",Object(Im.c)(kI)),HI.filter("humanDateFilter",()=>function(e){if(e)return p().subtract(1,"weeks").isAfter(e)?p(e).format("ll"):p(e).fromNow()}),HI.filter("humanDatetimeFilter",()=>function(e){if(e)return p().subtract(1,"weeks").isAfter(e)?p(e).format("D MMM YYYY HH:mm:ss"):p(e).fromNow()}),HI.filter("datetimeFilter",()=>function(e){if(e)return p(e).format("D MMM YYYY HH:mm:ss")}),HI.filter("apiKeyFilter",()=>function(e){return e}),HI.filter("floor",()=>function(e){return Math.floor(e)});var GI=n(38),BI=n(464),WI=n(66),VI=n(32),YI=n(175),zI=n(58),KI=n(95),QI=n(1316),JI=n(1673),XI=n(73);const ZI=(e,t,n)=>{if(0===n.length)return[];const[i,...a]=n,s=Object.assign(Object.assign(Object.assign({id:Object(o.uniqueId)(),policyId:i.policyId,status:i.status,policyInstanceId:i.policyInstanceId,scope:i.scope,duration:i.duration,stage:i.stage},i.condition?{condition:i.condition}:{}),i.error?{error:i.error}:{}),{output:Object.assign(Object.assign(Object.assign({},e),t),i.result)});return a.reduce((e,t)=>{const n=e[e.length-1];return[...e,Object.assign(Object.assign(Object.assign({id:Object(o.uniqueId)(),policyId:t.policyId,status:t.status,policyInstanceId:t.policyInstanceId,scope:t.scope,duration:t.duration},t.condition?{condition:t.condition}:{}),t.error?{error:t.error}:{}),{output:Object.assign(Object.assign({},n.output),t.result),stage:t.stage})]},[s])},e$=(e,t,n)=>{if(0===n.length)return[];const[i,...a]=n,s=Object.assign(Object.assign(Object.assign({id:Object(o.uniqueId)(),policyId:i.policyId,status:i.status,policyInstanceId:i.policyInstanceId,scope:i.scope,duration:i.duration},i.condition?{condition:i.condition}:{}),i.error?{error:i.error}:{}),{output:Object.assign(Object.assign(Object.assign({},e),t),i.result),stage:i.stage});return a.reduce((e,t)=>{const n=e[e.length-1];return[...e,Object.assign(Object.assign(Object.assign({id:Object(o.uniqueId)(),policyId:t.policyId,status:t.status,policyInstanceId:t.policyInstanceId,scope:t.scope,duration:t.duration},t.condition?{condition:t.condition}:{}),t.error?{error:t.error}:{}),{output:Object.assign(Object.assign({},n.output),t.result),stage:t.stage})]},[s])},t$=e=>"NO_TRANSFORMATION"!==e.status;var n$,i$=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},a$=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o$=function(e,t){return function(n,i){t(n,i,e)}};let s$=class{constructor(e,t){this.http=e,this.constants=t}debug(e,t){return e.proxy&&e.proxy.endpoints&&e.proxy.endpoints.forEach(e=>{!e.proxy||e.proxy.useSystemProxy||e.proxy.host&&e.proxy.port||delete e.proxy}),this.http.post(`${this.constants.env.baseURL}/apis/${e.id}/_debug`,{version:e.version,description:e.description,proxy:e.proxy,paths:e.paths,flows:e.flows,plans:e.plans,visibility:e.visibility,name:e.name,services:e.services,properties:e.properties,tags:e.tags,picture:e.picture,picture_url:e.picture_url,background:e.background,background_url:e.background_url,resources:e.resources,categories:e.categories,groups:e.groups,labels:e.labels,path_mappings:e.path_mappings,response_templates:e.response_templates,lifecycle_state:e.lifecycle_state,disable_membership_notifications:e.disable_membership_notifications,flow_mode:e.flow_mode,gravitee:e.gravitee,request:t})}};s$=i$([Object(nt.Injectable)({providedIn:"root"}),o$(1,Object(nt.Inject)("Constants")),a$("design:paramtypes",["function"==typeof(n$=void 0!==Tt.b&&Tt.b)?n$:Object,"function"!=typeof!1&&Object])],s$);var r$,l$=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},c$=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d$=function(e,t){return function(n,i){t(n,i,e)}};let p$=class{constructor(e,t){this.http=e,this.constants=t}findById(e,t){return this.http.get(`${this.constants.env.baseURL}/apis/${e}/events/${t}`)}};p$=l$([Object(nt.Injectable)({providedIn:"root"}),d$(1,Object(nt.Inject)("Constants")),c$("design:paramtypes",["function"==typeof(r$=void 0!==Tt.b&&Tt.b)?r$:Object,"function"!=typeof!1&&Object])],p$);var m$=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let u$=class{constructor(){this.apiDefinitionSubject=new $i.a(null)}reset(){this.apiDefinitionSubject=new $i.a(null)}emitApiDefinition(e){return this.apiDefinitionSubject.next(e)}getApiDefinition$(){return this.apiDefinitionSubject.pipe(Object(rt.a)(e=>!!e))}};u$=m$([Object(nt.Injectable)({providedIn:"root"})],u$);var h$,g$,f$,b$,v$,y$=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},S$=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let w$=class{constructor(e,t,n,i,a){this.apiService=e,this.policyStudioService=t,this.debugApiService=n,this.eventService=i,this.policyService=a}debug(e){const t=Object(Dw.a)(1e4).pipe(Object(Kt.a)(()=>({isLoading:!1,reachedTimeout:!0,executionMode:null,request:{},response:{},responsePolicyDebugSteps:[],backendResponse:{},requestPolicyDebugSteps:[],preprocessorStep:{},requestDebugSteps:{},responseDebugSteps:{}}))),n=this.sendDebugEvent(e).pipe(Object(st.a)(({apiId:e,debugEventId:t})=>Object(QI.a)(1e3).pipe(Object(st.a)(()=>this.getDebugEvent(e,t)))),Object(rt.a)(e=>"SUCCESS"===e.status),Object(XI.a)(1),Object(Kt.a)(e=>(e=>{var t,n,i,a,o,s,r,l;const c=e.payload.debugSteps.filter(t$),d=c&&c.length>0?ZI(null!==(t=e.payload.request)&&void 0!==t?t:{},null!==(n=e.payload.preprocessorStep)&&void 0!==n?n:{},c.filter(e=>"ON_REQUEST"===e.scope||"ON_REQUEST_CONTENT"===e.scope)):[],p={id:"request-input",status:void 0,duration:0,output:Object.assign(Object.assign({},e.payload.request),e.payload.preprocessorStep),stage:void 0},m=d.reduce((e,t)=>{const n="ERROR"!==e.status?t.status:e.status,i=e.duration+t.duration;return Object.assign(Object.assign({},e),{status:n,duration:i,output:Object.assign(Object.assign({},e.output),t.output)})},Object.assign(Object.assign({},p),{id:"request-output"})),u=d.length>0?{attributes:d[d.length-1].output.attributes,headers:d[d.length-1].output.headers}:e.payload.preprocessorStep,h=c&&c.length>0?e$(null!==(i=e.payload.backendResponse)&&void 0!==i?i:{},null!=u?u:{},c.filter(e=>"ON_RESPONSE"===e.scope||"ON_RESPONSE_CONTENT"===e.scope)):[],g={id:"response-input",status:void 0,duration:0,output:Object.assign({attributes:m.output.attributes},null!==(a=e.payload.backendResponse)&&void 0!==a?a:{}),stage:void 0},f=h.reduce((e,t)=>{const n="ERROR"!==e.status?t.status:e.status,i=e.duration+t.duration;return Object.assign(Object.assign({},e),{status:n,duration:i,output:Object.assign(Object.assign({},e.output),t.output)})},Object.assign(Object.assign({},g),{id:"response-output"}));return{isLoading:!1,executionMode:e.payload.execution_mode,response:null!==(o=e.payload.response)&&void 0!==o?o:{},request:null!==(s=e.payload.request)&&void 0!==s?s:{},backendResponse:null!==(r=e.payload.backendResponse)&&void 0!==r?r:{},preprocessorStep:null!==(l=e.payload.preprocessorStep)&&void 0!==l?l:{},requestPolicyDebugSteps:d,responsePolicyDebugSteps:h,requestDebugSteps:{input:p,output:m},responseDebugSteps:{input:g,output:f},metrics:e.payload.metrics}})(e)));return Object(JI.a)(t,n)}listPolicies(){return this.policyService.list({expandIcon:!0,withoutResource:!0})}sendDebugEvent(e){var t;const n=(null!==(t=e.headers)&&void 0!==t?t:[]).filter(e=>!!e.value).reduce((e,t)=>(e[t.key]=e[t.key]?[...e[t.key],t.value]:[t.value],e),{});return this.policyStudioService.getApiDefinition$().pipe(Object(st.a)(e=>this.apiService.get(e.id).pipe(Object(Kt.a)(t=>Object.assign(Object.assign({},t),e)))),Object(st.a)(t=>this.debugApiService.debug(t,Object.assign(Object.assign({},e),{headers:n})).pipe(Object(Kt.a)(e=>({apiId:t.id,debugEventId:e.id})))))}getDebugEvent(e,t){return this.eventService.findById(e,t).pipe(Object(rt.a)(e=>"DEBUG_API"===e.type),Object(Kt.a)(e=>({id:e.id,payload:JSON.parse(e.payload),status:"SUCCESS"===e.properties.api_debug_status?"SUCCESS":"FAILED"})))}};w$=y$([Object(nt.Injectable)({providedIn:"root"}),S$("design:paramtypes",["function"==typeof(h$=void 0!==hn&&hn)?h$:Object,"function"==typeof(g$=void 0!==u$&&u$)?g$:Object,"function"==typeof(f$=void 0!==s$&&s$)?f$:Object,"function"==typeof(b$=void 0!==p$&&p$)?b$:Object,"function"==typeof(v$=void 0!==Zt&&Zt)?v$:Object])],w$);var C$,I$,$$=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},A$=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let O$=class{constructor(e,t){this.policyStudioDebugService=e,this.snackBarService=t,this.unsubscribe$=new ct.a,this.cancelRequest$=new ct.a}ngOnInit(){this.policyStudioDebugService.listPolicies().pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(e=>{this.listPolicies=e})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onRequestSubmitted(e){this.debugResponse={isLoading:!0,executionMode:null,request:{},response:{},responsePolicyDebugSteps:[],backendResponse:{},preprocessorStep:{},requestPolicyDebugSteps:[],requestDebugSteps:{},responseDebugSteps:{}},this.policyStudioDebugService.debug(e).pipe(Object(at.a)(this.unsubscribe$),Object(at.a)(this.cancelRequest$),Object(lt.a)(()=>(this.snackBarService.error("Unable to try the request, please try again"),this.debugResponse={isLoading:!1,executionMode:null,request:{},response:{},responsePolicyDebugSteps:[],backendResponse:{},requestPolicyDebugSteps:[],preprocessorStep:{},requestDebugSteps:{},responseDebugSteps:{}},pt.a))).subscribe(e=>{this.debugResponse=e})}onRequestCancelled(){this.cancelRequest$.next(),this.debugResponse=null}};O$=$$([Object(nt.Component)({selector:"policy-studio-debug",template:n(1155),styles:[n(1156)]}),A$("design:paramtypes",["function"==typeof(C$=void 0!==w$&&w$)?C$:Object,"function"==typeof(I$=void 0!==on&&on)?I$:Object])],O$);n(1311);var T$,R$,_$,x$=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},L$=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},P$=function(e,t){return function(n,i){t(n,i,e)}};let N$=class{constructor(e,t,n,i){this.http=e,this.apiService=t,this.permissionService=n,this.constants=i}listPolicies(e){let t=new Tt.e;return e.expandSchema&&(t=t.append("expand","schema")),e.expandIcon&&(t=t.append("expand","icon")),e.withoutResource&&(t=t.set("withResource",!1)),this.http.get(this.constants.env.baseURL+"/policies",{params:t})}listSwaggerPolicies(){return this.http.get(this.constants.env.baseURL+"/policies/swagger")}getSchema(e){return this.http.get(`${this.constants.env.baseURL}/policies/${e}/schema`)}getDocumentation(e){return this.http.get(`${this.constants.env.baseURL}/policies/${e}/documentation`,{responseType:"text"}).pipe(Object(Kt.a)(e=>e.toString()))}getFlowSchemaForm(){return this.apiService.getFlowSchemaForm()}getSpelGrammar(){return this.http.get(this.constants.env.baseURL+"/configuration/spel/grammar")}listResources(e){let t=new Tt.e;return e.expandSchema&&(t=t.append("expand","schema")),e.expandIcon&&(t=t.append("expand","icon")),this.http.get(this.constants.env.baseURL+"/resources",{params:t})}};N$=x$([Object(nt.Injectable)({providedIn:"root"}),P$(3,Object(nt.Inject)("Constants")),L$("design:paramtypes",["function"==typeof(T$=void 0!==Tt.b&&Tt.b)?T$:Object,"function"==typeof(R$=void 0!==hn&&hn)?R$:Object,"function"==typeof(_$=void 0!==Yt&&Yt)?_$:Object,"function"!=typeof!1&&Object])],N$);var E$,D$,j$,k$,U$=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},M$=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},F$=function(e,t,n,i){return new(n||(n=Promise))((function(a,o){function s(e){try{l(i.next(e))}catch(e){o(e)}}function r(e){try{l(i.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,r)}l((i=i.apply(e,t||[])).next())}))};let q$=class{constructor(e,t,n,i){this.location=e,this.policyStudioService=t,this.policyStudioDesignService=n,this.permissionService=i,this.isReadonly=!1,this.readonlyPlans=!1,this.selectedFlowsIds=[],this.unsubscribe$=new ct.a}ngOnInit(){Object(Au.a)([this.policyStudioDesignService.getFlowSchemaForm(),this.policyStudioDesignService.listPolicies({expandSchema:!0,expandIcon:!0}),this.policyStudioService.getApiDefinition$(),this.policyStudioDesignService.listResources({expandSchema:!0,expandIcon:!0})]).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(([e,t,n,i])=>{this.apiFlowSchema=e,this.policies=t,this.apiDefinition=n,this.isReadonly="kubernetes"===n.origin,this.resourceTypes=i,this.permissionService.hasAnyMatching(["api-plan-u"])||(this.readonlyPlans=!0)})).subscribe();const{flowsIds:e}=this.parseUrl();this.selectedFlowsIds=[JSON.stringify(e)]}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onChange(e){return F$(this,void 0,void 0,(function*(){const{isDirty:t,errors:n,definition:i}=e.detail;t&&0===n&&null!=i&&(this.apiDefinition=i,this.policyStudioService.emitApiDefinition(this.apiDefinition))}))}onFlowSelectionChanged({flows:e}){this.updateUrl(Object.assign(Object.assign({},this.parseUrl()),{flowsIds:e}))}fetchPolicyDocumentation({policy:e}){this.policyStudioDesignService.getDocumentation(e.id).pipe(Object(ot.a)(t=>this.policyDocumentation={id:e.id,image:e.icon,content:t})).subscribe()}fetchSpelGrammar({currentTarget:e}){this.policyStudioDesignService.getSpelGrammar().pipe(Object(ot.a)(t=>e.grammar=t)).subscribe()}parseUrl(){const[e]=this.location.path(!0).split(/#(\w*)$/),[t,...n]=e.split("flows");return{path:t.replace("?",""),flowsIds:(null!=n?n:[]).map(e=>e.replace("=",""))}}updateUrl({path:e,flowsIds:t}){const n=(null!=t?t:[]).map(e=>"flows="+e).join("&"),i=n.length>0?"?"+n:"";this.location.go(`${e}${i}`)}get isLoading(){return null==this.apiDefinition}};q$=U$([Object(nt.Component)({selector:"policy-studio-design",template:n(1158),styles:[n(1159)]}),M$("design:paramtypes",["function"==typeof(E$=void 0!==ag.e&&ag.e)?E$:Object,"function"==typeof(D$=void 0!==u$&&u$)?D$:Object,"function"==typeof(j$=void 0!==N$&&N$)?j$:Object,"function"==typeof(k$=void 0!==Yt&&Yt)?k$:Object])],q$);var H$=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};const G$=[{id:"HTTP",name:"Custom (HTTP)",schema:{type:"object",properties:{method:{title:"HTTP Method",description:"HTTP method to invoke the endpoint.",type:"string",default:"GET",enum:["GET","POST","PUT","DELETE","PATCH","HEAD","CONNECT","OPTIONS","TRACE"]},url:{title:"Http service URL",description:"http://localhost",type:"string",pattern:"^(http://|https://)"},useSystemProxy:{title:"Use system proxy",description:"Use the system proxy configured by your administrator.",type:"boolean"},headers:{type:"array",title:"Request Headers",items:{type:"object",title:"Header",properties:{name:{title:"Name",type:"string"},value:{title:"Value",type:"string"}}}},body:{title:"Request body",type:"string","x-schema-form":{type:"codemirror",codemirrorOptions:{lineWrapping:!0,lineNumbers:!0,allowDropFileTypes:!0,autoCloseTags:!0}}},specification:{title:"Transformation (JOLT Specification)",type:"string","x-schema-form":{type:"codemirror",codemirrorOptions:{lineWrapping:!0,lineNumbers:!0,allowDropFileTypes:!0,autoCloseTags:!0,mode:"javascript"}},default:'[{\n  "operation": "default",\n  "spec": {}\n}]'}},required:["url","specification"]},documentation:'= Custom (HTTP)\n\n=== How to ?\n\n 1. Set `Polling frequency interval` and `Time unit`\n2. Set the `HTTP service URL`\n 3. If the HTTP service doesn\'t return the expected output, you will need to edit the link:https://github.com/bazaarvoice/jolt#Documentation[JOLT transformation] accordingly. \n\n[source, json]\n----\n[\n  {\n    "key": 1,\n    "value": "https://north-europe.company.com/"\n  },\n  {\n    "key": 2,\n    "value": "https://north-europe.company.com/"\n  },\n  {\n    "key": 3,\n    "value": "https://south-asia.company.com/"\n  }\n]\n----\n'}],B$=G$.reduce((e,t)=>(e[t.id]=t.name,e),{}),W$=Object.keys(B$),V$={properties:{enabled:{type:"boolean",title:"Enabled",description:" This service is requiring an API deployment. Do not forget to deploy API to start dynamic-properties service."},schedule:{type:"string",title:"Schedule","x-schema-form":{"cron-expression":!0},default:"0 */5 * * * *"},provider:{type:"string",title:"Provider type",enum:W$,default:W$[0],"x-schema-form":{titleMap:B$}}},required:["schedule","provider"]};let Y$=class{getProviders(){return Object(dt.a)(G$)}getDynamicPropertySchema(){return Object(dt.a)(V$)}};Y$=H$([Object(nt.Injectable)({providedIn:"root"})],Y$);var z$,K$,Q$,J$,X$,Z$,eA,tA=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},nA=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},iA=function(e,t){return function(n,i){t(n,i,e)}};let aA=class{constructor(e,t,n,i,a,o,s,r){this.policyStudioService=e,this.policyStudioPropertiesService=t,this.snackBarService=n,this.apiService=i,this.permissionService=a,this.ajsStateService=o,this.ajsStateParams=s,this.ajsRootScope=r,this.unsubscribe$=new ct.a,this.policyStudioMenu=[{label:"Design",uiSref:"design"},{label:"Configuration",uiSref:"config"},{label:"Properties",uiSref:"properties"},{label:"Resources",uiSref:"resources"},{label:"Debug",uiSref:"debug"}],this.activeLink=this.policyStudioMenu[0]}ngOnInit(){this.apiService.get(this.ajsStateParams.apiId).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(e=>{this.policyStudioService.emitApiDefinition(this.toApiDefinition(e))})).subscribe(),this.policyStudioService.getApiDefinition$().pipe(Object(at.a)(this.unsubscribe$)).subscribe(this.onDefinitionChange.bind(this))}onDefinitionChange(e){this.apiDefinition&&(this.isDirty=!0),this.apiDefinition=e}onSubmit(){return this.apiService.get(this.apiDefinition.id).pipe(Object(at.a)(this.unsubscribe$),Object(st.a)(e=>this.apiService.update(Object.assign(Object.assign({},e),this.apiDefinition))),Object(ot.a)(e=>{this.ajsRootScope.$broadcast("apiChangeSuccess",{api:e}),this.policyStudioService.emitApiDefinition(this.toApiDefinition(e)),this.isDirty=!1})).subscribe()}onReset(){this.policyStudioService.reset(),this.ajsStateService.reload()}toApiDefinition(e){const t=function(e){return{id:e.id,name:e.name,flows:e.flows,flow_mode:e.flow_mode,resources:e.resources,plans:e.plans,version:e.version,properties:e.properties,services:e.services,execution_mode:e.execution_mode,origin:e.definition_context.origin}}(e),n=e.plans&&this.permissionService.hasAnyMatching(["api-plan-r","api-plan-u"])?e.plans:[];return Object.assign(Object.assign({},t),{plans:n})}ngOnDestroy(){this.policyStudioService.reset(),this.unsubscribe$.next(),this.unsubscribe$.complete()}};aA=tA([Object(nt.Component)({selector:"gio-policy-studio-layout",template:n(1161),styles:[n(1162)]}),iA(5,Object(nt.Inject)(ut)),iA(6,Object(nt.Inject)(gt)),iA(7,Object(nt.Inject)(yt)),nA("design:paramtypes",["function"==typeof(z$=void 0!==u$&&u$)?z$:Object,"function"==typeof(K$=void 0!==Y$&&Y$)?K$:Object,"function"==typeof(Q$=void 0!==on&&on)?Q$:Object,"function"==typeof(J$=void 0!==hn&&hn)?J$:Object,"function"==typeof(X$=void 0!==Yt&&Yt)?X$:Object,"function"==typeof(Z$=void 0!==Bu.StateService&&Bu.StateService)?Z$:Object,"function"==typeof(eA=void 0!==Bu.StateParams&&Bu.StateParams)?eA:Object,Object])],aA);var oA,sA=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},rA=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let lA=class{constructor(e){this.flowService=e}getConfigurationSchemaForm(){return this.flowService.getConfigurationSchemaForm()}};lA=sA([Object(nt.Injectable)({providedIn:"root"}),rA("design:paramtypes",["function"==typeof(oA=void 0!==Lg&&Lg)?oA:Object])],lA);var cA,dA,pA=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},mA=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},uA=function(e,t){return function(n,i){t(n,i,e)}};let hA=class{constructor(e,t,n){this.policyStudioService=e,this.policyStudioSettingsService=t,this.constants=n,this.unsubscribe$=new ct.a,this.information='By default, the selection of a flow is based on the operator defined in the flow itself.\n  <br/>This operator allows either to select a flow when the path matches exactly, or when the start of the path matches.\n  <br/>The "Best match" option allows you to select the flow from the path that is closest.',this.isReadonly=!1,this.displayJupiterToggle=!1}get isLoading(){return null==this.apiDefinition}ngOnInit(){var e,t,n,i;this.displayJupiterToggle=null!==(i=null===(n=null===(t=null===(e=this.constants.org)||void 0===e?void 0:e.settings)||void 0===t?void 0:t.jupiterMode)||void 0===n?void 0:n.enabled)&&void 0!==i&&i,Object(Au.a)([this.policyStudioService.getApiDefinition$(),this.policyStudioSettingsService.getConfigurationSchemaForm()]).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(([e,t])=>{this.apiDefinition=e,this.schema=t,this.isReadonly="kubernetes"===e.origin})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onChange(e){this.apiDefinition=Object.assign(Object.assign({},this.apiDefinition),e.detail.values),this.policyStudioService.emitApiDefinition(this.apiDefinition)}toggleJupiterMode(e){this.apiDefinition=Object.assign(Object.assign({},this.apiDefinition),{execution_mode:e.checked?"jupiter":"v3"}),this.policyStudioService.emitApiDefinition(this.apiDefinition)}};hA=pA([Object(nt.Component)({selector:"policy-studio-config",template:n(1164),styles:[n(1165)]}),uA(2,Object(nt.Inject)("Constants")),mA("design:paramtypes",["function"==typeof(cA=void 0!==u$&&u$)?cA:Object,"function"==typeof(dA=void 0!==lA&&lA)?dA:Object,"function"!=typeof!1&&Object])],hA);n(1167);var gA,fA,bA=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},vA=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let yA=class{constructor(e,t){this.policyStudioService=e,this.policyStudioPropertiesService=t,this.unsubscribe$=new ct.a,this.isReadonly=!1}ngOnInit(){Object(Au.a)([this.policyStudioService.getApiDefinition$(),this.policyStudioPropertiesService.getProviders(),this.policyStudioPropertiesService.getDynamicPropertySchema()]).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(([e,t,n])=>{this.apiDefinition=e,this.provider=e.services["dynamic-property"],this.providers=t,this.dynamicPropertySchema=n,this.isReadonly="kubernetes"===e.origin})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onChange(e){this.apiDefinition.properties=e.detail.properties,this.policyStudioService.emitApiDefinition(this.apiDefinition)}onSaveProvider(e){const{provider:t}=e.detail;this.apiDefinition.services["dynamic-property"]=t,this.policyStudioService.emitApiDefinition(this.apiDefinition)}get isLoading(){return null==this.apiDefinition}};yA=bA([Object(nt.Component)({selector:"policy-studio-properties",template:n(1168),styles:[n(1169)]}),vA("design:paramtypes",["function"==typeof(gA=void 0!==u$&&u$)?gA:Object,"function"==typeof(fA=void 0!==Y$&&Y$)?fA:Object])],yA);n(1171);var SA,wA=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},CA=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},IA=function(e,t){return function(n,i){t(n,i,e)}};let $A=class{constructor(e,t){this.http=e,this.constants=t}listResources(e){let t=new Tt.e;return e.expandSchema&&(t=t.append("expand","schema")),e.expandIcon&&(t=t.append("expand","icon")),this.http.get(this.constants.env.baseURL+"/resources",{params:t})}};$A=wA([Object(nt.Injectable)({providedIn:"root"}),IA(1,Object(nt.Inject)("Constants")),CA("design:paramtypes",["function"==typeof(SA=void 0!==Tt.b&&Tt.b)?SA:Object,"function"!=typeof!1&&Object])],$A);var AA,OA,TA=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},RA=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let _A=class{constructor(e,t){this.policyStudioService=e,this.policyStudioResourcesService=t,this.unsubscribe$=new ct.a,this.isReadonly=!1}ngOnInit(){Object(Au.a)([this.policyStudioService.getApiDefinition$(),this.policyStudioResourcesService.listResources({expandSchema:!0,expandIcon:!0})]).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(([e,t])=>{this.apiDefinition=e,this.isReadonly="kubernetes"===e.origin||null,this.resourceTypes=t})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onChange(e){this.apiDefinition.resources=e.detail.resources,this.policyStudioService.emitApiDefinition(this.apiDefinition)}get isLoading(){return null==this.apiDefinition}};_A=TA([Object(nt.Component)({selector:"policy-studio-resources",template:n(1172),styles:[n(1173)]}),RA("design:paramtypes",["function"==typeof(AA=void 0!==u$&&u$)?AA:Object,"function"==typeof(OA=void 0!==$A&&$A)?OA:Object])],_A);var xA=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let LA=class{};LA=xA([Object(nt.NgModule)({imports:[ag.b],declarations:[q$],exports:[q$],schemas:[nt.CUSTOM_ELEMENTS_SCHEMA]})],LA);var PA=n(35),NA=n(29),EA=n(37),DA=n(45),jA=n(56),kA=n(159),UA=n(67),MA=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},FA=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let qA=class{ngOnChanges(e){if(e.input)try{this.formattedInput=JSON.stringify(JSON.parse(e.input.currentValue),null,2)}catch(t){this.formattedInput=e.input.currentValue}if(e.output)try{this.formattedOutput=JSON.stringify(JSON.parse(e.output.currentValue),null,2)}catch(t){this.formattedOutput=e.output.currentValue}}};MA([Object(nt.Input)(),FA("design:type",String)],qA.prototype,"input",void 0),MA([Object(nt.Input)(),FA("design:type",String)],qA.prototype,"output",void 0),qA=MA([Object(nt.Component)({selector:"policy-studio-debug-inspector-body",template:n(1175),styles:[n(1176)]})],qA);var HA=n(53),GA=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},BA=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};const WA={parameters:{name:"Query params",type:"table"},pathParameters:{name:"Path params",type:"table"},method:{name:"Method",type:"text"},path:{name:"Path",type:"text"},contextPath:{name:"Context path",type:"text"}},VA=["props","headers","attributes","body"],YA={headers:{name:"HTTP headers",type:"table"},body:{name:"HTTP body",type:"body"},attributes:{name:"Attributes",type:"table"}};function zA(e,t){return!e&&t?"added":e&&!t?"deleted":e&&t&&e!==t?"updated":void 0}let KA=class{constructor(){this.transformer=(e,t)=>Object.assign(Object.assign({},e),{expandable:!!e.children&&e.children.length>0,level:t}),this.treeControl=new HA.j(e=>e.level,e=>e.expandable),this.errorsTreeControl=new HA.j(e=>e.level,e=>e.expandable),this.conditionTreeControl=new HA.j(e=>e.level,e=>e.expandable),this.treeFlattener=new kA.b(this.transformer,e=>e.level,e=>e.expandable,e=>e.children),this.dataSource=new kA.a(this.treeControl,this.treeFlattener),this.errorsDataSource=new kA.a(this.errorsTreeControl,this.treeFlattener),this.conditionDataSource=new kA.a(this.conditionTreeControl,this.treeFlattener),this.hasChild=(e,t)=>t.expandable}ngOnChanges(e){if(e.inputDebugStep||e.outputDebugStep){const{treeNodes:e,errorTreeNodes:t,conditionNode:n}=this.buildTreeNodes();this.dataSource.data=e,this.errorsDataSource.data=t,this.conditionDataSource.data=n?[n]:[],this.conditionTreeControl.expandAll(),t.length>0?this.errorsTreeControl.expandAll():"SKIPPED"!==this.executionStatus&&this.treeControl.expandAll()}}toErrorNode(e){return{type:"error",input:e}}toConditionNode(){return{id:"condition",name:"Condition",type:void 0,children:[{input:this.outputDebugStep.condition,output:this.executionStatus}]}}toNode(e,t){const{name:n,type:i}=e[t];return{id:t,name:n,type:void 0,children:[{name:n,type:i,input:this.inputDebugStep.output[t],output:this.outputDebugStep.output[t]}]}}buildTreeNodes(){const e=[...new Set(Object.keys(this.inputDebugStep.output).concat(Object.keys(this.outputDebugStep.output)))],t=e.filter(e=>null!=WA[e]).sort(this.sort).map(e=>this.toNode(WA,e)),n=e.filter(e=>null!=YA[e]).map(e=>this.toNode(YA,e));t.length>0&&n.push({id:"props",name:"HTTP properties",type:void 0,children:t});const i=this.outputDebugStep.error,a=[];i&&a.push({name:"Errors",type:"error",children:[this.toErrorNode(i)]});const o=this.outputDebugStep.condition?this.toConditionNode():void 0;return{treeNodes:n.sort((e,t)=>VA.indexOf(e.id)-VA.indexOf(t.id)),errorTreeNodes:a,conditionNode:o}}sort(e,t){return e.toLowerCase().localeCompare(t.toLowerCase())}};GA([Object(nt.Input)(),BA("design:type",Object)],KA.prototype,"inputDebugStep",void 0),GA([Object(nt.Input)(),BA("design:type",Object)],KA.prototype,"outputDebugStep",void 0),GA([Object(nt.Input)(),BA("design:type",String)],KA.prototype,"executionStatus",void 0),KA=GA([Object(nt.Component)({selector:"policy-studio-debug-inspector",template:n(1178),styles:[n(1179)]})],KA);var QA=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},JA=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let XA=class{};QA([Object(nt.Input)(),JA("design:type","function"!=typeof!1&&Object)],XA.prototype,"error",void 0),XA=QA([Object(nt.Component)({selector:"policy-studio-debug-inspector-error",template:n(1181),styles:[n(1182)]})],XA);var ZA,eO,tO=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},nO=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let iO=class{ngOnChanges(e){(e.input||e.output)&&(this.rowItems=this.buildRowItems())}buildRowItems(){const e=this.input||{},t=this.output||{};return[...new Set(Object.keys(e).concat(Object.keys(t)))].sort((e,t)=>e.toLowerCase().localeCompare(t.toLowerCase())).map(n=>{var i,a;const o=(null!==(i=e[n])&&void 0!==i?i:"").toString(),s=(null!==(a=t[n])&&void 0!==a?a:"").toString();return{key:n,inputValue:o,outputValue:s,diffClass:zA(o,s)}})}};tO([Object(nt.Input)(),nO("design:type",String)],iO.prototype,"name",void 0),tO([Object(nt.Input)(),nO("design:type","function"==typeof(ZA="undefined"!=typeof Record&&Record)?ZA:Object)],iO.prototype,"input",void 0),tO([Object(nt.Input)(),nO("design:type","function"==typeof(eO="undefined"!=typeof Record&&Record)?eO:Object)],iO.prototype,"output",void 0),iO=tO([Object(nt.Component)({selector:"policy-studio-debug-inspector-table",template:n(1184),styles:[n(1185)]})],iO);var aO=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},oO=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let sO=class{constructor(){this.debugInProgress=!1,this.requestSubmitted=new nt.EventEmitter,this.cancelSubmitted=new nt.EventEmitter,this.httpMethods=Rm,this.unsubscribe$=new ct.a}ngOnInit(){this.requestFormGroup=new ln.i({method:new ln.g(this.httpMethods[0]),path:new ln.g("/"),headers:new ln.g([]),body:new ln.g("")})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}onBodyChange(e){this.requestFormGroup.get("body").setValue(null!=e?e:"")}onSendRequest(){this.requestSubmitted.emit(this.requestFormGroup.value)}onCancelClick(){this.cancelSubmitted.emit()}};aO([Object(nt.Input)(),oO("design:type",Object)],sO.prototype,"debugInProgress",void 0),aO([Object(nt.Output)(),oO("design:type",Object)],sO.prototype,"requestSubmitted",void 0),aO([Object(nt.Output)(),oO("design:type",Object)],sO.prototype,"cancelSubmitted",void 0),sO=aO([Object(nt.Component)({selector:"policy-studio-debug-request",template:n(1187),styles:[n(1188)]})],sO);const rO={100:{description:"Continue",constant:"CONTINUE"},101:{description:"Switching Protocols",constant:"SWITCHING_PROTOCOLS"},102:{description:"Processing",constant:"PROCESSING"},200:{description:"OK",constant:"OK"},201:{description:"Created",constant:"CREATED"},202:{description:"Accepted",constant:"ACCEPTED"},203:{description:"Non Authoritative Information",constant:"NON_AUTHORITATIVE_INFORMATION"},204:{description:"No Content",constant:"NO_CONTENT"},205:{description:"Reset Content",constant:"RESET_CONTENT"},206:{description:"Partial Content",constant:"PARTIAL_CONTENT"},207:{description:"Multi-Status",constant:"MULTI_STATUS"},300:{description:"Multiple Choices",constant:"MULTIPLE_CHOICES"},301:{description:"Moved Permanently",constant:"MOVED_PERMANENTLY"},302:{description:"Moved Temporarily",constant:"MOVED_TEMPORARILY"},303:{description:"See Other",constant:"SEE_OTHER"},304:{description:"Not Modified",constant:"NOT_MODIFIED"},305:{description:"Use Proxy",constant:"USE_PROXY"},307:{description:"Temporary Redirect",constant:"TEMPORARY_REDIRECT"},308:{description:"Permanent Redirect",constant:"PERMANENT_REDIRECT"},400:{description:"Bad Request",constant:"BAD_REQUEST"},401:{description:"Unauthorized",constant:"UNAUTHORIZED"},402:{description:"Payment Required",constant:"PAYMENT_REQUIRED"},403:{description:"Forbidden",constant:"FORBIDDEN"},404:{description:"Not Found",constant:"NOT_FOUND"},405:{description:"Method Not Allowed",constant:"METHOD_NOT_ALLOWED"},406:{description:"Not Acceptable",constant:"NOT_ACCEPTABLE"},407:{description:"Proxy Authentication Required",constant:"PROXY_AUTHENTICATION_REQUIRED"},408:{description:"Request Timeout",constant:"REQUEST_TIMEOUT"},409:{description:"Conflict",constant:"CONFLICT"},410:{description:"Gone",constant:"GONE"},411:{description:"Length Required",constant:"LENGTH_REQUIRED"},412:{description:"Precondition Failed",constant:"PRECONDITION_FAILED"},413:{description:"Request Entity Too Large",constant:"REQUEST_ENTITY_TOO_LARGE"},414:{description:"Request-URI Too Long",constant:"REQUEST_URI_TOO_LONG"},415:{description:"Unsupported Media Type",constant:"UNSUPPORTED_MEDIA_TYPE"},416:{description:"Requested Range Not Satisfiable",constant:"REQUESTED_RANGE_NOT_SATISFIABLE"},417:{description:"Expectation Failed",constant:"EXPECTATION_FAILED"},418:{description:"I'm a teapot",constant:"I'M_A_TEAPOT"},419:{description:"Insufficient Space on Resource",constant:"INSUFFICIENT_SPACE_ON_RESOURCE"},420:{description:"Method Failure",constant:"METHOD_FAILURE"},422:{description:"Unprocessable Entity",constant:"UNPROCESSABLE_ENTITY"},423:{description:"Locked",constant:"LOCKED"},424:{description:"Failed Dependency",constant:"FAILED_DEPENDENCY"},428:{description:"Precondition Required",constant:"PRECONDITION_REQUIRED"},429:{description:"Too Many Requests",constant:"TOO_MANY_REQUESTS"},431:{description:"Request Header Fields Too Large",constant:"REQUEST_HEADER_FIELDS_TOO_LARGE"},451:{description:"Unavailable For Legal Reasons",constant:"UNAVAILABLE_FOR_LEGAL_REASONS"},500:{description:"Internal Server Error",constant:"INTERNAL_SERVER_ERROR"},501:{description:"Not Implemented",constant:"NOT_IMPLEMENTED"},502:{description:"Bad Gateway",constant:"BAD_GATEWAY"},503:{description:"Service Unavailable",constant:"SERVICE_UNAVAILABLE"},504:{description:"Gateway Timeout",constant:"GATEWAY_TIMEOUT"},505:{description:"HTTP Version Not Supported",constant:"HTTP_VERSION_NOT_SUPPORTED"},507:{description:"Insufficient Storage",constant:"INSUFFICIENT_STORAGE"},511:{description:"Network Authentication Required",constant:"NETWORK_AUTHENTICATION_REQUIRED"}};var lO,cO=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},dO=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let pO=class{constructor(e){this.titleCasePipe=e}ngOnChanges(){var e,t,n,i,a,o,s,r,l,c;this.responseDisplayableVM=void 0,this.inspectorVM=void 0,this.debugResponse&&!this.debugResponse.isLoading&&(this.responseDisplayableVM={statusCode:null===(e=this.debugResponse.response)||void 0===e?void 0:e.statusCode,statusCodeDescription:(null===(t=this.debugResponse.response)||void 0===t?void 0:t.statusCode)?rO[this.debugResponse.response.statusCode].description:"",successfulRequest:200<=(null===(n=this.debugResponse.response)||void 0===n?void 0:n.statusCode)&&(null===(i=this.debugResponse.response)||void 0===i?void 0:i.statusCode)<300,errorRequest:400<=(null===(a=this.debugResponse.response)||void 0===a?void 0:a.statusCode)&&(null===(o=this.debugResponse.response)||void 0===o?void 0:o.statusCode)<600,timelineSteps:this.toTimelineSteps(this.debugResponse),methodBadgeCSSClass:null!==(c="gio-method-badge-"+(null===(l=null===(r=null===(s=this.debugResponse)||void 0===s?void 0:s.request)||void 0===r?void 0:r.method)||void 0===l?void 0:l.toLowerCase()))&&void 0!==c?c:""})}onSelectTimelineStepOverview(e){document.getElementById("card_"+e.id).scrollIntoView({behavior:"smooth",block:"center",inline:"center"}),this.onSelectTimelineStep(e)}onSelectTimelineStep(e){switch(e.mode){case"POLICY_REQUEST":case"POLICY_RESPONSE":this.onSelectPolicy(e);break;case"REQUEST_INPUT":case"REQUEST_OUTPUT":this.onSelectInputOutput(e,"REQUEST");break;case"RESPONSE_INPUT":case"RESPONSE_OUTPUT":this.onSelectInputOutput(e,"RESPONSE");break;case"CLIENT_APP_REQUEST":case"CLIENT_APP_RESPONSE":this.onSelectClientApp()}}toTimelineSteps(e){return[{id:"requestClientApp",mode:"CLIENT_APP_REQUEST",selection:"none"},{id:"requestInput",mode:"REQUEST_INPUT",selection:"none"},...e.requestPolicyDebugSteps.map(t=>{var n,i;const a=null===(n=this.listPolicies)||void 0===n?void 0:n.find(e=>e.id===t.policyId);return{executionTime:t.duration,executionStatus:t.status,policyName:null!==(i=null==a?void 0:a.name)&&void 0!==i?i:this.titleCasePipe.transform(t.policyId.replace(/[_-]/g," ")),mode:"POLICY_REQUEST",icon:null==a?void 0:a.icon,scopeLabel:"jupiter"===e.executionMode?null:mO(t.scope),id:t.id,selection:"none",stage:t.stage,condition:t.condition}}),{id:"requestOutput",mode:"REQUEST_OUTPUT",selection:"none"},{id:"backendTarget",mode:"BACKEND_TARGET",selection:"none"},{id:"responseInput",mode:"RESPONSE_INPUT",selection:"none"},...e.responsePolicyDebugSteps.map(t=>{var n,i;const a=null===(n=this.listPolicies)||void 0===n?void 0:n.find(e=>e.id===t.policyId);return{executionTime:t.duration,executionStatus:t.status,policyName:null!==(i=null==a?void 0:a.name)&&void 0!==i?i:t.policyId,mode:"POLICY_RESPONSE",icon:null==a?void 0:a.icon,scopeLabel:"jupiter"===e.executionMode?null:mO(t.scope),id:t.id,selection:"none",stage:t.stage,condition:t.condition}}),{id:"responseOutput",mode:"RESPONSE_OUTPUT",selection:"none"},{id:"responseClientApp",mode:"CLIENT_APP_RESPONSE",selection:"none"}]}onSelectPolicy(e){if("POLICY_REQUEST"===e.mode){const t=this.debugResponse.requestPolicyDebugSteps,n=t.findIndex(t=>t.id===e.id),i=t[n],a=n>0?t[n-1]:this.debugResponse.requestDebugSteps.input;this.inspectorVM={input:a,output:i,executionStatus:e.executionStatus}}else if("POLICY_RESPONSE"===e.mode){const t=this.debugResponse.responsePolicyDebugSteps,n=t.findIndex(t=>t.id===e.id),i=t[n],a=n>0?t[n-1]:this.debugResponse.responseDebugSteps.input;this.inspectorVM={input:a,output:i,executionStatus:e.executionStatus}}this.responseDisplayableVM=Object.assign(Object.assign({},this.responseDisplayableVM),{timelineSteps:this.responseDisplayableVM.timelineSteps.map(t=>Object.assign(Object.assign({},t),{selection:t.id===e.id?"single":"none"}))})}onSelectInputOutput(e,t){const n={[t+"_INPUT"]:"start",["POLICY_"+t]:"content",[t+"_OUTPUT"]:"end"};this.responseDisplayableVM=Object.assign(Object.assign({},this.responseDisplayableVM),{timelineSteps:this.responseDisplayableVM.timelineSteps.map(e=>{var t;return Object.assign(Object.assign({},e),{selection:uO(e)?"none":null!==(t=n[e.mode])&&void 0!==t?t:"none"})})}),"REQUEST"===t?this.inspectorVM=Object.assign({},this.debugResponse.requestDebugSteps):"RESPONSE"===t&&(this.inspectorVM=Object.assign({},this.debugResponse.responseDebugSteps))}onSelectClientApp(){const e={CLIENT_APP_REQUEST:"start",CLIENT_APP_RESPONSE:"end"};this.responseDisplayableVM=Object.assign(Object.assign({},this.responseDisplayableVM),{timelineSteps:this.responseDisplayableVM.timelineSteps.map(t=>{var n;return Object.assign(Object.assign({},t),{selection:uO(t)?"none":null!==(n=e[t.mode])&&void 0!==n?n:"content"})})}),this.inspectorVM={input:this.debugResponse.requestDebugSteps.input,output:this.debugResponse.responseDebugSteps.output}}};cO([Object(nt.Input)(),dO("design:type","function"!=typeof!1&&Object)],pO.prototype,"debugResponse",void 0),cO([Object(nt.Input)(),dO("design:type",Array)],pO.prototype,"listPolicies",void 0),pO=cO([Object(nt.Component)({selector:"policy-studio-debug-response",template:n(1190),styles:[n(1191)]}),dO("design:paramtypes",["function"==typeof(lO=void 0!==ag.p&&ag.p)?lO:Object])],pO);const mO=e=>{switch(e){case"ON_REQUEST":case"ON_RESPONSE":return"Header";case"ON_REQUEST_CONTENT":case"ON_RESPONSE_CONTENT":return"Body"}},uO=e=>("POLICY_REQUEST"===e.mode||"POLICY_RESPONSE"===e.mode)&&"SKIPPED"===e.executionStatus;var hO,gO,fO=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},bO=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let vO=class{constructor(e,t){this.sanitizer=e,this.titleCasePipe=t,this.timelineCardVM={clickable:!1,selection:"none"}}ngOnChanges(){this.timelineStep&&(this.timelineCardVM=this.toTimelineCardVM(this.timelineStep))}toTimelineCardVM(e){switch(e.mode){case"CLIENT_APP_REQUEST":case"CLIENT_APP_RESPONSE":return{icon:"gio:smartphone-device",title:"Client APP",color:"green",clickable:!0,selection:e.selection};case"BACKEND_TARGET":return{icon:"gio:server",title:"Backend Target",color:"green",clickable:!1,selection:e.selection};case"REQUEST_INPUT":return{icon:"gio:nav-arrow-right",title:"Request Input",color:"blue",clickable:!0,selection:e.selection};case"REQUEST_OUTPUT":return{icon:"gio:nav-arrow-right",title:"Request Output",color:"blue",clickable:!0,selection:e.selection};case"POLICY_REQUEST":case"POLICY_RESPONSE":return{iconUrl:e.icon?this.sanitizer.bypassSecurityTrustUrl(e.icon):void 0,headerLabel:`${this.titleCasePipe.transform(e.stage)}${e.scopeLabel?" > "+e.scopeLabel:""}`,title:e.policyName,color:"default",executionTime:e.executionTime/1e6,stage:e.stage,rightIcon:"ERROR"===e.executionStatus?"gio:warning-circled-outline":"SKIPPED"===e.executionStatus?"gio:prohibition":void 0,id:e.id,clickable:!0,selection:e.selection,condition:e.condition};case"RESPONSE_INPUT":return{icon:"gio:nav-arrow-right",title:"Response Input",color:"blue",clickable:!0,selection:e.selection};case"RESPONSE_OUTPUT":return{icon:"gio:nav-arrow-right",title:"Response Output",color:"blue",clickable:!0,selection:e.selection}}}};fO([Object(nt.Input)(),bO("design:type",Object)],vO.prototype,"timelineStep",void 0),vO=fO([Object(nt.Component)({selector:"policy-studio-debug-timeline-card",template:n(1193),styles:[n(1194)]}),bO("design:paramtypes",["function"==typeof(hO=void 0!==WI.b&&WI.b)?hO:Object,"function"==typeof(gO=void 0!==ag.p&&ag.p)?gO:Object])],vO);var yO,SO=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},wO=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let CO=class{constructor(){this.scrollHorizontally=e=>{e.preventDefault(),this.horizontalScroll.nativeElement.scrollLeft+=e.deltaY+e.deltaX}}ngAfterViewInit(){this.horizontalScroll.nativeElement.addEventListener("wheel",this.scrollHorizontally)}ngOnDestroy(){this.horizontalScroll.nativeElement.removeEventListener("wheel",this.scrollHorizontally)}};SO([Object(nt.Input)(),wO("design:type",Number)],CO.prototype,"nbPoliciesRequest",void 0),SO([Object(nt.Input)(),wO("design:type",Number)],CO.prototype,"nbPoliciesResponse",void 0),SO([Object(nt.Input)(),wO("design:type","function"!=typeof!1&&Object)],CO.prototype,"metrics",void 0),SO([Object(nt.ViewChild)("horizontalScroll",{static:!1}),wO("design:type","function"==typeof(yO=void 0!==nt.ElementRef&&nt.ElementRef)?yO:Object)],CO.prototype,"horizontalScroll",void 0),CO=SO([Object(nt.Component)({selector:"policy-studio-debug-timeline",template:n(1196),styles:[n(1197)]})],CO);var IO=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let $O=class{};$O=IO([Object(nt.Component)({selector:"policy-studio-debug-timeline-legend",template:n(1199),styles:[n(1200)]})],$O);var AO=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},OO=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let TO=class{constructor(){this.noDiff=!1}ngOnChanges(e){this.noDiff||!e.input&&!e.output||(this.diffClass=zA(this.input,this.output))}};AO([Object(nt.Input)(),OO("design:type",String)],TO.prototype,"name",void 0),AO([Object(nt.Input)(),OO("design:type",String)],TO.prototype,"input",void 0),AO([Object(nt.Input)(),OO("design:type",String)],TO.prototype,"output",void 0),AO([Object(nt.Input)(),OO("design:type",Object)],TO.prototype,"noDiff",void 0),TO=AO([Object(nt.Component)({selector:"policy-studio-debug-inspector-text",template:n(1202),styles:[n(1203)]})],TO);var RO=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},_O=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let xO=class{constructor(){this.selected=new nt.EventEmitter}};RO([Object(nt.Input)(),_O("design:type",Array)],xO.prototype,"timelineSteps",void 0),RO([Object(nt.Output)(),_O("design:type",Object)],xO.prototype,"selected",void 0),xO=RO([Object(nt.Component)({selector:"policy-studio-debug-timeline-overview",template:n(1205),styles:[n(1206)]})],xO);var LO=n(1674),PO=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let NO=class{constructor(){this.hoveredMap$=new ct.a}setHover(e,t){this.hoveredMap$.next({[e]:t})}hoveredChanges(e){return this.hoveredMap$.pipe(Object(LO.a)((e,t)=>Object.assign({},e,t),{}),Object(Kt.a)(t=>{var n;return null!==(n=t[e])&&void 0!==n&&n}))}};NO=PO([Object(nt.Injectable)({providedIn:"root"})],NO);var EO,DO,jO,kO=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},UO=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let MO=class{constructor(e,t,n){this.renderer=e,this.hostElement=t,this.policyStudioDebugTimelineHoverService=n,this.unsubscribe$=new ct.a}ngOnInit(){this.timelineHover&&this.policyStudioDebugTimelineHoverService.hoveredChanges(this.timelineHover).pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{e?this.renderer.addClass(this.hostElement.nativeElement,"hover"):this.renderer.removeClass(this.hostElement.nativeElement,"hover")})}ngOnDestroy(){this.unsubscribe$.next(),this.unsubscribe$.unsubscribe()}onMouseEnter(){this.timelineHover&&this.policyStudioDebugTimelineHoverService.setHover(this.timelineHover,!0)}onMouseLeave(){this.timelineHover&&this.policyStudioDebugTimelineHoverService.setHover(this.timelineHover,!1)}};kO([Object(nt.Input)(),UO("design:type",String)],MO.prototype,"timelineHover",void 0),kO([Object(nt.HostListener)("mouseenter"),UO("design:type",Function),UO("design:paramtypes",[]),UO("design:returntype",void 0)],MO.prototype,"onMouseEnter",null),kO([Object(nt.HostListener)("mouseleave"),UO("design:type",Function),UO("design:paramtypes",[]),UO("design:returntype",void 0)],MO.prototype,"onMouseLeave",null),MO=kO([Object(nt.Directive)({selector:"[timelineHover]"}),UO("design:paramtypes",["function"==typeof(EO=void 0!==nt.Renderer2&&nt.Renderer2)?EO:Object,"function"==typeof(DO=void 0!==nt.ElementRef&&nt.ElementRef)?DO:Object,"function"==typeof(jO=void 0!==NO&&NO)?jO:Object])],MO);var FO,qO=n(237),HO=n(465),GO=n(267),BO=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},WO=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let VO=class{constructor(e){this.sanitizer=e,this.outputFormat="side-by-side",this.hasChanges=!0,this.gvCodeOptions={lineWrapping:!0,lineNumbers:!0}}ngOnChanges(e){(this.propHasChanged(e.left)||this.propHasChanged(e.right))&&this.computeDiff()}computeDiff(){const e=GO.createPatch(" ",this.left,this.right);if(this.hasChanges=!!GO.parsePatch(e).some(e=>e.hunks.length),this.hasChanges||(this.outputFormat="raw"),"raw"===this.outputFormat);else{const t=HO.a(e,{drawFileList:!1,matching:"lines",outputFormat:this.outputFormat,renderNothingWhenEmpty:!0});this.diffHTML=this.sanitizer.bypassSecurityTrustHtml(t)}}propHasChanged(e){return e&&e.currentValue!==e.previousValue}};BO([Object(nt.Input)(),WO("design:type",String)],VO.prototype,"left",void 0),BO([Object(nt.Input)(),WO("design:type",String)],VO.prototype,"right",void 0),VO=BO([Object(nt.Component)({selector:"gio-diff",template:n(1210),styles:[n(1211)],encapsulation:nt.ViewEncapsulation.None}),WO("design:paramtypes",["function"==typeof(FO=void 0!==WI.b&&WI.b)?FO:Object])],VO);var YO=n(4),zO=n(460),KO=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},QO=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};class JO{constructor(){this.tooltipMessage="Copy to clipboard",this.tooltipHideDelay=0,this.clicked=!1,this.alwaysVisible=!1}onCopied(e,t){t.message=e?"Copied!":"Failed to copy!",t.hideDelay=2e3,t.show(),this.clicked=!0,setTimeout(()=>{t.hide()},2e3),setTimeout(()=>{this.clicked=!1,t.message=this.tooltipMessage,t.hideDelay=this.tooltipHideDelay},2500)}}KO([Object(nt.Input)(),QO("design:type",String)],JO.prototype,"contentToCopy",void 0),KO([Object(nt.Input)(),QO("design:type",Object)],JO.prototype,"alwaysVisible",void 0);var XO=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let ZO=class extends JO{};ZO=XO([Object(nt.Component)({selector:"[gioClipboardCopyWrapper]",styles:[n(1214)],template:'\n    <ng-content></ng-content>\n    <span\n      #tooltip="matTooltip"\n      class="right"\n      [class.clicked]="clicked"\n      [class.always-visible]="alwaysVisible"\n      [cdkCopyToClipboard]="contentToCopy"\n      (cdkCopyToClipboardCopied)="onCopied($event, tooltip)"\n      matRipple\n      [matRippleCentered]="true"\n      [matRippleUnbounded]="true"\n      [matTooltip]="tooltipMessage"\n      [matTooltipPosition]="\'after\'"\n    >\n      <mat-icon [inline]="true">{{ clicked ? \'check\' : \'content_copy\' }}</mat-icon>\n    </span>\n  '})],ZO);var eT=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let tT=class extends JO{};tT=eT([Object(nt.Component)({selector:"gio-clipboard-copy-icon",styles:[n(1216)],template:'\n    <mat-icon\n      #tooltip="matTooltip"\n      class="icon"\n      [class.clicked]="clicked"\n      [cdkCopyToClipboard]="contentToCopy"\n      (cdkCopyToClipboardCopied)="onCopied($event, tooltip)"\n      matRipple\n      [matRippleCentered]="true"\n      [matRippleUnbounded]="true"\n      [matTooltip]="tooltipMessage"\n      [matTooltipPosition]="\'after\'"\n      >{{ clicked ? \'check\' : \'content_copy\' }}</mat-icon\n    >\n  '})],tT);var nT=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let iT=class{};iT=nT([Object(nt.NgModule)({imports:[ag.b,EA.b,UA.b,YO.s,zO.a],declarations:[ZO,tT],exports:[ZO,tT]})],iT);var aT=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let oT=class{};oT=aT([Object(nt.NgModule)({imports:[ag.b,ln.l,qO.a,iT],declarations:[VO],exports:[VO],entryComponents:[VO]})],oT);var sT=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let rT=class{};rT=sT([Object(nt.NgModule)({imports:[ag.b,ln.t,PA.b,NA.d,DA.c,EA.b,jA.b,tn.b,KI.a,kA.c,UA.b,cn.i,oT,cn.g,iT],declarations:[O$,KA,qA,XA,iO,TO,sO,pO,vO,CO,xO,$O,MO],exports:[O$],schemas:[nt.CUSTOM_ELEMENTS_SCHEMA],providers:[ag.p]})],rT);var lT=n(79),cT=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let dT=class{};dT=cT([Object(nt.Directive)({selector:"gio-form-label"})],dT);let pT=class{};pT=cT([Object(nt.Directive)({selector:"[gioFormPrefix]"})],pT);let mT=class{};mT=cT([Object(nt.Directive)({selector:"[gioFormSlideToggle]"})],mT);var uT,hT,gT=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},fT=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let bT=class{constructor(){this.unsubscribe$=new ct.a,this.disabled=!1}ngAfterContentInit(){let e=void 0;this.innerFormControlName?e=this.innerFormControlName.statusChanges.pipe(Object(Kt.a)(()=>this.innerFormControlName.disabled),Object(fy.a)(this.innerFormControlName.disabled)):this.innerMatSlideToggle&&(e=this.innerMatSlideToggle.change.pipe(Object(Kt.a)(e=>e.source.disabled),Object(fy.a)(this.innerMatSlideToggle.disabled))),e&&e.pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.disabled=e})}ngOnDestroy(){this.unsubscribe$.next(),this.unsubscribe$.complete()}};gT([Object(nt.Input)(),fT("design:type",String)],bT.prototype,"appearance",void 0),gT([Object(nt.ContentChild)(lT.a,{static:!1}),fT("design:type","function"==typeof(uT=void 0!==lT.a&&lT.a)?uT:Object)],bT.prototype,"innerMatSlideToggle",void 0),gT([Object(nt.ContentChild)(ln.o,{static:!1}),fT("design:type","function"==typeof(hT=void 0!==ln.o&&ln.o)?hT:Object)],bT.prototype,"innerFormControlName",void 0),bT=gT([Object(nt.Component)({selector:"gio-form-slide-toggle",template:n(1218),styles:[n(1219)]})],bT);var vT=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let yT=class{};yT=vT([Object(nt.NgModule)({imports:[ag.b],declarations:[bT,dT,pT],exports:[bT,dT,pT],entryComponents:[bT]})],yT);var ST=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let wT=class{};wT=ST([Object(nt.NgModule)({imports:[ag.b,lT.b,yT],declarations:[hA],exports:[hA],schemas:[nt.CUSTOM_ELEMENTS_SCHEMA]})],wT);var CT=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let IT=class{};IT=CT([Object(nt.NgModule)({imports:[ag.b],declarations:[_A],exports:[_A],schemas:[nt.CUSTOM_ELEMENTS_SCHEMA]})],IT);var $T=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let AT=class{};AT=$T([Object(nt.NgModule)({imports:[ag.b],declarations:[yA],exports:[yA],schemas:[nt.CUSTOM_ELEMENTS_SCHEMA]})],AT);var OT,TT,RT,_T=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},xT=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let LT=class{constructor(e,t,n){this.permissionService=e,this.templateRef=t,this.viewContainer=n,this.gioPermission={}}ngOnInit(){if(this.gioPermission.anyOf&&this.gioPermission.noneOf)throw new Error("You should only set `anyOf` or `noneOf` but not both at the same time.");this.viewContainer.clear(),(this.gioPermission.anyOf&&this.permissionService.hasAnyMatching(this.gioPermission.anyOf)||this.gioPermission.noneOf&&!this.permissionService.hasAnyMatching(this.gioPermission.noneOf))&&this.viewContainer.createEmbeddedView(this.templateRef)}};_T([Object(nt.Input)(),xT("design:type",Object)],LT.prototype,"gioPermission",void 0),LT=_T([Object(nt.Directive)({selector:"[gioPermission]"}),xT("design:paramtypes",["function"==typeof(OT=void 0!==Yt&&Yt)?OT:Object,"function"==typeof(TT=void 0!==nt.TemplateRef&&nt.TemplateRef)?TT:Object,"function"==typeof(RT=void 0!==nt.ViewContainerRef&&nt.ViewContainerRef)?RT:Object])],LT);var PT=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let NT=class{};NT=PT([Object(nt.NgModule)({imports:[ag.b],declarations:[LT],exports:[LT],providers:[Yt]})],NT);var ET=n(14),DT=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let jT=class{};jT=DT([Object(nt.NgModule)({imports:[ag.b,PA.b,mt.f,DA.c,ET.a],declarations:[km],exports:[km],entryComponents:[km]})],jT);var kT,UT=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let MT=kT=class{static withRouting(e){const t=[{name:""+e.stateNamePrefix,url:"/policy-studio",component:aA,redirectTo:{state:e.stateNamePrefix+".design",params:{psPage:"design"}},data:{useAngularMaterial:!0,menu:null,docs:null}},{name:e.stateNamePrefix+".design",url:"/design?flows",component:q$,data:{useAngularMaterial:!0,menu:null,docs:{page:"management-api-policy-studio-design"}},params:{flows:{type:"string",dynamic:!0}}},{name:e.stateNamePrefix+".config",url:"/config",component:hA,data:{useAngularMaterial:!0,menu:null,docs:{page:"management-api-policy-studio-config"}}},{name:e.stateNamePrefix+".properties",url:"/properties",component:yA,data:{useAngularMaterial:!0,menu:null,docs:{page:"management-api-policy-studio-properties"}}},{name:e.stateNamePrefix+".resources",url:"/resources",component:_A,data:{useAngularMaterial:!0,menu:null,docs:{page:"management-api-policy-studio-resources"}}},{name:e.stateNamePrefix+".debug",url:"/debug",component:O$,data:{useAngularMaterial:!0,menu:null,docs:{page:"management-api-policy-studio-try-it"}}}];return{ngModule:kT,providers:[...Object(zI.makeChildProviders)({states:t})]}}};MT=kT=UT([Object(nt.NgModule)({imports:[ag.b,VI.b,ln.t,zI.UIRouterModule.forChild(),KI.a,tn.b,cn.l,NT,jT,YI.a,LA,wT,AT,IT,rT],declarations:[aA]})],MT);var FT,qT,HT,GT,BT=n(238),WT=n(50),VT=n(120),YT=n(105),zT=n(70),KT=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},QT=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};const JT={pagination:{index:1,size:10},searchTerm:""};let XT=class{constructor(e){var t;this.changeDetectorRef=e,this.filters=JT,this.searchLabel="Search",this.length=0,this.disableSearchInput=!1,this.filtersChange=new nt.EventEmitter,this.inputSearch=new ln.g(null!==(t=this.filters.searchTerm)&&void 0!==t?t:JT.searchTerm),this.stateChanges=new ct.a,this.unsubscribe$=new ct.a}ngOnChanges(e){var t,n,i;e.filters&&!Object(o.isEqual)(e.filters.currentValue,e.filters.previousValue)&&(this.initPaginator(null===(t=this.filters)||void 0===t?void 0:t.pagination),this.initSearch(null===(n=this.filters)||void 0===n?void 0:n.searchTerm),this.initSort(null===(i=this.filters)||void 0===i?void 0:i.sort),this.stateChanges.next(),this.changeDetectorRef.detectChanges())}ngAfterViewInit(){var e,t,n,i,a,o,s,r,l;this.initPaginator(null!==(t=null===(e=this.filters)||void 0===e?void 0:e.pagination)&&void 0!==t?t:JT.pagination),this.initSearch(null!==(i=null===(n=this.filters)||void 0===n?void 0:n.searchTerm)&&void 0!==i?i:JT.searchTerm),this.initSort(null!==(o=null===(a=this.filters)||void 0===a?void 0:a.sort)&&void 0!==o?o:JT.sort),this.changeDetectorRef.detectChanges(),this.paginatorTop.page.pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.paginatorBottom.pageIndex=e.pageIndex,this.paginatorBottom.pageSize=e.pageSize}),this.paginatorBottom.page.pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.paginatorTop.pageIndex=e.pageIndex,this.paginatorTop.pageSize=e.pageSize}),Object(zT.a)(this.stateChanges,this.inputSearch.valueChanges,this.paginatorBottom.page,this.paginatorTop.page,null!==(r=null===(s=this.sort)||void 0===s?void 0:s.sortChange)&&void 0!==r?r:Object(dt.a)()).pipe(Object(at.a)(this.unsubscribe$),Object(Kt.a)(()=>Object.assign(Object.assign({searchTerm:this.inputSearch.value},this.sort?{sort:{active:this.sort.active,direction:this.sort.direction}}:{}),{pagination:{index:this.paginatorTop.pageIndex+1,size:this.paginatorTop.pageSize}})),Object(Km.a)(),Object(LO.a)((e,t)=>{if(e.searchTerm!==t.searchTerm){const e=Object.assign(Object.assign({},t.pagination),{index:1});return this.initPaginator(e),Object.assign(Object.assign({},t),{pagination:e})}return t}),Object(zm.a)(300),Object(fy.a)(null!==(l=this.filters)&&void 0!==l?l:JT)).subscribe(e=>{this.filters=e,this.filtersChange.emit(e)})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.complete()}initSearch(e){this.inputSearch&&this.inputSearch.setValue(null!=e?e:"",{emitEvent:!1})}initPaginator(e){this.paginatorTop&&this.paginatorBottom&&e&&(this.paginatorTop.pageIndex=e.index-1,this.paginatorTop.pageSize=e.size,this.paginatorBottom.pageIndex=e.index-1,this.paginatorBottom.pageSize=e.size)}initSort(e){this.sort&&e&&(this.sort.direction=e.direction,this.sort.active=e.active)}};KT([Object(nt.Input)(),QT("design:type",Object)],XT.prototype,"filters",void 0),KT([Object(nt.Input)(),QT("design:type",Object)],XT.prototype,"searchLabel",void 0),KT([Object(nt.Input)(),QT("design:type",Object)],XT.prototype,"length",void 0),KT([Object(nt.Input)(),QT("design:type",Object)],XT.prototype,"disableSearchInput",void 0),KT([Object(nt.Output)(),QT("design:type",Object)],XT.prototype,"filtersChange",void 0),KT([Object(nt.ViewChild)("paginatorTop"),QT("design:type","function"==typeof(FT=void 0!==VT.a&&VT.a)?FT:Object)],XT.prototype,"paginatorTop",void 0),KT([Object(nt.ViewChild)("paginatorBottom"),QT("design:type","function"==typeof(qT=void 0!==VT.a&&VT.a)?qT:Object)],XT.prototype,"paginatorBottom",void 0),KT([Object(nt.ContentChild)(YT.a),QT("design:type","function"==typeof(HT=void 0!==YT.a&&YT.a)?HT:Object)],XT.prototype,"sort",void 0),XT=KT([Object(nt.Component)({selector:"gio-table-wrapper",template:n(1221),styles:[n(1222)]}),QT("design:paramtypes",["function"==typeof(GT=void 0!==nt.ChangeDetectorRef&&nt.ChangeDetectorRef)?GT:Object])],XT);var ZT=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let eR=class{};eR=ZT([Object(nt.NgModule)({imports:[ag.b,ln.t,VT.b,NA.d,DA.c,EA.b,YT.b],declarations:[XT],exports:[XT],entryComponents:[XT]})],eR);var tR=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let nR=class{};nR=tR([Object(nt.NgModule)({imports:[ag.b,VI.b,ln.t,tn.b,NA.d,jA.b,BT.a,YO.l,qg.b,PA.b,WT.b,EA.b,eR],declarations:[Zb],exports:[Zb]})],nR);var iR=n(114),aR=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let oR=class{};oR=aR([Object(nt.NgModule)({imports:[ag.b,ln.l,ln.t,PA.b,mt.f,KI.a,iR.a,tn.b,NA.d,DA.c,cn.f],declarations:[In],exports:[In],entryComponents:[In]})],oR);var sR=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let rR=class{};rR=sR([Object(nt.NgModule)({imports:[ag.b,VI.b,WT.b,PA.b,tn.b,mt.f,cn.i,oR],declarations:[jn],exports:[jn]})],rR);var lR=n(239),cR=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let dR=class{};dR=cR([Object(nt.NgModule)({imports:[ag.b,cn.m],declarations:[rC],exports:[rC],entryComponents:[rC]})],dR);var pR,mR,uR,hR=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},gR=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let fR=class{constructor(e,t,n){this.roleService=e,this.templateRef=t,this.viewContainer=n,this.gioRole={}}ngOnInit(){if(this.gioRole.anyOf&&this.gioRole.noneOf)throw new Error("You should only set `anyOf` or `noneOf` but not both at the same time.");this.viewContainer.clear(),(this.gioRole.anyOf&&this.roleService.hasAnyMatching(this.gioRole.anyOf)||this.gioRole.noneOf&&!this.roleService.hasAnyMatching(this.gioRole.noneOf))&&this.viewContainer.createEmbeddedView(this.templateRef)}};hR([Object(nt.Input)(),gR("design:type",Object)],fR.prototype,"gioRole",void 0),fR=hR([Object(nt.Directive)({selector:"[gioRole]"}),gR("design:paramtypes",["function"==typeof(pR=void 0!==av&&av)?pR:Object,"function"==typeof(mR=void 0!==nt.TemplateRef&&nt.TemplateRef)?mR:Object,"function"==typeof(uR=void 0!==nt.ViewContainerRef&&nt.ViewContainerRef)?uR:Object])],fR);var bR=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let vR=class{};vR=bR([Object(nt.NgModule)({imports:[ag.b],declarations:[fR],exports:[fR],providers:[av]})],vR);var yR,SR,wR=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},CR=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let IR=class{constructor(e){this.hostEl=e,this.imgSrc="",this.defaultSize=Math.min(Number(this.hostEl.nativeElement.offsetWidth),Number(this.hostEl.nativeElement.offsetHeight))||110}set src(e){this.imgSrc=null!=e?e:""}ngOnChanges(){this.size=this.inputSize||this.defaultSize}ngAfterViewInit(){if(!this.imgSrc&&this.avatarContainerEleRef){const e=Object(Wa.toSvg)(this.name,this.size,{backColor:"#FFF",padding:0});this.avatarContainerEleRef.nativeElement.innerHTML=e}}onImgError(){this.imgSrc=null,this.ngAfterViewInit()}};wR([Object(nt.Input)(),CR("design:type",String)],IR.prototype,"id",void 0),wR([Object(nt.Input)(),CR("design:type",String),CR("design:paramtypes",[String])],IR.prototype,"src",null),wR([Object(nt.Input)(),CR("design:type",String)],IR.prototype,"name",void 0),wR([Object(nt.Input)("size"),CR("design:type",Number)],IR.prototype,"inputSize",void 0),wR([Object(nt.Input)(),CR("design:type",Boolean)],IR.prototype,"roundedBorder",void 0),wR([Object(nt.ViewChild)("avatarContainer"),CR("design:type","function"==typeof(yR=void 0!==nt.ElementRef&&nt.ElementRef)?yR:Object)],IR.prototype,"avatarContainerEleRef",void 0),IR=wR([Object(nt.Component)({selector:"gio-avatar",template:n(1224),styles:[n(1225)],host:{"[style.width.px]":"size","[style.height.px]":"size"}}),CR("design:paramtypes",["function"==typeof(SR=void 0!==nt.ElementRef&&nt.ElementRef)?SR:Object])],IR);var $R=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let AR=class{};AR=$R([Object(nt.NgModule)({imports:[ag.b],declarations:[IR],exports:[IR],entryComponents:[IR]})],AR);var OR=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let TR=class{};TR=OR([Object(nt.NgModule)({imports:[ag.b,ln.l,AR,jT,cn.i,NT,vR,eR,PA.b,mt.f,EA.b,DA.c,VT.b,lR.a,tn.b,YT.b,qg.b,UA.b,dR],declarations:[uv],exports:[uv],entryComponents:[uv],providers:[]})],TR);var RR,_R=n(176),xR=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},LR=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},PR=function(e,t){return function(n,i){t(n,i,e)}};let NR=class{constructor(e,t){this.http=e,this.constants=t}list(){return this.http.get(this.constants.env.baseURL+"/configuration/quality-rules")}};NR=xR([Object(nt.Injectable)({providedIn:"root"}),PR(1,Object(nt.Inject)("Constants")),LR("design:paramtypes",["function"==typeof(RR=void 0!==Tt.b&&Tt.b)?RR:Object,"function"!=typeof!1&&Object])],NR);var ER,DR,jR=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},kR=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let UR=class{constructor(e,t){this.apiService=e,this.qualityRuleService=t,this.unsubscribe$=new ct.a,this.isQualityEnabled=!1,this.qualityMetricsDescription={"api.quality.metrics.functional.documentation.weight":"A functional page must be published","api.quality.metrics.technical.documentation.weight":"A swagger page must be published","api.quality.metrics.healthcheck.weight":"An healthcheck must be configured","api.quality.metrics.description.weight":"The API description must be filled","api.quality.metrics.logo.weight":"Put your own logo","api.quality.metrics.categories.weight":"Link your API to categories","api.quality.metrics.labels.weight":"Add labels to your API"}}ngOnChanges(e){e.apiId&&Object(Au.a)([this.qualityRuleService.list(),this.apiService.getQualityMetrics(this.apiId)]).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(([e,t])=>{Object(o.forEach)(e,e=>{this.qualityMetricsDescription[e.id]=e.description}),this.qualityMetrics=t})).subscribe()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}};jR([Object(nt.Input)(),kR("design:type",String)],UR.prototype,"apiId",void 0),UR=jR([Object(nt.Component)({selector:"api-portal-details-quality",template:n(1227),styles:[n(1228)]}),kR("design:paramtypes",["function"==typeof(ER=void 0!==hn&&hn)?ER:Object,"function"==typeof(DR=void 0!==NR&&NR)?DR:Object])],UR);var MR,FR,qR,HR,GR=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},BR=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},WR=function(e,t){return function(n,i){t(n,i,e)}};let VR=class{constructor(e,t,n,i,a){this.ajsState=e,this.apiService=t,this.matDialog=n,this.snackBarService=i,this.constants=a,this.unsubscribe$=new ct.a,this.reloadDetails=new nt.EventEmitter,this.dangerActions={canAskForReview:!1,canStartApi:!1,canStopApi:!1,canChangeApiLifecycle:!1,canPublish:!1,canUnpublish:!1,canChangeVisibilityToPublic:!1,canChangeVisibilityToPrivate:!1,canDeprecate:!1,canDelete:!1},this.isReadOnly=!1}ngOnChanges(e){var t,n,i,a,o,s,r,l,c,d,p,m,u,h,g,f;e.api&&(this.isReadOnly="kubernetes"===(null===(t=this.api.definition_context)||void 0===t?void 0:t.origin),this.dangerActions={canAskForReview:(null===(a=null===(i=null===(n=this.constants.env)||void 0===n?void 0:n.settings)||void 0===i?void 0:i.apiReview)||void 0===a?void 0:a.enabled)&&("DRAFT"===this.api.workflow_state||"REQUEST_FOR_CHANGES"===this.api.workflow_state||!this.api.workflow_state),canStartApi:(!(null===(r=null===(s=null===(o=this.constants.env)||void 0===o?void 0:o.settings)||void 0===s?void 0:s.apiReview)||void 0===r?void 0:r.enabled)||(null===(d=null===(c=null===(l=this.constants.env)||void 0===l?void 0:l.settings)||void 0===c?void 0:c.apiReview)||void 0===d?void 0:d.enabled)&&(!this.api.workflow_state||"REVIEW_OK"===this.api.workflow_state))&&"STOPPED"===this.api.state,canStopApi:(!(null===(u=null===(m=null===(p=this.constants.env)||void 0===p?void 0:p.settings)||void 0===m?void 0:m.apiReview)||void 0===u?void 0:u.enabled)||(null===(f=null===(g=null===(h=this.constants.env)||void 0===h?void 0:h.settings)||void 0===g?void 0:g.apiReview)||void 0===f?void 0:f.enabled)&&(!this.api.workflow_state||"REVIEW_OK"===this.api.workflow_state))&&"STARTED"===this.api.state,canChangeApiLifecycle:this.canChangeApiLifecycle(this.api),canPublish:!this.api.lifecycle_state||"CREATED"===this.api.lifecycle_state||"UNPUBLISHED"===this.api.lifecycle_state,canUnpublish:"PUBLISHED"===this.api.lifecycle_state,canChangeVisibilityToPublic:"DEPRECATED"!==this.api.lifecycle_state&&"PRIVATE"===this.api.visibility,canChangeVisibilityToPrivate:"DEPRECATED"!==this.api.lifecycle_state&&"PUBLIC"===this.api.visibility,canDeprecate:"DEPRECATED"!==this.api.lifecycle_state,canDelete:!("STARTED"===this.api.state||"PUBLISHED"===this.api.lifecycle_state)})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}askForReview(){this.matDialog.open(cn.d,{width:"500px",data:{title:"Review API",content:"Are you sure you want to ask for a review of the API?",confirmButton:"Ask for review"},role:"alertdialog",id:"reviewApiDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.apiService.askForReview(this.api.id)),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(ot.a)(()=>this.reloadDetails.emit()),Object(Kt.a)(()=>this.snackBarService.success("Review has been asked."))).subscribe()}changeLifecycle(e){this.matDialog.open(cn.d,{width:"500px",data:{title:("START"===e?"Start":"Stop")+" API",content:`Are you sure you want to ${"START"===e?"start":"stop"} the API?`,confirmButton:""+("START"===e?"Start":"Stop")},role:"alertdialog",id:"lifecycleDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>"START"===e?this.apiService.start(this.api.id):this.apiService.stop(this.api.id)),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(ot.a)(()=>this.reloadDetails.emit()),Object(Kt.a)(()=>this.snackBarService.success(`The API has been ${"START"===e?"started":"stopped"} with success.`))).subscribe()}changeApiLifecycle(e){const t={PUBLISHED:"Publish",UNPUBLISHED:"Unpublish",DEPRECATED:"Deprecate"};this.matDialog.open(cn.d,{width:"500px",data:{title:t[e]+" API",content:`Are you sure you want to ${t[e].toLowerCase()} the API?`,confirmButton:""+t[e]},role:"alertdialog",id:"apiLifecycleDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.apiService.get(this.api.id)),Object(st.a)(t=>this.apiService.update(Object.assign(Object.assign({},t),{lifecycle_state:e}))),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(ot.a)(()=>this.reloadDetails.emit()),Object(Kt.a)(()=>this.snackBarService.success(`The API has been ${t[e].toLowerCase()} with success.`))).subscribe()}changeVisibility(e){const t={PUBLIC:"Make Public",PRIVATE:"Make Private"};this.matDialog.open(cn.d,{width:"500px",data:{title:"Change visibility",content:`Are you sure you want to ${t[e].toLowerCase()} the API?`,confirmButton:""+t[e]},role:"alertdialog",id:"apiLifecycleDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.apiService.get(this.api.id)),Object(st.a)(t=>this.apiService.update(Object.assign(Object.assign({},t),{visibility:e}))),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(ot.a)(()=>this.reloadDetails.emit()),Object(Kt.a)(()=>this.snackBarService.success(`The API has been ${t[e]} with success.`))).subscribe()}delete(){this.matDialog.open(cn.c,{width:"500px",data:{title:"Delete API",content:"Are you sure you want to delete the API?",confirmButton:"Yes, delete it",validationMessage:`Please, type in the name of the api <code>${this.api.name}</code> to confirm.`,validationValue:this.api.name,warning:"This operation is irreversible."},role:"alertdialog",id:"apiDeleteDialog"}).afterClosed().pipe(Object(at.a)(this.unsubscribe$),Object(rt.a)(e=>!0===e),Object(st.a)(()=>this.apiService.delete(this.api.id)),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a)),Object(Kt.a)(()=>this.snackBarService.success("The API has been deleted."))).subscribe(()=>{this.ajsState.go("management.apis.ng-list")})}canChangeApiLifecycle(e){var t,n,i;return(null===(i=null===(n=null===(t=this.constants.env)||void 0===t?void 0:t.settings)||void 0===n?void 0:n.apiReview)||void 0===i?void 0:i.enabled)?!e.workflow_state||"REVIEW_OK"===e.workflow_state:"CREATED"===e.lifecycle_state||"PUBLISHED"===e.lifecycle_state||"UNPUBLISHED"===e.lifecycle_state}};GR([Object(nt.Input)(),BR("design:type","function"!=typeof!1&&Object)],VR.prototype,"api",void 0),GR([Object(nt.Output)(),BR("design:type",Object)],VR.prototype,"reloadDetails",void 0),VR=GR([Object(nt.Component)({selector:"api-portal-details-danger-zone",template:n(1230),styles:[n(1231)]}),WR(0,Object(nt.Inject)(ut)),WR(4,Object(nt.Inject)("Constants")),BR("design:paramtypes",["function"==typeof(MR=void 0!==it.StateService&&it.StateService)?MR:Object,"function"==typeof(FR=void 0!==hn&&hn)?FR:Object,"function"==typeof(qR=void 0!==mt.b&&mt.b)?qR:Object,"function"==typeof(HR=void 0!==on&&on)?HR:Object,"function"!=typeof!1&&Object])],VR);var YR,zR,KR=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},QR=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let JR=class{constructor(e,t){this.el=e,this.renderer=t}onFormSubmit(){try{const e=this.renderer.selectRootElement(".ng-invalid[formControlName],input.ng-invalid,mat-select.ng-invalid,textarea.ng-invalid",!0);e&&e.scrollIntoView({behavior:"smooth",block:"center"})}catch(e){}}};KR([Object(nt.HostListener)("submit"),QR("design:type",Function),QR("design:paramtypes",[]),QR("design:returntype",void 0)],JR.prototype,"onFormSubmit",null),JR=KR([Object(nt.Directive)({selector:"form[gioFormFocusInvalid]"}),QR("design:paramtypes",["function"==typeof(YR=void 0!==nt.ElementRef&&nt.ElementRef)?YR:Object,"function"==typeof(zR=void 0!==nt.Renderer2&&nt.Renderer2)?zR:Object])],JR);var XR=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let ZR=class{};ZR=XR([Object(nt.NgModule)({declarations:[JR],exports:[JR]})],ZR);var e_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},t_=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let n_=class{constructor(){this.score=0,this.reverseColor=!1}get percentage(){var e;return parseInt((100*Object(o.toNumber)(null!==(e=this.score)&&void 0!==e?e:0)).toFixed(0),10)}get colorClass(){return this.percentage<50?this.reverseColor?"good-color":"bad-color":this.percentage>=50&&this.percentage<80?"medium-color":this.reverseColor?"bad-color":"good-color"}};e_([Object(nt.Input)(),t_("design:type",Object)],n_.prototype,"score",void 0),e_([Object(nt.Input)(),t_("design:type",Object)],n_.prototype,"reverseColor",void 0),n_=e_([Object(nt.Component)({selector:"gio-circular-percentage",template:n(1233),styles:[n(1234)]})],n_);var i_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let a_=class{};a_=i_([Object(nt.NgModule)({imports:[ag.b],declarations:[n_],exports:[n_],entryComponents:[n_]})],a_);var o_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let s_=class{};s_=o_([Object(nt.NgModule)({declarations:[AS,UR,VR,Fy,zy,cS],exports:[AS],imports:[ag.b,ln.t,ET.a,WT.b,NA.d,DA.c,tn.b,EA.b,jA.b,PA.b,mt.f,lT.b,iR.a,UA.b,KI.a,_R.a,ZR,AR,cn.f,cn.l,cn.h,iT,NT,yT,a_,oR,cn.b]})],s_);var r_=n(240),l_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let c_=class{};c_=l_([Object(nt.NgModule)({declarations:[yv],exports:[yv],imports:[ag.b,r_.a,PA.b,YT.b,qg.b,UA.b,AR,cn.i,eR,NT]})],c_);var d_=n(90),p_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let m_=class{};m_=p_([Object(nt.NgModule)({declarations:[Vv],exports:[Vv],imports:[ag.b,ln.t,NA.d,jA.b,WT.b,mt.f,lT.b,d_.a,tn.b,DA.c,yT,cn.h,cn.l,ZR]})],m_);var u_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let h_=class{};h_=u_([Object(nt.NgModule)({declarations:[ey],exports:[ey],imports:[ag.b,ln.t,NA.d,jA.b,WT.b,tn.b,cn.l,ZR]})],h_);var g_=n(81),f_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let b_=class{};b_=f_([Object(nt.NgModule)({declarations:[Rv,Pv,Dv],exports:[Rv],imports:[ag.b,ln.t,PA.b,NA.d,DA.c,WT.b,mt.f,qg.b,iR.a,g_.b,tn.b,NT,cn.l,cn.e,cn.i,ZR]})],b_);var v_,y_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},S_=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},w_=function(e,t){return function(n,i){t(n,i,e)}};let C_=class{constructor(e){this.ajsState=e}goBack(){this.ajsGo&&this.ajsState.go(this.ajsGo.to,this.ajsGo.params,this.ajsGo.options)}};y_([Object(nt.Input)(),S_("design:type",Object)],C_.prototype,"ajsGo",void 0),C_=y_([Object(nt.Component)({selector:"gio-go-back-button",template:n(1236),styles:[n(1237)],host:{}}),w_(0,Object(nt.Inject)(ut)),S_("design:paramtypes",["function"==typeof(v_=void 0!==Bu.StateService&&Bu.StateService)?v_:Object])],C_);var I_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let $_=class{};$_=I_([Object(nt.NgModule)({imports:[ag.b,PA.b,EA.b,UA.b],declarations:[C_],exports:[C_],entryComponents:[C_]})],$_);var A_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let O_=class{};var T_;O_=A_([Object(nt.NgModule)({declarations:[py,Sy],exports:[py,Sy],imports:[ag.b,ln.t,PA.b,WT.b,qg.b,tn.b,g_.b,NA.d,DA.c,tn.b,mt.f,NT,cn.i,NT,cn.l,cn.g,ZR,$_]})],O_),function(e){e.ROUND_ROBIN="ROUND_ROBIN",e.RANDOM="RANDOM",e.WEIGHTED_ROUND_ROBIN="WEIGHTED_ROUND_ROBIN",e.WEIGHTED_RANDOM="WEIGHTED_RANDOM"}(T_||(T_={}));var R_,__=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},x_=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let L_=class{constructor(){this.loadBalancingValues=T_}};__([Object(nt.Input)(),x_("design:type","function"==typeof(R_=void 0!==ln.i&&ln.i)?R_:Object)],L_.prototype,"generalForm",void 0),L_=__([Object(nt.Component)({selector:"api-proxy-group-general",template:n(1239),styles:[n(1240)]})],L_);var P_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},N_=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let E_=class{constructor(){this.onConfigurationChange=new nt.EventEmitter}onChange(e){var t,n,i,a;this.onConfigurationChange.emit({isSchemaValid:!(null===(i=null===(n=null===(t=e.detail)||void 0===t?void 0:t.validation)||void 0===n?void 0:n.errors)||void 0===i?void 0:i.length),configuration:null===(a=e.detail)||void 0===a?void 0:a.values})}};P_([Object(nt.Input)(),N_("design:type",Object)],E_.prototype,"schemaForm",void 0),P_([Object(nt.Input)(),N_("design:type","function"!=typeof!1&&Object)],E_.prototype,"group",void 0),P_([Object(nt.Input)(),N_("design:type",Boolean)],E_.prototype,"isReadOnly",void 0),P_([Object(nt.Output)(),N_("design:type",Object)],E_.prototype,"onConfigurationChange",void 0),E_=P_([Object(nt.Component)({selector:"api-proxy-group-configuration",template:n(1242),styles:[n(1243)]})],E_);var D_,j_,k_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},U_=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let M_=class{constructor(e){this.serviceDiscoveryService=e,this.unsubscribe$=new ct.a,this.onServiceDiscoveryConfigurationChange=new nt.EventEmitter}ngOnInit(){var e,t;(null===(t=null===(e=this.group)||void 0===e?void 0:e.services)||void 0===t?void 0:t.discovery.enabled)&&this.onFormValuesChange(this.group.services.discovery.provider),this.serviceDiscoveryForm.valueChanges.pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{const t=this.serviceDiscoveryForm.get("type");e.enabled?(t.enable({emitEvent:!1}),this.onFormValuesChange(t.value)):(t.disable({emitEvent:!1}),this.displaySchema=!1,this.schema=null)})}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.complete()}onSchemaFormChange(e){var t,n,i,a;this.onServiceDiscoveryConfigurationChange.emit({isSchemaValid:!(null===(i=null===(n=null===(t=e.detail)||void 0===t?void 0:t.validation)||void 0===n?void 0:n.errors)||void 0===i?void 0:i.length),serviceDiscoveryValues:null===(a=e.detail)||void 0===a?void 0:a.values})}onFormValuesChange(e){e&&this.serviceDiscoveryService.getSchema(e).pipe(Object(Kt.a)(e=>{this.schema=e,this.displaySchema=!0===this.serviceDiscoveryForm.get("enabled").value&&!!this.serviceDiscoveryForm.get("type").value&&!!this.schema})).subscribe()}};k_([Object(nt.Input)(),U_("design:type","function"==typeof(D_=void 0!==ln.i&&ln.i)?D_:Object)],M_.prototype,"serviceDiscoveryForm",void 0),k_([Object(nt.Input)(),U_("design:type",Array)],M_.prototype,"serviceDiscoveryItems",void 0),k_([Object(nt.Input)(),U_("design:type","function"!=typeof!1&&Object)],M_.prototype,"group",void 0),k_([Object(nt.Input)(),U_("design:type",Boolean)],M_.prototype,"isReadOnly",void 0),k_([Object(nt.Output)(),U_("design:type",Object)],M_.prototype,"onServiceDiscoveryConfigurationChange",void 0),M_=k_([Object(nt.Component)({selector:"api-proxy-group-service-discovery",template:n(1245),styles:[n(1246)]}),U_("design:paramtypes",["function"==typeof(j_=void 0!==qS&&qS)?j_:Object])],M_);var F_,q_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},H_=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let G_=class{};q_([Object(nt.Input)(),H_("design:type","function"==typeof(F_=void 0!==ln.i&&ln.i)?F_:Object)],G_.prototype,"generalForm",void 0),q_([Object(nt.Input)(),H_("design:type","function"!=typeof!1&&Object)],G_.prototype,"endpoint",void 0),q_([Object(nt.Input)(),H_("design:type",Array)],G_.prototype,"supportedTypes",void 0),q_([Object(nt.Input)(),H_("design:type",Array)],G_.prototype,"tenants",void 0),G_=q_([Object(nt.Component)({selector:"api-proxy-group-endpoint-edit-general",template:n(1248),styles:[n(1249)]})],G_);var B_,W_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},V_=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let Y_=class{constructor(){this.onConfigurationChange=new nt.EventEmitter}onChange(e){var t,n,i,a;this.onConfigurationChange.emit({isSchemaValid:!(null===(i=null===(n=null===(t=e.detail)||void 0===t?void 0:t.validation)||void 0===n?void 0:n.errors)||void 0===i?void 0:i.length),configuration:null===(a=e.detail)||void 0===a?void 0:a.values})}};W_([Object(nt.Input)(),V_("design:type","function"==typeof(B_=void 0!==ln.i&&ln.i)?B_:Object)],Y_.prototype,"configurationForm",void 0),W_([Object(nt.Input)(),V_("design:type",Object)],Y_.prototype,"configurationSchema",void 0),W_([Object(nt.Input)(),V_("design:type","function"!=typeof!1&&Object)],Y_.prototype,"endpoint",void 0),W_([Object(nt.Input)(),V_("design:type",Boolean)],Y_.prototype,"isReadOnly",void 0),W_([Object(nt.Output)(),V_("design:type",Object)],Y_.prototype,"onConfigurationChange",void 0),Y_=W_([Object(nt.Component)({selector:"api-proxy-group-endpoint-configuration",template:n(1251),styles:[n(1252)]})],Y_);var z_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let K_=class{};K_=z_([Object(nt.NgModule)({declarations:[iw],exports:[iw],imports:[ag.b,ln.t,WT.b,NA.d,d_.a,lT.b,jA.b,DA.c,PA.b,yT,cn.g,cn.b,cn.i]})],K_);var Q_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let J_=class{};J_=Q_([Object(nt.NgModule)({declarations:[hw,G_,Y_],exports:[hw],imports:[ag.b,ln.t,K_,WT.b,KI.a,NA.d,DA.c,tn.b,iR.a,jA.b,UA.b,lT.b,$_,ZR,cn.l,yT],schemas:[nt.CUSTOM_ELEMENTS_SCHEMA]})],J_);var X_=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let Z_=class{};Z_=X_([Object(nt.NgModule)({declarations:[L_,XS,E_,M_],exports:[XS],imports:[ag.b,ln.t,WT.b,KI.a,NA.d,DA.c,jA.b,tn.b,iR.a,lT.b,$_,ZR,cn.l,yT,J_],schemas:[nt.CUSTOM_ELEMENTS_SCHEMA]})],Z_);var ex=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let tx=class{};tx=ex([Object(nt.NgModule)({declarations:[Py],exports:[Py],imports:[ag.b,ln.t,PA.b,WT.b,qg.b,g_.b,DA.c,UA.b,mt.f,tn.b,cn.i,NT,Z_]})],tx);var nx=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let ix=class{};ix=nx([Object(nt.NgModule)({declarations:[Iw],exports:[Iw],imports:[ag.b,ln.t,NA.d,jA.b,WT.b,mt.f,lT.b,d_.a,tn.b,DA.c,yT,cn.h,cn.l,ZR]})],ix);var ax=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let ox=class{};ox=ax([Object(nt.NgModule)({declarations:[IC],exports:[IC],imports:[ag.b,ln.t,tn.b,PA.b,cn.l,K_,cn.i,cn.b]})],ox);var sx=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let rx=class{};rx=sx([Object(nt.NgModule)({imports:[b_,m_,h_,O_,tx,ix,ox]})],rx);var lx=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},cx=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let dx=class{};lx([Object(nt.Input)(),cx("design:type",String)],dx.prototype,"apiName",void 0),lx([Object(nt.Input)(),cx("design:type",String)],dx.prototype,"apiVersion",void 0),lx([Object(nt.Input)(),cx("design:type",String)],dx.prototype,"apiState",void 0),lx([Object(nt.Input)(),cx("design:type",Boolean)],dx.prototype,"apiIsSync",void 0),lx([Object(nt.Input)(),cx("design:type",String)],dx.prototype,"apiLifecycleState",void 0),lx([Object(nt.Input)(),cx("design:type",String)],dx.prototype,"apiOrigin",void 0),dx=lx([Object(nt.Component)({selector:"api-navigation-title",template:n(1254),styles:[n(1255)]})],dx);var px=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let mx=class{};mx=px([Object(nt.NgModule)({imports:[ag.b,cn.i,UA.b],declarations:[dx],exports:[dx],entryComponents:[dx]})],mx);var ux,hx=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},gx=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},fx=function(e,t){return function(n,i){t(n,i,e)}};let bx=class{constructor(e){this.ajsState=e,this.tabMenuItems=[]}navigateTo(e){this.ajsState.go(e)}isActive(e){return Object(o.castArray)(e).some(e=>this.ajsState.includes(e))}};hx([Object(nt.Input)(),gx("design:type",Array)],bx.prototype,"tabMenuItems",void 0),bx=hx([Object(nt.Component)({selector:"api-navigation-tabs",template:n(1257),styles:[n(1258)]}),fx(0,Object(nt.Inject)(ut)),gx("design:paramtypes",["function"==typeof(ux=void 0!==it.StateService&&it.StateService)?ux:Object])],bx);var vx=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let yx=class{};yx=vx([Object(nt.NgModule)({imports:[ag.b,KI.a],declarations:[bx],exports:[bx],entryComponents:[bx]})],yx);var Sx=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let wx=class{};wx=Sx([Object(nt.NgModule)({imports:[ag.b,cn.m,mx,yx,cn.i,PA.b],declarations:[gC],exports:[gC],entryComponents:[gC]})],wx);var Cx=n(461),Ix=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let $x=class{};$x=Ix([Object(nt.NgModule)({declarations:[zC],exports:[zC],imports:[ag.b,Cx.a,PA.b,mt.f,tn.b,qg.b,UA.b,qO.a,cn.i,NT,cn.l]})],$x);var Ax=n(462),Ox=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Tx=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let Rx=class{constructor(){this.unsubscribe$=new ct.a}ngOnInit(){}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}};Rx=Ox([Object(nt.Component)({selector:"plan-edit-restriction-step",template:n(1260),styles:[n(1261)]}),Tx("design:paramtypes",[])],Rx);var _x=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let xx=class{};xx=_x([Object(nt.NgModule)({declarations:[DI,hI,TI,Rx],exports:[DI],imports:[ag.b,ln.t,WT.b,EA.b,Ax.a,PA.b,NA.d,DA.c,jA.b,lT.b,tn.b,yT,cn.h,cn.i,cn.l,ZR,cn.b]})],xx);var Lx=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let Px=class{};Px=Lx([Object(nt.NgModule)({imports:[c_,rx,s_,xx,wx,$x]})],Px);var Nx=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let Ex=class{};Ex=Nx([Object(nt.NgModule)({imports:[ag.b,cn.m],declarations:[eC],exports:[eC],entryComponents:[eC]})],Ex);var Dx,jx=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},kx=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Ux=function(e,t){return function(n,i){t(n,i,e)}};let Mx=class{constructor(e,t){this.http=e,this.constants=t}search(e,t,n,i,a){return void 0===e&&(e=!1),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=0),void 0===a&&(a=100),this.http.get(`${this.constants.env.baseURL}/instances/?includeStopped=${e}&from=${t}&to=${n}&page=${i}&size=${a}`)}get(e){return this.http.get(this.constants.env.baseURL+"/instances/"+e)}getMonitoringData(e,t){return this.http.get(this.constants.env.baseURL+"/instances/"+e+"/monitoring/"+t)}};Mx=jx([Object(nt.Injectable)({providedIn:"root"}),Ux(1,Object(nt.Inject)("Constants")),kx("design:paramtypes",["function"==typeof(Dx=void 0!==Tt.b&&Tt.b)?Dx:Object,"function"!=typeof!1&&Object])],Mx);var Fx,qx=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Hx=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Gx=function(e,t){return function(n,i){t(n,i,e)}};let Bx=class{constructor(e,t){this.ajsStateParams=e,this.instanceService=t,this.unsubscribe$=new ct.a}ngOnInit(){this.instanceService.get(this.ajsStateParams.instanceId).pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.instance=e})}ngOnDestroy(){this.unsubscribe$.next(),this.unsubscribe$.unsubscribe()}};Bx=qx([Object(nt.Component)({selector:"instance-details",template:n(1263)}),Gx(0,Object(nt.Inject)(gt)),Hx("design:paramtypes",[Object,"function"==typeof(Fx=void 0!==Mx&&Mx)?Fx:Object])],Bx);var Wx,Vx=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},Yx=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},zx=function(e,t){return function(n,i){t(n,i,e)}};let Kx=class{constructor(e){this.ajsState=e,this.tabMenuItems=[]}ngOnInit(){this.tabMenuItems=[{displayName:"Environment",targetRoute:"management.instances.detail.environment",baseRoute:"management.instances.detail.environment",testId:"management.instances.detail.environment"},{displayName:"Monitoring",targetRoute:"management.instances.detail.monitoring",baseRoute:"management.instances.detail.monitoring",testId:"management.instances.detail.monitoring"}]}navigateTo(e){this.ajsState.go(e)}isActive(e){return this.ajsState.includes(e)}};Vx([Object(nt.Input)(),Yx("design:type","function"!=typeof!1&&Object)],Kx.prototype,"instance",void 0),Kx=Vx([Object(nt.Component)({selector:"instance-details-header",template:n(1264),styles:[n(1265)]}),zx(0,Object(nt.Inject)(ut)),Yx("design:paramtypes",["function"==typeof(Wx=void 0!==it.StateService&&it.StateService)?Wx:Object])],Kx);var Qx=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let Jx=class{};Jx=Qx([Object(nt.NgModule)({declarations:[Kx],exports:[Kx],imports:[ag.b,WT.b,KI.a]})],Jx);var Xx,Zx=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},eL=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},tL=function(e,t){return function(n,i){t(n,i,e)}};let nL=class{constructor(e,t){this.ajsStateParams=e,this.instanceService=t,this.hasSystemProperties=!1,this.informationTableDisplayedColumns=["icon","type","value"],this.pluginsTableDisplayedColumns=["icon","id","name","version"],this.propertiesTableDisplayedColumns=["name","value"],this.unsubscribe$=new ct.a}ngOnInit(){this.instanceService.get(this.ajsStateParams.instanceId).pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.instance=e,this.hasSystemProperties=!!this.instance.systemProperties&&Object.keys(this.instance.systemProperties).length>0,this.initInformationTable(),this.initPluginsTable(),this.initPropertiesTable()})}ngOnDestroy(){this.unsubscribe$.next(),this.unsubscribe$.unsubscribe()}initInformationTable(){var e,t,n,i;this.informationItemsDS=[{icon:"gio:computer",type:"Hostname",value:this.instance.hostname},{icon:"gio:wifi",type:"IP",value:this.instance.ip},{icon:"gio:wifi",type:"Port",value:this.instance.port},{icon:this.getIconFromState(this.instance.state),type:"State",value:this.instance.state,class:this.getClassFromState(this.instance.state)},{icon:"gio:flag",type:"Version",value:this.instance.version},{icon:"gio:clock-outline",type:"Started at",value:Object(ag.r)(this.instance.started_at,"medium","en-US")},{icon:"gio:heart",type:"Last heartbeat at",value:Object(ag.r)(this.instance.last_heartbeat_at,"medium","en-US")}],(null===(e=this.instance.tags)||void 0===e?void 0:e.length)>0&&this.informationItemsDS.push({icon:"gio:label-outline",type:"Sharding tags",value:this.instance.tags.join(", ")}),(null===(t=this.instance.tenants)||void 0===t?void 0:t.length)>0&&this.informationItemsDS.push({icon:"gio:shuffle",type:"Tenant",value:this.instance.tenants.join(", ")}),(null===(n=this.instance.organizations_hrids)||void 0===n?void 0:n.length)>0&&this.informationItemsDS.push({icon:"gio:product-apim",type:"Organizations",value:this.instance.organizations_hrids.join(", ")}),(null===(i=this.instance.environments_hrids)||void 0===i?void 0:i.length)>0&&this.informationItemsDS.push({icon:"gio:server",type:"Environments",value:this.instance.environments_hrids.join(", ")}),this.instance.stopped_at&&this.informationItemsDS.push({icon:"gio:power",type:"Stopped at",value:Object(ag.r)(this.instance.stopped_at,"medium","en-US")}),this.filteredInformationItemsDS=this.informationItemsDS,this.informationTableUnpaginatedLength=this.filteredInformationItemsDS.length}getIconFromState(e){return"STARTED"===e?"gio:play-circle":"STOPPED"===e?"gio:stop-circle":void 0}getClassFromState(e){return"STARTED"===e?"gio-instance-details-environment__started":"STOPPED"===e?"gio-instance-details-environment__stopped":void 0}initPluginsTable(){var e,t;const n={policy:"gio:shuffle",service:"gio:layers",service_discovery:"gio:layers",repository:"gio:folder",reporter:"gio:report-columns",resource:"gio:package",connector:"gio:server-connection",tracer:"gio:pen-tool","endpoint-connector":"gio:server-connection","entrypoint-connector":"gio:server-connection",alert:"gio:shield-alert"};this.pluginsItemsDS=null===(e=this.instance.plugins)||void 0===e?void 0:e.map(e=>({id:e.id,icon:n[e.type],name:e.name,version:e.version})),this.filteredPluginsItemsDS=this.pluginsItemsDS,this.pluginsTableUnpaginatedLength=null===(t=this.filteredPluginsItemsDS)||void 0===t?void 0:t.length}initPropertiesTable(){this.hasSystemProperties&&(this.propertiesItemsDS=Object.entries(this.instance.systemProperties).map(([e,t])=>({name:e,value:t})),this.filteredPropertiesItemsDS=this.propertiesItemsDS,this.propertiesTableUnpaginatedLength=this.filteredPropertiesItemsDS.length)}onInformationFiltersChanged(e){const t=xu(this.informationItemsDS,e);this.filteredInformationItemsDS=t.filteredCollection,this.informationTableUnpaginatedLength=t.unpaginatedLength}onPluginsFiltersChanged(e){const t=xu(this.pluginsItemsDS,e);this.filteredPluginsItemsDS=t.filteredCollection,this.pluginsTableUnpaginatedLength=t.unpaginatedLength}onPropertiesFiltersChanged(e){const t=xu(this.propertiesItemsDS,e);this.filteredPropertiesItemsDS=t.filteredCollection,this.propertiesTableUnpaginatedLength=t.unpaginatedLength}};nL=Zx([Object(nt.Component)({selector:"instance-details-environment",template:n(1267),styles:[n(1268)]}),tL(0,Object(nt.Inject)(gt)),eL("design:paramtypes",[Object,"function"==typeof(Xx=void 0!==Mx&&Mx)?Xx:Object])],nL);var iL,aL=n(271),oL=n(1675),sL=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},rL=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},lL=function(e,t){return function(n,i){t(n,i,e)}};let cL=class{constructor(e,t){this.ajsStateParams=e,this.instanceService=t,this.unsubscribe$=new ct.a}ngOnInit(){this.instanceService.get(this.ajsStateParams.instanceId).pipe(Object(at.a)(this.unsubscribe$)).subscribe(e=>{this.instance=e,this.instanceStarted="STARTED"===e.state,this.instanceStarted&&(this.monitoringPolling=Object(dt.a)({}).pipe(Object(Jh.a)(e=>this.instanceService.getMonitoringData(this.ajsStateParams.instanceId,this.instance.id)),Object(ot.a)(e=>this.monitoringData=e),Object(aL.a)(5e3),Object(oL.a)()).subscribe())})}ngOnDestroy(){this.unsubscribe$.next(),this.unsubscribe$.unsubscribe(),this.monitoringPolling&&this.monitoringPolling.unsubscribe()}originalOrder(){return 0}humanizeDuration(e){return Object(p.duration)(-e).humanize(!0)}humanizeSize(e,t){if(!Object(o.isNumber)(e)||!isFinite(e))return"-";Object(o.isNil)(t)&&(t=1);const n=0===e?0:Math.floor(Math.log(e)/Math.log(1024));return`${(e/Math.pow(1024,Math.floor(n))).toFixed(t)} ${["bytes","kB","MB","GB","TB","PB"][n]}`}ratio(e,t){return 0===t?void 0:Object(o.round)(e/t*100)}ratioLabel(e,t){const n=this.ratio(e,t);return void 0!==n?n+"%":"-%"}};cL=sL([Object(nt.Component)({selector:"instance-monitoring",template:n(1270),styles:[n(1271)]}),lL(0,Object(nt.Inject)(gt)),rL("design:paramtypes",[Object,"function"==typeof(iL=void 0!==Mx&&Mx)?iL:Object])],cL);var dL=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let pL=class{};pL=dL([Object(nt.NgModule)({declarations:[cL],exports:[cL],imports:[ag.b,WT.b,_R.a,EA.b,iT,cn.i,a_]})],pL);var mL=n(44),uL=n(138),hL=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let gL=class{constructor(){this.sectionsLinks={},this.sectionsLinksChanges$=new ct.a}getSections$(){return this.sectionsLinksChanges$.pipe(Object(dn.a)(this.sectionsLinks),Object(fy.a)(this.sectionsLinks))}markAsChanged(){this.sectionsLinksChanges$.next()}addSection(e,t){this.sectionsLinks[e]||(this.sectionsLinks[e]={links:[],name:t}),this.sectionsLinks[e].name=t,this.sectionsLinksChanges$.next()}addLink(e,t){this.sectionsLinks[e]||this.addSection(e);const n=this.sectionsLinks[e];n.links=[...n.links,t],this.sectionsLinksChanges$.next()}removeLink(e,t){if(!this.sectionsLinks[e])return;const n=this.sectionsLinks[e];n.links.splice(n.links.findIndex(e=>e.id===t),1),Object(o.isEmpty)(n.links)&&delete this.sectionsLinks[e],this.sectionsLinksChanges$.next()}};gL=hL([Object(nt.Injectable)({providedIn:"root"})],gL);var fL,bL,vL,yL,SL,wL,CL,IL=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},$L=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},AL=function(e,t){return function(n,i){t(n,i,e)}};let OL=class{constructor(e,t,n,i,a){this.tableOfContentsService=e,this.document=t,this.elementRef=n,this.location=i,this.changeDetectorRef=a,this.allLinks=[],this.subscriptions=new mL.a}set sectionNames(e){Object.entries(e).forEach(([e,t])=>{this.tableOfContentsService.addSection(e,t)})}ngOnInit(){this.container=this.scrollingContainer instanceof HTMLElement?this.scrollingContainer:this.document.querySelector(this.scrollingContainer)||window,setTimeout(()=>{const{rootUrl:e,fragment:t}=TL(this.location.path(!0));this.rootUrl=e,this.fragment=t},1),this.subscriptions.add(this.location.subscribe(e=>{const{rootUrl:t,fragment:n}=TL(e.url);t!==this.rootUrl&&(this.rootUrl=t),n!==this.fragment&&(this.fragment=n,this.updateScrollPosition())})),this.subscriptions.add(Object(uL.a)(this.container,"scroll").pipe(Object(zm.a)(10)).subscribe(()=>this.onScroll())),this.sections$=this.tableOfContentsService.getSections$().pipe(Object(Kt.a)(e=>Object.values(e)),Object(ot.a)(e=>{this.allLinks=this.sortByTopOffset(Object(o.flatten)(e.map(e=>e.links))),this.changeDetectorRef.detectChanges()}),Object(Wu.a)())}ngAfterViewInit(){setTimeout(()=>{this.updateScrollPosition()},300)}ngOnDestroy(){this.subscriptions.unsubscribe()}onClick(e,t){e.stopPropagation(),this.location.go(`${this.rootUrl}#${t}`)}sortByTopOffset(e=[]){return Object(o.sortBy)(e,"top")}updateScrollPosition(){var e;null===(e=this.document.getElementById("toc-"+this.fragment))||void 0===e||e.scrollIntoView()}getTableOfContentsTop(){const{top:e}=this.elementRef.nativeElement.getBoundingClientRect();return e}onScroll(){const e=this.getTableOfContentsTop()+32;let t=!1;for(let n=0;n<this.allLinks.length;n++){const i=this.allLinks[n],a=this.allLinks[n+1],o=i.top<=0+e&&(!a||a.top>0+e);o!==i.active&&(i.active=o,t=!0)}t&&this.tableOfContentsService.markAsChanged()}};IL([Object(nt.Input)(),$L("design:type",Object)],OL.prototype,"scrollingContainer",void 0),IL([Object(nt.Input)(),$L("design:type","function"==typeof(fL="undefined"!=typeof Record&&Record)?fL:Object),$L("design:paramtypes",["function"==typeof(bL="undefined"!=typeof Record&&Record)?bL:Object])],OL.prototype,"sectionNames",null),OL=IL([Object(nt.Component)({selector:"gio-table-of-contents",template:n(1273),styles:[n(1274)]}),AL(1,Object(nt.Inject)(ag.c)),$L("design:paramtypes",["function"==typeof(vL=void 0!==gL&&gL)?vL:Object,"function"==typeof(yL="undefined"!=typeof Document&&Document)?yL:Object,"function"==typeof(SL=void 0!==nt.ElementRef&&nt.ElementRef)?SL:Object,"function"==typeof(wL=void 0!==ag.e&&ag.e)?wL:Object,"function"==typeof(CL=void 0!==nt.ChangeDetectorRef&&nt.ChangeDetectorRef)?CL:Object])],OL);const TL=e=>{const[t,n]=e.split(/#(([a-z0-9]*)(-[a-z0-9]+)*)$/);return{rootUrl:t,fragment:n}};class RL{constructor(e,t){this.element=e,this.options=t,this.active=!1}get id(){var e,t;const n=null===(t=null!==(e=this.options.name)&&void 0!==e?e:this.element.innerText)||void 0===t?void 0:t.trim();return Object(o.kebabCase)(n)}get type(){return String(this.element.tagName).toLowerCase()}get name(){var e,t;return null===(t=null!==(e=this.options.name)&&void 0!==e?e:this.element.innerText)||void 0===t?void 0:t.trim()}get top(){return this.element.getBoundingClientRect().top}}var _L,xL,LL=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},PL=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let NL=class{constructor(e,t){this.el=e,this.tableOfContentsService=t,this.sectionId=""}ngAfterViewInit(){this.link=new RL(this.el.nativeElement,{name:this.name}),this.el.nativeElement.id="toc-"+this.link.id,this.tableOfContentsService.addLink(this.sectionId,this.link)}ngOnDestroy(){this.tableOfContentsService.removeLink(this.sectionId,Object(o.kebabCase)(this.link.id))}};LL([Object(nt.Input)("gioTableOfContentsSectionId"),PL("design:type",Object)],NL.prototype,"sectionId",void 0),LL([Object(nt.Input)("gioTableOfContentsName"),PL("design:type",String)],NL.prototype,"name",void 0),NL=LL([Object(nt.Directive)({selector:"h2[gioTableOfContents], h3[gioTableOfContents], h4[gioTableOfContents], [mat-subheader][gioTableOfContents]"}),PL("design:paramtypes",["function"==typeof(_L=void 0!==nt.ElementRef&&nt.ElementRef)?_L:Object,"function"==typeof(xL=void 0!==gL&&gL)?xL:Object])],NL);var EL=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let DL=class{};DL=EL([Object(nt.NgModule)({imports:[ag.b],declarations:[OL,NL],exports:[OL,NL],entryComponents:[OL]})],DL);var jL=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let kL=class{};kL=jL([Object(nt.NgModule)({declarations:[nL],exports:[nL],imports:[ag.b,WT.b,EA.b,cn.i,eR,qg.b,DL,YT.b]})],kL);var UL,ML=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let FL=UL=class{static withRouting(e){const t=[{name:""+e.stateNamePrefix,url:"/:instanceId",component:Bx,data:{useAngularMaterial:!0}},{name:e.stateNamePrefix+".environment",url:"/environment",component:nL,data:{docs:{page:"management-gateway-environment"},useAngularMaterial:!0}},{name:e.stateNamePrefix+".monitoring",url:"/monitoring",component:cL,data:{docs:{page:"management-gateway-monitoring"},useAngularMaterial:!0}}];return{ngModule:UL,providers:[...Object(zI.makeChildProviders)({states:t})]}}};FL=UL=ML([Object(nt.NgModule)({declarations:[Bx],exports:[Bx],imports:[ag.b,zI.UIRouterModule.forChild(),Jx,pL,kL]})],FL);var qL=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let HL=class{};HL=qL([Object(nt.NgModule)({imports:[ag.b,VI.b,tn.b,NT,jT,YI.a,nR,rR,MT.withRouting({stateNamePrefix:"management.apis.detail.design.flowsNg"}),TR,Px,Ex,FL.withRouting({stateNamePrefix:"management.instances.detail"})],declarations:[],entryComponents:[]})],HL);var GL=n(121),BL=n(177),WL=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let VL=class{constructor(){this.name="OrgSettingsIdentityProviderGithubComponent",this.configurationFormGroup=new ln.i({clientId:new ln.g(null,ln.v.required),clientSecret:new ln.g(null,ln.v.required)})}getFormGroups(){return{configuration:this.configurationFormGroup}}};VL=WL([Object(nt.Component)({selector:"org-settings-identity-provider-github",styles:[n(1276)],template:n(1278)})],VL);var YL=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let zL=class{constructor(){this.name="OrgSettingsIdentityProviderGoogleComponent",this.configurationFormGroup=new ln.i({clientId:new ln.g(null,ln.v.required),clientSecret:new ln.g(null,ln.v.required)})}getFormGroups(){return{configuration:this.configurationFormGroup}}};zL=YL([Object(nt.Component)({selector:"org-settings-identity-provider-google",styles:[n(1279)],template:n(1281)})],zL);var KL=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let QL=class{constructor(){this.name="OrgSettingsIdentityProviderGraviteeioAmComponent",this.configurationFormGroup=new ln.i({clientId:new ln.g(null,ln.v.required),clientSecret:new ln.g(null,ln.v.required),serverURL:new ln.g(null,ln.v.required),domain:new ln.g(null,ln.v.required),scopes:new ln.g,color:new ln.g}),this.userProfileMappingFormGroup=new ln.i({id:new ln.g("sub",ln.v.required),firstname:new ln.g("given_name"),lastname:new ln.g("family_name"),email:new ln.g("email"),picture:new ln.g("picture")})}getFormGroups(){return{configuration:this.configurationFormGroup,userProfileMapping:this.userProfileMappingFormGroup}}};QL=KL([Object(nt.Component)({selector:"org-settings-identity-provider-graviteeio-am",styles:[n(1282)],template:n(1284)})],QL);var JL=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let XL=class{constructor(){this.name="OrgSettingsIdentityProviderOidcComponent",this.configurationFormGroup=new ln.i({clientId:new ln.g(null,ln.v.required),clientSecret:new ln.g(null,ln.v.required),tokenEndpoint:new ln.g(null,ln.v.required),tokenIntrospectionEndpoint:new ln.g,authorizeEndpoint:new ln.g(null,ln.v.required),userInfoEndpoint:new ln.g(null,ln.v.required),userLogoutEndpoint:new ln.g,scopes:new ln.g,color:new ln.g}),this.userProfileMappingFormGroup=new ln.i({id:new ln.g("sub",ln.v.required),firstname:new ln.g("given_name"),lastname:new ln.g("family_name"),email:new ln.g("email"),picture:new ln.g("picture")})}getFormGroups(){return{configuration:this.configurationFormGroup,userProfileMapping:this.userProfileMappingFormGroup}}};XL=JL([Object(nt.Component)({selector:"org-settings-identity-provider-oidc",styles:[n(1285)],template:n(1287)})],XL);var ZL,eP=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},tP=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let nP=class{constructor(e){this.changeDetector=e,this.selected=!1}onSelectCard(){this.selected=!this.selected,this.onSelectFn&&this.onSelectFn(this.value)}_markForCheck(){this.changeDetector.markForCheck()}};eP([Object(nt.Input)(),tP("design:type",String)],nP.prototype,"value",void 0),nP=eP([Object(nt.Component)({selector:"gio-form-card",template:'\n    <mat-card matRipple class="card" [class.selected]="selected">\n      <span class="selection-icon">\n        <mat-icon>check_circle</mat-icon>\n      </span>\n      <mat-card-content class="card__content"><ng-content></ng-content></mat-card-content>\n    </mat-card>\n  ',host:{"[class.selected]":"selected","(click)":"onSelectCard()"},styles:[n(1288)]}),tP("design:paramtypes",["function"==typeof(ZL=void 0!==nt.ChangeDetectorRef&&nt.ChangeDetectorRef)?ZL:Object])],nP);var iP,aP,oP,sP=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},rP=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let lP=iP=class{constructor(e){this.changeDetector=e,this.disabled=!1,this._onChange=()=>({}),this._onTouched=()=>({})}ngAfterContentInit(){this.selectCardsList.forEach(e=>{e.value===this.selection&&(e.selected=!0,this.changeDetector.markForCheck(),e._markForCheck()),e.onSelectFn=e=>{this.updateCardsSelection(e)}})}writeValue(e){this.selection=e,this.updateCardsSelection(e),this.changeDetector.markForCheck()}registerOnChange(e){this._onChange=e}registerOnTouched(e){this._onTouched=e}setDisabledState(e){this.disabled=e,this.changeDetector.markForCheck()}updateCardsSelection(e){this.selectCardsList&&(this.selectCardsList.forEach(t=>{t.value===e!==t.selected&&(t.selected=t.value===e,t._markForCheck())}),this.selection=e,this._onChange(this.selection),this._onTouched())}};sP([Object(nt.ContentChildren)(Object(nt.forwardRef)(()=>nP),{descendants:!0}),rP("design:type","function"==typeof(aP=void 0!==nt.QueryList&&nt.QueryList)?aP:Object)],lP.prototype,"selectCardsList",void 0),lP=iP=sP([Object(nt.Component)({selector:"gio-form-card-group",template:n(1290),styles:[n(1291)],providers:[{provide:ln.n,multi:!0,useExisting:Object(nt.forwardRef)(()=>iP)}]}),rP("design:paramtypes",["function"==typeof(oP=void 0!==nt.ChangeDetectorRef&&nt.ChangeDetectorRef)?oP:Object])],lP);var cP=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let dP=class{};dP=cP([Object(nt.NgModule)({imports:[ag.b,WT.b,EA.b,YO.s],declarations:[lP,nP],exports:[lP,nP],entryComponents:[lP]})],dP);var pP,mP,uP,hP,gP=n(9),fP=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},bP=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},vP=function(e,t){return function(n,i){t(n,i,e)}};let yP=pP=class{constructor(e,t,n){this.ngControl=e,this.elRef=t,this.fm=n,this.colorFormControl=new ln.g,this._onChange=()=>({}),this._onTouched=()=>({}),this.touched=!1,this._value=null,this.stateChanges=new ct.a,this.id="gio-form-color-input-"+pP.nextId++,this._required=!1,this._disabled=!1,this.unsubscribe$=new ct.a,this.describedBy="",null!=this.ngControl&&(this.ngControl.valueAccessor=this),n.monitor(t.nativeElement,!0).subscribe(e=>{this.focused=!!e,this._onTouched(),this.touched=!0,this.stateChanges.next()}),this.colorFormControl.valueChanges.pipe(Object(at.a)(this.unsubscribe$),Object(zm.a)(300)).subscribe(e=>{this.value=e,this.colorFormControl.setValue(e,{onlySelf:!0,emitEvent:!1,emitModelToViewChange:!0})})}get value(){return this._value}set value(e){this._value=e,this._onChange(e),this.stateChanges.next()}get placeholder(){return this._placeholder}set placeholder(e){this._placeholder=e,this.stateChanges.next()}get empty(){return Object(o.isEmpty)(this.value)}get shouldLabelFloat(){return this.focused||!this.empty}get required(){return this._required}set required(e){this._required=Object(gP.c)(e),this.stateChanges.next()}get disabled(){return this._disabled||this.ngControl&&this.ngControl.disabled}set disabled(e){this._disabled=Object(gP.c)(e),e?this.colorFormControl.disable():this.colorFormControl.enable(),this.stateChanges.next()}get errorState(){return this.touched&&(this.required&&this.empty||this.ngControl&&this.ngControl.touched&&!!this.ngControl.errors||this.colorFormControl&&this.colorFormControl.touched&&!!this.colorFormControl.errors)}ngDoCheck(){null!=this.ngControl&&this.touched!==this.ngControl.touched&&(this.touched=this.ngControl.touched,this.stateChanges.next())}ngOnDestroy(){this.stateChanges.complete(),this.fm.stopMonitoring(this.elRef.nativeElement),this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}writeValue(e){this._value=e,this.colorFormControl.setValue(e,{emitEvent:!1})}registerOnChange(e){this._onChange=e}registerOnTouched(e){this._onTouched=e}setDescribedByIds(e){this.describedBy=e.join(" ")}onContainerClick(e){}setDisabledState(e){this.disabled=e}};yP.nextId=0,fP([Object(nt.HostBinding)(),bP("design:type",Object)],yP.prototype,"id",void 0),fP([Object(nt.Input)(),bP("design:type",Object),bP("design:paramtypes",[Object])],yP.prototype,"placeholder",null),fP([Object(nt.HostBinding)("class.floating"),bP("design:type",Object),bP("design:paramtypes",[])],yP.prototype,"shouldLabelFloat",null),fP([Object(nt.Input)(),bP("design:type",Object),bP("design:paramtypes",[Object])],yP.prototype,"required",null),fP([Object(nt.Input)(),bP("design:type",Object),bP("design:paramtypes",[Object])],yP.prototype,"disabled",null),fP([Object(nt.HostBinding)("attr.aria-describedby"),bP("design:type",Object)],yP.prototype,"describedBy",void 0),yP=pP=fP([Object(nt.Component)({selector:"gio-form-color-input",template:n(1293),styles:[n(1294)],host:{"[id]":"id","[attr.aria-describedby]":"describedBy"},providers:[{provide:NA.c,useExisting:pP},{provide:ln.m,useValue:e=>{if(Object(o.isEmpty)(e.value))return null;return/^#[0-9a-f]{6}$/i.test(e.value)?null:{color:{message:`"${e.value}" is not a valid color`}}},multi:!0}]}),vP(0,Object(nt.Optional)()),vP(0,Object(nt.Self)()),bP("design:paramtypes",["function"==typeof(mP=void 0!==ln.o&&ln.o)?mP:Object,"function"==typeof(uP=void 0!==nt.ElementRef&&nt.ElementRef)?uP:Object,"function"==typeof(hP=void 0!==ET.h&&ET.h)?hP:Object])],yP);var SP=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let wP=class{};wP=SP([Object(nt.NgModule)({imports:[ag.b,ET.a,DA.c,ln.t,YO.s],declarations:[yP],exports:[yP],entryComponents:[yP]})],wP);var CP=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let IP=class{};IP=CP([Object(nt.NgModule)({imports:[ag.b,mt.f,PA.b,g_.b,DA.c,ln.t,BL.a,AR,EA.b,UA.b],declarations:[tb],exports:[tb],entryComponents:[tb]})],IP);var $P,AP=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},OP=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},TP=function(e,t){return function(n,i){t(n,i,e)}};let RP=class{constructor(e,t){this.http=e,this.constants=t}getGrammar(){return this.http.get(this.constants.env.baseURL+"/configuration/spel/grammar")}};RP=AP([Object(nt.Injectable)({providedIn:"root"}),TP(1,Object(nt.Inject)("Constants")),OP("design:paramtypes",["function"==typeof($P=void 0!==Tt.b&&Tt.b)?$P:Object,"function"!=typeof!1&&Object])],RP);var _P=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let xP=class{};xP=_P([Object(nt.NgModule)({imports:[ag.b,VI.b,ln.t,PA.b,EA.b,WT.b,NA.d,DA.c,iR.a,d_.a,UA.b,GL.e,jA.b,g_.b,mt.f,tn.b,qg.b,r_.a,VT.b,lT.b,d_.a,lR.a,YO.s,BL.a,_R.a,YT.b,BT.a,YO.l,NT,jT,AR,DL,yT,dP,cn.h,wP,$_,cn.l,ZR,cn.b,iT,eR,IP,YI.a],declarations:[Bm,lu,Iu,gg,Og,Hu,fh,zL,XL,QL,VL,Th,Wh,Ph,Mg,nf,Wg,mf,Kf,lb,yf,xf,gb,tg,Vb],exports:[Bm,lu],entryComponents:[Bm,lu,Iu,gg,Og,Hu,fh,Th,Wh,Ph,Mg,nf,Wg,mf,Kf,lb,yf,xf,gb,tg,Vb],providers:[{provide:"FlowService",useExisting:Lg},{provide:"PolicyService",useExisting:Zt},{provide:"ResourceService",useExisting:yI},{provide:"SpelService",useExisting:RP}]})],xP);var LP=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let PP=class{intercept(e,t){return e=e.clone({withCredentials:!0}),t.handle(e)}};PP=LP([Object(nt.Injectable)()],PP);var NP=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},EP=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},DP=function(e,t){return function(n,i){t(n,i,e)}};let jP=class{constructor(e){this.constants=e}intercept(e,t){return e=e.clone({url:e.url.replace("{:envId}",this.constants.org.currentEnv.id)}),t.handle(e)}};jP=NP([Object(nt.Injectable)(),DP(0,Object(nt.Inject)("Constants")),EP("design:paramtypes",["function"!=typeof!1&&Object])],jP);const kP=[{provide:Tt.a,useClass:yc,multi:!0},{provide:Tt.a,useClass:PP,multi:!0},{provide:Tt.a,useClass:jP,multi:!0},{provide:Tt.a,useExisting:kI,multi:!0}];var UP=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let MP=class{};MP=UP([Object(nt.NgModule)({imports:[ag.b,cn.j,jA.b],declarations:[Nw],exports:[Nw],entryComponents:[Nw]})],MP);var FP,qP,HP,GP=n(463),BP=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},WP=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},VP=function(e,t){return function(n,i){t(n,i,e)}};let YP=class{constructor(e,t,n,i){this.ajsState=e,this.constants=t,this.currentUserService=n,this.taskService=i,this.hasAlert=!1,this.userTaskCount=0,this.getUserShortName=()=>{if(this.currentUser.firstname&&this.currentUser.lastname){return`${this.currentUser.firstname[0].toUpperCase()+this.currentUser.firstname.slice(1)} ${this.currentUser.lastname[0].toUpperCase()}.`}return this.currentUser.displayName}}ngOnInit(){this.currentUser=this.currentUserService.currentUser,this.newsletterProposed=this.currentUser&&!this.currentUser.firstLogin||!!window.localStorage.getItem("newsletterProposed")||!this.constants.org.settings.newsletter.enabled,this.userShortName=this.getUserShortName(),this.userPicture=this.currentUserService.currentUserPicture(),this.supportEnabled=this.constants.org.settings.management.support.enabled}goToMyAccount(){var e;this.ajsState.go("user",Object.assign(Object.assign({},this.ajsState.params),{environmentId:null!==(e=this.ajsState.params.environmentId)&&void 0!==e?e:this.constants.org.currentEnv.id}))}goToSupport(){this.ajsState.go("management.support.create")}goToTask(){this.ajsState.go("management.tasks")}signOut(){this.ajsState.go("logout")}};BP([Object(nt.Input)(),WP("design:type",Object)],YP.prototype,"hasAlert",void 0),BP([Object(nt.Input)(),WP("design:type",Object)],YP.prototype,"userTaskCount",void 0),YP=BP([Object(nt.Component)({selector:"gio-user-menu",template:n(1296),styles:[n(1297)]}),VP(0,Object(nt.Inject)(ut)),VP(1,Object(nt.Inject)("Constants")),VP(2,Object(nt.Inject)(bt)),WP("design:paramtypes",["function"==typeof(FP=void 0!==it.StateService&&it.StateService)?FP:Object,"function"!=typeof!1&&Object,"function"==typeof(qP=void 0!==Gt&&Gt)?qP:Object,"function"==typeof(HP=void 0!==Mw&&Mw)?HP:Object])],YP);var zP=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let KP=class{};KP=zP([Object(nt.NgModule)({imports:[ag.b,EA.b,cn.i,cn.p,cn.n,cn.o,PA.b,AR,GP.a,d_.a],declarations:[YP],exports:[YP],entryComponents:[YP]})],KP);var QP,JP=n(36),XP=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},ZP=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},eN=function(e,t){return function(n,i){t(n,i,e)}};let tN=class{constructor(e,t){this.http=e,this.constants=t}getNotificationSchedulerInSeconds(){return this.constants.org.settings.scheduler&&this.constants.org.settings.scheduler.notifications?this.constants.org.settings.scheduler.notifications:10}getNotifications(){const e=new Tt.e;return e.set("ignoreLoadingBar",!0),e.set("silentCall",!0),this.http.get(this.constants.org.baseURL+"/user/notifications",{params:e})}delete(e){return this.http.delete(`${this.constants.org.baseURL}/user/notifications/${e}`)}deleteAll(){return this.http.delete(this.constants.org.baseURL+"/user/notifications")}getNotificationsAutoFetch(){return Object(Dw.a)(0,1e3*this.getNotificationSchedulerInSeconds()).pipe(Object(st.a)(()=>this.getNotifications()))}};tN=XP([Object(nt.Injectable)({providedIn:"root"}),eN(1,Object(nt.Inject)("Constants")),ZP("design:paramtypes",["function"==typeof(QP=void 0!==Tt.b&&Tt.b)?QP:Object,"function"!=typeof!1&&Object])],tN);var nN,iN,aN=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},oN=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let sN=class{constructor(e,t){this.userNotificationService=e,this.snackBarService=t,this.startNotificationFetch$=new ct.a,this.unsubscribe$=new ct.a,this.hasNotifications=!1,this.userNotificationsCount=0}ngOnInit(){this.startNotificationFetch$.pipe(Object(at.a)(this.unsubscribe$),Object(st.a)(()=>this.userNotificationService.getNotificationsAutoFetch())).subscribe(e=>{this.userNotificationsCount=e.page.total_elements,this.hasNotifications=this.userNotificationsCount>0,this.userNotifications=e.data}),this.startNotificationFetch$.next()}ngOnDestroy(){this.unsubscribe$.next(!0),this.unsubscribe$.unsubscribe()}deleteAll(){this.userNotificationService.deleteAll().pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(()=>{this.snackBarService.success("Notifications successfully deleted!")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.startNotificationFetch$.next())}delete(e){this.userNotificationService.delete(e.id).pipe(Object(at.a)(this.unsubscribe$),Object(ot.a)(()=>{this.snackBarService.success("Notification successfully deleted!")}),Object(lt.a)(({error:e})=>(this.snackBarService.error(e.message),pt.a))).subscribe(()=>this.startNotificationFetch$.next())}onOutsideClick(){this.isOpen=!1}};sN=aN([Object(nt.Component)({selector:"gio-notification-menu",template:n(1299),styles:[n(1300)]}),oN("design:paramtypes",["function"==typeof(nN=void 0!==tN&&tN)?nN:Object,"function"==typeof(iN=void 0!==on&&on)?iN:Object])],sN);var rN=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let lN=class{};lN=rN([Object(nt.NgModule)({imports:[ag.b,EA.b,cn.i,PA.b,d_.a,BL.a,JP.g,WT.b],declarations:[sN],exports:[sN],entryComponents:[sN]})],lN);var cN=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};let dN=class{};dN=cN([Object(nt.NgModule)({imports:[ag.b,EA.b,cn.i,cn.p,cn.n,cn.o,PA.b,AR,d_.a,KP,lN],declarations:[zw],exports:[zw],entryComponents:[zw]})],dN);var pN,mN=function(e,t,n,i){var a,o=arguments.length,s=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,i);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s},uN=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};let hN=class{constructor(e){this.upgrade=e}ngDoBootstrap(){this.upgrade.bootstrap(document.documentElement,["gravitee-management"],{strictDi:!0})}};hN=mN([Object(nt.NgModule)({imports:[ag.b,WI.a,VI.b,Tt.c,Tt.d.withOptions({cookieName:"none",headerName:"none"}),Im.a,vb.a,xP,HL,yb.b.forRoot(),MP,dN],providers:[kP,ht,ft,vt,St,Ct,{provide:yb.a,useFactory:e=>{var t,n,i,a,o,s,r;return{enabled:null!==(a=null===(i=null===(n=null===(t=e.org)||void 0===t?void 0:t.settings)||void 0===n?void 0:n.analyticsPendo)||void 0===i?void 0:i.enabled)&&void 0!==a&&a,apiKey:null===(r=null===(s=null===(o=e.org)||void 0===o?void 0:o.settings)||void 0===s?void 0:s.analyticsPendo)||void 0===r?void 0:r.apiKey}},deps:["Constants"]}]}),uN("design:paramtypes",["function"==typeof(pN=void 0!==Im.a&&Im.a)?pN:Object])],hN),Object.assign(i,{lowercase:o.toLower,uppercase:o.toUpper});const gN=i.injector(["ng"]),fN=gN.get("$http"),bN=gN.get("$q"),vN=gN.get("$window"),yN={headers:{"Cache-Control":"no-cache",Pragma:"no-cache"}};let SN;bN.all([fN.get("constants.json",yN),fN.get("build.json",yN)]).then(e=>{SN=e[0].data;const t=e[1].data;return i.module("gravitee-management").constant("Build",t),SN=function(e){e.baseURL.endsWith("/")&&(e.baseURL=e.baseURL.slice(0,-1));const t=e.baseURL.indexOf("/organizations");t>=0&&(e.baseURL=e.baseURL.substr(0,t)),e.org={},function(){const e=/environments\/([\w|-]+)/.exec(document.location.toString());e&&e[1]&&vN.localStorage.setItem("gv-last-environment-loaded",e[1])}();const n=function(){const e=new URL(document.location.toString()).searchParams.get("organization");let t="DEFAULT";const n=vN.localStorage.getItem("gv-last-organization-loaded");return e?(t=e.replace(/\/$/,""),window.history.replaceState({},"",`${window.location.origin}${window.location.pathname}${window.location.hash}`)):n&&(t=n.replace(/\/$/,"")),vN.localStorage.setItem("gv-last-organization-loaded",t),t}();return e.org.baseURL=`${e.baseURL}/organizations/${n}`,e.env={},e.env.baseURL=e.org.baseURL+"/environments/{:envId}",e}(SN),fN.get(SN.org.baseURL+"/console")}).then(e=>{const t=o.assign(SN);if(t.org.settings=e.data,i.module("gravitee-management").constant("Constants",t),t.org.settings.theme.css){const e=document.createElement("link");e.rel="stylesheet",e.type="text/css",e.href=t.org.settings.theme.css,document.head.appendChild(e)}return t}).catch(e=>{throw document.getElementById("gravitee-error").innerText="Management API unreachable or error occurs, please check logs",e}).then(e=>function(e){const t=document.createElement("img");return t.classList.add("gravitee-splash-screen"),t.setAttribute("src",e.org.settings.theme.loader),document.getElementById("loader").appendChild(t),bN.resolve(e)}(e).then(()=>function(e){return fN.get(`./themes/${e.org.settings.theme.name}-theme.json`,yN).then(e=>{i.module("gravitee-management").constant("Theme",e.data)}).catch(()=>fN.get("./themes/default-theme.json",yN).then(e=>{i.module("gravitee-management").constant("Theme",e.data)}))}(e)).then(()=>{Object(GI.c)()}).then(()=>function(e){i.module("gravitee-management").config(["$urlServiceProvider",e=>e.deferIntercept()]),Object(BI.a)([{provide:"Constants",useValue:e}]).bootstrapModule(hN).then(e=>{const t=e.injector.get(it.UIRouter).urlService;setTimeout(()=>{e.injector.get(nt.NgZone).run((function(){t.listen(),t.sync()}))},1e3)})}(e)))}]));