(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{1703:function(e,t,n){"use strict";n.r(t),n.d(t,"asciidoc",(function(){return k}));var r=1e3,o=function(e){for(var t in this.states=e,this.regExps={},this.matchMappings={},this.states){for(var n=this.states[t],r=[],o=0,l=this.matchMappings[t]={defaultToken:"text"},a="g",s=[],i=0;i<n.length;i++){var k=n[i];if(k.defaultToken&&(l.defaultToken=k.defaultToken),k.caseInsensitive&&(a="gi"),null!=k.regex){k.regex instanceof RegExp&&(k.regex=k.regex.toString().slice(1,-1));var g=k.regex,c=new RegExp("(?:("+g+")|(.))").exec("a").length-2;if(Array.isArray(k.token))if(1==k.token.length||1==c)k.token=k.token[0];else{if(c-1!=k.token.length)throw new Error("number of classes and regexp groups in '"+k.token+"'\n'"+k.regex+"' doesn't match\n"+(c-1)+"!="+k.token.length);k.tokenArray=k.token,k.token=null,k.onMatch=this.$arrayTokens}else"function"!=typeof k.token||k.onMatch||(k.onMatch=c>1?this.$applyToken:k.token);c>1&&(/\\\d/.test(k.regex)?g=k.regex.replace(/\\([0-9]+)/g,(function(e,t){return"\\"+(parseInt(t,10)+o+1)})):(c=1,g=this.removeCapturingGroups(k.regex)),k.splitRegex||"string"==typeof k.token||s.push(k)),l[o]=i,o+=c,r.push(g),k.onMatch||(k.onMatch=null)}}s.forEach((function(e){e.splitRegex=this.createSplitterRegexp(e.regex,a)}),this),this.regExps[t]=new RegExp("("+r.join(")|(")+")|($)",a)}};(function(){this.$setMaxTokenCount=function(e){r=0|e},this.$applyToken=function(e){var t=this.splitRegex.exec(e).slice(1),n=this.token.apply(this,t);if("string"==typeof n)return[{type:n,value:e}];for(var r=[],o=0,l=n.length;o<l;o++)t[o]&&(r[r.length]={type:n[o],value:t[o]});return r},this.$arrayTokens=function(e){if(!e)return[];var t=this.splitRegex.exec(e);if(!t)return"text";for(var n=[],r=this.tokenArray,o=0,l=r.length;o<l;o++)t[o+1]&&(n[n.length]={type:r[o],value:t[o+1]});return n},this.removeCapturingGroups=function(e){return e.replace(/\[(?:\\.|[^\]])*?\]|\\.|\(\?[:=!]|(\()/g,(function(e,t){return t?"(?:":e}))},this.createSplitterRegexp=function(e,t){if(-1!=e.indexOf("(?=")){var n=0,r=!1,o={};e.replace(/(\\.)|(\((?:\?[=!])?)|(\))|([\[\]])/g,(function(e,t,l,a,s,i){return r?r="]"!=s:s?r=!0:a?(n==o.stack&&(o.end=i+1,o.stack=-1),n--):l&&(n++,1!=l.length&&(o.stack=n,o.start=i)),e})),null!=o.end&&/^\)*$/.test(e.substr(o.end))&&(e=e.substring(0,o.start)+e.substr(o.end))}return new RegExp(e,(t||"").replace("g",""))},this.getLineTokens=function(e,t){if(t&&"string"!=typeof t){var n=t.slice(0);t=n[0]}else n=[];var o=t||"start",l=this.states[o];l||(o="start",l=this.states[o]);var a=this.matchMappings[o],s=this.regExps[o];s.lastIndex=0;for(var i,k=[],g=0,c={type:null,value:""};i=s.exec(e);){var x=a.defaultToken,u=null,p=i[0],d=s.lastIndex;if(d-p.length>g){var h=e.substring(g,d-p.length);c.type==x?c.value+=h:(c.type&&k.push(c),c={type:x,value:h})}for(var m=0;m<i.length-2;m++)if(void 0!==i[m+1]){x=(u=l[a[m]]).onMatch?u.onMatch(p,o,n):u.token,u.next&&(o="string"==typeof u.next?u.next:u.next(o,n),(l=this.states[o])||(window.console&&console.error&&console.error(o,"doesn't exist"),o="start",l=this.states[o]),a=this.matchMappings[o],g=d,(s=this.regExps[o]).lastIndex=d);break}if(p)if("string"==typeof x)u&&!1===u.merge||c.type!==x?(c.type&&k.push(c),c={type:x,value:p}):c.value+=p;else if(x){c.type&&k.push(c),c={type:null,value:""};for(m=0;m<x.length;m++)k.push(x[m])}if(g==e.length)break;if(g=d,k.length>r){for(;g<e.length;)c.type&&k.push(c),c={value:e.substring(g,g+=2e3),type:"overflow"};o="start",n=[];break}}return c.type&&k.push(c),n.length>1&&n[0]!==o&&n.unshift(o),{tokens:k,state:n.length?n:o}}}).call(o.prototype);var l={empty:null,text:null,keyword:"keyword",control:"keyword",operator:"operator",constant:"atom",numeric:"number",character:"atom",escape:"atom",variable:"variable",parameter:"variable-3",language:"variable-2",comment:"comment",line:"comment","double-slash":"comment","double-dash":"comment","number-sign":"comment",percentage:"comment",block:"comment",doc:"comment",string:"string",quoted:"string",single:"string",double:"string",triple:"string",unquoted:"string",interpolated:"string",regexp:"string-2",meta:"keyword",literal:"qualifier",support:"builtin",markup:"tag",underline:"link",link:"link",strong:"strong",heading:"header",em:"em",list:"variable-2",numbered:"variable-2",unnumbered:"variable-2",quote:"quote",raw:"variable-2",invalid:"error",illegal:"invalidchar",deprecated:"error"},a=function(e,t){var n=t.plannedTokens.shift();return void 0===n?null:(e.match(n.value),function(e){for(var t=null,n=0;n<e.length;n++)void 0!==l[e[n]]&&(t=l[e[n]]);return t}(n.type.split(".")))},s=function(e,t){if(t.plannedTokens.length>0)return a(e,t);var n=t.current,r=e.match(/.*$/,!1)[0],o=i.getLineTokens(r,n);return t.plannedTokens=o.tokens,t.current=o.state,a(e,t)},i=new o((new function(){function e(e){return(/\w/.test(e)?"\\b":"(?:\\B|^)")+e+"[^"+e+"].*?"+e+"(?![\\w*])"}this.$rules={start:[{token:"empty",regex:/$/},{token:"literal",regex:/^\.{4,}\s*$/,next:"listingBlock"},{token:"literal",regex:/^-{4,}\s*$/,next:"literalBlock"},{token:"literal",regex:/^\+{4,}\s*$/,next:"passthroughBlock"},{token:"keyword",regex:/^={4,}\s*$/},{token:"text",regex:/^\s*$/},{token:"empty",regex:"",next:"dissallowDelimitedBlock"}],dissallowDelimitedBlock:[{include:"paragraphEnd"},{token:"comment",regex:"^//.+$"},{token:"keyword",regex:"^(?:NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\s"},{include:"listStart"},{token:"literal",regex:/^\s+.+$/,next:"indentedBlock"},{token:"empty",regex:"",next:"text"}],paragraphEnd:[{token:"doc.comment",regex:/^\/{4,}\s*$/,next:"commentBlock"},{token:"tableBlock",regex:/^\s*[|!]=+\s*$/,next:"tableBlock"},{token:"keyword",regex:/^(?:--|''')\s*$/,next:"start"},{token:"option",regex:/^\[.*\]\s*$/,next:"start"},{token:"pageBreak",regex:/^>{3,}$/,next:"start"},{token:"literal",regex:/^\.{4,}\s*$/,next:"listingBlock"},{token:"titleUnderline",regex:/^(?:={2,}|-{2,}|~{2,}|\^{2,}|\+{2,})\s*$/,next:"start"},{token:"singleLineTitle",regex:/^={1,6}\s+\S.*$/,next:"start"},{token:"otherBlock",regex:/^(?:\*{2,}|_{2,})\s*$/,next:"start"},{token:"optionalTitle",regex:/^\.[^.\s].+$/,next:"start"}],listStart:[{token:"keyword",regex:/^\s*(?:\d+\.|[a-zA-Z]\.|[ixvmIXVM]+\)|\*{1,5}|-|\.{1,5})\s/,next:"listText"},{token:"meta.tag",regex:/^.+(?::{2,4}|;;)(?: |$)/,next:"listText"},{token:"keyword",regex:/^\+\s*$/,next:"start"}],text:[{token:["link","link"],regex:/((?:https?:\/\/|ftp:\/\/|file:\/\/|mailto:|callto:)[^\s\[]+)(\[.*?\])/},{token:["link","link"],regex:/(?:https?:\/\/|ftp:\/\/|file:\/\/|mailto:|callto:)[^\s\[]+/},{token:"link",regex:/\b[\w\.\/\-]+@[\w\.\/\-]+\b/},{include:"macros"},{include:"paragraphEnd"},{token:"literal",regex:/\+{3,}/,next:"smallPassthrough"},{token:"escape",regex:/\((?:C|TM|R)\)|\.{3}|->|<-|=>|<=|&#(?:\d+|x[a-fA-F\d]+);|(?: |^)--(?=\s+\S)/},{token:"escape",regex:/\\[_*'`+#]|\\{2}[_*'`+#]{2}/},{token:"keyword",regex:/\s\+$/},{token:"text",regex:"[a-zA-Z¡-￿]+\\b"},{token:["keyword","string","keyword"],regex:/(<<[\w\d\-$]+,)(.*?)(>>|$)/},{token:"keyword",regex:/<<[\w\d\-$]+,?|>>/},{token:"constant.character",regex:/\({2,3}.*?\){2,3}/},{token:"support.function.list.callout",regex:/^(?:<\d+>|\d+>|>) /,next:"text"},{token:"keyword",regex:/\[\[.+?\]\]/},{token:"support",regex:/^\[{3}[\w\d =\-]+\]{3}/},{include:"quotes"},{token:"empty",regex:/^\s*$/,next:"start"}],listText:[{include:"listStart"},{include:"text"}],indentedBlock:[{token:"literal",regex:/^[\s\w].+$/,next:"indentedBlock"},{token:"literal",regex:"",next:"start"}],listingBlock:[{token:"literal",regex:/^\.{4,}\s*$/,next:"dissallowDelimitedBlock"},{token:"constant.numeric",regex:"<\\d+>"},{token:"literal",regex:"[^<]+"},{token:"literal",regex:"<"}],literalBlock:[{token:"literal",regex:/^-{4,}\s*$/,next:"dissallowDelimitedBlock"},{token:"constant.numeric",regex:"<\\d+>"},{token:"literal",regex:"[^<]+"},{token:"literal",regex:"<"}],passthroughBlock:[{token:"literal",regex:/^\+{4,}\s*$/,next:"dissallowDelimitedBlock"},{token:"literal",regex:"[a-zA-Z¡-￿]+\\b|\\d+"},{include:"macros"},{token:"literal",regex:"."}],smallPassthrough:[{token:"literal",regex:/[+]{3,}/,next:"dissallowDelimitedBlock"},{token:"literal",regex:/^\s*$/,next:"dissallowDelimitedBlock"},{token:"literal",regex:"[a-zA-Z¡-￿]+\\b|\\d+"},{include:"macros"}],commentBlock:[{token:"doc.comment",regex:/^\/{4,}\s*$/,next:"dissallowDelimitedBlock"},{token:"doc.comment",regex:"^.*$"}],tableBlock:[{token:"tableBlock",regex:/^\s*\|={3,}\s*$/,next:"dissallowDelimitedBlock"},{token:"tableBlock",regex:/^\s*!={3,}\s*$/,next:"innerTableBlock"},{token:"tableBlock",regex:/\|/},{include:"text",noEscape:!0}],innerTableBlock:[{token:"tableBlock",regex:/^\s*!={3,}\s*$/,next:"tableBlock"},{token:"tableBlock",regex:/^\s*|={3,}\s*$/,next:"dissallowDelimitedBlock"},{token:"tableBlock",regex:/\!/}],macros:[{token:"macro",regex:/{[\w\-$]+}/},{token:["text","string","text","constant.character","text"],regex:/({)([\w\-$]+)(:)?(.+)?(})/},{token:["text","markup.list.macro","keyword","string"],regex:/(\w+)(footnote(?:ref)?::?)([^\s\[]+)?(\[.*?\])?/},{token:["markup.list.macro","keyword","string"],regex:/([a-zA-Z\-][\w\.\/\-]*::?)([^\s\[]+)(\[.*?\])?/},{token:["markup.list.macro","keyword"],regex:/([a-zA-Z\-][\w\.\/\-]+::?)(\[.*?\])/},{token:"keyword",regex:/^:.+?:(?= |$)/}],quotes:[{token:"string.italic",regex:/__[^_\s].*?__/},{token:"string.italic",regex:e("_")},{token:"keyword.bold",regex:/\*\*[^*\s].*?\*\*/},{token:"keyword.bold",regex:e("\\*")},{token:"literal",regex:/\+\+[^+\s].*?\+\+/},{token:"literal",regex:e("\\+")},{token:"literal",regex:/\$\$.+?\$\$/},{token:"literal",regex:e("\\$")},{token:"literal",regex:/``[^`\s].*?``/},{token:"literal",regex:e("`")},{token:"keyword",regex:/\^[^\^].*?\^/},{token:"keyword",regex:e("\\^")},{token:"keyword",regex:/~[^~].*?~/},{token:"keyword",regex:e("~")},{token:"keyword",regex:/##?/},{token:"keyword",regex:/(?:\B|^)``|\b''/}]};var t={macro:"constant.character",tableBlock:"doc.comment",titleUnderline:"markup.heading",singleLineTitle:"markup.heading",pageBreak:"string",option:"string.regexp",otherBlock:"markup.list",literal:"support.function",optionalTitle:"constant.numeric",escape:"constant.language.escape",link:"markup.underline.list"};for(var n in this.$rules)for(var r=this.$rules[n],o=r.length;o--;){var l=r[o];if(l.include||"string"==typeof l){var a=[o,1].concat(this.$rules[l.include||l]);l.noEscape&&(a=a.filter((function(e){return!e.next}))),r.splice.apply(r,a)}else l.token in t&&(l.token=t[l.token])}}).$rules);const k={startState:function(){return{current:"start",plannedTokens:[]}},blankLine:function(e){s("",e)},token:s}}}]);